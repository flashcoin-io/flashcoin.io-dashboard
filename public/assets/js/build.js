!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], [], false, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
!function(e){function n(e,n){e=e.replace(l,"");var r=e.match(u),t=(r[1].split(",")[n]||"require").replace(s,""),i=p[t]||(p[t]=new RegExp(a+t+f,"g"));i.lastIndex=0;for(var o,c=[];o=i.exec(e);)c.push(o[2]||o[3]);return c}function r(e,n,t,o){if("object"==typeof e&&!(e instanceof Array))return r.apply(null,Array.prototype.splice.call(arguments,1,arguments.length-1));if("string"==typeof e&&"function"==typeof n&&(e=[e]),!(e instanceof Array)){if("string"==typeof e){var l=i.get(e);return l.__useDefault?l["default"]:l}throw new TypeError("Invalid require")}for(var a=[],f=0;f<e.length;f++)a.push(i["import"](e[f],o));Promise.all(a).then(function(e){n&&n.apply(null,e)},t)}function t(t,l,a){"string"!=typeof t&&(a=l,l=t,t=null),l instanceof Array||(a=l,l=["require","exports","module"].splice(0,a.length)),"function"!=typeof a&&(a=function(e){return function(){return e}}(a)),void 0===l[l.length-1]&&l.pop();var f,u,s;-1!=(f=o.call(l,"require"))&&(l.splice(f,1),t||(l=l.concat(n(a.toString(),f)))),-1!=(u=o.call(l,"exports"))&&l.splice(u,1),-1!=(s=o.call(l,"module"))&&l.splice(s,1);var p={name:t,deps:l,execute:function(n,t,o){for(var p=[],c=0;c<l.length;c++)p.push(n(l[c]));o.uri=o.id,o.config=function(){},-1!=s&&p.splice(s,0,o),-1!=u&&p.splice(u,0,t),-1!=f&&p.splice(f,0,function(e,t,l){return"string"==typeof e&&"function"!=typeof t?n(e):r.call(i,e,t,l,o.id)});var d=a.apply(-1==u?e:t,p);return"undefined"==typeof d&&o&&(d=o.exports),"undefined"!=typeof d?d:void 0}};if(t)c.anonDefine||c.isBundle?c.anonDefine&&c.anonDefine.name&&(c.anonDefine=null):c.anonDefine=p,c.isBundle=!0,i.registerDynamic(p.name,p.deps,!1,p.execute);else{if(c.anonDefine&&!c.anonDefine.name)throw new Error("Multiple anonymous defines in module "+t);c.anonDefine=p}}var i=$__System,o=Array.prototype.indexOf||function(e){for(var n=0,r=this.length;r>n;n++)if(this[n]===e)return n;return-1},l=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,a="(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",f="\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",u=/\(([^\)]*)\)/,s=/^\s+|\s+$/g,p={};t.amd={};var c={isBundle:!1,anonDefine:null};i.amdDefine=t,i.amdRequire=r}("undefined"!=typeof self?self:global);
$__System.registerDynamic('2', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /*!
  
  Copyright (C) 2014-2016 by Andrea Giammarchi - @WebReflection
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  
  */
  function installCustomElements(window) {
    'use strict';

    // DO NOT USE THIS FILE DIRECTLY, IT WON'T WORK
    // THIS IS A PROJECT BASED ON A BUILD SYSTEM
    // THIS FILE IS JUST WRAPPED UP RESULTING IN
    // build/document-register-element.node.js

    var document = window.document,
        Object = window.Object;

    var htmlClass = function (info) {
      // (C) Andrea Giammarchi - @WebReflection - MIT Style
      var catchClass = /^[A-Z]+[a-z]/,
          filterBy = function (re) {
        var arr = [],
            tag;
        for (tag in register) {
          if (re.test(tag)) arr.push(tag);
        }
        return arr;
      },
          add = function (Class, tag) {
        tag = tag.toLowerCase();
        if (!(tag in register)) {
          register[Class] = (register[Class] || []).concat(tag);
          register[tag] = register[tag.toUpperCase()] = Class;
        }
      },
          register = (Object.create || Object)(null),
          htmlClass = {},
          i,
          section,
          tags,
          Class;
      for (section in info) {
        for (Class in info[section]) {
          tags = info[section][Class];
          register[Class] = tags;
          for (i = 0; i < tags.length; i++) {
            register[tags[i].toLowerCase()] = register[tags[i].toUpperCase()] = Class;
          }
        }
      }
      htmlClass.get = function get(tagOrClass) {
        return typeof tagOrClass === 'string' ? register[tagOrClass] || (catchClass.test(tagOrClass) ? [] : '') : filterBy(tagOrClass);
      };
      htmlClass.set = function set(tag, Class) {
        return catchClass.test(tag) ? add(tag, Class) : add(Class, tag), htmlClass;
      };
      return htmlClass;
    }({
      "collections": {
        "HTMLAllCollection": ["all"],
        "HTMLCollection": ["forms"],
        "HTMLFormControlsCollection": ["elements"],
        "HTMLOptionsCollection": ["options"]
      },
      "elements": {
        "Element": ["element"],
        "HTMLAnchorElement": ["a"],
        "HTMLAppletElement": ["applet"],
        "HTMLAreaElement": ["area"],
        "HTMLAttachmentElement": ["attachment"],
        "HTMLAudioElement": ["audio"],
        "HTMLBRElement": ["br"],
        "HTMLBaseElement": ["base"],
        "HTMLBodyElement": ["body"],
        "HTMLButtonElement": ["button"],
        "HTMLCanvasElement": ["canvas"],
        "HTMLContentElement": ["content"],
        "HTMLDListElement": ["dl"],
        "HTMLDataElement": ["data"],
        "HTMLDataListElement": ["datalist"],
        "HTMLDetailsElement": ["details"],
        "HTMLDialogElement": ["dialog"],
        "HTMLDirectoryElement": ["dir"],
        "HTMLDivElement": ["div"],
        "HTMLDocument": ["document"],
        "HTMLElement": ["element", "abbr", "address", "article", "aside", "b", "bdi", "bdo", "cite", "code", "command", "dd", "dfn", "dt", "em", "figcaption", "figure", "footer", "header", "i", "kbd", "mark", "nav", "noscript", "rp", "rt", "ruby", "s", "samp", "section", "small", "strong", "sub", "summary", "sup", "u", "var", "wbr"],
        "HTMLEmbedElement": ["embed"],
        "HTMLFieldSetElement": ["fieldset"],
        "HTMLFontElement": ["font"],
        "HTMLFormElement": ["form"],
        "HTMLFrameElement": ["frame"],
        "HTMLFrameSetElement": ["frameset"],
        "HTMLHRElement": ["hr"],
        "HTMLHeadElement": ["head"],
        "HTMLHeadingElement": ["h1", "h2", "h3", "h4", "h5", "h6"],
        "HTMLHtmlElement": ["html"],
        "HTMLIFrameElement": ["iframe"],
        "HTMLImageElement": ["img"],
        "HTMLInputElement": ["input"],
        "HTMLKeygenElement": ["keygen"],
        "HTMLLIElement": ["li"],
        "HTMLLabelElement": ["label"],
        "HTMLLegendElement": ["legend"],
        "HTMLLinkElement": ["link"],
        "HTMLMapElement": ["map"],
        "HTMLMarqueeElement": ["marquee"],
        "HTMLMediaElement": ["media"],
        "HTMLMenuElement": ["menu"],
        "HTMLMenuItemElement": ["menuitem"],
        "HTMLMetaElement": ["meta"],
        "HTMLMeterElement": ["meter"],
        "HTMLModElement": ["del", "ins"],
        "HTMLOListElement": ["ol"],
        "HTMLObjectElement": ["object"],
        "HTMLOptGroupElement": ["optgroup"],
        "HTMLOptionElement": ["option"],
        "HTMLOutputElement": ["output"],
        "HTMLParagraphElement": ["p"],
        "HTMLParamElement": ["param"],
        "HTMLPictureElement": ["picture"],
        "HTMLPreElement": ["pre"],
        "HTMLProgressElement": ["progress"],
        "HTMLQuoteElement": ["blockquote", "q", "quote"],
        "HTMLScriptElement": ["script"],
        "HTMLSelectElement": ["select"],
        "HTMLShadowElement": ["shadow"],
        "HTMLSlotElement": ["slot"],
        "HTMLSourceElement": ["source"],
        "HTMLSpanElement": ["span"],
        "HTMLStyleElement": ["style"],
        "HTMLTableCaptionElement": ["caption"],
        "HTMLTableCellElement": ["td", "th"],
        "HTMLTableColElement": ["col", "colgroup"],
        "HTMLTableElement": ["table"],
        "HTMLTableRowElement": ["tr"],
        "HTMLTableSectionElement": ["thead", "tbody", "tfoot"],
        "HTMLTemplateElement": ["template"],
        "HTMLTextAreaElement": ["textarea"],
        "HTMLTimeElement": ["time"],
        "HTMLTitleElement": ["title"],
        "HTMLTrackElement": ["track"],
        "HTMLUListElement": ["ul"],
        "HTMLUnknownElement": ["unknown", "vhgroupv", "vkeygen"],
        "HTMLVideoElement": ["video"]
      },
      "nodes": {
        "Attr": ["node"],
        "Audio": ["audio"],
        "CDATASection": ["node"],
        "CharacterData": ["node"],
        "Comment": ["#comment"],
        "Document": ["#document"],
        "DocumentFragment": ["#document-fragment"],
        "DocumentType": ["node"],
        "HTMLDocument": ["#document"],
        "Image": ["img"],
        "Option": ["option"],
        "ProcessingInstruction": ["node"],
        "ShadowRoot": ["#shadow-root"],
        "Text": ["#text"],
        "XMLDocument": ["xml"]
      }
    });

    var
    // V0 polyfill entry
    REGISTER_ELEMENT = 'registerElement',


    // IE < 11 only + old WebKit for attributes + feature detection
    EXPANDO_UID = '__' + REGISTER_ELEMENT + (window.Math.random() * 10e4 >> 0),


    // shortcuts and costants
    ADD_EVENT_LISTENER = 'addEventListener',
        ATTACHED = 'attached',
        CALLBACK = 'Callback',
        DETACHED = 'detached',
        EXTENDS = 'extends',
        ATTRIBUTE_CHANGED_CALLBACK = 'attributeChanged' + CALLBACK,
        ATTACHED_CALLBACK = ATTACHED + CALLBACK,
        CONNECTED_CALLBACK = 'connected' + CALLBACK,
        DISCONNECTED_CALLBACK = 'disconnected' + CALLBACK,
        CREATED_CALLBACK = 'created' + CALLBACK,
        DETACHED_CALLBACK = DETACHED + CALLBACK,
        ADDITION = 'ADDITION',
        MODIFICATION = 'MODIFICATION',
        REMOVAL = 'REMOVAL',
        DOM_ATTR_MODIFIED = 'DOMAttrModified',
        DOM_CONTENT_LOADED = 'DOMContentLoaded',
        DOM_SUBTREE_MODIFIED = 'DOMSubtreeModified',
        PREFIX_TAG = '<',
        PREFIX_IS = '=',


    // valid and invalid node names
    validName = /^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,
        invalidNames = ['ANNOTATION-XML', 'COLOR-PROFILE', 'FONT-FACE', 'FONT-FACE-SRC', 'FONT-FACE-URI', 'FONT-FACE-FORMAT', 'FONT-FACE-NAME', 'MISSING-GLYPH'],


    // registered types and their prototypes
    types = [],
        protos = [],


    // to query subnodes
    query = '',


    // html shortcut used to feature detect
    documentElement = document.documentElement,


    // ES5 inline helpers || basic patches
    indexOf = types.indexOf || function (v) {
      for (var i = this.length; i-- && this[i] !== v;) {}
      return i;
    },


    // other helpers / shortcuts
    OP = Object.prototype,
        hOP = OP.hasOwnProperty,
        iPO = OP.isPrototypeOf,
        defineProperty = Object.defineProperty,
        empty = [],
        gOPD = Object.getOwnPropertyDescriptor,
        gOPN = Object.getOwnPropertyNames,
        gPO = Object.getPrototypeOf,
        sPO = Object.setPrototypeOf,


    // jshint proto: true
    hasProto = !!Object.__proto__,


    // V1 helpers
    fixGetClass = false,
        DRECEV1 = '__dreCEv1',
        customElements = window.customElements,
        usableCustomElements = !!(customElements && customElements.define && customElements.get && customElements.whenDefined),
        Dict = Object.create || Object,
        Map = window.Map || function Map() {
      var K = [],
          V = [],
          i;
      return {
        get: function (k) {
          return V[indexOf.call(K, k)];
        },
        set: function (k, v) {
          i = indexOf.call(K, k);
          if (i < 0) V[K.push(k) - 1] = v;else V[i] = v;
        }
      };
    },
        Promise = window.Promise || function (fn) {
      var notify = [],
          done = false,
          p = {
        'catch': function () {
          return p;
        },
        'then': function (cb) {
          notify.push(cb);
          if (done) setTimeout(resolve, 1);
          return p;
        }
      };
      function resolve(value) {
        done = true;
        while (notify.length) notify.shift()(value);
      }
      fn(resolve);
      return p;
    },
        justCreated = false,
        constructors = Dict(null),
        waitingList = Dict(null),
        nodeNames = new Map(),
        secondArgument = String,


    // used to create unique instances
    create = Object.create || function Bridge(proto) {
      // silly broken polyfill probably ever used but short enough to work
      return proto ? (Bridge.prototype = proto, new Bridge()) : this;
    },


    // will set the prototype if possible
    // or copy over all properties
    setPrototype = sPO || (hasProto ? function (o, p) {
      o.__proto__ = p;
      return o;
    } : gOPN && gOPD ? function () {
      function setProperties(o, p) {
        for (var key, names = gOPN(p), i = 0, length = names.length; i < length; i++) {
          key = names[i];
          if (!hOP.call(o, key)) {
            defineProperty(o, key, gOPD(p, key));
          }
        }
      }
      return function (o, p) {
        do {
          setProperties(o, p);
        } while ((p = gPO(p)) && !iPO.call(p, o));
        return o;
      };
    }() : function (o, p) {
      for (var key in p) {
        o[key] = p[key];
      }
      return o;
    }),


    // DOM shortcuts and helpers, if any

    MutationObserver = window.MutationObserver || window.WebKitMutationObserver,
        HTMLElementPrototype = (window.HTMLElement || window.Element || window.Node).prototype,
        IE8 = !iPO.call(HTMLElementPrototype, documentElement),
        safeProperty = IE8 ? function (o, k, d) {
      o[k] = d.value;
      return o;
    } : defineProperty,
        isValidNode = IE8 ? function (node) {
      return node.nodeType === 1;
    } : function (node) {
      return iPO.call(HTMLElementPrototype, node);
    },
        targets = IE8 && [],
        cloneNode = HTMLElementPrototype.cloneNode,
        dispatchEvent = HTMLElementPrototype.dispatchEvent,
        getAttribute = HTMLElementPrototype.getAttribute,
        hasAttribute = HTMLElementPrototype.hasAttribute,
        removeAttribute = HTMLElementPrototype.removeAttribute,
        setAttribute = HTMLElementPrototype.setAttribute,


    // replaced later on
    createElement = document.createElement,
        patchedCreateElement = createElement,


    // shared observer for all attributes
    attributesObserver = MutationObserver && {
      attributes: true,
      characterData: true,
      attributeOldValue: true
    },


    // useful to detect only if there's no MutationObserver
    DOMAttrModified = MutationObserver || function (e) {
      doesNotSupportDOMAttrModified = false;
      documentElement.removeEventListener(DOM_ATTR_MODIFIED, DOMAttrModified);
    },


    // will both be used to make DOMNodeInserted asynchronous
    asapQueue,
        asapTimer = 0,


    // internal flags
    setListener = false,
        doesNotSupportDOMAttrModified = true,
        dropDomContentLoaded = true,


    // needed for the innerHTML helper
    notFromInnerHTMLHelper = true,


    // optionally defined later on
    onSubtreeModified,
        callDOMAttrModified,
        getAttributesMirror,
        observer,


    // based on setting prototype capability
    // will check proto or the expando attribute
    // in order to setup the node once
    patchIfNotAlready,
        patch;

    // only if needed
    if (!(REGISTER_ELEMENT in document)) {

      if (sPO || hasProto) {
        patchIfNotAlready = function (node, proto) {
          if (!iPO.call(proto, node)) {
            setupNode(node, proto);
          }
        };
        patch = setupNode;
      } else {
        patchIfNotAlready = function (node, proto) {
          if (!node[EXPANDO_UID]) {
            node[EXPANDO_UID] = Object(true);
            setupNode(node, proto);
          }
        };
        patch = patchIfNotAlready;
      }

      if (IE8) {
        doesNotSupportDOMAttrModified = false;
        (function () {
          var descriptor = gOPD(HTMLElementPrototype, ADD_EVENT_LISTENER),
              addEventListener = descriptor.value,
              patchedRemoveAttribute = function (name) {
            var e = new CustomEvent(DOM_ATTR_MODIFIED, { bubbles: true });
            e.attrName = name;
            e.prevValue = getAttribute.call(this, name);
            e.newValue = null;
            e[REMOVAL] = e.attrChange = 2;
            removeAttribute.call(this, name);
            dispatchEvent.call(this, e);
          },
              patchedSetAttribute = function (name, value) {
            var had = hasAttribute.call(this, name),
                old = had && getAttribute.call(this, name),
                e = new CustomEvent(DOM_ATTR_MODIFIED, { bubbles: true });
            setAttribute.call(this, name, value);
            e.attrName = name;
            e.prevValue = had ? old : null;
            e.newValue = value;
            if (had) {
              e[MODIFICATION] = e.attrChange = 1;
            } else {
              e[ADDITION] = e.attrChange = 0;
            }
            dispatchEvent.call(this, e);
          },
              onPropertyChange = function (e) {
            // jshint eqnull:true
            var node = e.currentTarget,
                superSecret = node[EXPANDO_UID],
                propertyName = e.propertyName,
                event;
            if (superSecret.hasOwnProperty(propertyName)) {
              superSecret = superSecret[propertyName];
              event = new CustomEvent(DOM_ATTR_MODIFIED, { bubbles: true });
              event.attrName = superSecret.name;
              event.prevValue = superSecret.value || null;
              event.newValue = superSecret.value = node[propertyName] || null;
              if (event.prevValue == null) {
                event[ADDITION] = event.attrChange = 0;
              } else {
                event[MODIFICATION] = event.attrChange = 1;
              }
              dispatchEvent.call(node, event);
            }
          };
          descriptor.value = function (type, handler, capture) {
            if (type === DOM_ATTR_MODIFIED && this[ATTRIBUTE_CHANGED_CALLBACK] && this.setAttribute !== patchedSetAttribute) {
              this[EXPANDO_UID] = {
                className: {
                  name: 'class',
                  value: this.className
                }
              };
              this.setAttribute = patchedSetAttribute;
              this.removeAttribute = patchedRemoveAttribute;
              addEventListener.call(this, 'propertychange', onPropertyChange);
            }
            addEventListener.call(this, type, handler, capture);
          };
          defineProperty(HTMLElementPrototype, ADD_EVENT_LISTENER, descriptor);
        })();
      } else if (!MutationObserver) {
        documentElement[ADD_EVENT_LISTENER](DOM_ATTR_MODIFIED, DOMAttrModified);
        documentElement.setAttribute(EXPANDO_UID, 1);
        documentElement.removeAttribute(EXPANDO_UID);
        if (doesNotSupportDOMAttrModified) {
          onSubtreeModified = function (e) {
            var node = this,
                oldAttributes,
                newAttributes,
                key;
            if (node === e.target) {
              oldAttributes = node[EXPANDO_UID];
              node[EXPANDO_UID] = newAttributes = getAttributesMirror(node);
              for (key in newAttributes) {
                if (!(key in oldAttributes)) {
                  // attribute was added
                  return callDOMAttrModified(0, node, key, oldAttributes[key], newAttributes[key], ADDITION);
                } else if (newAttributes[key] !== oldAttributes[key]) {
                  // attribute was changed
                  return callDOMAttrModified(1, node, key, oldAttributes[key], newAttributes[key], MODIFICATION);
                }
              }
              // checking if it has been removed
              for (key in oldAttributes) {
                if (!(key in newAttributes)) {
                  // attribute removed
                  return callDOMAttrModified(2, node, key, oldAttributes[key], newAttributes[key], REMOVAL);
                }
              }
            }
          };
          callDOMAttrModified = function (attrChange, currentTarget, attrName, prevValue, newValue, action) {
            var e = {
              attrChange: attrChange,
              currentTarget: currentTarget,
              attrName: attrName,
              prevValue: prevValue,
              newValue: newValue
            };
            e[action] = attrChange;
            onDOMAttrModified(e);
          };
          getAttributesMirror = function (node) {
            for (var attr, name, result = {}, attributes = node.attributes, i = 0, length = attributes.length; i < length; i++) {
              attr = attributes[i];
              name = attr.name;
              if (name !== 'setAttribute') {
                result[name] = attr.value;
              }
            }
            return result;
          };
        }
      }

      // set as enumerable, writable and configurable
      document[REGISTER_ELEMENT] = function registerElement(type, options) {
        upperType = type.toUpperCase();
        if (!setListener) {
          // only first time document.registerElement is used
          // we need to set this listener
          // setting it by default might slow down for no reason
          setListener = true;
          if (MutationObserver) {
            observer = function (attached, detached) {
              function checkEmAll(list, callback) {
                for (var i = 0, length = list.length; i < length; callback(list[i++])) {}
              }
              return new MutationObserver(function (records) {
                for (var current, node, newValue, i = 0, length = records.length; i < length; i++) {
                  current = records[i];
                  if (current.type === 'childList') {
                    checkEmAll(current.addedNodes, attached);
                    checkEmAll(current.removedNodes, detached);
                  } else {
                    node = current.target;
                    if (notFromInnerHTMLHelper && node[ATTRIBUTE_CHANGED_CALLBACK] && current.attributeName !== 'style') {
                      newValue = getAttribute.call(node, current.attributeName);
                      if (newValue !== current.oldValue) {
                        node[ATTRIBUTE_CHANGED_CALLBACK](current.attributeName, current.oldValue, newValue);
                      }
                    }
                  }
                }
              });
            }(executeAction(ATTACHED), executeAction(DETACHED));
            observer.observe(document, {
              childList: true,
              subtree: true
            });
          } else {
            asapQueue = [];
            document[ADD_EVENT_LISTENER]('DOMNodeInserted', onDOMNode(ATTACHED));
            document[ADD_EVENT_LISTENER]('DOMNodeRemoved', onDOMNode(DETACHED));
          }

          document[ADD_EVENT_LISTENER](DOM_CONTENT_LOADED, onReadyStateChange);
          document[ADD_EVENT_LISTENER]('readystatechange', onReadyStateChange);

          HTMLElementPrototype.cloneNode = function (deep) {
            var node = cloneNode.call(this, !!deep),
                i = getTypeIndex(node);
            if (-1 < i) patch(node, protos[i]);
            if (deep) loopAndSetup(node.querySelectorAll(query));
            return node;
          };
        }

        if (-2 < indexOf.call(types, PREFIX_IS + upperType) + indexOf.call(types, PREFIX_TAG + upperType)) {
          throwTypeError(type);
        }

        if (!validName.test(upperType) || -1 < indexOf.call(invalidNames, upperType)) {
          throw new Error('The type ' + type + ' is invalid');
        }

        var constructor = function () {
          return extending ? document.createElement(nodeName, upperType) : document.createElement(nodeName);
        },
            opt = options || OP,
            extending = hOP.call(opt, EXTENDS),
            nodeName = extending ? options[EXTENDS].toUpperCase() : upperType,
            upperType,
            i;

        if (extending && -1 < indexOf.call(types, PREFIX_TAG + nodeName)) {
          throwTypeError(nodeName);
        }

        i = types.push((extending ? PREFIX_IS : PREFIX_TAG) + upperType) - 1;

        query = query.concat(query.length ? ',' : '', extending ? nodeName + '[is="' + type.toLowerCase() + '"]' : nodeName);

        constructor.prototype = protos[i] = hOP.call(opt, 'prototype') ? opt.prototype : create(HTMLElementPrototype);

        loopAndVerify(document.querySelectorAll(query), ATTACHED);

        return constructor;
      };

      document.createElement = patchedCreateElement = function (localName, typeExtension) {
        var is = getIs(typeExtension),
            node = is ? createElement.call(document, localName, secondArgument(is)) : createElement.call(document, localName),
            name = '' + localName,
            i = indexOf.call(types, (is ? PREFIX_IS : PREFIX_TAG) + (is || name).toUpperCase()),
            setup = -1 < i;
        if (is) {
          node.setAttribute('is', is = is.toLowerCase());
          if (setup) {
            setup = isInQSA(name.toUpperCase(), is);
          }
        }
        notFromInnerHTMLHelper = !document.createElement.innerHTMLHelper;
        if (setup) patch(node, protos[i]);
        return node;
      };
    }

    function ASAP() {
      var queue = asapQueue.splice(0, asapQueue.length);
      asapTimer = 0;
      while (queue.length) {
        queue.shift().call(null, queue.shift());
      }
    }

    function loopAndVerify(list, action) {
      for (var i = 0, length = list.length; i < length; i++) {
        verifyAndSetupAndAction(list[i], action);
      }
    }

    function loopAndSetup(list) {
      for (var i = 0, length = list.length, node; i < length; i++) {
        node = list[i];
        patch(node, protos[getTypeIndex(node)]);
      }
    }

    function executeAction(action) {
      return function (node) {
        if (isValidNode(node)) {
          verifyAndSetupAndAction(node, action);
          loopAndVerify(node.querySelectorAll(query), action);
        }
      };
    }

    function getTypeIndex(target) {
      var is = getAttribute.call(target, 'is'),
          nodeName = target.nodeName.toUpperCase(),
          i = indexOf.call(types, is ? PREFIX_IS + is.toUpperCase() : PREFIX_TAG + nodeName);
      return is && -1 < i && !isInQSA(nodeName, is) ? -1 : i;
    }

    function isInQSA(name, type) {
      return -1 < query.indexOf(name + '[is="' + type + '"]');
    }

    function onDOMAttrModified(e) {
      var node = e.currentTarget,
          attrChange = e.attrChange,
          attrName = e.attrName,
          target = e.target,
          addition = e[ADDITION] || 2,
          removal = e[REMOVAL] || 3;
      if (notFromInnerHTMLHelper && (!target || target === node) && node[ATTRIBUTE_CHANGED_CALLBACK] && attrName !== 'style' && (e.prevValue !== e.newValue ||
      // IE9, IE10, and Opera 12 gotcha
      e.newValue === '' && (attrChange === addition || attrChange === removal))) {
        node[ATTRIBUTE_CHANGED_CALLBACK](attrName, attrChange === addition ? null : e.prevValue, attrChange === removal ? null : e.newValue);
      }
    }

    function onDOMNode(action) {
      var executor = executeAction(action);
      return function (e) {
        asapQueue.push(executor, e.target);
        if (asapTimer) clearTimeout(asapTimer);
        asapTimer = setTimeout(ASAP, 1);
      };
    }

    function onReadyStateChange(e) {
      if (dropDomContentLoaded) {
        dropDomContentLoaded = false;
        e.currentTarget.removeEventListener(DOM_CONTENT_LOADED, onReadyStateChange);
      }
      loopAndVerify((e.target || document).querySelectorAll(query), e.detail === DETACHED ? DETACHED : ATTACHED);
      if (IE8) purge();
    }

    function patchedSetAttribute(name, value) {
      // jshint validthis:true
      var self = this;
      setAttribute.call(self, name, value);
      onSubtreeModified.call(self, { target: self });
    }

    function setupNode(node, proto) {
      setPrototype(node, proto);
      if (observer) {
        observer.observe(node, attributesObserver);
      } else {
        if (doesNotSupportDOMAttrModified) {
          node.setAttribute = patchedSetAttribute;
          node[EXPANDO_UID] = getAttributesMirror(node);
          node[ADD_EVENT_LISTENER](DOM_SUBTREE_MODIFIED, onSubtreeModified);
        }
        node[ADD_EVENT_LISTENER](DOM_ATTR_MODIFIED, onDOMAttrModified);
      }
      if (node[CREATED_CALLBACK] && notFromInnerHTMLHelper) {
        node.created = true;
        node[CREATED_CALLBACK]();
        node.created = false;
      }
    }

    function purge() {
      for (var node, i = 0, length = targets.length; i < length; i++) {
        node = targets[i];
        if (!documentElement.contains(node)) {
          length--;
          targets.splice(i--, 1);
          verifyAndSetupAndAction(node, DETACHED);
        }
      }
    }

    function throwTypeError(type) {
      throw new Error('A ' + type + ' type is already registered');
    }

    function verifyAndSetupAndAction(node, action) {
      var fn,
          i = getTypeIndex(node);
      if (-1 < i) {
        patchIfNotAlready(node, protos[i]);
        i = 0;
        if (action === ATTACHED && !node[ATTACHED]) {
          node[DETACHED] = false;
          node[ATTACHED] = true;
          i = 1;
          if (IE8 && indexOf.call(targets, node) < 0) {
            targets.push(node);
          }
        } else if (action === DETACHED && !node[DETACHED]) {
          node[ATTACHED] = false;
          node[DETACHED] = true;
          i = 1;
        }
        if (i && (fn = node[action + CALLBACK])) fn.call(node);
      }
    }

    // V1 in da House!
    function CustomElementRegistry() {}

    CustomElementRegistry.prototype = {
      constructor: CustomElementRegistry,
      // a workaround for the stubborn WebKit
      define: usableCustomElements ? function (name, Class, options) {
        if (options) {
          CERDefine(name, Class, options);
        } else {
          var NAME = name.toUpperCase();
          constructors[NAME] = {
            constructor: Class,
            create: [NAME]
          };
          nodeNames.set(Class, NAME);
          customElements.define(name, Class);
        }
      } : CERDefine,
      get: usableCustomElements ? function (name) {
        return customElements.get(name) || get(name);
      } : get,
      whenDefined: usableCustomElements ? function (name) {
        return Promise.race([customElements.whenDefined(name), whenDefined(name)]);
      } : whenDefined
    };

    function CERDefine(name, Class, options) {
      var is = options && options[EXTENDS] || '',
          CProto = Class.prototype,
          proto = create(CProto),
          attributes = Class.observedAttributes || empty,
          definition = { prototype: proto };
      // TODO: is this needed at all since it's inherited?
      // defineProperty(proto, 'constructor', {value: Class});
      safeProperty(proto, CREATED_CALLBACK, {
        value: function () {
          if (justCreated) justCreated = false;else if (!this[DRECEV1]) {
            this[DRECEV1] = true;
            new Class(this);
            if (CProto[CREATED_CALLBACK]) CProto[CREATED_CALLBACK].call(this);
            var info = constructors[nodeNames.get(Class)];
            if (!usableCustomElements || info.create.length > 1) {
              notifyAttributes(this);
            }
          }
        }
      });
      safeProperty(proto, ATTRIBUTE_CHANGED_CALLBACK, {
        value: function (name) {
          if (-1 < indexOf.call(attributes, name)) CProto[ATTRIBUTE_CHANGED_CALLBACK].apply(this, arguments);
        }
      });
      if (CProto[CONNECTED_CALLBACK]) {
        safeProperty(proto, ATTACHED_CALLBACK, {
          value: CProto[CONNECTED_CALLBACK]
        });
      }
      if (CProto[DISCONNECTED_CALLBACK]) {
        safeProperty(proto, DETACHED_CALLBACK, {
          value: CProto[DISCONNECTED_CALLBACK]
        });
      }
      if (is) definition[EXTENDS] = is;
      name = name.toUpperCase();
      constructors[name] = {
        constructor: Class,
        create: is ? [is, secondArgument(name)] : [name]
      };
      nodeNames.set(Class, name);
      document[REGISTER_ELEMENT](name.toLowerCase(), definition);
      whenDefined(name);
      waitingList[name].r();
    }

    function get(name) {
      var info = constructors[name.toUpperCase()];
      return info && info.constructor;
    }

    function getIs(options) {
      return typeof options === 'string' ? options : options && options.is || '';
    }

    function notifyAttributes(self) {
      var callback = self[ATTRIBUTE_CHANGED_CALLBACK],
          attributes = callback ? self.attributes : empty,
          i = attributes.length,
          attribute;
      while (i--) {
        attribute = attributes[i]; // || attributes.item(i);
        callback.call(self, attribute.name || attribute.nodeName, null, attribute.value || attribute.nodeValue);
      }
    }

    function whenDefined(name) {
      name = name.toUpperCase();
      if (!(name in waitingList)) {
        waitingList[name] = {};
        waitingList[name].p = new Promise(function (resolve) {
          waitingList[name].r = resolve;
        });
      }
      return waitingList[name].p;
    }

    function polyfillV1() {
      if (customElements) delete window.customElements;
      defineProperty(window, 'customElements', {
        configurable: true,
        value: new CustomElementRegistry()
      });
      defineProperty(window, 'CustomElementRegistry', {
        configurable: true,
        value: CustomElementRegistry
      });
      for (var patchClass = function (name) {
        var Class = window[name];
        if (Class) {
          window[name] = function CustomElementsV1(self) {
            var info, isNative;
            if (!self) self = this;
            if (!self[DRECEV1]) {
              justCreated = true;
              info = constructors[nodeNames.get(self.constructor)];
              isNative = usableCustomElements && info.create.length === 1;
              self = isNative ? Reflect.construct(Class, empty, info.constructor) : document.createElement.apply(document, info.create);
              self[DRECEV1] = true;
              justCreated = false;
              if (!isNative) notifyAttributes(self);
            }
            return self;
          };
          window[name].prototype = Class.prototype;
          try {
            Class.prototype.constructor = window[name];
          } catch (WebKit) {
            fixGetClass = true;
            defineProperty(Class, DRECEV1, { value: window[name] });
          }
        }
      }, Classes = htmlClass.get(/^HTML[A-Z]*[a-z]/), i = Classes.length; i--; patchClass(Classes[i])) {}
      document.createElement = function (name, options) {
        var is = getIs(options);
        return is ? patchedCreateElement.call(this, name, secondArgument(is)) : patchedCreateElement.call(this, name);
      };
    }

    // if customElements is not there at all
    if (!customElements) polyfillV1();else {
      // if available test extends work as expected
      try {
        (function (DRE, options, name) {
          options[EXTENDS] = 'a';
          DRE.prototype = create(HTMLAnchorElement.prototype);
          DRE.prototype.constructor = DRE;
          window.customElements.define(name, DRE, options);
          if (getAttribute.call(document.createElement('a', { is: name }), 'is') !== name || usableCustomElements && getAttribute.call(new DRE(), 'is') !== name) {
            throw options;
          }
        })(function DRE() {
          return Reflect.construct(HTMLAnchorElement, [], DRE);
        }, {}, 'document-register-element-a');
      } catch (o_O) {
        // or force the polyfill if not
        // and keep internal original reference
        polyfillV1();
      }
    }

    try {
      createElement.call(document, 'a', 'a');
    } catch (FireFox) {
      secondArgument = function (is) {
        return { is: is };
      };
    }
  }

  installCustomElements(global);

  module.exports = installCustomElements;
  return module.exports;
});
(function() {
var define = $__System.amdDefine;
(function(f) {
  if (typeof exports === "object" && typeof module !== "undefined") {
    module.exports = f();
  } else if (typeof define === "function" && define.amd) {
    define("3", [], f);
  } else {
    var g;
    if (typeof window !== "undefined") {
      g = window;
    } else if (typeof global !== "undefined") {
      g = global;
    } else if (typeof self !== "undefined") {
      g = self;
    } else {
      g = this;
    }
    g.AndamanService = f();
  }
})(function() {
  var define,
      module,
      exports;
  return (function e(t, n, r) {
    function s(o, u) {
      if (!n[o]) {
        if (!t[o]) {
          var a = typeof require == "function" && require;
          if (!u && a)
            return a(o, !0);
          if (i)
            return i(o, !0);
          var f = new Error("Cannot find module '" + o + "'");
          throw f.code = "MODULE_NOT_FOUND", f;
        }
        var l = n[o] = {exports: {}};
        t[o][0].call(l.exports, function(e) {
          var n = t[o][1][e];
          return s(n ? n : e);
        }, l, l.exports, e, t, n, r);
      }
      return n[o].exports;
    }
    var i = typeof require == "function" && require;
    for (var o = 0; o < r.length; o++)
      s(r[o]);
    return s;
  })({
    1: [function(require, module, exports) {
      var asn1 = exports;
      asn1.bignum = require('bn.js');
      asn1.define = require('./asn1/api').define;
      asn1.base = require('./asn1/base');
      asn1.constants = require('./asn1/constants');
      asn1.decoders = require('./asn1/decoders');
      asn1.encoders = require('./asn1/encoders');
    }, {
      "./asn1/api": 2,
      "./asn1/base": 4,
      "./asn1/constants": 8,
      "./asn1/decoders": 10,
      "./asn1/encoders": 13,
      "bn.js": 16
    }],
    2: [function(require, module, exports) {
      var asn1 = require('../asn1');
      var inherits = require('inherits');
      var api = exports;
      api.define = function define(name, body) {
        return new Entity(name, body);
      };
      function Entity(name, body) {
        this.name = name;
        this.body = body;
        this.decoders = {};
        this.encoders = {};
      }
      ;
      Entity.prototype._createNamed = function createNamed(base) {
        var named;
        try {
          named = require('vm').runInThisContext('(function ' + this.name + '(entity) {\n' + '  this._initNamed(entity);\n' + '})');
        } catch (e) {
          named = function(entity) {
            this._initNamed(entity);
          };
        }
        inherits(named, base);
        named.prototype._initNamed = function initnamed(entity) {
          base.call(this, entity);
        };
        return new named(this);
      };
      Entity.prototype._getDecoder = function _getDecoder(enc) {
        enc = enc || 'der';
        if (!this.decoders.hasOwnProperty(enc))
          this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
        return this.decoders[enc];
      };
      Entity.prototype.decode = function decode(data, enc, options) {
        return this._getDecoder(enc).decode(data, options);
      };
      Entity.prototype._getEncoder = function _getEncoder(enc) {
        enc = enc || 'der';
        if (!this.encoders.hasOwnProperty(enc))
          this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
        return this.encoders[enc];
      };
      Entity.prototype.encode = function encode(data, enc, reporter) {
        return this._getEncoder(enc).encode(data, reporter);
      };
    }, {
      "../asn1": 1,
      "inherits": 91,
      "vm": 134
    }],
    3: [function(require, module, exports) {
      var inherits = require('inherits');
      var Reporter = require('../base').Reporter;
      var Buffer = require('buffer').Buffer;
      function DecoderBuffer(base, options) {
        Reporter.call(this, options);
        if (!Buffer.isBuffer(base)) {
          this.error('Input not Buffer');
          return;
        }
        this.base = base;
        this.offset = 0;
        this.length = base.length;
      }
      inherits(DecoderBuffer, Reporter);
      exports.DecoderBuffer = DecoderBuffer;
      DecoderBuffer.prototype.save = function save() {
        return {
          offset: this.offset,
          reporter: Reporter.prototype.save.call(this)
        };
      };
      DecoderBuffer.prototype.restore = function restore(save) {
        var res = new DecoderBuffer(this.base);
        res.offset = save.offset;
        res.length = this.offset;
        this.offset = save.offset;
        Reporter.prototype.restore.call(this, save.reporter);
        return res;
      };
      DecoderBuffer.prototype.isEmpty = function isEmpty() {
        return this.offset === this.length;
      };
      DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
        if (this.offset + 1 <= this.length)
          return this.base.readUInt8(this.offset++, true);
        else
          return this.error(fail || 'DecoderBuffer overrun');
      };
      DecoderBuffer.prototype.skip = function skip(bytes, fail) {
        if (!(this.offset + bytes <= this.length))
          return this.error(fail || 'DecoderBuffer overrun');
        var res = new DecoderBuffer(this.base);
        res._reporterState = this._reporterState;
        res.offset = this.offset;
        res.length = this.offset + bytes;
        this.offset += bytes;
        return res;
      };
      DecoderBuffer.prototype.raw = function raw(save) {
        return this.base.slice(save ? save.offset : this.offset, this.length);
      };
      function EncoderBuffer(value, reporter) {
        if (Array.isArray(value)) {
          this.length = 0;
          this.value = value.map(function(item) {
            if (!(item instanceof EncoderBuffer))
              item = new EncoderBuffer(item, reporter);
            this.length += item.length;
            return item;
          }, this);
        } else if (typeof value === 'number') {
          if (!(0 <= value && value <= 0xff))
            return reporter.error('non-byte EncoderBuffer value');
          this.value = value;
          this.length = 1;
        } else if (typeof value === 'string') {
          this.value = value;
          this.length = Buffer.byteLength(value);
        } else if (Buffer.isBuffer(value)) {
          this.value = value;
          this.length = value.length;
        } else {
          return reporter.error('Unsupported type: ' + typeof value);
        }
      }
      exports.EncoderBuffer = EncoderBuffer;
      EncoderBuffer.prototype.join = function join(out, offset) {
        if (!out)
          out = new Buffer(this.length);
        if (!offset)
          offset = 0;
        if (this.length === 0)
          return out;
        if (Array.isArray(this.value)) {
          this.value.forEach(function(item) {
            item.join(out, offset);
            offset += item.length;
          });
        } else {
          if (typeof this.value === 'number')
            out[offset] = this.value;
          else if (typeof this.value === 'string')
            out.write(this.value, offset);
          else if (Buffer.isBuffer(this.value))
            this.value.copy(out, offset);
          offset += this.length;
        }
        return out;
      };
    }, {
      "../base": 4,
      "buffer": 45,
      "inherits": 91
    }],
    4: [function(require, module, exports) {
      var base = exports;
      base.Reporter = require('./reporter').Reporter;
      base.DecoderBuffer = require('./buffer').DecoderBuffer;
      base.EncoderBuffer = require('./buffer').EncoderBuffer;
      base.Node = require('./node');
    }, {
      "./buffer": 3,
      "./node": 5,
      "./reporter": 6
    }],
    5: [function(require, module, exports) {
      var Reporter = require('../base').Reporter;
      var EncoderBuffer = require('../base').EncoderBuffer;
      var DecoderBuffer = require('../base').DecoderBuffer;
      var assert = require('minimalistic-assert');
      var tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'];
      var methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags);
      var overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];
      function Node(enc, parent) {
        var state = {};
        this._baseState = state;
        state.enc = enc;
        state.parent = parent || null;
        state.children = null;
        state.tag = null;
        state.args = null;
        state.reverseArgs = null;
        state.choice = null;
        state.optional = false;
        state.any = false;
        state.obj = false;
        state.use = null;
        state.useDecoder = null;
        state.key = null;
        state['default'] = null;
        state.explicit = null;
        state.implicit = null;
        state.contains = null;
        if (!state.parent) {
          state.children = [];
          this._wrap();
        }
      }
      module.exports = Node;
      var stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];
      Node.prototype.clone = function clone() {
        var state = this._baseState;
        var cstate = {};
        stateProps.forEach(function(prop) {
          cstate[prop] = state[prop];
        });
        var res = new this.constructor(cstate.parent);
        res._baseState = cstate;
        return res;
      };
      Node.prototype._wrap = function wrap() {
        var state = this._baseState;
        methods.forEach(function(method) {
          this[method] = function _wrappedMethod() {
            var clone = new this.constructor(this);
            state.children.push(clone);
            return clone[method].apply(clone, arguments);
          };
        }, this);
      };
      Node.prototype._init = function init(body) {
        var state = this._baseState;
        assert(state.parent === null);
        body.call(this);
        state.children = state.children.filter(function(child) {
          return child._baseState.parent === this;
        }, this);
        assert.equal(state.children.length, 1, 'Root node can have only one child');
      };
      Node.prototype._useArgs = function useArgs(args) {
        var state = this._baseState;
        var children = args.filter(function(arg) {
          return arg instanceof this.constructor;
        }, this);
        args = args.filter(function(arg) {
          return !(arg instanceof this.constructor);
        }, this);
        if (children.length !== 0) {
          assert(state.children === null);
          state.children = children;
          children.forEach(function(child) {
            child._baseState.parent = this;
          }, this);
        }
        if (args.length !== 0) {
          assert(state.args === null);
          state.args = args;
          state.reverseArgs = args.map(function(arg) {
            if (typeof arg !== 'object' || arg.constructor !== Object)
              return arg;
            var res = {};
            Object.keys(arg).forEach(function(key) {
              if (key == (key | 0))
                key |= 0;
              var value = arg[key];
              res[value] = key;
            });
            return res;
          });
        }
      };
      overrided.forEach(function(method) {
        Node.prototype[method] = function _overrided() {
          var state = this._baseState;
          throw new Error(method + ' not implemented for encoding: ' + state.enc);
        };
      });
      tags.forEach(function(tag) {
        Node.prototype[tag] = function _tagMethod() {
          var state = this._baseState;
          var args = Array.prototype.slice.call(arguments);
          assert(state.tag === null);
          state.tag = tag;
          this._useArgs(args);
          return this;
        };
      });
      Node.prototype.use = function use(item) {
        var state = this._baseState;
        assert(state.use === null);
        state.use = item;
        return this;
      };
      Node.prototype.optional = function optional() {
        var state = this._baseState;
        state.optional = true;
        return this;
      };
      Node.prototype.def = function def(val) {
        var state = this._baseState;
        assert(state['default'] === null);
        state['default'] = val;
        state.optional = true;
        return this;
      };
      Node.prototype.explicit = function explicit(num) {
        var state = this._baseState;
        assert(state.explicit === null && state.implicit === null);
        state.explicit = num;
        return this;
      };
      Node.prototype.implicit = function implicit(num) {
        var state = this._baseState;
        assert(state.explicit === null && state.implicit === null);
        state.implicit = num;
        return this;
      };
      Node.prototype.obj = function obj() {
        var state = this._baseState;
        var args = Array.prototype.slice.call(arguments);
        state.obj = true;
        if (args.length !== 0)
          this._useArgs(args);
        return this;
      };
      Node.prototype.key = function key(newKey) {
        var state = this._baseState;
        assert(state.key === null);
        state.key = newKey;
        return this;
      };
      Node.prototype.any = function any() {
        var state = this._baseState;
        state.any = true;
        return this;
      };
      Node.prototype.choice = function choice(obj) {
        var state = this._baseState;
        assert(state.choice === null);
        state.choice = obj;
        this._useArgs(Object.keys(obj).map(function(key) {
          return obj[key];
        }));
        return this;
      };
      Node.prototype.contains = function contains(item) {
        var state = this._baseState;
        assert(state.use === null);
        state.contains = item;
        return this;
      };
      Node.prototype._decode = function decode(input, options) {
        var state = this._baseState;
        if (state.parent === null)
          return input.wrapResult(state.children[0]._decode(input, options));
        var result = state['default'];
        var present = true;
        var prevKey = null;
        if (state.key !== null)
          prevKey = input.enterKey(state.key);
        if (state.optional) {
          var tag = null;
          if (state.explicit !== null)
            tag = state.explicit;
          else if (state.implicit !== null)
            tag = state.implicit;
          else if (state.tag !== null)
            tag = state.tag;
          if (tag === null && !state.any) {
            var save = input.save();
            try {
              if (state.choice === null)
                this._decodeGeneric(state.tag, input, options);
              else
                this._decodeChoice(input, options);
              present = true;
            } catch (e) {
              present = false;
            }
            input.restore(save);
          } else {
            present = this._peekTag(input, tag, state.any);
            if (input.isError(present))
              return present;
          }
        }
        var prevObj;
        if (state.obj && present)
          prevObj = input.enterObject();
        if (present) {
          if (state.explicit !== null) {
            var explicit = this._decodeTag(input, state.explicit);
            if (input.isError(explicit))
              return explicit;
            input = explicit;
          }
          var start = input.offset;
          if (state.use === null && state.choice === null) {
            if (state.any)
              var save = input.save();
            var body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);
            if (input.isError(body))
              return body;
            if (state.any)
              result = input.raw(save);
            else
              input = body;
          }
          if (options && options.track && state.tag !== null)
            options.track(input.path(), start, input.length, 'tagged');
          if (options && options.track && state.tag !== null)
            options.track(input.path(), input.offset, input.length, 'content');
          if (state.any)
            result = result;
          else if (state.choice === null)
            result = this._decodeGeneric(state.tag, input, options);
          else
            result = this._decodeChoice(input, options);
          if (input.isError(result))
            return result;
          if (!state.any && state.choice === null && state.children !== null) {
            state.children.forEach(function decodeChildren(child) {
              child._decode(input, options);
            });
          }
          if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
            var data = new DecoderBuffer(result);
            result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
          }
        }
        if (state.obj && present)
          result = input.leaveObject(prevObj);
        if (state.key !== null && (result !== null || present === true))
          input.leaveKey(prevKey, state.key, result);
        else if (prevKey !== null)
          input.exitKey(prevKey);
        return result;
      };
      Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
        var state = this._baseState;
        if (tag === 'seq' || tag === 'set')
          return null;
        if (tag === 'seqof' || tag === 'setof')
          return this._decodeList(input, tag, state.args[0], options);
        else if (/str$/.test(tag))
          return this._decodeStr(input, tag, options);
        else if (tag === 'objid' && state.args)
          return this._decodeObjid(input, state.args[0], state.args[1], options);
        else if (tag === 'objid')
          return this._decodeObjid(input, null, null, options);
        else if (tag === 'gentime' || tag === 'utctime')
          return this._decodeTime(input, tag, options);
        else if (tag === 'null_')
          return this._decodeNull(input, options);
        else if (tag === 'bool')
          return this._decodeBool(input, options);
        else if (tag === 'int' || tag === 'enum')
          return this._decodeInt(input, state.args && state.args[0], options);
        if (state.use !== null) {
          return this._getUse(state.use, input._reporterState.obj)._decode(input, options);
        } else {
          return input.error('unknown tag: ' + tag);
        }
      };
      Node.prototype._getUse = function _getUse(entity, obj) {
        var state = this._baseState;
        state.useDecoder = this._use(entity, obj);
        assert(state.useDecoder._baseState.parent === null);
        state.useDecoder = state.useDecoder._baseState.children[0];
        if (state.implicit !== state.useDecoder._baseState.implicit) {
          state.useDecoder = state.useDecoder.clone();
          state.useDecoder._baseState.implicit = state.implicit;
        }
        return state.useDecoder;
      };
      Node.prototype._decodeChoice = function decodeChoice(input, options) {
        var state = this._baseState;
        var result = null;
        var match = false;
        Object.keys(state.choice).some(function(key) {
          var save = input.save();
          var node = state.choice[key];
          try {
            var value = node._decode(input, options);
            if (input.isError(value))
              return false;
            result = {
              type: key,
              value: value
            };
            match = true;
          } catch (e) {
            input.restore(save);
            return false;
          }
          return true;
        }, this);
        if (!match)
          return input.error('Choice not matched');
        return result;
      };
      Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
        return new EncoderBuffer(data, this.reporter);
      };
      Node.prototype._encode = function encode(data, reporter, parent) {
        var state = this._baseState;
        if (state['default'] !== null && state['default'] === data)
          return;
        var result = this._encodeValue(data, reporter, parent);
        if (result === undefined)
          return;
        if (this._skipDefault(result, reporter, parent))
          return;
        return result;
      };
      Node.prototype._encodeValue = function encode(data, reporter, parent) {
        var state = this._baseState;
        if (state.parent === null)
          return state.children[0]._encode(data, reporter || new Reporter());
        var result = null;
        this.reporter = reporter;
        if (state.optional && data === undefined) {
          if (state['default'] !== null)
            data = state['default'];
          else
            return;
        }
        var content = null;
        var primitive = false;
        if (state.any) {
          result = this._createEncoderBuffer(data);
        } else if (state.choice) {
          result = this._encodeChoice(data, reporter);
        } else if (state.contains) {
          content = this._getUse(state.contains, parent)._encode(data, reporter);
          primitive = true;
        } else if (state.children) {
          content = state.children.map(function(child) {
            if (child._baseState.tag === 'null_')
              return child._encode(null, reporter, data);
            if (child._baseState.key === null)
              return reporter.error('Child should have a key');
            var prevKey = reporter.enterKey(child._baseState.key);
            if (typeof data !== 'object')
              return reporter.error('Child expected, but input is not object');
            var res = child._encode(data[child._baseState.key], reporter, data);
            reporter.leaveKey(prevKey);
            return res;
          }, this).filter(function(child) {
            return child;
          });
          content = this._createEncoderBuffer(content);
        } else {
          if (state.tag === 'seqof' || state.tag === 'setof') {
            if (!(state.args && state.args.length === 1))
              return reporter.error('Too many args for : ' + state.tag);
            if (!Array.isArray(data))
              return reporter.error('seqof/setof, but data is not Array');
            var child = this.clone();
            child._baseState.implicit = null;
            content = this._createEncoderBuffer(data.map(function(item) {
              var state = this._baseState;
              return this._getUse(state.args[0], data)._encode(item, reporter);
            }, child));
          } else if (state.use !== null) {
            result = this._getUse(state.use, parent)._encode(data, reporter);
          } else {
            content = this._encodePrimitive(state.tag, data);
            primitive = true;
          }
        }
        var result;
        if (!state.any && state.choice === null) {
          var tag = state.implicit !== null ? state.implicit : state.tag;
          var cls = state.implicit === null ? 'universal' : 'context';
          if (tag === null) {
            if (state.use === null)
              reporter.error('Tag could be ommited only for .use()');
          } else {
            if (state.use === null)
              result = this._encodeComposite(tag, primitive, cls, content);
          }
        }
        if (state.explicit !== null)
          result = this._encodeComposite(state.explicit, false, 'context', result);
        return result;
      };
      Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
        var state = this._baseState;
        var node = state.choice[data.type];
        if (!node) {
          assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));
        }
        return node._encode(data.value, reporter);
      };
      Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
        var state = this._baseState;
        if (/str$/.test(tag))
          return this._encodeStr(data, tag);
        else if (tag === 'objid' && state.args)
          return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
        else if (tag === 'objid')
          return this._encodeObjid(data, null, null);
        else if (tag === 'gentime' || tag === 'utctime')
          return this._encodeTime(data, tag);
        else if (tag === 'null_')
          return this._encodeNull();
        else if (tag === 'int' || tag === 'enum')
          return this._encodeInt(data, state.args && state.reverseArgs[0]);
        else if (tag === 'bool')
          return this._encodeBool(data);
        else
          throw new Error('Unsupported tag: ' + tag);
      };
      Node.prototype._isNumstr = function isNumstr(str) {
        return /^[0-9 ]*$/.test(str);
      };
      Node.prototype._isPrintstr = function isPrintstr(str) {
        return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
      };
    }, {
      "../base": 4,
      "minimalistic-assert": 95
    }],
    6: [function(require, module, exports) {
      var inherits = require('inherits');
      function Reporter(options) {
        this._reporterState = {
          obj: null,
          path: [],
          options: options || {},
          errors: []
        };
      }
      exports.Reporter = Reporter;
      Reporter.prototype.isError = function isError(obj) {
        return obj instanceof ReporterError;
      };
      Reporter.prototype.save = function save() {
        var state = this._reporterState;
        return {
          obj: state.obj,
          pathLen: state.path.length
        };
      };
      Reporter.prototype.restore = function restore(data) {
        var state = this._reporterState;
        state.obj = data.obj;
        state.path = state.path.slice(0, data.pathLen);
      };
      Reporter.prototype.enterKey = function enterKey(key) {
        return this._reporterState.path.push(key);
      };
      Reporter.prototype.exitKey = function exitKey(index) {
        var state = this._reporterState;
        state.path = state.path.slice(0, index - 1);
      };
      Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
        var state = this._reporterState;
        this.exitKey(index);
        if (state.obj !== null)
          state.obj[key] = value;
      };
      Reporter.prototype.path = function path() {
        return this._reporterState.path.join('/');
      };
      Reporter.prototype.enterObject = function enterObject() {
        var state = this._reporterState;
        var prev = state.obj;
        state.obj = {};
        return prev;
      };
      Reporter.prototype.leaveObject = function leaveObject(prev) {
        var state = this._reporterState;
        var now = state.obj;
        state.obj = prev;
        return now;
      };
      Reporter.prototype.error = function error(msg) {
        var err;
        var state = this._reporterState;
        var inherited = msg instanceof ReporterError;
        if (inherited) {
          err = msg;
        } else {
          err = new ReporterError(state.path.map(function(elem) {
            return '[' + JSON.stringify(elem) + ']';
          }).join(''), msg.message || msg, msg.stack);
        }
        if (!state.options.partial)
          throw err;
        if (!inherited)
          state.errors.push(err);
        return err;
      };
      Reporter.prototype.wrapResult = function wrapResult(result) {
        var state = this._reporterState;
        if (!state.options.partial)
          return result;
        return {
          result: this.isError(result) ? null : result,
          errors: state.errors
        };
      };
      function ReporterError(path, msg) {
        this.path = path;
        this.rethrow(msg);
      }
      ;
      inherits(ReporterError, Error);
      ReporterError.prototype.rethrow = function rethrow(msg) {
        this.message = msg + ' at: ' + (this.path || '(shallow)');
        if (Error.captureStackTrace)
          Error.captureStackTrace(this, ReporterError);
        if (!this.stack) {
          try {
            throw new Error(this.message);
          } catch (e) {
            this.stack = e.stack;
          }
        }
        return this;
      };
    }, {"inherits": 91}],
    7: [function(require, module, exports) {
      var constants = require('../constants');
      exports.tagClass = {
        0: 'universal',
        1: 'application',
        2: 'context',
        3: 'private'
      };
      exports.tagClassByName = constants._reverse(exports.tagClass);
      exports.tag = {
        0x00: 'end',
        0x01: 'bool',
        0x02: 'int',
        0x03: 'bitstr',
        0x04: 'octstr',
        0x05: 'null_',
        0x06: 'objid',
        0x07: 'objDesc',
        0x08: 'external',
        0x09: 'real',
        0x0a: 'enum',
        0x0b: 'embed',
        0x0c: 'utf8str',
        0x0d: 'relativeOid',
        0x10: 'seq',
        0x11: 'set',
        0x12: 'numstr',
        0x13: 'printstr',
        0x14: 't61str',
        0x15: 'videostr',
        0x16: 'ia5str',
        0x17: 'utctime',
        0x18: 'gentime',
        0x19: 'graphstr',
        0x1a: 'iso646str',
        0x1b: 'genstr',
        0x1c: 'unistr',
        0x1d: 'charstr',
        0x1e: 'bmpstr'
      };
      exports.tagByName = constants._reverse(exports.tag);
    }, {"../constants": 8}],
    8: [function(require, module, exports) {
      var constants = exports;
      constants._reverse = function reverse(map) {
        var res = {};
        Object.keys(map).forEach(function(key) {
          if ((key | 0) == key)
            key = key | 0;
          var value = map[key];
          res[value] = key;
        });
        return res;
      };
      constants.der = require('./der');
    }, {"./der": 7}],
    9: [function(require, module, exports) {
      var inherits = require('inherits');
      var asn1 = require('../../asn1');
      var base = asn1.base;
      var bignum = asn1.bignum;
      var der = asn1.constants.der;
      function DERDecoder(entity) {
        this.enc = 'der';
        this.name = entity.name;
        this.entity = entity;
        this.tree = new DERNode();
        this.tree._init(entity.body);
      }
      ;
      module.exports = DERDecoder;
      DERDecoder.prototype.decode = function decode(data, options) {
        if (!(data instanceof base.DecoderBuffer))
          data = new base.DecoderBuffer(data, options);
        return this.tree._decode(data, options);
      };
      function DERNode(parent) {
        base.Node.call(this, 'der', parent);
      }
      inherits(DERNode, base.Node);
      DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
        if (buffer.isEmpty())
          return false;
        var state = buffer.save();
        var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
        if (buffer.isError(decodedTag))
          return decodedTag;
        buffer.restore(state);
        return decodedTag.tag === tag || decodedTag.tagStr === tag || (decodedTag.tagStr + 'of') === tag || any;
      };
      DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
        var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of "' + tag + '"');
        if (buffer.isError(decodedTag))
          return decodedTag;
        var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of "' + tag + '"');
        if (buffer.isError(len))
          return len;
        if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {
          return buffer.error('Failed to match tag: "' + tag + '"');
        }
        if (decodedTag.primitive || len !== null)
          return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
        var state = buffer.save();
        var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: "' + this.tag + '"');
        if (buffer.isError(res))
          return res;
        len = buffer.offset - state.offset;
        buffer.restore(state);
        return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
      };
      DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
        while (true) {
          var tag = derDecodeTag(buffer, fail);
          if (buffer.isError(tag))
            return tag;
          var len = derDecodeLen(buffer, tag.primitive, fail);
          if (buffer.isError(len))
            return len;
          var res;
          if (tag.primitive || len !== null)
            res = buffer.skip(len);
          else
            res = this._skipUntilEnd(buffer, fail);
          if (buffer.isError(res))
            return res;
          if (tag.tagStr === 'end')
            break;
        }
      };
      DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {
        var result = [];
        while (!buffer.isEmpty()) {
          var possibleEnd = this._peekTag(buffer, 'end');
          if (buffer.isError(possibleEnd))
            return possibleEnd;
          var res = decoder.decode(buffer, 'der', options);
          if (buffer.isError(res) && possibleEnd)
            break;
          result.push(res);
        }
        return result;
      };
      DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
        if (tag === 'bitstr') {
          var unused = buffer.readUInt8();
          if (buffer.isError(unused))
            return unused;
          return {
            unused: unused,
            data: buffer.raw()
          };
        } else if (tag === 'bmpstr') {
          var raw = buffer.raw();
          if (raw.length % 2 === 1)
            return buffer.error('Decoding of string type: bmpstr length mismatch');
          var str = '';
          for (var i = 0; i < raw.length / 2; i++) {
            str += String.fromCharCode(raw.readUInt16BE(i * 2));
          }
          return str;
        } else if (tag === 'numstr') {
          var numstr = buffer.raw().toString('ascii');
          if (!this._isNumstr(numstr)) {
            return buffer.error('Decoding of string type: ' + 'numstr unsupported characters');
          }
          return numstr;
        } else if (tag === 'octstr') {
          return buffer.raw();
        } else if (tag === 'printstr') {
          var printstr = buffer.raw().toString('ascii');
          if (!this._isPrintstr(printstr)) {
            return buffer.error('Decoding of string type: ' + 'printstr unsupported characters');
          }
          return printstr;
        } else if (/str$/.test(tag)) {
          return buffer.raw().toString();
        } else {
          return buffer.error('Decoding of string type: ' + tag + ' unsupported');
        }
      };
      DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
        var result;
        var identifiers = [];
        var ident = 0;
        while (!buffer.isEmpty()) {
          var subident = buffer.readUInt8();
          ident <<= 7;
          ident |= subident & 0x7f;
          if ((subident & 0x80) === 0) {
            identifiers.push(ident);
            ident = 0;
          }
        }
        if (subident & 0x80)
          identifiers.push(ident);
        var first = (identifiers[0] / 40) | 0;
        var second = identifiers[0] % 40;
        if (relative)
          result = identifiers;
        else
          result = [first, second].concat(identifiers.slice(1));
        if (values) {
          var tmp = values[result.join(' ')];
          if (tmp === undefined)
            tmp = values[result.join('.')];
          if (tmp !== undefined)
            result = tmp;
        }
        return result;
      };
      DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
        var str = buffer.raw().toString();
        if (tag === 'gentime') {
          var year = str.slice(0, 4) | 0;
          var mon = str.slice(4, 6) | 0;
          var day = str.slice(6, 8) | 0;
          var hour = str.slice(8, 10) | 0;
          var min = str.slice(10, 12) | 0;
          var sec = str.slice(12, 14) | 0;
        } else if (tag === 'utctime') {
          var year = str.slice(0, 2) | 0;
          var mon = str.slice(2, 4) | 0;
          var day = str.slice(4, 6) | 0;
          var hour = str.slice(6, 8) | 0;
          var min = str.slice(8, 10) | 0;
          var sec = str.slice(10, 12) | 0;
          if (year < 70)
            year = 2000 + year;
          else
            year = 1900 + year;
        } else {
          return buffer.error('Decoding ' + tag + ' time is not supported yet');
        }
        return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
      };
      DERNode.prototype._decodeNull = function decodeNull(buffer) {
        return null;
      };
      DERNode.prototype._decodeBool = function decodeBool(buffer) {
        var res = buffer.readUInt8();
        if (buffer.isError(res))
          return res;
        else
          return res !== 0;
      };
      DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
        var raw = buffer.raw();
        var res = new bignum(raw);
        if (values)
          res = values[res.toString(10)] || res;
        return res;
      };
      DERNode.prototype._use = function use(entity, obj) {
        if (typeof entity === 'function')
          entity = entity(obj);
        return entity._getDecoder('der').tree;
      };
      function derDecodeTag(buf, fail) {
        var tag = buf.readUInt8(fail);
        if (buf.isError(tag))
          return tag;
        var cls = der.tagClass[tag >> 6];
        var primitive = (tag & 0x20) === 0;
        if ((tag & 0x1f) === 0x1f) {
          var oct = tag;
          tag = 0;
          while ((oct & 0x80) === 0x80) {
            oct = buf.readUInt8(fail);
            if (buf.isError(oct))
              return oct;
            tag <<= 7;
            tag |= oct & 0x7f;
          }
        } else {
          tag &= 0x1f;
        }
        var tagStr = der.tag[tag];
        return {
          cls: cls,
          primitive: primitive,
          tag: tag,
          tagStr: tagStr
        };
      }
      function derDecodeLen(buf, primitive, fail) {
        var len = buf.readUInt8(fail);
        if (buf.isError(len))
          return len;
        if (!primitive && len === 0x80)
          return null;
        if ((len & 0x80) === 0) {
          return len;
        }
        var num = len & 0x7f;
        if (num >= 4)
          return buf.error('length octect is too long');
        len = 0;
        for (var i = 0; i < num; i++) {
          len <<= 8;
          var j = buf.readUInt8(fail);
          if (buf.isError(j))
            return j;
          len |= j;
        }
        return len;
      }
    }, {
      "../../asn1": 1,
      "inherits": 91
    }],
    10: [function(require, module, exports) {
      var decoders = exports;
      decoders.der = require('./der');
      decoders.pem = require('./pem');
    }, {
      "./der": 9,
      "./pem": 11
    }],
    11: [function(require, module, exports) {
      var inherits = require('inherits');
      var Buffer = require('buffer').Buffer;
      var DERDecoder = require('./der');
      function PEMDecoder(entity) {
        DERDecoder.call(this, entity);
        this.enc = 'pem';
      }
      ;
      inherits(PEMDecoder, DERDecoder);
      module.exports = PEMDecoder;
      PEMDecoder.prototype.decode = function decode(data, options) {
        var lines = data.toString().split(/[\r\n]+/g);
        var label = options.label.toUpperCase();
        var re = /^-----(BEGIN|END) ([^-]+)-----$/;
        var start = -1;
        var end = -1;
        for (var i = 0; i < lines.length; i++) {
          var match = lines[i].match(re);
          if (match === null)
            continue;
          if (match[2] !== label)
            continue;
          if (start === -1) {
            if (match[1] !== 'BEGIN')
              break;
            start = i;
          } else {
            if (match[1] !== 'END')
              break;
            end = i;
            break;
          }
        }
        if (start === -1 || end === -1)
          throw new Error('PEM section not found for: ' + label);
        var base64 = lines.slice(start + 1, end).join('');
        base64.replace(/[^a-z0-9\+\/=]+/gi, '');
        var input = new Buffer(base64, 'base64');
        return DERDecoder.prototype.decode.call(this, input, options);
      };
    }, {
      "./der": 9,
      "buffer": 45,
      "inherits": 91
    }],
    12: [function(require, module, exports) {
      var inherits = require('inherits');
      var Buffer = require('buffer').Buffer;
      var asn1 = require('../../asn1');
      var base = asn1.base;
      var der = asn1.constants.der;
      function DEREncoder(entity) {
        this.enc = 'der';
        this.name = entity.name;
        this.entity = entity;
        this.tree = new DERNode();
        this.tree._init(entity.body);
      }
      ;
      module.exports = DEREncoder;
      DEREncoder.prototype.encode = function encode(data, reporter) {
        return this.tree._encode(data, reporter).join();
      };
      function DERNode(parent) {
        base.Node.call(this, 'der', parent);
      }
      inherits(DERNode, base.Node);
      DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {
        var encodedTag = encodeTag(tag, primitive, cls, this.reporter);
        if (content.length < 0x80) {
          var header = new Buffer(2);
          header[0] = encodedTag;
          header[1] = content.length;
          return this._createEncoderBuffer([header, content]);
        }
        var lenOctets = 1;
        for (var i = content.length; i >= 0x100; i >>= 8)
          lenOctets++;
        var header = new Buffer(1 + 1 + lenOctets);
        header[0] = encodedTag;
        header[1] = 0x80 | lenOctets;
        for (var i = 1 + lenOctets,
            j = content.length; j > 0; i--, j >>= 8)
          header[i] = j & 0xff;
        return this._createEncoderBuffer([header, content]);
      };
      DERNode.prototype._encodeStr = function encodeStr(str, tag) {
        if (tag === 'bitstr') {
          return this._createEncoderBuffer([str.unused | 0, str.data]);
        } else if (tag === 'bmpstr') {
          var buf = new Buffer(str.length * 2);
          for (var i = 0; i < str.length; i++) {
            buf.writeUInt16BE(str.charCodeAt(i), i * 2);
          }
          return this._createEncoderBuffer(buf);
        } else if (tag === 'numstr') {
          if (!this._isNumstr(str)) {
            return this.reporter.error('Encoding of string type: numstr supports ' + 'only digits and space');
          }
          return this._createEncoderBuffer(str);
        } else if (tag === 'printstr') {
          if (!this._isPrintstr(str)) {
            return this.reporter.error('Encoding of string type: printstr supports ' + 'only latin upper and lower case letters, ' + 'digits, space, apostrophe, left and rigth ' + 'parenthesis, plus sign, comma, hyphen, ' + 'dot, slash, colon, equal sign, ' + 'question mark');
          }
          return this._createEncoderBuffer(str);
        } else if (/str$/.test(tag)) {
          return this._createEncoderBuffer(str);
        } else {
          return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');
        }
      };
      DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
        if (typeof id === 'string') {
          if (!values)
            return this.reporter.error('string objid given, but no values map found');
          if (!values.hasOwnProperty(id))
            return this.reporter.error('objid not found in values map');
          id = values[id].split(/[\s\.]+/g);
          for (var i = 0; i < id.length; i++)
            id[i] |= 0;
        } else if (Array.isArray(id)) {
          id = id.slice();
          for (var i = 0; i < id.length; i++)
            id[i] |= 0;
        }
        if (!Array.isArray(id)) {
          return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));
        }
        if (!relative) {
          if (id[1] >= 40)
            return this.reporter.error('Second objid identifier OOB');
          id.splice(0, 2, id[0] * 40 + id[1]);
        }
        var size = 0;
        for (var i = 0; i < id.length; i++) {
          var ident = id[i];
          for (size++; ident >= 0x80; ident >>= 7)
            size++;
        }
        var objid = new Buffer(size);
        var offset = objid.length - 1;
        for (var i = id.length - 1; i >= 0; i--) {
          var ident = id[i];
          objid[offset--] = ident & 0x7f;
          while ((ident >>= 7) > 0)
            objid[offset--] = 0x80 | (ident & 0x7f);
        }
        return this._createEncoderBuffer(objid);
      };
      function two(num) {
        if (num < 10)
          return '0' + num;
        else
          return num;
      }
      DERNode.prototype._encodeTime = function encodeTime(time, tag) {
        var str;
        var date = new Date(time);
        if (tag === 'gentime') {
          str = [two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');
        } else if (tag === 'utctime') {
          str = [two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');
        } else {
          this.reporter.error('Encoding ' + tag + ' time is not supported yet');
        }
        return this._encodeStr(str, 'octstr');
      };
      DERNode.prototype._encodeNull = function encodeNull() {
        return this._createEncoderBuffer('');
      };
      DERNode.prototype._encodeInt = function encodeInt(num, values) {
        if (typeof num === 'string') {
          if (!values)
            return this.reporter.error('String int or enum given, but no values map');
          if (!values.hasOwnProperty(num)) {
            return this.reporter.error('Values map doesn\'t contain: ' + JSON.stringify(num));
          }
          num = values[num];
        }
        if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
          var numArray = num.toArray();
          if (!num.sign && numArray[0] & 0x80) {
            numArray.unshift(0);
          }
          num = new Buffer(numArray);
        }
        if (Buffer.isBuffer(num)) {
          var size = num.length;
          if (num.length === 0)
            size++;
          var out = new Buffer(size);
          num.copy(out);
          if (num.length === 0)
            out[0] = 0;
          return this._createEncoderBuffer(out);
        }
        if (num < 0x80)
          return this._createEncoderBuffer(num);
        if (num < 0x100)
          return this._createEncoderBuffer([0, num]);
        var size = 1;
        for (var i = num; i >= 0x100; i >>= 8)
          size++;
        var out = new Array(size);
        for (var i = out.length - 1; i >= 0; i--) {
          out[i] = num & 0xff;
          num >>= 8;
        }
        if (out[0] & 0x80) {
          out.unshift(0);
        }
        return this._createEncoderBuffer(new Buffer(out));
      };
      DERNode.prototype._encodeBool = function encodeBool(value) {
        return this._createEncoderBuffer(value ? 0xff : 0);
      };
      DERNode.prototype._use = function use(entity, obj) {
        if (typeof entity === 'function')
          entity = entity(obj);
        return entity._getEncoder('der').tree;
      };
      DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
        var state = this._baseState;
        var i;
        if (state['default'] === null)
          return false;
        var data = dataBuffer.join();
        if (state.defaultBuffer === undefined)
          state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();
        if (data.length !== state.defaultBuffer.length)
          return false;
        for (i = 0; i < data.length; i++)
          if (data[i] !== state.defaultBuffer[i])
            return false;
        return true;
      };
      function encodeTag(tag, primitive, cls, reporter) {
        var res;
        if (tag === 'seqof')
          tag = 'seq';
        else if (tag === 'setof')
          tag = 'set';
        if (der.tagByName.hasOwnProperty(tag))
          res = der.tagByName[tag];
        else if (typeof tag === 'number' && (tag | 0) === tag)
          res = tag;
        else
          return reporter.error('Unknown tag: ' + tag);
        if (res >= 0x1f)
          return reporter.error('Multi-octet tag encoding unsupported');
        if (!primitive)
          res |= 0x20;
        res |= (der.tagClassByName[cls || 'universal'] << 6);
        return res;
      }
    }, {
      "../../asn1": 1,
      "buffer": 45,
      "inherits": 91
    }],
    13: [function(require, module, exports) {
      var encoders = exports;
      encoders.der = require('./der');
      encoders.pem = require('./pem');
    }, {
      "./der": 12,
      "./pem": 14
    }],
    14: [function(require, module, exports) {
      var inherits = require('inherits');
      var DEREncoder = require('./der');
      function PEMEncoder(entity) {
        DEREncoder.call(this, entity);
        this.enc = 'pem';
      }
      ;
      inherits(PEMEncoder, DEREncoder);
      module.exports = PEMEncoder;
      PEMEncoder.prototype.encode = function encode(data, options) {
        var buf = DEREncoder.prototype.encode.call(this, data);
        var p = buf.toString('base64');
        var out = ['-----BEGIN ' + options.label + '-----'];
        for (var i = 0; i < p.length; i += 64)
          out.push(p.slice(i, i + 64));
        out.push('-----END ' + options.label + '-----');
        return out.join('\n');
      };
    }, {
      "./der": 12,
      "inherits": 91
    }],
    15: [function(require, module, exports) {
      'use strict';
      exports.toByteArray = toByteArray;
      exports.fromByteArray = fromByteArray;
      var lookup = [];
      var revLookup = [];
      var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
      function init() {
        var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
        for (var i = 0,
            len = code.length; i < len; ++i) {
          lookup[i] = code[i];
          revLookup[code.charCodeAt(i)] = i;
        }
        revLookup['-'.charCodeAt(0)] = 62;
        revLookup['_'.charCodeAt(0)] = 63;
      }
      init();
      function toByteArray(b64) {
        var i,
            j,
            l,
            tmp,
            placeHolders,
            arr;
        var len = b64.length;
        if (len % 4 > 0) {
          throw new Error('Invalid string. Length must be a multiple of 4');
        }
        placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
        arr = new Arr(len * 3 / 4 - placeHolders);
        l = placeHolders > 0 ? len - 4 : len;
        var L = 0;
        for (i = 0, j = 0; i < l; i += 4, j += 3) {
          tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];
          arr[L++] = (tmp >> 16) & 0xFF;
          arr[L++] = (tmp >> 8) & 0xFF;
          arr[L++] = tmp & 0xFF;
        }
        if (placeHolders === 2) {
          tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
          arr[L++] = tmp & 0xFF;
        } else if (placeHolders === 1) {
          tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);
          arr[L++] = (tmp >> 8) & 0xFF;
          arr[L++] = tmp & 0xFF;
        }
        return arr;
      }
      function tripletToBase64(num) {
        return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
      }
      function encodeChunk(uint8, start, end) {
        var tmp;
        var output = [];
        for (var i = start; i < end; i += 3) {
          tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
          output.push(tripletToBase64(tmp));
        }
        return output.join('');
      }
      function fromByteArray(uint8) {
        var tmp;
        var len = uint8.length;
        var extraBytes = len % 3;
        var output = '';
        var parts = [];
        var maxChunkLength = 16383;
        for (var i = 0,
            len2 = len - extraBytes; i < len2; i += maxChunkLength) {
          parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
        }
        if (extraBytes === 1) {
          tmp = uint8[len - 1];
          output += lookup[tmp >> 2];
          output += lookup[(tmp << 4) & 0x3F];
          output += '==';
        } else if (extraBytes === 2) {
          tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);
          output += lookup[tmp >> 10];
          output += lookup[(tmp >> 4) & 0x3F];
          output += lookup[(tmp << 2) & 0x3F];
          output += '=';
        }
        parts.push(output);
        return parts.join('');
      }
    }, {}],
    16: [function(require, module, exports) {
      (function(module, exports) {
        'use strict';
        function assert(val, msg) {
          if (!val)
            throw new Error(msg || 'Assertion failed');
        }
        function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
        function BN(number, base, endian) {
          if (BN.isBN(number)) {
            return number;
          }
          this.negative = 0;
          this.words = null;
          this.length = 0;
          this.red = null;
          if (number !== null) {
            if (base === 'le' || base === 'be') {
              endian = base;
              base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
          }
        }
        if (typeof module === 'object') {
          module.exports = BN;
        } else {
          exports.BN = BN;
        }
        BN.BN = BN;
        BN.wordSize = 26;
        var Buffer;
        try {
          Buffer = require('buf' + 'fer').Buffer;
        } catch (e) {}
        BN.isBN = function isBN(num) {
          if (num instanceof BN) {
            return true;
          }
          return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
        };
        BN.max = function max(left, right) {
          if (left.cmp(right) > 0)
            return left;
          return right;
        };
        BN.min = function min(left, right) {
          if (left.cmp(right) < 0)
            return left;
          return right;
        };
        BN.prototype._init = function init(number, base, endian) {
          if (typeof number === 'number') {
            return this._initNumber(number, base, endian);
          }
          if (typeof number === 'object') {
            return this._initArray(number, base, endian);
          }
          if (base === 'hex') {
            base = 16;
          }
          assert(base === (base | 0) && base >= 2 && base <= 36);
          number = number.toString().replace(/\s+/g, '');
          var start = 0;
          if (number[0] === '-') {
            start++;
          }
          if (base === 16) {
            this._parseHex(number, start);
          } else {
            this._parseBase(number, base, start);
          }
          if (number[0] === '-') {
            this.negative = 1;
          }
          this.strip();
          if (endian !== 'le')
            return;
          this._initArray(this.toArray(), base, endian);
        };
        BN.prototype._initNumber = function _initNumber(number, base, endian) {
          if (number < 0) {
            this.negative = 1;
            number = -number;
          }
          if (number < 0x4000000) {
            this.words = [number & 0x3ffffff];
            this.length = 1;
          } else if (number < 0x10000000000000) {
            this.words = [number & 0x3ffffff, (number / 0x4000000) & 0x3ffffff];
            this.length = 2;
          } else {
            assert(number < 0x20000000000000);
            this.words = [number & 0x3ffffff, (number / 0x4000000) & 0x3ffffff, 1];
            this.length = 3;
          }
          if (endian !== 'le')
            return;
          this._initArray(this.toArray(), base, endian);
        };
        BN.prototype._initArray = function _initArray(number, base, endian) {
          assert(typeof number.length === 'number');
          if (number.length <= 0) {
            this.words = [0];
            this.length = 1;
            return this;
          }
          this.length = Math.ceil(number.length / 3);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var j,
              w;
          var off = 0;
          if (endian === 'be') {
            for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
              w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
              this.words[j] |= (w << off) & 0x3ffffff;
              this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
              off += 24;
              if (off >= 26) {
                off -= 26;
                j++;
              }
            }
          } else if (endian === 'le') {
            for (i = 0, j = 0; i < number.length; i += 3) {
              w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
              this.words[j] |= (w << off) & 0x3ffffff;
              this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
              off += 24;
              if (off >= 26) {
                off -= 26;
                j++;
              }
            }
          }
          return this.strip();
        };
        function parseHex(str, start, end) {
          var r = 0;
          var len = Math.min(str.length, end);
          for (var i = start; i < len; i++) {
            var c = str.charCodeAt(i) - 48;
            r <<= 4;
            if (c >= 49 && c <= 54) {
              r |= c - 49 + 0xa;
            } else if (c >= 17 && c <= 22) {
              r |= c - 17 + 0xa;
            } else {
              r |= c & 0xf;
            }
          }
          return r;
        }
        BN.prototype._parseHex = function _parseHex(number, start) {
          this.length = Math.ceil((number.length - start) / 6);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var j,
              w;
          var off = 0;
          for (i = number.length - 6, j = 0; i >= start; i -= 6) {
            w = parseHex(number, i, i + 6);
            this.words[j] |= (w << off) & 0x3ffffff;
            this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
          if (i + 6 !== start) {
            w = parseHex(number, start, i + 6);
            this.words[j] |= (w << off) & 0x3ffffff;
            this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
          }
          this.strip();
        };
        function parseBase(str, start, end, mul) {
          var r = 0;
          var len = Math.min(str.length, end);
          for (var i = start; i < len; i++) {
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            if (c >= 49) {
              r += c - 49 + 0xa;
            } else if (c >= 17) {
              r += c - 17 + 0xa;
            } else {
              r += c;
            }
          }
          return r;
        }
        BN.prototype._parseBase = function _parseBase(number, base, start) {
          this.words = [0];
          this.length = 1;
          for (var limbLen = 0,
              limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
            limbLen++;
          }
          limbLen--;
          limbPow = (limbPow / base) | 0;
          var total = number.length - start;
          var mod = total % limbLen;
          var end = Math.min(total, total - mod) + start;
          var word = 0;
          for (var i = start; i < end; i += limbLen) {
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 0x4000000) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for (i = 0; i < mod; i++) {
              pow *= base;
            }
            this.imuln(pow);
            if (this.words[0] + word < 0x4000000) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
        };
        BN.prototype.copy = function copy(dest) {
          dest.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            dest.words[i] = this.words[i];
          }
          dest.length = this.length;
          dest.negative = this.negative;
          dest.red = this.red;
        };
        BN.prototype.clone = function clone() {
          var r = new BN(null);
          this.copy(r);
          return r;
        };
        BN.prototype._expand = function _expand(size) {
          while (this.length < size) {
            this.words[this.length++] = 0;
          }
          return this;
        };
        BN.prototype.strip = function strip() {
          while (this.length > 1 && this.words[this.length - 1] === 0) {
            this.length--;
          }
          return this._normSign();
        };
        BN.prototype._normSign = function _normSign() {
          if (this.length === 1 && this.words[0] === 0) {
            this.negative = 0;
          }
          return this;
        };
        BN.prototype.inspect = function inspect() {
          return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
        };
        var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];
        var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];
        var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
        BN.prototype.toString = function toString(base, padding) {
          base = base || 10;
          padding = padding | 0 || 1;
          var out;
          if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for (var i = 0; i < this.length; i++) {
              var w = this.words[i];
              var word = (((w << off) | carry) & 0xffffff).toString(16);
              carry = (w >>> (24 - off)) & 0xffffff;
              if (carry !== 0 || i !== this.length - 1) {
                out = zeros[6 - word.length] + word + out;
              } else {
                out = word + out;
              }
              off += 2;
              if (off >= 26) {
                off -= 26;
                i--;
              }
            }
            if (carry !== 0) {
              out = carry.toString(16) + out;
            }
            while (out.length % padding !== 0) {
              out = '0' + out;
            }
            if (this.negative !== 0) {
              out = '-' + out;
            }
            return out;
          }
          if (base === (base | 0) && base >= 2 && base <= 36) {
            var groupSize = groupSizes[base];
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while (!c.isZero()) {
              var r = c.modn(groupBase).toString(base);
              c = c.idivn(groupBase);
              if (!c.isZero()) {
                out = zeros[groupSize - r.length] + r + out;
              } else {
                out = r + out;
              }
            }
            if (this.isZero()) {
              out = '0' + out;
            }
            while (out.length % padding !== 0) {
              out = '0' + out;
            }
            if (this.negative !== 0) {
              out = '-' + out;
            }
            return out;
          }
          assert(false, 'Base should be between 2 and 36');
        };
        BN.prototype.toNumber = function toNumber() {
          var ret = this.words[0];
          if (this.length === 2) {
            ret += this.words[1] * 0x4000000;
          } else if (this.length === 3 && this.words[2] === 0x01) {
            ret += 0x10000000000000 + (this.words[1] * 0x4000000);
          } else if (this.length > 2) {
            assert(false, 'Number can only safely store up to 53 bits');
          }
          return (this.negative !== 0) ? -ret : ret;
        };
        BN.prototype.toJSON = function toJSON() {
          return this.toString(16);
        };
        BN.prototype.toBuffer = function toBuffer(endian, length) {
          assert(typeof Buffer !== 'undefined');
          return this.toArrayLike(Buffer, endian, length);
        };
        BN.prototype.toArray = function toArray(endian, length) {
          return this.toArrayLike(Array, endian, length);
        };
        BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
          var byteLength = this.byteLength();
          var reqLength = length || Math.max(1, byteLength);
          assert(byteLength <= reqLength, 'byte array longer than desired length');
          assert(reqLength > 0, 'Requested array length <= 0');
          this.strip();
          var littleEndian = endian === 'le';
          var res = new ArrayType(reqLength);
          var b,
              i;
          var q = this.clone();
          if (!littleEndian) {
            for (i = 0; i < reqLength - byteLength; i++) {
              res[i] = 0;
            }
            for (i = 0; !q.isZero(); i++) {
              b = q.andln(0xff);
              q.iushrn(8);
              res[reqLength - i - 1] = b;
            }
          } else {
            for (i = 0; !q.isZero(); i++) {
              b = q.andln(0xff);
              q.iushrn(8);
              res[i] = b;
            }
            for (; i < reqLength; i++) {
              res[i] = 0;
            }
          }
          return res;
        };
        if (Math.clz32) {
          BN.prototype._countBits = function _countBits(w) {
            return 32 - Math.clz32(w);
          };
        } else {
          BN.prototype._countBits = function _countBits(w) {
            var t = w;
            var r = 0;
            if (t >= 0x1000) {
              r += 13;
              t >>>= 13;
            }
            if (t >= 0x40) {
              r += 7;
              t >>>= 7;
            }
            if (t >= 0x8) {
              r += 4;
              t >>>= 4;
            }
            if (t >= 0x02) {
              r += 2;
              t >>>= 2;
            }
            return r + t;
          };
        }
        BN.prototype._zeroBits = function _zeroBits(w) {
          if (w === 0)
            return 26;
          var t = w;
          var r = 0;
          if ((t & 0x1fff) === 0) {
            r += 13;
            t >>>= 13;
          }
          if ((t & 0x7f) === 0) {
            r += 7;
            t >>>= 7;
          }
          if ((t & 0xf) === 0) {
            r += 4;
            t >>>= 4;
          }
          if ((t & 0x3) === 0) {
            r += 2;
            t >>>= 2;
          }
          if ((t & 0x1) === 0) {
            r++;
          }
          return r;
        };
        BN.prototype.bitLength = function bitLength() {
          var w = this.words[this.length - 1];
          var hi = this._countBits(w);
          return (this.length - 1) * 26 + hi;
        };
        function toBitArray(num) {
          var w = new Array(num.bitLength());
          for (var bit = 0; bit < w.length; bit++) {
            var off = (bit / 26) | 0;
            var wbit = bit % 26;
            w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
          }
          return w;
        }
        BN.prototype.zeroBits = function zeroBits() {
          if (this.isZero())
            return 0;
          var r = 0;
          for (var i = 0; i < this.length; i++) {
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26)
              break;
          }
          return r;
        };
        BN.prototype.byteLength = function byteLength() {
          return Math.ceil(this.bitLength() / 8);
        };
        BN.prototype.toTwos = function toTwos(width) {
          if (this.negative !== 0) {
            return this.abs().inotn(width).iaddn(1);
          }
          return this.clone();
        };
        BN.prototype.fromTwos = function fromTwos(width) {
          if (this.testn(width - 1)) {
            return this.notn(width).iaddn(1).ineg();
          }
          return this.clone();
        };
        BN.prototype.isNeg = function isNeg() {
          return this.negative !== 0;
        };
        BN.prototype.neg = function neg() {
          return this.clone().ineg();
        };
        BN.prototype.ineg = function ineg() {
          if (!this.isZero()) {
            this.negative ^= 1;
          }
          return this;
        };
        BN.prototype.iuor = function iuor(num) {
          while (this.length < num.length) {
            this.words[this.length++] = 0;
          }
          for (var i = 0; i < num.length; i++) {
            this.words[i] = this.words[i] | num.words[i];
          }
          return this.strip();
        };
        BN.prototype.ior = function ior(num) {
          assert((this.negative | num.negative) === 0);
          return this.iuor(num);
        };
        BN.prototype.or = function or(num) {
          if (this.length > num.length)
            return this.clone().ior(num);
          return num.clone().ior(this);
        };
        BN.prototype.uor = function uor(num) {
          if (this.length > num.length)
            return this.clone().iuor(num);
          return num.clone().iuor(this);
        };
        BN.prototype.iuand = function iuand(num) {
          var b;
          if (this.length > num.length) {
            b = num;
          } else {
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = this.words[i] & num.words[i];
          }
          this.length = b.length;
          return this.strip();
        };
        BN.prototype.iand = function iand(num) {
          assert((this.negative | num.negative) === 0);
          return this.iuand(num);
        };
        BN.prototype.and = function and(num) {
          if (this.length > num.length)
            return this.clone().iand(num);
          return num.clone().iand(this);
        };
        BN.prototype.uand = function uand(num) {
          if (this.length > num.length)
            return this.clone().iuand(num);
          return num.clone().iuand(this);
        };
        BN.prototype.iuxor = function iuxor(num) {
          var a;
          var b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = a.words[i] ^ b.words[i];
          }
          if (this !== a) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = a.length;
          return this.strip();
        };
        BN.prototype.ixor = function ixor(num) {
          assert((this.negative | num.negative) === 0);
          return this.iuxor(num);
        };
        BN.prototype.xor = function xor(num) {
          if (this.length > num.length)
            return this.clone().ixor(num);
          return num.clone().ixor(this);
        };
        BN.prototype.uxor = function uxor(num) {
          if (this.length > num.length)
            return this.clone().iuxor(num);
          return num.clone().iuxor(this);
        };
        BN.prototype.inotn = function inotn(width) {
          assert(typeof width === 'number' && width >= 0);
          var bytesNeeded = Math.ceil(width / 26) | 0;
          var bitsLeft = width % 26;
          this._expand(bytesNeeded);
          if (bitsLeft > 0) {
            bytesNeeded--;
          }
          for (var i = 0; i < bytesNeeded; i++) {
            this.words[i] = ~this.words[i] & 0x3ffffff;
          }
          if (bitsLeft > 0) {
            this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
          }
          return this.strip();
        };
        BN.prototype.notn = function notn(width) {
          return this.clone().inotn(width);
        };
        BN.prototype.setn = function setn(bit, val) {
          assert(typeof bit === 'number' && bit >= 0);
          var off = (bit / 26) | 0;
          var wbit = bit % 26;
          this._expand(off + 1);
          if (val) {
            this.words[off] = this.words[off] | (1 << wbit);
          } else {
            this.words[off] = this.words[off] & ~(1 << wbit);
          }
          return this.strip();
        };
        BN.prototype.iadd = function iadd(num) {
          var r;
          if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
          } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
          }
          var a,
              b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
          }
          this.length = a.length;
          if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
          } else if (a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          return this;
        };
        BN.prototype.add = function add(num) {
          var res;
          if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
          } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
          }
          if (this.length > num.length)
            return this.clone().iadd(num);
          return num.clone().iadd(this);
        };
        BN.prototype.isub = function isub(num) {
          if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
          } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
          }
          var cmp = this.cmp(num);
          if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
          }
          var a,
              b;
          if (cmp > 0) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
          }
          if (carry === 0 && i < a.length && a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = Math.max(this.length, i);
          if (a !== this) {
            this.negative = 1;
          }
          return this.strip();
        };
        BN.prototype.sub = function sub(num) {
          return this.clone().isub(num);
        };
        function smallMulTo(self, num, out) {
          out.negative = num.negative ^ self.negative;
          var len = (self.length + num.length) | 0;
          out.length = len;
          len = (len - 1) | 0;
          var a = self.words[0] | 0;
          var b = num.words[0] | 0;
          var r = a * b;
          var lo = r & 0x3ffffff;
          var carry = (r / 0x4000000) | 0;
          out.words[0] = lo;
          for (var k = 1; k < len; k++) {
            var ncarry = carry >>> 26;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
              var i = (k - j) | 0;
              a = self.words[i] | 0;
              b = num.words[j] | 0;
              r = a * b + rword;
              ncarry += (r / 0x4000000) | 0;
              rword = r & 0x3ffffff;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
          }
          if (carry !== 0) {
            out.words[k] = carry | 0;
          } else {
            out.length--;
          }
          return out.strip();
        }
        var comb10MulTo = function comb10MulTo(self, num, out) {
          var a = self.words;
          var b = num.words;
          var o = out.words;
          var c = 0;
          var lo;
          var mid;
          var hi;
          var a0 = a[0] | 0;
          var al0 = a0 & 0x1fff;
          var ah0 = a0 >>> 13;
          var a1 = a[1] | 0;
          var al1 = a1 & 0x1fff;
          var ah1 = a1 >>> 13;
          var a2 = a[2] | 0;
          var al2 = a2 & 0x1fff;
          var ah2 = a2 >>> 13;
          var a3 = a[3] | 0;
          var al3 = a3 & 0x1fff;
          var ah3 = a3 >>> 13;
          var a4 = a[4] | 0;
          var al4 = a4 & 0x1fff;
          var ah4 = a4 >>> 13;
          var a5 = a[5] | 0;
          var al5 = a5 & 0x1fff;
          var ah5 = a5 >>> 13;
          var a6 = a[6] | 0;
          var al6 = a6 & 0x1fff;
          var ah6 = a6 >>> 13;
          var a7 = a[7] | 0;
          var al7 = a7 & 0x1fff;
          var ah7 = a7 >>> 13;
          var a8 = a[8] | 0;
          var al8 = a8 & 0x1fff;
          var ah8 = a8 >>> 13;
          var a9 = a[9] | 0;
          var al9 = a9 & 0x1fff;
          var ah9 = a9 >>> 13;
          var b0 = b[0] | 0;
          var bl0 = b0 & 0x1fff;
          var bh0 = b0 >>> 13;
          var b1 = b[1] | 0;
          var bl1 = b1 & 0x1fff;
          var bh1 = b1 >>> 13;
          var b2 = b[2] | 0;
          var bl2 = b2 & 0x1fff;
          var bh2 = b2 >>> 13;
          var b3 = b[3] | 0;
          var bl3 = b3 & 0x1fff;
          var bh3 = b3 >>> 13;
          var b4 = b[4] | 0;
          var bl4 = b4 & 0x1fff;
          var bh4 = b4 >>> 13;
          var b5 = b[5] | 0;
          var bl5 = b5 & 0x1fff;
          var bh5 = b5 >>> 13;
          var b6 = b[6] | 0;
          var bl6 = b6 & 0x1fff;
          var bh6 = b6 >>> 13;
          var b7 = b[7] | 0;
          var bl7 = b7 & 0x1fff;
          var bh7 = b7 >>> 13;
          var b8 = b[8] | 0;
          var bl8 = b8 & 0x1fff;
          var bh8 = b8 >>> 13;
          var b9 = b[9] | 0;
          var bl9 = b9 & 0x1fff;
          var bh9 = b9 >>> 13;
          out.negative = self.negative ^ num.negative;
          out.length = 19;
          lo = Math.imul(al0, bl0);
          mid = Math.imul(al0, bh0);
          mid = (mid + Math.imul(ah0, bl0)) | 0;
          hi = Math.imul(ah0, bh0);
          var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
          w0 &= 0x3ffffff;
          lo = Math.imul(al1, bl0);
          mid = Math.imul(al1, bh0);
          mid = (mid + Math.imul(ah1, bl0)) | 0;
          hi = Math.imul(ah1, bh0);
          lo = (lo + Math.imul(al0, bl1)) | 0;
          mid = (mid + Math.imul(al0, bh1)) | 0;
          mid = (mid + Math.imul(ah0, bl1)) | 0;
          hi = (hi + Math.imul(ah0, bh1)) | 0;
          var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
          w1 &= 0x3ffffff;
          lo = Math.imul(al2, bl0);
          mid = Math.imul(al2, bh0);
          mid = (mid + Math.imul(ah2, bl0)) | 0;
          hi = Math.imul(ah2, bh0);
          lo = (lo + Math.imul(al1, bl1)) | 0;
          mid = (mid + Math.imul(al1, bh1)) | 0;
          mid = (mid + Math.imul(ah1, bl1)) | 0;
          hi = (hi + Math.imul(ah1, bh1)) | 0;
          lo = (lo + Math.imul(al0, bl2)) | 0;
          mid = (mid + Math.imul(al0, bh2)) | 0;
          mid = (mid + Math.imul(ah0, bl2)) | 0;
          hi = (hi + Math.imul(ah0, bh2)) | 0;
          var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
          w2 &= 0x3ffffff;
          lo = Math.imul(al3, bl0);
          mid = Math.imul(al3, bh0);
          mid = (mid + Math.imul(ah3, bl0)) | 0;
          hi = Math.imul(ah3, bh0);
          lo = (lo + Math.imul(al2, bl1)) | 0;
          mid = (mid + Math.imul(al2, bh1)) | 0;
          mid = (mid + Math.imul(ah2, bl1)) | 0;
          hi = (hi + Math.imul(ah2, bh1)) | 0;
          lo = (lo + Math.imul(al1, bl2)) | 0;
          mid = (mid + Math.imul(al1, bh2)) | 0;
          mid = (mid + Math.imul(ah1, bl2)) | 0;
          hi = (hi + Math.imul(ah1, bh2)) | 0;
          lo = (lo + Math.imul(al0, bl3)) | 0;
          mid = (mid + Math.imul(al0, bh3)) | 0;
          mid = (mid + Math.imul(ah0, bl3)) | 0;
          hi = (hi + Math.imul(ah0, bh3)) | 0;
          var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
          w3 &= 0x3ffffff;
          lo = Math.imul(al4, bl0);
          mid = Math.imul(al4, bh0);
          mid = (mid + Math.imul(ah4, bl0)) | 0;
          hi = Math.imul(ah4, bh0);
          lo = (lo + Math.imul(al3, bl1)) | 0;
          mid = (mid + Math.imul(al3, bh1)) | 0;
          mid = (mid + Math.imul(ah3, bl1)) | 0;
          hi = (hi + Math.imul(ah3, bh1)) | 0;
          lo = (lo + Math.imul(al2, bl2)) | 0;
          mid = (mid + Math.imul(al2, bh2)) | 0;
          mid = (mid + Math.imul(ah2, bl2)) | 0;
          hi = (hi + Math.imul(ah2, bh2)) | 0;
          lo = (lo + Math.imul(al1, bl3)) | 0;
          mid = (mid + Math.imul(al1, bh3)) | 0;
          mid = (mid + Math.imul(ah1, bl3)) | 0;
          hi = (hi + Math.imul(ah1, bh3)) | 0;
          lo = (lo + Math.imul(al0, bl4)) | 0;
          mid = (mid + Math.imul(al0, bh4)) | 0;
          mid = (mid + Math.imul(ah0, bl4)) | 0;
          hi = (hi + Math.imul(ah0, bh4)) | 0;
          var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
          w4 &= 0x3ffffff;
          lo = Math.imul(al5, bl0);
          mid = Math.imul(al5, bh0);
          mid = (mid + Math.imul(ah5, bl0)) | 0;
          hi = Math.imul(ah5, bh0);
          lo = (lo + Math.imul(al4, bl1)) | 0;
          mid = (mid + Math.imul(al4, bh1)) | 0;
          mid = (mid + Math.imul(ah4, bl1)) | 0;
          hi = (hi + Math.imul(ah4, bh1)) | 0;
          lo = (lo + Math.imul(al3, bl2)) | 0;
          mid = (mid + Math.imul(al3, bh2)) | 0;
          mid = (mid + Math.imul(ah3, bl2)) | 0;
          hi = (hi + Math.imul(ah3, bh2)) | 0;
          lo = (lo + Math.imul(al2, bl3)) | 0;
          mid = (mid + Math.imul(al2, bh3)) | 0;
          mid = (mid + Math.imul(ah2, bl3)) | 0;
          hi = (hi + Math.imul(ah2, bh3)) | 0;
          lo = (lo + Math.imul(al1, bl4)) | 0;
          mid = (mid + Math.imul(al1, bh4)) | 0;
          mid = (mid + Math.imul(ah1, bl4)) | 0;
          hi = (hi + Math.imul(ah1, bh4)) | 0;
          lo = (lo + Math.imul(al0, bl5)) | 0;
          mid = (mid + Math.imul(al0, bh5)) | 0;
          mid = (mid + Math.imul(ah0, bl5)) | 0;
          hi = (hi + Math.imul(ah0, bh5)) | 0;
          var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
          w5 &= 0x3ffffff;
          lo = Math.imul(al6, bl0);
          mid = Math.imul(al6, bh0);
          mid = (mid + Math.imul(ah6, bl0)) | 0;
          hi = Math.imul(ah6, bh0);
          lo = (lo + Math.imul(al5, bl1)) | 0;
          mid = (mid + Math.imul(al5, bh1)) | 0;
          mid = (mid + Math.imul(ah5, bl1)) | 0;
          hi = (hi + Math.imul(ah5, bh1)) | 0;
          lo = (lo + Math.imul(al4, bl2)) | 0;
          mid = (mid + Math.imul(al4, bh2)) | 0;
          mid = (mid + Math.imul(ah4, bl2)) | 0;
          hi = (hi + Math.imul(ah4, bh2)) | 0;
          lo = (lo + Math.imul(al3, bl3)) | 0;
          mid = (mid + Math.imul(al3, bh3)) | 0;
          mid = (mid + Math.imul(ah3, bl3)) | 0;
          hi = (hi + Math.imul(ah3, bh3)) | 0;
          lo = (lo + Math.imul(al2, bl4)) | 0;
          mid = (mid + Math.imul(al2, bh4)) | 0;
          mid = (mid + Math.imul(ah2, bl4)) | 0;
          hi = (hi + Math.imul(ah2, bh4)) | 0;
          lo = (lo + Math.imul(al1, bl5)) | 0;
          mid = (mid + Math.imul(al1, bh5)) | 0;
          mid = (mid + Math.imul(ah1, bl5)) | 0;
          hi = (hi + Math.imul(ah1, bh5)) | 0;
          lo = (lo + Math.imul(al0, bl6)) | 0;
          mid = (mid + Math.imul(al0, bh6)) | 0;
          mid = (mid + Math.imul(ah0, bl6)) | 0;
          hi = (hi + Math.imul(ah0, bh6)) | 0;
          var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
          w6 &= 0x3ffffff;
          lo = Math.imul(al7, bl0);
          mid = Math.imul(al7, bh0);
          mid = (mid + Math.imul(ah7, bl0)) | 0;
          hi = Math.imul(ah7, bh0);
          lo = (lo + Math.imul(al6, bl1)) | 0;
          mid = (mid + Math.imul(al6, bh1)) | 0;
          mid = (mid + Math.imul(ah6, bl1)) | 0;
          hi = (hi + Math.imul(ah6, bh1)) | 0;
          lo = (lo + Math.imul(al5, bl2)) | 0;
          mid = (mid + Math.imul(al5, bh2)) | 0;
          mid = (mid + Math.imul(ah5, bl2)) | 0;
          hi = (hi + Math.imul(ah5, bh2)) | 0;
          lo = (lo + Math.imul(al4, bl3)) | 0;
          mid = (mid + Math.imul(al4, bh3)) | 0;
          mid = (mid + Math.imul(ah4, bl3)) | 0;
          hi = (hi + Math.imul(ah4, bh3)) | 0;
          lo = (lo + Math.imul(al3, bl4)) | 0;
          mid = (mid + Math.imul(al3, bh4)) | 0;
          mid = (mid + Math.imul(ah3, bl4)) | 0;
          hi = (hi + Math.imul(ah3, bh4)) | 0;
          lo = (lo + Math.imul(al2, bl5)) | 0;
          mid = (mid + Math.imul(al2, bh5)) | 0;
          mid = (mid + Math.imul(ah2, bl5)) | 0;
          hi = (hi + Math.imul(ah2, bh5)) | 0;
          lo = (lo + Math.imul(al1, bl6)) | 0;
          mid = (mid + Math.imul(al1, bh6)) | 0;
          mid = (mid + Math.imul(ah1, bl6)) | 0;
          hi = (hi + Math.imul(ah1, bh6)) | 0;
          lo = (lo + Math.imul(al0, bl7)) | 0;
          mid = (mid + Math.imul(al0, bh7)) | 0;
          mid = (mid + Math.imul(ah0, bl7)) | 0;
          hi = (hi + Math.imul(ah0, bh7)) | 0;
          var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
          w7 &= 0x3ffffff;
          lo = Math.imul(al8, bl0);
          mid = Math.imul(al8, bh0);
          mid = (mid + Math.imul(ah8, bl0)) | 0;
          hi = Math.imul(ah8, bh0);
          lo = (lo + Math.imul(al7, bl1)) | 0;
          mid = (mid + Math.imul(al7, bh1)) | 0;
          mid = (mid + Math.imul(ah7, bl1)) | 0;
          hi = (hi + Math.imul(ah7, bh1)) | 0;
          lo = (lo + Math.imul(al6, bl2)) | 0;
          mid = (mid + Math.imul(al6, bh2)) | 0;
          mid = (mid + Math.imul(ah6, bl2)) | 0;
          hi = (hi + Math.imul(ah6, bh2)) | 0;
          lo = (lo + Math.imul(al5, bl3)) | 0;
          mid = (mid + Math.imul(al5, bh3)) | 0;
          mid = (mid + Math.imul(ah5, bl3)) | 0;
          hi = (hi + Math.imul(ah5, bh3)) | 0;
          lo = (lo + Math.imul(al4, bl4)) | 0;
          mid = (mid + Math.imul(al4, bh4)) | 0;
          mid = (mid + Math.imul(ah4, bl4)) | 0;
          hi = (hi + Math.imul(ah4, bh4)) | 0;
          lo = (lo + Math.imul(al3, bl5)) | 0;
          mid = (mid + Math.imul(al3, bh5)) | 0;
          mid = (mid + Math.imul(ah3, bl5)) | 0;
          hi = (hi + Math.imul(ah3, bh5)) | 0;
          lo = (lo + Math.imul(al2, bl6)) | 0;
          mid = (mid + Math.imul(al2, bh6)) | 0;
          mid = (mid + Math.imul(ah2, bl6)) | 0;
          hi = (hi + Math.imul(ah2, bh6)) | 0;
          lo = (lo + Math.imul(al1, bl7)) | 0;
          mid = (mid + Math.imul(al1, bh7)) | 0;
          mid = (mid + Math.imul(ah1, bl7)) | 0;
          hi = (hi + Math.imul(ah1, bh7)) | 0;
          lo = (lo + Math.imul(al0, bl8)) | 0;
          mid = (mid + Math.imul(al0, bh8)) | 0;
          mid = (mid + Math.imul(ah0, bl8)) | 0;
          hi = (hi + Math.imul(ah0, bh8)) | 0;
          var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
          w8 &= 0x3ffffff;
          lo = Math.imul(al9, bl0);
          mid = Math.imul(al9, bh0);
          mid = (mid + Math.imul(ah9, bl0)) | 0;
          hi = Math.imul(ah9, bh0);
          lo = (lo + Math.imul(al8, bl1)) | 0;
          mid = (mid + Math.imul(al8, bh1)) | 0;
          mid = (mid + Math.imul(ah8, bl1)) | 0;
          hi = (hi + Math.imul(ah8, bh1)) | 0;
          lo = (lo + Math.imul(al7, bl2)) | 0;
          mid = (mid + Math.imul(al7, bh2)) | 0;
          mid = (mid + Math.imul(ah7, bl2)) | 0;
          hi = (hi + Math.imul(ah7, bh2)) | 0;
          lo = (lo + Math.imul(al6, bl3)) | 0;
          mid = (mid + Math.imul(al6, bh3)) | 0;
          mid = (mid + Math.imul(ah6, bl3)) | 0;
          hi = (hi + Math.imul(ah6, bh3)) | 0;
          lo = (lo + Math.imul(al5, bl4)) | 0;
          mid = (mid + Math.imul(al5, bh4)) | 0;
          mid = (mid + Math.imul(ah5, bl4)) | 0;
          hi = (hi + Math.imul(ah5, bh4)) | 0;
          lo = (lo + Math.imul(al4, bl5)) | 0;
          mid = (mid + Math.imul(al4, bh5)) | 0;
          mid = (mid + Math.imul(ah4, bl5)) | 0;
          hi = (hi + Math.imul(ah4, bh5)) | 0;
          lo = (lo + Math.imul(al3, bl6)) | 0;
          mid = (mid + Math.imul(al3, bh6)) | 0;
          mid = (mid + Math.imul(ah3, bl6)) | 0;
          hi = (hi + Math.imul(ah3, bh6)) | 0;
          lo = (lo + Math.imul(al2, bl7)) | 0;
          mid = (mid + Math.imul(al2, bh7)) | 0;
          mid = (mid + Math.imul(ah2, bl7)) | 0;
          hi = (hi + Math.imul(ah2, bh7)) | 0;
          lo = (lo + Math.imul(al1, bl8)) | 0;
          mid = (mid + Math.imul(al1, bh8)) | 0;
          mid = (mid + Math.imul(ah1, bl8)) | 0;
          hi = (hi + Math.imul(ah1, bh8)) | 0;
          lo = (lo + Math.imul(al0, bl9)) | 0;
          mid = (mid + Math.imul(al0, bh9)) | 0;
          mid = (mid + Math.imul(ah0, bl9)) | 0;
          hi = (hi + Math.imul(ah0, bh9)) | 0;
          var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
          w9 &= 0x3ffffff;
          lo = Math.imul(al9, bl1);
          mid = Math.imul(al9, bh1);
          mid = (mid + Math.imul(ah9, bl1)) | 0;
          hi = Math.imul(ah9, bh1);
          lo = (lo + Math.imul(al8, bl2)) | 0;
          mid = (mid + Math.imul(al8, bh2)) | 0;
          mid = (mid + Math.imul(ah8, bl2)) | 0;
          hi = (hi + Math.imul(ah8, bh2)) | 0;
          lo = (lo + Math.imul(al7, bl3)) | 0;
          mid = (mid + Math.imul(al7, bh3)) | 0;
          mid = (mid + Math.imul(ah7, bl3)) | 0;
          hi = (hi + Math.imul(ah7, bh3)) | 0;
          lo = (lo + Math.imul(al6, bl4)) | 0;
          mid = (mid + Math.imul(al6, bh4)) | 0;
          mid = (mid + Math.imul(ah6, bl4)) | 0;
          hi = (hi + Math.imul(ah6, bh4)) | 0;
          lo = (lo + Math.imul(al5, bl5)) | 0;
          mid = (mid + Math.imul(al5, bh5)) | 0;
          mid = (mid + Math.imul(ah5, bl5)) | 0;
          hi = (hi + Math.imul(ah5, bh5)) | 0;
          lo = (lo + Math.imul(al4, bl6)) | 0;
          mid = (mid + Math.imul(al4, bh6)) | 0;
          mid = (mid + Math.imul(ah4, bl6)) | 0;
          hi = (hi + Math.imul(ah4, bh6)) | 0;
          lo = (lo + Math.imul(al3, bl7)) | 0;
          mid = (mid + Math.imul(al3, bh7)) | 0;
          mid = (mid + Math.imul(ah3, bl7)) | 0;
          hi = (hi + Math.imul(ah3, bh7)) | 0;
          lo = (lo + Math.imul(al2, bl8)) | 0;
          mid = (mid + Math.imul(al2, bh8)) | 0;
          mid = (mid + Math.imul(ah2, bl8)) | 0;
          hi = (hi + Math.imul(ah2, bh8)) | 0;
          lo = (lo + Math.imul(al1, bl9)) | 0;
          mid = (mid + Math.imul(al1, bh9)) | 0;
          mid = (mid + Math.imul(ah1, bl9)) | 0;
          hi = (hi + Math.imul(ah1, bh9)) | 0;
          var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
          w10 &= 0x3ffffff;
          lo = Math.imul(al9, bl2);
          mid = Math.imul(al9, bh2);
          mid = (mid + Math.imul(ah9, bl2)) | 0;
          hi = Math.imul(ah9, bh2);
          lo = (lo + Math.imul(al8, bl3)) | 0;
          mid = (mid + Math.imul(al8, bh3)) | 0;
          mid = (mid + Math.imul(ah8, bl3)) | 0;
          hi = (hi + Math.imul(ah8, bh3)) | 0;
          lo = (lo + Math.imul(al7, bl4)) | 0;
          mid = (mid + Math.imul(al7, bh4)) | 0;
          mid = (mid + Math.imul(ah7, bl4)) | 0;
          hi = (hi + Math.imul(ah7, bh4)) | 0;
          lo = (lo + Math.imul(al6, bl5)) | 0;
          mid = (mid + Math.imul(al6, bh5)) | 0;
          mid = (mid + Math.imul(ah6, bl5)) | 0;
          hi = (hi + Math.imul(ah6, bh5)) | 0;
          lo = (lo + Math.imul(al5, bl6)) | 0;
          mid = (mid + Math.imul(al5, bh6)) | 0;
          mid = (mid + Math.imul(ah5, bl6)) | 0;
          hi = (hi + Math.imul(ah5, bh6)) | 0;
          lo = (lo + Math.imul(al4, bl7)) | 0;
          mid = (mid + Math.imul(al4, bh7)) | 0;
          mid = (mid + Math.imul(ah4, bl7)) | 0;
          hi = (hi + Math.imul(ah4, bh7)) | 0;
          lo = (lo + Math.imul(al3, bl8)) | 0;
          mid = (mid + Math.imul(al3, bh8)) | 0;
          mid = (mid + Math.imul(ah3, bl8)) | 0;
          hi = (hi + Math.imul(ah3, bh8)) | 0;
          lo = (lo + Math.imul(al2, bl9)) | 0;
          mid = (mid + Math.imul(al2, bh9)) | 0;
          mid = (mid + Math.imul(ah2, bl9)) | 0;
          hi = (hi + Math.imul(ah2, bh9)) | 0;
          var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
          w11 &= 0x3ffffff;
          lo = Math.imul(al9, bl3);
          mid = Math.imul(al9, bh3);
          mid = (mid + Math.imul(ah9, bl3)) | 0;
          hi = Math.imul(ah9, bh3);
          lo = (lo + Math.imul(al8, bl4)) | 0;
          mid = (mid + Math.imul(al8, bh4)) | 0;
          mid = (mid + Math.imul(ah8, bl4)) | 0;
          hi = (hi + Math.imul(ah8, bh4)) | 0;
          lo = (lo + Math.imul(al7, bl5)) | 0;
          mid = (mid + Math.imul(al7, bh5)) | 0;
          mid = (mid + Math.imul(ah7, bl5)) | 0;
          hi = (hi + Math.imul(ah7, bh5)) | 0;
          lo = (lo + Math.imul(al6, bl6)) | 0;
          mid = (mid + Math.imul(al6, bh6)) | 0;
          mid = (mid + Math.imul(ah6, bl6)) | 0;
          hi = (hi + Math.imul(ah6, bh6)) | 0;
          lo = (lo + Math.imul(al5, bl7)) | 0;
          mid = (mid + Math.imul(al5, bh7)) | 0;
          mid = (mid + Math.imul(ah5, bl7)) | 0;
          hi = (hi + Math.imul(ah5, bh7)) | 0;
          lo = (lo + Math.imul(al4, bl8)) | 0;
          mid = (mid + Math.imul(al4, bh8)) | 0;
          mid = (mid + Math.imul(ah4, bl8)) | 0;
          hi = (hi + Math.imul(ah4, bh8)) | 0;
          lo = (lo + Math.imul(al3, bl9)) | 0;
          mid = (mid + Math.imul(al3, bh9)) | 0;
          mid = (mid + Math.imul(ah3, bl9)) | 0;
          hi = (hi + Math.imul(ah3, bh9)) | 0;
          var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
          w12 &= 0x3ffffff;
          lo = Math.imul(al9, bl4);
          mid = Math.imul(al9, bh4);
          mid = (mid + Math.imul(ah9, bl4)) | 0;
          hi = Math.imul(ah9, bh4);
          lo = (lo + Math.imul(al8, bl5)) | 0;
          mid = (mid + Math.imul(al8, bh5)) | 0;
          mid = (mid + Math.imul(ah8, bl5)) | 0;
          hi = (hi + Math.imul(ah8, bh5)) | 0;
          lo = (lo + Math.imul(al7, bl6)) | 0;
          mid = (mid + Math.imul(al7, bh6)) | 0;
          mid = (mid + Math.imul(ah7, bl6)) | 0;
          hi = (hi + Math.imul(ah7, bh6)) | 0;
          lo = (lo + Math.imul(al6, bl7)) | 0;
          mid = (mid + Math.imul(al6, bh7)) | 0;
          mid = (mid + Math.imul(ah6, bl7)) | 0;
          hi = (hi + Math.imul(ah6, bh7)) | 0;
          lo = (lo + Math.imul(al5, bl8)) | 0;
          mid = (mid + Math.imul(al5, bh8)) | 0;
          mid = (mid + Math.imul(ah5, bl8)) | 0;
          hi = (hi + Math.imul(ah5, bh8)) | 0;
          lo = (lo + Math.imul(al4, bl9)) | 0;
          mid = (mid + Math.imul(al4, bh9)) | 0;
          mid = (mid + Math.imul(ah4, bl9)) | 0;
          hi = (hi + Math.imul(ah4, bh9)) | 0;
          var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
          w13 &= 0x3ffffff;
          lo = Math.imul(al9, bl5);
          mid = Math.imul(al9, bh5);
          mid = (mid + Math.imul(ah9, bl5)) | 0;
          hi = Math.imul(ah9, bh5);
          lo = (lo + Math.imul(al8, bl6)) | 0;
          mid = (mid + Math.imul(al8, bh6)) | 0;
          mid = (mid + Math.imul(ah8, bl6)) | 0;
          hi = (hi + Math.imul(ah8, bh6)) | 0;
          lo = (lo + Math.imul(al7, bl7)) | 0;
          mid = (mid + Math.imul(al7, bh7)) | 0;
          mid = (mid + Math.imul(ah7, bl7)) | 0;
          hi = (hi + Math.imul(ah7, bh7)) | 0;
          lo = (lo + Math.imul(al6, bl8)) | 0;
          mid = (mid + Math.imul(al6, bh8)) | 0;
          mid = (mid + Math.imul(ah6, bl8)) | 0;
          hi = (hi + Math.imul(ah6, bh8)) | 0;
          lo = (lo + Math.imul(al5, bl9)) | 0;
          mid = (mid + Math.imul(al5, bh9)) | 0;
          mid = (mid + Math.imul(ah5, bl9)) | 0;
          hi = (hi + Math.imul(ah5, bh9)) | 0;
          var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
          w14 &= 0x3ffffff;
          lo = Math.imul(al9, bl6);
          mid = Math.imul(al9, bh6);
          mid = (mid + Math.imul(ah9, bl6)) | 0;
          hi = Math.imul(ah9, bh6);
          lo = (lo + Math.imul(al8, bl7)) | 0;
          mid = (mid + Math.imul(al8, bh7)) | 0;
          mid = (mid + Math.imul(ah8, bl7)) | 0;
          hi = (hi + Math.imul(ah8, bh7)) | 0;
          lo = (lo + Math.imul(al7, bl8)) | 0;
          mid = (mid + Math.imul(al7, bh8)) | 0;
          mid = (mid + Math.imul(ah7, bl8)) | 0;
          hi = (hi + Math.imul(ah7, bh8)) | 0;
          lo = (lo + Math.imul(al6, bl9)) | 0;
          mid = (mid + Math.imul(al6, bh9)) | 0;
          mid = (mid + Math.imul(ah6, bl9)) | 0;
          hi = (hi + Math.imul(ah6, bh9)) | 0;
          var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
          w15 &= 0x3ffffff;
          lo = Math.imul(al9, bl7);
          mid = Math.imul(al9, bh7);
          mid = (mid + Math.imul(ah9, bl7)) | 0;
          hi = Math.imul(ah9, bh7);
          lo = (lo + Math.imul(al8, bl8)) | 0;
          mid = (mid + Math.imul(al8, bh8)) | 0;
          mid = (mid + Math.imul(ah8, bl8)) | 0;
          hi = (hi + Math.imul(ah8, bh8)) | 0;
          lo = (lo + Math.imul(al7, bl9)) | 0;
          mid = (mid + Math.imul(al7, bh9)) | 0;
          mid = (mid + Math.imul(ah7, bl9)) | 0;
          hi = (hi + Math.imul(ah7, bh9)) | 0;
          var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
          w16 &= 0x3ffffff;
          lo = Math.imul(al9, bl8);
          mid = Math.imul(al9, bh8);
          mid = (mid + Math.imul(ah9, bl8)) | 0;
          hi = Math.imul(ah9, bh8);
          lo = (lo + Math.imul(al8, bl9)) | 0;
          mid = (mid + Math.imul(al8, bh9)) | 0;
          mid = (mid + Math.imul(ah8, bl9)) | 0;
          hi = (hi + Math.imul(ah8, bh9)) | 0;
          var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
          w17 &= 0x3ffffff;
          lo = Math.imul(al9, bl9);
          mid = Math.imul(al9, bh9);
          mid = (mid + Math.imul(ah9, bl9)) | 0;
          hi = Math.imul(ah9, bh9);
          var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
          c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
          w18 &= 0x3ffffff;
          o[0] = w0;
          o[1] = w1;
          o[2] = w2;
          o[3] = w3;
          o[4] = w4;
          o[5] = w5;
          o[6] = w6;
          o[7] = w7;
          o[8] = w8;
          o[9] = w9;
          o[10] = w10;
          o[11] = w11;
          o[12] = w12;
          o[13] = w13;
          o[14] = w14;
          o[15] = w15;
          o[16] = w16;
          o[17] = w17;
          o[18] = w18;
          if (c !== 0) {
            o[19] = c;
            out.length++;
          }
          return out;
        };
        if (!Math.imul) {
          comb10MulTo = smallMulTo;
        }
        function bigMulTo(self, num, out) {
          out.negative = num.negative ^ self.negative;
          out.length = self.length + num.length;
          var carry = 0;
          var hncarry = 0;
          for (var k = 0; k < out.length - 1; k++) {
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
              var i = k - j;
              var a = self.words[i] | 0;
              var b = num.words[j] | 0;
              var r = a * b;
              var lo = r & 0x3ffffff;
              ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
              lo = (lo + rword) | 0;
              rword = lo & 0x3ffffff;
              ncarry = (ncarry + (lo >>> 26)) | 0;
              hncarry += ncarry >>> 26;
              ncarry &= 0x3ffffff;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
          }
          if (carry !== 0) {
            out.words[k] = carry;
          } else {
            out.length--;
          }
          return out.strip();
        }
        function jumboMulTo(self, num, out) {
          var fftm = new FFTM();
          return fftm.mulp(self, num, out);
        }
        BN.prototype.mulTo = function mulTo(num, out) {
          var res;
          var len = this.length + num.length;
          if (this.length === 10 && num.length === 10) {
            res = comb10MulTo(this, num, out);
          } else if (len < 63) {
            res = smallMulTo(this, num, out);
          } else if (len < 1024) {
            res = bigMulTo(this, num, out);
          } else {
            res = jumboMulTo(this, num, out);
          }
          return res;
        };
        function FFTM(x, y) {
          this.x = x;
          this.y = y;
        }
        FFTM.prototype.makeRBT = function makeRBT(N) {
          var t = new Array(N);
          var l = BN.prototype._countBits(N) - 1;
          for (var i = 0; i < N; i++) {
            t[i] = this.revBin(i, l, N);
          }
          return t;
        };
        FFTM.prototype.revBin = function revBin(x, l, N) {
          if (x === 0 || x === N - 1)
            return x;
          var rb = 0;
          for (var i = 0; i < l; i++) {
            rb |= (x & 1) << (l - i - 1);
            x >>= 1;
          }
          return rb;
        };
        FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
          for (var i = 0; i < N; i++) {
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
          }
        };
        FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
          this.permute(rbt, rws, iws, rtws, itws, N);
          for (var s = 1; s < N; s <<= 1) {
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for (var p = 0; p < N; p += l) {
              var rtwdf_ = rtwdf;
              var itwdf_ = itwdf;
              for (var j = 0; j < s; j++) {
                var re = rtws[p + j];
                var ie = itws[p + j];
                var ro = rtws[p + j + s];
                var io = itws[p + j + s];
                var rx = rtwdf_ * ro - itwdf_ * io;
                io = rtwdf_ * io + itwdf_ * ro;
                ro = rx;
                rtws[p + j] = re + ro;
                itws[p + j] = ie + io;
                rtws[p + j + s] = re - ro;
                itws[p + j + s] = ie - io;
                if (j !== l) {
                  rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                  itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                  rtwdf_ = rx;
                }
              }
            }
          }
        };
        FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
          var N = Math.max(m, n) | 1;
          var odd = N & 1;
          var i = 0;
          for (N = N / 2 | 0; N; N = N >>> 1) {
            i++;
          }
          return 1 << i + 1 + odd;
        };
        FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
          if (N <= 1)
            return;
          for (var i = 0; i < N / 2; i++) {
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
          }
        };
        FFTM.prototype.normalize13b = function normalize13b(ws, N) {
          var carry = 0;
          for (var i = 0; i < N / 2; i++) {
            var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 0x3ffffff;
            if (w < 0x4000000) {
              carry = 0;
            } else {
              carry = w / 0x4000000 | 0;
            }
          }
          return ws;
        };
        FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
          var carry = 0;
          for (var i = 0; i < len; i++) {
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 0x1fff;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 0x1fff;
            carry = carry >>> 13;
          }
          for (i = 2 * len; i < N; ++i) {
            rws[i] = 0;
          }
          assert(carry === 0);
          assert((carry & ~0x1fff) === 0);
        };
        FFTM.prototype.stub = function stub(N) {
          var ph = new Array(N);
          for (var i = 0; i < N; i++) {
            ph[i] = 0;
          }
          return ph;
        };
        FFTM.prototype.mulp = function mulp(x, y, out) {
          var N = 2 * this.guessLen13b(x.length, y.length);
          var rbt = this.makeRBT(N);
          var _ = this.stub(N);
          var rws = new Array(N);
          var rwst = new Array(N);
          var iwst = new Array(N);
          var nrws = new Array(N);
          var nrwst = new Array(N);
          var niwst = new Array(N);
          var rmws = out.words;
          rmws.length = N;
          this.convert13b(x.words, x.length, rws, N);
          this.convert13b(y.words, y.length, nrws, N);
          this.transform(rws, _, rwst, iwst, N, rbt);
          this.transform(nrws, _, nrwst, niwst, N, rbt);
          for (var i = 0; i < N; i++) {
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
          }
          this.conjugate(rwst, iwst, N);
          this.transform(rwst, iwst, rmws, _, N, rbt);
          this.conjugate(rmws, _, N);
          this.normalize13b(rmws, N);
          out.negative = x.negative ^ y.negative;
          out.length = x.length + y.length;
          return out.strip();
        };
        BN.prototype.mul = function mul(num) {
          var out = new BN(null);
          out.words = new Array(this.length + num.length);
          return this.mulTo(num, out);
        };
        BN.prototype.mulf = function mulf(num) {
          var out = new BN(null);
          out.words = new Array(this.length + num.length);
          return jumboMulTo(this, num, out);
        };
        BN.prototype.imul = function imul(num) {
          return this.clone().mulTo(num, this);
        };
        BN.prototype.imuln = function imuln(num) {
          assert(typeof num === 'number');
          assert(num < 0x4000000);
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = (this.words[i] | 0) * num;
            var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
            carry >>= 26;
            carry += (w / 0x4000000) | 0;
            carry += lo >>> 26;
            this.words[i] = lo & 0x3ffffff;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return this;
        };
        BN.prototype.muln = function muln(num) {
          return this.clone().imuln(num);
        };
        BN.prototype.sqr = function sqr() {
          return this.mul(this);
        };
        BN.prototype.isqr = function isqr() {
          return this.imul(this.clone());
        };
        BN.prototype.pow = function pow(num) {
          var w = toBitArray(num);
          if (w.length === 0)
            return new BN(1);
          var res = this;
          for (var i = 0; i < w.length; i++, res = res.sqr()) {
            if (w[i] !== 0)
              break;
          }
          if (++i < w.length) {
            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
              if (w[i] === 0)
                continue;
              res = res.mul(q);
            }
          }
          return res;
        };
        BN.prototype.iushln = function iushln(bits) {
          assert(typeof bits === 'number' && bits >= 0);
          var r = bits % 26;
          var s = (bits - r) / 26;
          var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
          var i;
          if (r !== 0) {
            var carry = 0;
            for (i = 0; i < this.length; i++) {
              var newCarry = this.words[i] & carryMask;
              var c = ((this.words[i] | 0) - newCarry) << r;
              this.words[i] = c | carry;
              carry = newCarry >>> (26 - r);
            }
            if (carry) {
              this.words[i] = carry;
              this.length++;
            }
          }
          if (s !== 0) {
            for (i = this.length - 1; i >= 0; i--) {
              this.words[i + s] = this.words[i];
            }
            for (i = 0; i < s; i++) {
              this.words[i] = 0;
            }
            this.length += s;
          }
          return this.strip();
        };
        BN.prototype.ishln = function ishln(bits) {
          assert(this.negative === 0);
          return this.iushln(bits);
        };
        BN.prototype.iushrn = function iushrn(bits, hint, extended) {
          assert(typeof bits === 'number' && bits >= 0);
          var h;
          if (hint) {
            h = (hint - (hint % 26)) / 26;
          } else {
            h = 0;
          }
          var r = bits % 26;
          var s = Math.min((bits - r) / 26, this.length);
          var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
          var maskedWords = extended;
          h -= s;
          h = Math.max(0, h);
          if (maskedWords) {
            for (var i = 0; i < s; i++) {
              maskedWords.words[i] = this.words[i];
            }
            maskedWords.length = s;
          }
          if (s === 0) {} else if (this.length > s) {
            this.length -= s;
            for (i = 0; i < this.length; i++) {
              this.words[i] = this.words[i + s];
            }
          } else {
            this.words[0] = 0;
            this.length = 1;
          }
          var carry = 0;
          for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
            var word = this.words[i] | 0;
            this.words[i] = (carry << (26 - r)) | (word >>> r);
            carry = word & mask;
          }
          if (maskedWords && carry !== 0) {
            maskedWords.words[maskedWords.length++] = carry;
          }
          if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
          }
          return this.strip();
        };
        BN.prototype.ishrn = function ishrn(bits, hint, extended) {
          assert(this.negative === 0);
          return this.iushrn(bits, hint, extended);
        };
        BN.prototype.shln = function shln(bits) {
          return this.clone().ishln(bits);
        };
        BN.prototype.ushln = function ushln(bits) {
          return this.clone().iushln(bits);
        };
        BN.prototype.shrn = function shrn(bits) {
          return this.clone().ishrn(bits);
        };
        BN.prototype.ushrn = function ushrn(bits) {
          return this.clone().iushrn(bits);
        };
        BN.prototype.testn = function testn(bit) {
          assert(typeof bit === 'number' && bit >= 0);
          var r = bit % 26;
          var s = (bit - r) / 26;
          var q = 1 << r;
          if (this.length <= s)
            return false;
          var w = this.words[s];
          return !!(w & q);
        };
        BN.prototype.imaskn = function imaskn(bits) {
          assert(typeof bits === 'number' && bits >= 0);
          var r = bits % 26;
          var s = (bits - r) / 26;
          assert(this.negative === 0, 'imaskn works only with positive numbers');
          if (this.length <= s) {
            return this;
          }
          if (r !== 0) {
            s++;
          }
          this.length = Math.min(s, this.length);
          if (r !== 0) {
            var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
            this.words[this.length - 1] &= mask;
          }
          return this.strip();
        };
        BN.prototype.maskn = function maskn(bits) {
          return this.clone().imaskn(bits);
        };
        BN.prototype.iaddn = function iaddn(num) {
          assert(typeof num === 'number');
          assert(num < 0x4000000);
          if (num < 0)
            return this.isubn(-num);
          if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) < num) {
              this.words[0] = num - (this.words[0] | 0);
              this.negative = 0;
              return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
          }
          return this._iaddn(num);
        };
        BN.prototype._iaddn = function _iaddn(num) {
          this.words[0] += num;
          for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
            this.words[i] -= 0x4000000;
            if (i === this.length - 1) {
              this.words[i + 1] = 1;
            } else {
              this.words[i + 1]++;
            }
          }
          this.length = Math.max(this.length, i + 1);
          return this;
        };
        BN.prototype.isubn = function isubn(num) {
          assert(typeof num === 'number');
          assert(num < 0x4000000);
          if (num < 0)
            return this.iaddn(-num);
          if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
          }
          this.words[0] -= num;
          if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
          } else {
            for (var i = 0; i < this.length && this.words[i] < 0; i++) {
              this.words[i] += 0x4000000;
              this.words[i + 1] -= 1;
            }
          }
          return this.strip();
        };
        BN.prototype.addn = function addn(num) {
          return this.clone().iaddn(num);
        };
        BN.prototype.subn = function subn(num) {
          return this.clone().isubn(num);
        };
        BN.prototype.iabs = function iabs() {
          this.negative = 0;
          return this;
        };
        BN.prototype.abs = function abs() {
          return this.clone().iabs();
        };
        BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
          var len = num.length + shift;
          var i;
          this._expand(len);
          var w;
          var carry = 0;
          for (i = 0; i < num.length; i++) {
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul;
            w -= right & 0x3ffffff;
            carry = (w >> 26) - ((right / 0x4000000) | 0);
            this.words[i + shift] = w & 0x3ffffff;
          }
          for (; i < this.length - shift; i++) {
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 0x3ffffff;
          }
          if (carry === 0)
            return this.strip();
          assert(carry === -1);
          carry = 0;
          for (i = 0; i < this.length; i++) {
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 0x3ffffff;
          }
          this.negative = 1;
          return this.strip();
        };
        BN.prototype._wordDiv = function _wordDiv(num, mode) {
          var shift = this.length - num.length;
          var a = this.clone();
          var b = num;
          var bhi = b.words[b.length - 1] | 0;
          var bhiBits = this._countBits(bhi);
          shift = 26 - bhiBits;
          if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
          }
          var m = a.length - b.length;
          var q;
          if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for (var i = 0; i < q.length; i++) {
              q.words[i] = 0;
            }
          }
          var diff = a.clone()._ishlnsubmul(b, 1, m);
          if (diff.negative === 0) {
            a = diff;
            if (q) {
              q.words[m] = 1;
            }
          }
          for (var j = m - 1; j >= 0; j--) {
            var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);
            qj = Math.min((qj / bhi) | 0, 0x3ffffff);
            a._ishlnsubmul(b, qj, j);
            while (a.negative !== 0) {
              qj--;
              a.negative = 0;
              a._ishlnsubmul(b, 1, j);
              if (!a.isZero()) {
                a.negative ^= 1;
              }
            }
            if (q) {
              q.words[j] = qj;
            }
          }
          if (q) {
            q.strip();
          }
          a.strip();
          if (mode !== 'div' && shift !== 0) {
            a.iushrn(shift);
          }
          return {
            div: q || null,
            mod: a
          };
        };
        BN.prototype.divmod = function divmod(num, mode, positive) {
          assert(!num.isZero());
          if (this.isZero()) {
            return {
              div: new BN(0),
              mod: new BN(0)
            };
          }
          var div,
              mod,
              res;
          if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') {
              div = res.div.neg();
            }
            if (mode !== 'div') {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.iadd(num);
              }
            }
            return {
              div: div,
              mod: mod
            };
          }
          if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') {
              div = res.div.neg();
            }
            return {
              div: div,
              mod: res.mod
            };
          }
          if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.isub(num);
              }
            }
            return {
              div: res.div,
              mod: mod
            };
          }
          if (num.length > this.length || this.cmp(num) < 0) {
            return {
              div: new BN(0),
              mod: this
            };
          }
          if (num.length === 1) {
            if (mode === 'div') {
              return {
                div: this.divn(num.words[0]),
                mod: null
              };
            }
            if (mode === 'mod') {
              return {
                div: null,
                mod: new BN(this.modn(num.words[0]))
              };
            }
            return {
              div: this.divn(num.words[0]),
              mod: new BN(this.modn(num.words[0]))
            };
          }
          return this._wordDiv(num, mode);
        };
        BN.prototype.div = function div(num) {
          return this.divmod(num, 'div', false).div;
        };
        BN.prototype.mod = function mod(num) {
          return this.divmod(num, 'mod', false).mod;
        };
        BN.prototype.umod = function umod(num) {
          return this.divmod(num, 'mod', true).mod;
        };
        BN.prototype.divRound = function divRound(num) {
          var dm = this.divmod(num);
          if (dm.mod.isZero())
            return dm.div;
          var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
          var half = num.ushrn(1);
          var r2 = num.andln(1);
          var cmp = mod.cmp(half);
          if (cmp < 0 || r2 === 1 && cmp === 0)
            return dm.div;
          return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
        };
        BN.prototype.modn = function modn(num) {
          assert(num <= 0x3ffffff);
          var p = (1 << 26) % num;
          var acc = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            acc = (p * acc + (this.words[i] | 0)) % num;
          }
          return acc;
        };
        BN.prototype.idivn = function idivn(num) {
          assert(num <= 0x3ffffff);
          var carry = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var w = (this.words[i] | 0) + carry * 0x4000000;
            this.words[i] = (w / num) | 0;
            carry = w % num;
          }
          return this.strip();
        };
        BN.prototype.divn = function divn(num) {
          return this.clone().idivn(num);
        };
        BN.prototype.egcd = function egcd(p) {
          assert(p.negative === 0);
          assert(!p.isZero());
          var x = this;
          var y = p.clone();
          if (x.negative !== 0) {
            x = x.umod(p);
          } else {
            x = x.clone();
          }
          var A = new BN(1);
          var B = new BN(0);
          var C = new BN(0);
          var D = new BN(1);
          var g = 0;
          while (x.isEven() && y.isEven()) {
            x.iushrn(1);
            y.iushrn(1);
            ++g;
          }
          var yp = y.clone();
          var xp = x.clone();
          while (!x.isZero()) {
            for (var i = 0,
                im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
              ;
            if (i > 0) {
              x.iushrn(i);
              while (i-- > 0) {
                if (A.isOdd() || B.isOdd()) {
                  A.iadd(yp);
                  B.isub(xp);
                }
                A.iushrn(1);
                B.iushrn(1);
              }
            }
            for (var j = 0,
                jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
              ;
            if (j > 0) {
              y.iushrn(j);
              while (j-- > 0) {
                if (C.isOdd() || D.isOdd()) {
                  C.iadd(yp);
                  D.isub(xp);
                }
                C.iushrn(1);
                D.iushrn(1);
              }
            }
            if (x.cmp(y) >= 0) {
              x.isub(y);
              A.isub(C);
              B.isub(D);
            } else {
              y.isub(x);
              C.isub(A);
              D.isub(B);
            }
          }
          return {
            a: C,
            b: D,
            gcd: y.iushln(g)
          };
        };
        BN.prototype._invmp = function _invmp(p) {
          assert(p.negative === 0);
          assert(!p.isZero());
          var a = this;
          var b = p.clone();
          if (a.negative !== 0) {
            a = a.umod(p);
          } else {
            a = a.clone();
          }
          var x1 = new BN(1);
          var x2 = new BN(0);
          var delta = b.clone();
          while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
            for (var i = 0,
                im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
              ;
            if (i > 0) {
              a.iushrn(i);
              while (i-- > 0) {
                if (x1.isOdd()) {
                  x1.iadd(delta);
                }
                x1.iushrn(1);
              }
            }
            for (var j = 0,
                jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
              ;
            if (j > 0) {
              b.iushrn(j);
              while (j-- > 0) {
                if (x2.isOdd()) {
                  x2.iadd(delta);
                }
                x2.iushrn(1);
              }
            }
            if (a.cmp(b) >= 0) {
              a.isub(b);
              x1.isub(x2);
            } else {
              b.isub(a);
              x2.isub(x1);
            }
          }
          var res;
          if (a.cmpn(1) === 0) {
            res = x1;
          } else {
            res = x2;
          }
          if (res.cmpn(0) < 0) {
            res.iadd(p);
          }
          return res;
        };
        BN.prototype.gcd = function gcd(num) {
          if (this.isZero())
            return num.abs();
          if (num.isZero())
            return this.abs();
          var a = this.clone();
          var b = num.clone();
          a.negative = 0;
          b.negative = 0;
          for (var shift = 0; a.isEven() && b.isEven(); shift++) {
            a.iushrn(1);
            b.iushrn(1);
          }
          do {
            while (a.isEven()) {
              a.iushrn(1);
            }
            while (b.isEven()) {
              b.iushrn(1);
            }
            var r = a.cmp(b);
            if (r < 0) {
              var t = a;
              a = b;
              b = t;
            } else if (r === 0 || b.cmpn(1) === 0) {
              break;
            }
            a.isub(b);
          } while (true);
          return b.iushln(shift);
        };
        BN.prototype.invm = function invm(num) {
          return this.egcd(num).a.umod(num);
        };
        BN.prototype.isEven = function isEven() {
          return (this.words[0] & 1) === 0;
        };
        BN.prototype.isOdd = function isOdd() {
          return (this.words[0] & 1) === 1;
        };
        BN.prototype.andln = function andln(num) {
          return this.words[0] & num;
        };
        BN.prototype.bincn = function bincn(bit) {
          assert(typeof bit === 'number');
          var r = bit % 26;
          var s = (bit - r) / 26;
          var q = 1 << r;
          if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
          }
          var carry = q;
          for (var i = s; carry !== 0 && i < this.length; i++) {
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 0x3ffffff;
            this.words[i] = w;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return this;
        };
        BN.prototype.isZero = function isZero() {
          return this.length === 1 && this.words[0] === 0;
        };
        BN.prototype.cmpn = function cmpn(num) {
          var negative = num < 0;
          if (this.negative !== 0 && !negative)
            return -1;
          if (this.negative === 0 && negative)
            return 1;
          this.strip();
          var res;
          if (this.length > 1) {
            res = 1;
          } else {
            if (negative) {
              num = -num;
            }
            assert(num <= 0x3ffffff, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
          }
          if (this.negative !== 0)
            return -res | 0;
          return res;
        };
        BN.prototype.cmp = function cmp(num) {
          if (this.negative !== 0 && num.negative === 0)
            return -1;
          if (this.negative === 0 && num.negative !== 0)
            return 1;
          var res = this.ucmp(num);
          if (this.negative !== 0)
            return -res | 0;
          return res;
        };
        BN.prototype.ucmp = function ucmp(num) {
          if (this.length > num.length)
            return 1;
          if (this.length < num.length)
            return -1;
          var res = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b)
              continue;
            if (a < b) {
              res = -1;
            } else if (a > b) {
              res = 1;
            }
            break;
          }
          return res;
        };
        BN.prototype.gtn = function gtn(num) {
          return this.cmpn(num) === 1;
        };
        BN.prototype.gt = function gt(num) {
          return this.cmp(num) === 1;
        };
        BN.prototype.gten = function gten(num) {
          return this.cmpn(num) >= 0;
        };
        BN.prototype.gte = function gte(num) {
          return this.cmp(num) >= 0;
        };
        BN.prototype.ltn = function ltn(num) {
          return this.cmpn(num) === -1;
        };
        BN.prototype.lt = function lt(num) {
          return this.cmp(num) === -1;
        };
        BN.prototype.lten = function lten(num) {
          return this.cmpn(num) <= 0;
        };
        BN.prototype.lte = function lte(num) {
          return this.cmp(num) <= 0;
        };
        BN.prototype.eqn = function eqn(num) {
          return this.cmpn(num) === 0;
        };
        BN.prototype.eq = function eq(num) {
          return this.cmp(num) === 0;
        };
        BN.red = function red(num) {
          return new Red(num);
        };
        BN.prototype.toRed = function toRed(ctx) {
          assert(!this.red, 'Already a number in reduction context');
          assert(this.negative === 0, 'red works only with positives');
          return ctx.convertTo(this)._forceRed(ctx);
        };
        BN.prototype.fromRed = function fromRed() {
          assert(this.red, 'fromRed works only with numbers in reduction context');
          return this.red.convertFrom(this);
        };
        BN.prototype._forceRed = function _forceRed(ctx) {
          this.red = ctx;
          return this;
        };
        BN.prototype.forceRed = function forceRed(ctx) {
          assert(!this.red, 'Already a number in reduction context');
          return this._forceRed(ctx);
        };
        BN.prototype.redAdd = function redAdd(num) {
          assert(this.red, 'redAdd works only with red numbers');
          return this.red.add(this, num);
        };
        BN.prototype.redIAdd = function redIAdd(num) {
          assert(this.red, 'redIAdd works only with red numbers');
          return this.red.iadd(this, num);
        };
        BN.prototype.redSub = function redSub(num) {
          assert(this.red, 'redSub works only with red numbers');
          return this.red.sub(this, num);
        };
        BN.prototype.redISub = function redISub(num) {
          assert(this.red, 'redISub works only with red numbers');
          return this.red.isub(this, num);
        };
        BN.prototype.redShl = function redShl(num) {
          assert(this.red, 'redShl works only with red numbers');
          return this.red.shl(this, num);
        };
        BN.prototype.redMul = function redMul(num) {
          assert(this.red, 'redMul works only with red numbers');
          this.red._verify2(this, num);
          return this.red.mul(this, num);
        };
        BN.prototype.redIMul = function redIMul(num) {
          assert(this.red, 'redMul works only with red numbers');
          this.red._verify2(this, num);
          return this.red.imul(this, num);
        };
        BN.prototype.redSqr = function redSqr() {
          assert(this.red, 'redSqr works only with red numbers');
          this.red._verify1(this);
          return this.red.sqr(this);
        };
        BN.prototype.redISqr = function redISqr() {
          assert(this.red, 'redISqr works only with red numbers');
          this.red._verify1(this);
          return this.red.isqr(this);
        };
        BN.prototype.redSqrt = function redSqrt() {
          assert(this.red, 'redSqrt works only with red numbers');
          this.red._verify1(this);
          return this.red.sqrt(this);
        };
        BN.prototype.redInvm = function redInvm() {
          assert(this.red, 'redInvm works only with red numbers');
          this.red._verify1(this);
          return this.red.invm(this);
        };
        BN.prototype.redNeg = function redNeg() {
          assert(this.red, 'redNeg works only with red numbers');
          this.red._verify1(this);
          return this.red.neg(this);
        };
        BN.prototype.redPow = function redPow(num) {
          assert(this.red && !num.red, 'redPow(normalNum)');
          this.red._verify1(this);
          return this.red.pow(this, num);
        };
        var primes = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function MPrime(name, p) {
          this.name = name;
          this.p = new BN(p, 16);
          this.n = this.p.bitLength();
          this.k = new BN(1).iushln(this.n).isub(this.p);
          this.tmp = this._tmp();
        }
        MPrime.prototype._tmp = function _tmp() {
          var tmp = new BN(null);
          tmp.words = new Array(Math.ceil(this.n / 13));
          return tmp;
        };
        MPrime.prototype.ireduce = function ireduce(num) {
          var r = num;
          var rlen;
          do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
          } while (rlen > this.n);
          var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
          if (cmp === 0) {
            r.words[0] = 0;
            r.length = 1;
          } else if (cmp > 0) {
            r.isub(this.p);
          } else {
            r.strip();
          }
          return r;
        };
        MPrime.prototype.split = function split(input, out) {
          input.iushrn(this.n, 0, out);
        };
        MPrime.prototype.imulK = function imulK(num) {
          return num.imul(this.k);
        };
        function K256() {
          MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
        }
        inherits(K256, MPrime);
        K256.prototype.split = function split(input, output) {
          var mask = 0x3fffff;
          var outLen = Math.min(input.length, 9);
          for (var i = 0; i < outLen; i++) {
            output.words[i] = input.words[i];
          }
          output.length = outLen;
          if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
          }
          var prev = input.words[9];
          output.words[output.length++] = prev & mask;
          for (i = 10; i < input.length; i++) {
            var next = input.words[i] | 0;
            input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
            prev = next;
          }
          prev >>>= 22;
          input.words[i - 10] = prev;
          if (prev === 0 && input.length > 10) {
            input.length -= 10;
          } else {
            input.length -= 9;
          }
        };
        K256.prototype.imulK = function imulK(num) {
          num.words[num.length] = 0;
          num.words[num.length + 1] = 0;
          num.length += 2;
          var lo = 0;
          for (var i = 0; i < num.length; i++) {
            var w = num.words[i] | 0;
            lo += w * 0x3d1;
            num.words[i] = lo & 0x3ffffff;
            lo = w * 0x40 + ((lo / 0x4000000) | 0);
          }
          if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) {
              num.length--;
            }
          }
          return num;
        };
        function P224() {
          MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
        }
        inherits(P224, MPrime);
        function P192() {
          MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
        }
        inherits(P192, MPrime);
        function P25519() {
          MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
        }
        inherits(P25519, MPrime);
        P25519.prototype.imulK = function imulK(num) {
          var carry = 0;
          for (var i = 0; i < num.length; i++) {
            var hi = (num.words[i] | 0) * 0x13 + carry;
            var lo = hi & 0x3ffffff;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
          }
          if (carry !== 0) {
            num.words[num.length++] = carry;
          }
          return num;
        };
        BN._prime = function prime(name) {
          if (primes[name])
            return primes[name];
          var prime;
          if (name === 'k256') {
            prime = new K256();
          } else if (name === 'p224') {
            prime = new P224();
          } else if (name === 'p192') {
            prime = new P192();
          } else if (name === 'p25519') {
            prime = new P25519();
          } else {
            throw new Error('Unknown prime ' + name);
          }
          primes[name] = prime;
          return prime;
        };
        function Red(m) {
          if (typeof m === 'string') {
            var prime = BN._prime(m);
            this.m = prime.p;
            this.prime = prime;
          } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
          }
        }
        Red.prototype._verify1 = function _verify1(a) {
          assert(a.negative === 0, 'red works only with positives');
          assert(a.red, 'red works only with red numbers');
        };
        Red.prototype._verify2 = function _verify2(a, b) {
          assert((a.negative | b.negative) === 0, 'red works only with positives');
          assert(a.red && a.red === b.red, 'red works only with red numbers');
        };
        Red.prototype.imod = function imod(a) {
          if (this.prime)
            return this.prime.ireduce(a)._forceRed(this);
          return a.umod(this.m)._forceRed(this);
        };
        Red.prototype.neg = function neg(a) {
          if (a.isZero()) {
            return a.clone();
          }
          return this.m.sub(a)._forceRed(this);
        };
        Red.prototype.add = function add(a, b) {
          this._verify2(a, b);
          var res = a.add(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.iadd = function iadd(a, b) {
          this._verify2(a, b);
          var res = a.iadd(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res;
        };
        Red.prototype.sub = function sub(a, b) {
          this._verify2(a, b);
          var res = a.sub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.isub = function isub(a, b) {
          this._verify2(a, b);
          var res = a.isub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res;
        };
        Red.prototype.shl = function shl(a, num) {
          this._verify1(a);
          return this.imod(a.ushln(num));
        };
        Red.prototype.imul = function imul(a, b) {
          this._verify2(a, b);
          return this.imod(a.imul(b));
        };
        Red.prototype.mul = function mul(a, b) {
          this._verify2(a, b);
          return this.imod(a.mul(b));
        };
        Red.prototype.isqr = function isqr(a) {
          return this.imul(a, a.clone());
        };
        Red.prototype.sqr = function sqr(a) {
          return this.mul(a, a);
        };
        Red.prototype.sqrt = function sqrt(a) {
          if (a.isZero())
            return a.clone();
          var mod3 = this.m.andln(3);
          assert(mod3 % 2 === 1);
          if (mod3 === 3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
          }
          var q = this.m.subn(1);
          var s = 0;
          while (!q.isZero() && q.andln(1) === 0) {
            s++;
            q.iushrn(1);
          }
          assert(!q.isZero());
          var one = new BN(1).toRed(this);
          var nOne = one.redNeg();
          var lpow = this.m.subn(1).iushrn(1);
          var z = this.m.bitLength();
          z = new BN(2 * z * z).toRed(this);
          while (this.pow(z, lpow).cmp(nOne) !== 0) {
            z.redIAdd(nOne);
          }
          var c = this.pow(z, q);
          var r = this.pow(a, q.addn(1).iushrn(1));
          var t = this.pow(a, q);
          var m = s;
          while (t.cmp(one) !== 0) {
            var tmp = t;
            for (var i = 0; tmp.cmp(one) !== 0; i++) {
              tmp = tmp.redSqr();
            }
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
          }
          return r;
        };
        Red.prototype.invm = function invm(a) {
          var inv = a._invmp(this.m);
          if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
          } else {
            return this.imod(inv);
          }
        };
        Red.prototype.pow = function pow(a, num) {
          if (num.isZero())
            return new BN(1);
          if (num.cmpn(1) === 0)
            return a.clone();
          var windowSize = 4;
          var wnd = new Array(1 << windowSize);
          wnd[0] = new BN(1).toRed(this);
          wnd[1] = a;
          for (var i = 2; i < wnd.length; i++) {
            wnd[i] = this.mul(wnd[i - 1], a);
          }
          var res = wnd[0];
          var current = 0;
          var currentLen = 0;
          var start = num.bitLength() % 26;
          if (start === 0) {
            start = 26;
          }
          for (i = num.length - 1; i >= 0; i--) {
            var word = num.words[i];
            for (var j = start - 1; j >= 0; j--) {
              var bit = (word >> j) & 1;
              if (res !== wnd[0]) {
                res = this.sqr(res);
              }
              if (bit === 0 && current === 0) {
                currentLen = 0;
                continue;
              }
              current <<= 1;
              current |= bit;
              currentLen++;
              if (currentLen !== windowSize && (i !== 0 || j !== 0))
                continue;
              res = this.mul(res, wnd[current]);
              currentLen = 0;
              current = 0;
            }
            start = 26;
          }
          return res;
        };
        Red.prototype.convertTo = function convertTo(num) {
          var r = num.umod(this.m);
          return r === num ? r.clone() : r;
        };
        Red.prototype.convertFrom = function convertFrom(num) {
          var res = num.clone();
          res.red = null;
          return res;
        };
        BN.mont = function mont(num) {
          return new Mont(num);
        };
        function Mont(m) {
          Red.call(this, m);
          this.shift = this.m.bitLength();
          if (this.shift % 26 !== 0) {
            this.shift += 26 - (this.shift % 26);
          }
          this.r = new BN(1).iushln(this.shift);
          this.r2 = this.imod(this.r.sqr());
          this.rinv = this.r._invmp(this.m);
          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
          this.minv = this.minv.umod(this.r);
          this.minv = this.r.sub(this.minv);
        }
        inherits(Mont, Red);
        Mont.prototype.convertTo = function convertTo(num) {
          return this.imod(num.ushln(this.shift));
        };
        Mont.prototype.convertFrom = function convertFrom(num) {
          var r = this.imod(num.mul(this.rinv));
          r.red = null;
          return r;
        };
        Mont.prototype.imul = function imul(a, b) {
          if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
          }
          var t = a.imul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.mul = function mul(a, b) {
          if (a.isZero() || b.isZero())
            return new BN(0)._forceRed(this);
          var t = a.mul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.invm = function invm(a) {
          var res = this.imod(a._invmp(this.m).mul(this.r2));
          return res._forceRed(this);
        };
      })(typeof module === 'undefined' || module, this);
    }, {}],
    17: [function(require, module, exports) {
      var r;
      module.exports = function rand(len) {
        if (!r)
          r = new Rand(null);
        return r.generate(len);
      };
      function Rand(rand) {
        this.rand = rand;
      }
      module.exports.Rand = Rand;
      Rand.prototype.generate = function generate(len) {
        return this._rand(len);
      };
      if (typeof window === 'object') {
        if (window.crypto && window.crypto.getRandomValues) {
          Rand.prototype._rand = function _rand(n) {
            var arr = new Uint8Array(n);
            window.crypto.getRandomValues(arr);
            return arr;
          };
        } else if (window.msCrypto && window.msCrypto.getRandomValues) {
          Rand.prototype._rand = function _rand(n) {
            var arr = new Uint8Array(n);
            window.msCrypto.getRandomValues(arr);
            return arr;
          };
        } else {
          Rand.prototype._rand = function() {
            throw new Error('Not implemented yet');
          };
        }
      } else {
        try {
          var crypto = require('cry' + 'pto');
          Rand.prototype._rand = function _rand(n) {
            return crypto.randomBytes(n);
          };
        } catch (e) {
          Rand.prototype._rand = function _rand(n) {
            var res = new Uint8Array(n);
            for (var i = 0; i < res.length; i++)
              res[i] = this.rand.getByte();
            return res;
          };
        }
      }
    }, {}],
    18: [function(require, module, exports) {}, {}],
    19: [function(require, module, exports) {
      (function(Buffer) {
        var uint_max = Math.pow(2, 32);
        function fixup_uint32(x) {
          var ret,
              x_pos;
          ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x;
          return ret;
        }
        function scrub_vec(v) {
          for (var i = 0; i < v.length; v++) {
            v[i] = 0;
          }
          return false;
        }
        function Global() {
          this.SBOX = [];
          this.INV_SBOX = [];
          this.SUB_MIX = [[], [], [], []];
          this.INV_SUB_MIX = [[], [], [], []];
          this.init();
          this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];
        }
        Global.prototype.init = function() {
          var d,
              i,
              sx,
              t,
              x,
              x2,
              x4,
              x8,
              xi,
              _i;
          d = (function() {
            var _i,
                _results;
            _results = [];
            for (i = _i = 0; _i < 256; i = ++_i) {
              if (i < 128) {
                _results.push(i << 1);
              } else {
                _results.push((i << 1) ^ 0x11b);
              }
            }
            return _results;
          })();
          x = 0;
          xi = 0;
          for (i = _i = 0; _i < 256; i = ++_i) {
            sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
            this.SBOX[x] = sx;
            this.INV_SBOX[sx] = x;
            x2 = d[x];
            x4 = d[x2];
            x8 = d[x4];
            t = (d[sx] * 0x101) ^ (sx * 0x1010100);
            this.SUB_MIX[0][x] = (t << 24) | (t >>> 8);
            this.SUB_MIX[1][x] = (t << 16) | (t >>> 16);
            this.SUB_MIX[2][x] = (t << 8) | (t >>> 24);
            this.SUB_MIX[3][x] = t;
            t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
            this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8);
            this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16);
            this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24);
            this.INV_SUB_MIX[3][sx] = t;
            if (x === 0) {
              x = xi = 1;
            } else {
              x = x2 ^ d[d[d[x8 ^ x2]]];
              xi ^= d[d[xi]];
            }
          }
          return true;
        };
        var G = new Global();
        AES.blockSize = 4 * 4;
        AES.prototype.blockSize = AES.blockSize;
        AES.keySize = 256 / 8;
        AES.prototype.keySize = AES.keySize;
        function bufferToArray(buf) {
          var len = buf.length / 4;
          var out = new Array(len);
          var i = -1;
          while (++i < len) {
            out[i] = buf.readUInt32BE(i * 4);
          }
          return out;
        }
        function AES(key) {
          this._key = bufferToArray(key);
          this._doReset();
        }
        AES.prototype._doReset = function() {
          var invKsRow,
              keySize,
              keyWords,
              ksRow,
              ksRows,
              t;
          keyWords = this._key;
          keySize = keyWords.length;
          this._nRounds = keySize + 6;
          ksRows = (this._nRounds + 1) * 4;
          this._keySchedule = [];
          for (ksRow = 0; ksRow < ksRows; ksRow++) {
            this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t);
          }
          this._invKeySchedule = [];
          for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
            ksRow = ksRows - invKsRow;
            t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)];
            this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]];
          }
          return true;
        };
        AES.prototype.encryptBlock = function(M) {
          M = bufferToArray(new Buffer(M));
          var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX);
          var buf = new Buffer(16);
          buf.writeUInt32BE(out[0], 0);
          buf.writeUInt32BE(out[1], 4);
          buf.writeUInt32BE(out[2], 8);
          buf.writeUInt32BE(out[3], 12);
          return buf;
        };
        AES.prototype.decryptBlock = function(M) {
          M = bufferToArray(new Buffer(M));
          var temp = [M[3], M[1]];
          M[1] = temp[0];
          M[3] = temp[1];
          var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX);
          var buf = new Buffer(16);
          buf.writeUInt32BE(out[0], 0);
          buf.writeUInt32BE(out[3], 4);
          buf.writeUInt32BE(out[2], 8);
          buf.writeUInt32BE(out[1], 12);
          return buf;
        };
        AES.prototype.scrub = function() {
          scrub_vec(this._keySchedule);
          scrub_vec(this._invKeySchedule);
          scrub_vec(this._key);
        };
        AES.prototype._doCryptBlock = function(M, keySchedule, SUB_MIX, SBOX) {
          var ksRow,
              s0,
              s1,
              s2,
              s3,
              t0,
              t1,
              t2,
              t3;
          s0 = M[0] ^ keySchedule[0];
          s1 = M[1] ^ keySchedule[1];
          s2 = M[2] ^ keySchedule[2];
          s3 = M[3] ^ keySchedule[3];
          ksRow = 4;
          for (var round = 1; round < this._nRounds; round++) {
            t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++];
            t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++];
            t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++];
            t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++];
            s0 = t0;
            s1 = t1;
            s2 = t2;
            s3 = t3;
          }
          t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
          t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
          t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
          t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];
          return [fixup_uint32(t0), fixup_uint32(t1), fixup_uint32(t2), fixup_uint32(t3)];
        };
        exports.AES = AES;
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    20: [function(require, module, exports) {
      (function(Buffer) {
        var aes = require('./aes');
        var Transform = require('cipher-base');
        var inherits = require('inherits');
        var GHASH = require('./ghash');
        var xor = require('buffer-xor');
        inherits(StreamCipher, Transform);
        module.exports = StreamCipher;
        function StreamCipher(mode, key, iv, decrypt) {
          if (!(this instanceof StreamCipher)) {
            return new StreamCipher(mode, key, iv);
          }
          Transform.call(this);
          this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])]);
          iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])]);
          this._cipher = new aes.AES(key);
          this._prev = new Buffer(iv.length);
          this._cache = new Buffer('');
          this._secCache = new Buffer('');
          this._decrypt = decrypt;
          this._alen = 0;
          this._len = 0;
          iv.copy(this._prev);
          this._mode = mode;
          var h = new Buffer(4);
          h.fill(0);
          this._ghash = new GHASH(this._cipher.encryptBlock(h));
          this._authTag = null;
          this._called = false;
        }
        StreamCipher.prototype._update = function(chunk) {
          if (!this._called && this._alen) {
            var rump = 16 - (this._alen % 16);
            if (rump < 16) {
              rump = new Buffer(rump);
              rump.fill(0);
              this._ghash.update(rump);
            }
          }
          this._called = true;
          var out = this._mode.encrypt(this, chunk);
          if (this._decrypt) {
            this._ghash.update(chunk);
          } else {
            this._ghash.update(out);
          }
          this._len += chunk.length;
          return out;
        };
        StreamCipher.prototype._final = function() {
          if (this._decrypt && !this._authTag) {
            throw new Error('Unsupported state or unable to authenticate data');
          }
          var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
          if (this._decrypt) {
            if (xorTest(tag, this._authTag)) {
              throw new Error('Unsupported state or unable to authenticate data');
            }
          } else {
            this._authTag = tag;
          }
          this._cipher.scrub();
        };
        StreamCipher.prototype.getAuthTag = function getAuthTag() {
          if (!this._decrypt && Buffer.isBuffer(this._authTag)) {
            return this._authTag;
          } else {
            throw new Error('Attempting to get auth tag in unsupported state');
          }
        };
        StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
          if (this._decrypt) {
            this._authTag = tag;
          } else {
            throw new Error('Attempting to set auth tag in unsupported state');
          }
        };
        StreamCipher.prototype.setAAD = function setAAD(buf) {
          if (!this._called) {
            this._ghash.update(buf);
            this._alen += buf.length;
          } else {
            throw new Error('Attempting to set AAD in unsupported state');
          }
        };
        function xorTest(a, b) {
          var out = 0;
          if (a.length !== b.length) {
            out++;
          }
          var len = Math.min(a.length, b.length);
          var i = -1;
          while (++i < len) {
            out += (a[i] ^ b[i]);
          }
          return out;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "./aes": 19,
      "./ghash": 24,
      "buffer": 45,
      "buffer-xor": 44,
      "cipher-base": 46,
      "inherits": 91
    }],
    21: [function(require, module, exports) {
      var ciphers = require('./encrypter');
      exports.createCipher = exports.Cipher = ciphers.createCipher;
      exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
      var deciphers = require('./decrypter');
      exports.createDecipher = exports.Decipher = deciphers.createDecipher;
      exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;
      var modes = require('./modes');
      function getCiphers() {
        return Object.keys(modes);
      }
      exports.listCiphers = exports.getCiphers = getCiphers;
    }, {
      "./decrypter": 22,
      "./encrypter": 23,
      "./modes": 25
    }],
    22: [function(require, module, exports) {
      (function(Buffer) {
        var aes = require('./aes');
        var Transform = require('cipher-base');
        var inherits = require('inherits');
        var modes = require('./modes');
        var StreamCipher = require('./streamCipher');
        var AuthCipher = require('./authCipher');
        var ebtk = require('evp_bytestokey');
        inherits(Decipher, Transform);
        function Decipher(mode, key, iv) {
          if (!(this instanceof Decipher)) {
            return new Decipher(mode, key, iv);
          }
          Transform.call(this);
          this._cache = new Splitter();
          this._last = void 0;
          this._cipher = new aes.AES(key);
          this._prev = new Buffer(iv.length);
          iv.copy(this._prev);
          this._mode = mode;
          this._autopadding = true;
        }
        Decipher.prototype._update = function(data) {
          this._cache.add(data);
          var chunk;
          var thing;
          var out = [];
          while ((chunk = this._cache.get(this._autopadding))) {
            thing = this._mode.decrypt(this, chunk);
            out.push(thing);
          }
          return Buffer.concat(out);
        };
        Decipher.prototype._final = function() {
          var chunk = this._cache.flush();
          if (this._autopadding) {
            return unpad(this._mode.decrypt(this, chunk));
          } else if (chunk) {
            throw new Error('data not multiple of block length');
          }
        };
        Decipher.prototype.setAutoPadding = function(setTo) {
          this._autopadding = !!setTo;
          return this;
        };
        function Splitter() {
          if (!(this instanceof Splitter)) {
            return new Splitter();
          }
          this.cache = new Buffer('');
        }
        Splitter.prototype.add = function(data) {
          this.cache = Buffer.concat([this.cache, data]);
        };
        Splitter.prototype.get = function(autoPadding) {
          var out;
          if (autoPadding) {
            if (this.cache.length > 16) {
              out = this.cache.slice(0, 16);
              this.cache = this.cache.slice(16);
              return out;
            }
          } else {
            if (this.cache.length >= 16) {
              out = this.cache.slice(0, 16);
              this.cache = this.cache.slice(16);
              return out;
            }
          }
          return null;
        };
        Splitter.prototype.flush = function() {
          if (this.cache.length) {
            return this.cache;
          }
        };
        function unpad(last) {
          var padded = last[15];
          var i = -1;
          while (++i < padded) {
            if (last[(i + (16 - padded))] !== padded) {
              throw new Error('unable to decrypt data');
            }
          }
          if (padded === 16) {
            return;
          }
          return last.slice(0, 16 - padded);
        }
        var modelist = {
          ECB: require('./modes/ecb'),
          CBC: require('./modes/cbc'),
          CFB: require('./modes/cfb'),
          CFB8: require('./modes/cfb8'),
          CFB1: require('./modes/cfb1'),
          OFB: require('./modes/ofb'),
          CTR: require('./modes/ctr'),
          GCM: require('./modes/ctr')
        };
        function createDecipheriv(suite, password, iv) {
          var config = modes[suite.toLowerCase()];
          if (!config) {
            throw new TypeError('invalid suite type');
          }
          if (typeof iv === 'string') {
            iv = new Buffer(iv);
          }
          if (typeof password === 'string') {
            password = new Buffer(password);
          }
          if (password.length !== config.key / 8) {
            throw new TypeError('invalid key length ' + password.length);
          }
          if (iv.length !== config.iv) {
            throw new TypeError('invalid iv length ' + iv.length);
          }
          if (config.type === 'stream') {
            return new StreamCipher(modelist[config.mode], password, iv, true);
          } else if (config.type === 'auth') {
            return new AuthCipher(modelist[config.mode], password, iv, true);
          }
          return new Decipher(modelist[config.mode], password, iv);
        }
        function createDecipher(suite, password) {
          var config = modes[suite.toLowerCase()];
          if (!config) {
            throw new TypeError('invalid suite type');
          }
          var keys = ebtk(password, false, config.key, config.iv);
          return createDecipheriv(suite, keys.key, keys.iv);
        }
        exports.createDecipher = createDecipher;
        exports.createDecipheriv = createDecipheriv;
      }).call(this, require("buffer").Buffer);
    }, {
      "./aes": 19,
      "./authCipher": 20,
      "./modes": 25,
      "./modes/cbc": 26,
      "./modes/cfb": 27,
      "./modes/cfb1": 28,
      "./modes/cfb8": 29,
      "./modes/ctr": 30,
      "./modes/ecb": 31,
      "./modes/ofb": 32,
      "./streamCipher": 33,
      "buffer": 45,
      "cipher-base": 46,
      "evp_bytestokey": 82,
      "inherits": 91
    }],
    23: [function(require, module, exports) {
      (function(Buffer) {
        var aes = require('./aes');
        var Transform = require('cipher-base');
        var inherits = require('inherits');
        var modes = require('./modes');
        var ebtk = require('evp_bytestokey');
        var StreamCipher = require('./streamCipher');
        var AuthCipher = require('./authCipher');
        inherits(Cipher, Transform);
        function Cipher(mode, key, iv) {
          if (!(this instanceof Cipher)) {
            return new Cipher(mode, key, iv);
          }
          Transform.call(this);
          this._cache = new Splitter();
          this._cipher = new aes.AES(key);
          this._prev = new Buffer(iv.length);
          iv.copy(this._prev);
          this._mode = mode;
          this._autopadding = true;
        }
        Cipher.prototype._update = function(data) {
          this._cache.add(data);
          var chunk;
          var thing;
          var out = [];
          while ((chunk = this._cache.get())) {
            thing = this._mode.encrypt(this, chunk);
            out.push(thing);
          }
          return Buffer.concat(out);
        };
        Cipher.prototype._final = function() {
          var chunk = this._cache.flush();
          if (this._autopadding) {
            chunk = this._mode.encrypt(this, chunk);
            this._cipher.scrub();
            return chunk;
          } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {
            this._cipher.scrub();
            throw new Error('data not multiple of block length');
          }
        };
        Cipher.prototype.setAutoPadding = function(setTo) {
          this._autopadding = !!setTo;
          return this;
        };
        function Splitter() {
          if (!(this instanceof Splitter)) {
            return new Splitter();
          }
          this.cache = new Buffer('');
        }
        Splitter.prototype.add = function(data) {
          this.cache = Buffer.concat([this.cache, data]);
        };
        Splitter.prototype.get = function() {
          if (this.cache.length > 15) {
            var out = this.cache.slice(0, 16);
            this.cache = this.cache.slice(16);
            return out;
          }
          return null;
        };
        Splitter.prototype.flush = function() {
          var len = 16 - this.cache.length;
          var padBuff = new Buffer(len);
          var i = -1;
          while (++i < len) {
            padBuff.writeUInt8(len, i);
          }
          var out = Buffer.concat([this.cache, padBuff]);
          return out;
        };
        var modelist = {
          ECB: require('./modes/ecb'),
          CBC: require('./modes/cbc'),
          CFB: require('./modes/cfb'),
          CFB8: require('./modes/cfb8'),
          CFB1: require('./modes/cfb1'),
          OFB: require('./modes/ofb'),
          CTR: require('./modes/ctr'),
          GCM: require('./modes/ctr')
        };
        function createCipheriv(suite, password, iv) {
          var config = modes[suite.toLowerCase()];
          if (!config) {
            throw new TypeError('invalid suite type');
          }
          if (typeof iv === 'string') {
            iv = new Buffer(iv);
          }
          if (typeof password === 'string') {
            password = new Buffer(password);
          }
          if (password.length !== config.key / 8) {
            throw new TypeError('invalid key length ' + password.length);
          }
          if (iv.length !== config.iv) {
            throw new TypeError('invalid iv length ' + iv.length);
          }
          if (config.type === 'stream') {
            return new StreamCipher(modelist[config.mode], password, iv);
          } else if (config.type === 'auth') {
            return new AuthCipher(modelist[config.mode], password, iv);
          }
          return new Cipher(modelist[config.mode], password, iv);
        }
        function createCipher(suite, password) {
          var config = modes[suite.toLowerCase()];
          if (!config) {
            throw new TypeError('invalid suite type');
          }
          var keys = ebtk(password, false, config.key, config.iv);
          return createCipheriv(suite, keys.key, keys.iv);
        }
        exports.createCipheriv = createCipheriv;
        exports.createCipher = createCipher;
      }).call(this, require("buffer").Buffer);
    }, {
      "./aes": 19,
      "./authCipher": 20,
      "./modes": 25,
      "./modes/cbc": 26,
      "./modes/cfb": 27,
      "./modes/cfb1": 28,
      "./modes/cfb8": 29,
      "./modes/ctr": 30,
      "./modes/ecb": 31,
      "./modes/ofb": 32,
      "./streamCipher": 33,
      "buffer": 45,
      "cipher-base": 46,
      "evp_bytestokey": 82,
      "inherits": 91
    }],
    24: [function(require, module, exports) {
      (function(Buffer) {
        var zeros = new Buffer(16);
        zeros.fill(0);
        module.exports = GHASH;
        function GHASH(key) {
          this.h = key;
          this.state = new Buffer(16);
          this.state.fill(0);
          this.cache = new Buffer('');
        }
        GHASH.prototype.ghash = function(block) {
          var i = -1;
          while (++i < block.length) {
            this.state[i] ^= block[i];
          }
          this._multiply();
        };
        GHASH.prototype._multiply = function() {
          var Vi = toArray(this.h);
          var Zi = [0, 0, 0, 0];
          var j,
              xi,
              lsb_Vi;
          var i = -1;
          while (++i < 128) {
            xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0;
            if (xi) {
              Zi = xor(Zi, Vi);
            }
            lsb_Vi = (Vi[3] & 1) !== 0;
            for (j = 3; j > 0; j--) {
              Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31);
            }
            Vi[0] = Vi[0] >>> 1;
            if (lsb_Vi) {
              Vi[0] = Vi[0] ^ (0xe1 << 24);
            }
          }
          this.state = fromArray(Zi);
        };
        GHASH.prototype.update = function(buf) {
          this.cache = Buffer.concat([this.cache, buf]);
          var chunk;
          while (this.cache.length >= 16) {
            chunk = this.cache.slice(0, 16);
            this.cache = this.cache.slice(16);
            this.ghash(chunk);
          }
        };
        GHASH.prototype.final = function(abl, bl) {
          if (this.cache.length) {
            this.ghash(Buffer.concat([this.cache, zeros], 16));
          }
          this.ghash(fromArray([0, abl, 0, bl]));
          return this.state;
        };
        function toArray(buf) {
          return [buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)];
        }
        function fromArray(out) {
          out = out.map(fixup_uint32);
          var buf = new Buffer(16);
          buf.writeUInt32BE(out[0], 0);
          buf.writeUInt32BE(out[1], 4);
          buf.writeUInt32BE(out[2], 8);
          buf.writeUInt32BE(out[3], 12);
          return buf;
        }
        var uint_max = Math.pow(2, 32);
        function fixup_uint32(x) {
          var ret,
              x_pos;
          ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x;
          return ret;
        }
        function xor(a, b) {
          return [a[0] ^ b[0], a[1] ^ b[1], a[2] ^ b[2], a[3] ^ b[3]];
        }
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    25: [function(require, module, exports) {
      exports['aes-128-ecb'] = {
        cipher: 'AES',
        key: 128,
        iv: 0,
        mode: 'ECB',
        type: 'block'
      };
      exports['aes-192-ecb'] = {
        cipher: 'AES',
        key: 192,
        iv: 0,
        mode: 'ECB',
        type: 'block'
      };
      exports['aes-256-ecb'] = {
        cipher: 'AES',
        key: 256,
        iv: 0,
        mode: 'ECB',
        type: 'block'
      };
      exports['aes-128-cbc'] = {
        cipher: 'AES',
        key: 128,
        iv: 16,
        mode: 'CBC',
        type: 'block'
      };
      exports['aes-192-cbc'] = {
        cipher: 'AES',
        key: 192,
        iv: 16,
        mode: 'CBC',
        type: 'block'
      };
      exports['aes-256-cbc'] = {
        cipher: 'AES',
        key: 256,
        iv: 16,
        mode: 'CBC',
        type: 'block'
      };
      exports['aes128'] = exports['aes-128-cbc'];
      exports['aes192'] = exports['aes-192-cbc'];
      exports['aes256'] = exports['aes-256-cbc'];
      exports['aes-128-cfb'] = {
        cipher: 'AES',
        key: 128,
        iv: 16,
        mode: 'CFB',
        type: 'stream'
      };
      exports['aes-192-cfb'] = {
        cipher: 'AES',
        key: 192,
        iv: 16,
        mode: 'CFB',
        type: 'stream'
      };
      exports['aes-256-cfb'] = {
        cipher: 'AES',
        key: 256,
        iv: 16,
        mode: 'CFB',
        type: 'stream'
      };
      exports['aes-128-cfb8'] = {
        cipher: 'AES',
        key: 128,
        iv: 16,
        mode: 'CFB8',
        type: 'stream'
      };
      exports['aes-192-cfb8'] = {
        cipher: 'AES',
        key: 192,
        iv: 16,
        mode: 'CFB8',
        type: 'stream'
      };
      exports['aes-256-cfb8'] = {
        cipher: 'AES',
        key: 256,
        iv: 16,
        mode: 'CFB8',
        type: 'stream'
      };
      exports['aes-128-cfb1'] = {
        cipher: 'AES',
        key: 128,
        iv: 16,
        mode: 'CFB1',
        type: 'stream'
      };
      exports['aes-192-cfb1'] = {
        cipher: 'AES',
        key: 192,
        iv: 16,
        mode: 'CFB1',
        type: 'stream'
      };
      exports['aes-256-cfb1'] = {
        cipher: 'AES',
        key: 256,
        iv: 16,
        mode: 'CFB1',
        type: 'stream'
      };
      exports['aes-128-ofb'] = {
        cipher: 'AES',
        key: 128,
        iv: 16,
        mode: 'OFB',
        type: 'stream'
      };
      exports['aes-192-ofb'] = {
        cipher: 'AES',
        key: 192,
        iv: 16,
        mode: 'OFB',
        type: 'stream'
      };
      exports['aes-256-ofb'] = {
        cipher: 'AES',
        key: 256,
        iv: 16,
        mode: 'OFB',
        type: 'stream'
      };
      exports['aes-128-ctr'] = {
        cipher: 'AES',
        key: 128,
        iv: 16,
        mode: 'CTR',
        type: 'stream'
      };
      exports['aes-192-ctr'] = {
        cipher: 'AES',
        key: 192,
        iv: 16,
        mode: 'CTR',
        type: 'stream'
      };
      exports['aes-256-ctr'] = {
        cipher: 'AES',
        key: 256,
        iv: 16,
        mode: 'CTR',
        type: 'stream'
      };
      exports['aes-128-gcm'] = {
        cipher: 'AES',
        key: 128,
        iv: 12,
        mode: 'GCM',
        type: 'auth'
      };
      exports['aes-192-gcm'] = {
        cipher: 'AES',
        key: 192,
        iv: 12,
        mode: 'GCM',
        type: 'auth'
      };
      exports['aes-256-gcm'] = {
        cipher: 'AES',
        key: 256,
        iv: 12,
        mode: 'GCM',
        type: 'auth'
      };
    }, {}],
    26: [function(require, module, exports) {
      var xor = require('buffer-xor');
      exports.encrypt = function(self, block) {
        var data = xor(block, self._prev);
        self._prev = self._cipher.encryptBlock(data);
        return self._prev;
      };
      exports.decrypt = function(self, block) {
        var pad = self._prev;
        self._prev = block;
        var out = self._cipher.decryptBlock(block);
        return xor(out, pad);
      };
    }, {"buffer-xor": 44}],
    27: [function(require, module, exports) {
      (function(Buffer) {
        var xor = require('buffer-xor');
        exports.encrypt = function(self, data, decrypt) {
          var out = new Buffer('');
          var len;
          while (data.length) {
            if (self._cache.length === 0) {
              self._cache = self._cipher.encryptBlock(self._prev);
              self._prev = new Buffer('');
            }
            if (self._cache.length <= data.length) {
              len = self._cache.length;
              out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)]);
              data = data.slice(len);
            } else {
              out = Buffer.concat([out, encryptStart(self, data, decrypt)]);
              break;
            }
          }
          return out;
        };
        function encryptStart(self, data, decrypt) {
          var len = data.length;
          var out = xor(data, self._cache);
          self._cache = self._cache.slice(len);
          self._prev = Buffer.concat([self._prev, decrypt ? data : out]);
          return out;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "buffer-xor": 44
    }],
    28: [function(require, module, exports) {
      (function(Buffer) {
        function encryptByte(self, byteParam, decrypt) {
          var pad;
          var i = -1;
          var len = 8;
          var out = 0;
          var bit,
              value;
          while (++i < len) {
            pad = self._cipher.encryptBlock(self._prev);
            bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0;
            value = pad[0] ^ bit;
            out += ((value & 0x80) >> (i % 8));
            self._prev = shiftIn(self._prev, decrypt ? bit : value);
          }
          return out;
        }
        exports.encrypt = function(self, chunk, decrypt) {
          var len = chunk.length;
          var out = new Buffer(len);
          var i = -1;
          while (++i < len) {
            out[i] = encryptByte(self, chunk[i], decrypt);
          }
          return out;
        };
        function shiftIn(buffer, value) {
          var len = buffer.length;
          var i = -1;
          var out = new Buffer(buffer.length);
          buffer = Buffer.concat([buffer, new Buffer([value])]);
          while (++i < len) {
            out[i] = buffer[i] << 1 | buffer[i + 1] >> (7);
          }
          return out;
        }
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    29: [function(require, module, exports) {
      (function(Buffer) {
        function encryptByte(self, byteParam, decrypt) {
          var pad = self._cipher.encryptBlock(self._prev);
          var out = pad[0] ^ byteParam;
          self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])]);
          return out;
        }
        exports.encrypt = function(self, chunk, decrypt) {
          var len = chunk.length;
          var out = new Buffer(len);
          var i = -1;
          while (++i < len) {
            out[i] = encryptByte(self, chunk[i], decrypt);
          }
          return out;
        };
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    30: [function(require, module, exports) {
      (function(Buffer) {
        var xor = require('buffer-xor');
        function incr32(iv) {
          var len = iv.length;
          var item;
          while (len--) {
            item = iv.readUInt8(len);
            if (item === 255) {
              iv.writeUInt8(0, len);
            } else {
              item++;
              iv.writeUInt8(item, len);
              break;
            }
          }
        }
        function getBlock(self) {
          var out = self._cipher.encryptBlock(self._prev);
          incr32(self._prev);
          return out;
        }
        exports.encrypt = function(self, chunk) {
          while (self._cache.length < chunk.length) {
            self._cache = Buffer.concat([self._cache, getBlock(self)]);
          }
          var pad = self._cache.slice(0, chunk.length);
          self._cache = self._cache.slice(chunk.length);
          return xor(chunk, pad);
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "buffer-xor": 44
    }],
    31: [function(require, module, exports) {
      exports.encrypt = function(self, block) {
        return self._cipher.encryptBlock(block);
      };
      exports.decrypt = function(self, block) {
        return self._cipher.decryptBlock(block);
      };
    }, {}],
    32: [function(require, module, exports) {
      (function(Buffer) {
        var xor = require('buffer-xor');
        function getBlock(self) {
          self._prev = self._cipher.encryptBlock(self._prev);
          return self._prev;
        }
        exports.encrypt = function(self, chunk) {
          while (self._cache.length < chunk.length) {
            self._cache = Buffer.concat([self._cache, getBlock(self)]);
          }
          var pad = self._cache.slice(0, chunk.length);
          self._cache = self._cache.slice(chunk.length);
          return xor(chunk, pad);
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "buffer-xor": 44
    }],
    33: [function(require, module, exports) {
      (function(Buffer) {
        var aes = require('./aes');
        var Transform = require('cipher-base');
        var inherits = require('inherits');
        inherits(StreamCipher, Transform);
        module.exports = StreamCipher;
        function StreamCipher(mode, key, iv, decrypt) {
          if (!(this instanceof StreamCipher)) {
            return new StreamCipher(mode, key, iv);
          }
          Transform.call(this);
          this._cipher = new aes.AES(key);
          this._prev = new Buffer(iv.length);
          this._cache = new Buffer('');
          this._secCache = new Buffer('');
          this._decrypt = decrypt;
          iv.copy(this._prev);
          this._mode = mode;
        }
        StreamCipher.prototype._update = function(chunk) {
          return this._mode.encrypt(this, chunk, this._decrypt);
        };
        StreamCipher.prototype._final = function() {
          this._cipher.scrub();
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "./aes": 19,
      "buffer": 45,
      "cipher-base": 46,
      "inherits": 91
    }],
    34: [function(require, module, exports) {
      var ebtk = require('evp_bytestokey');
      var aes = require('browserify-aes/browser');
      var DES = require('browserify-des');
      var desModes = require('browserify-des/modes');
      var aesModes = require('browserify-aes/modes');
      function createCipher(suite, password) {
        var keyLen,
            ivLen;
        suite = suite.toLowerCase();
        if (aesModes[suite]) {
          keyLen = aesModes[suite].key;
          ivLen = aesModes[suite].iv;
        } else if (desModes[suite]) {
          keyLen = desModes[suite].key * 8;
          ivLen = desModes[suite].iv;
        } else {
          throw new TypeError('invalid suite type');
        }
        var keys = ebtk(password, false, keyLen, ivLen);
        return createCipheriv(suite, keys.key, keys.iv);
      }
      function createDecipher(suite, password) {
        var keyLen,
            ivLen;
        suite = suite.toLowerCase();
        if (aesModes[suite]) {
          keyLen = aesModes[suite].key;
          ivLen = aesModes[suite].iv;
        } else if (desModes[suite]) {
          keyLen = desModes[suite].key * 8;
          ivLen = desModes[suite].iv;
        } else {
          throw new TypeError('invalid suite type');
        }
        var keys = ebtk(password, false, keyLen, ivLen);
        return createDecipheriv(suite, keys.key, keys.iv);
      }
      function createCipheriv(suite, key, iv) {
        suite = suite.toLowerCase();
        if (aesModes[suite]) {
          return aes.createCipheriv(suite, key, iv);
        } else if (desModes[suite]) {
          return new DES({
            key: key,
            iv: iv,
            mode: suite
          });
        } else {
          throw new TypeError('invalid suite type');
        }
      }
      function createDecipheriv(suite, key, iv) {
        suite = suite.toLowerCase();
        if (aesModes[suite]) {
          return aes.createDecipheriv(suite, key, iv);
        } else if (desModes[suite]) {
          return new DES({
            key: key,
            iv: iv,
            mode: suite,
            decrypt: true
          });
        } else {
          throw new TypeError('invalid suite type');
        }
      }
      exports.createCipher = exports.Cipher = createCipher;
      exports.createCipheriv = exports.Cipheriv = createCipheriv;
      exports.createDecipher = exports.Decipher = createDecipher;
      exports.createDecipheriv = exports.Decipheriv = createDecipheriv;
      function getCiphers() {
        return Object.keys(desModes).concat(aes.getCiphers());
      }
      exports.listCiphers = exports.getCiphers = getCiphers;
    }, {
      "browserify-aes/browser": 21,
      "browserify-aes/modes": 25,
      "browserify-des": 35,
      "browserify-des/modes": 36,
      "evp_bytestokey": 82
    }],
    35: [function(require, module, exports) {
      (function(Buffer) {
        var CipherBase = require('cipher-base');
        var des = require('des.js');
        var inherits = require('inherits');
        var modes = {
          'des-ede3-cbc': des.CBC.instantiate(des.EDE),
          'des-ede3': des.EDE,
          'des-ede-cbc': des.CBC.instantiate(des.EDE),
          'des-ede': des.EDE,
          'des-cbc': des.CBC.instantiate(des.DES),
          'des-ecb': des.DES
        };
        modes.des = modes['des-cbc'];
        modes.des3 = modes['des-ede3-cbc'];
        module.exports = DES;
        inherits(DES, CipherBase);
        function DES(opts) {
          CipherBase.call(this);
          var modeName = opts.mode.toLowerCase();
          var mode = modes[modeName];
          var type;
          if (opts.decrypt) {
            type = 'decrypt';
          } else {
            type = 'encrypt';
          }
          var key = opts.key;
          if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
            key = Buffer.concat([key, key.slice(0, 8)]);
          }
          var iv = opts.iv;
          this._des = mode.create({
            key: key,
            iv: iv,
            type: type
          });
        }
        DES.prototype._update = function(data) {
          return new Buffer(this._des.update(data));
        };
        DES.prototype._final = function() {
          return new Buffer(this._des.final());
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "cipher-base": 46,
      "des.js": 54,
      "inherits": 91
    }],
    36: [function(require, module, exports) {
      exports['des-ecb'] = {
        key: 8,
        iv: 0
      };
      exports['des-cbc'] = exports.des = {
        key: 8,
        iv: 8
      };
      exports['des-ede3-cbc'] = exports.des3 = {
        key: 24,
        iv: 8
      };
      exports['des-ede3'] = {
        key: 24,
        iv: 0
      };
      exports['des-ede-cbc'] = {
        key: 16,
        iv: 8
      };
      exports['des-ede'] = {
        key: 16,
        iv: 0
      };
    }, {}],
    37: [function(require, module, exports) {
      (function(Buffer) {
        var bn = require('bn.js');
        var randomBytes = require('randombytes');
        module.exports = crt;
        function blind(priv) {
          var r = getr(priv);
          var blinder = r.toRed(bn.mont(priv.modulus)).redPow(new bn(priv.publicExponent)).fromRed();
          return {
            blinder: blinder,
            unblinder: r.invm(priv.modulus)
          };
        }
        function crt(msg, priv) {
          var blinds = blind(priv);
          var len = priv.modulus.byteLength();
          var mod = bn.mont(priv.modulus);
          var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
          var c1 = blinded.toRed(bn.mont(priv.prime1));
          var c2 = blinded.toRed(bn.mont(priv.prime2));
          var qinv = priv.coefficient;
          var p = priv.prime1;
          var q = priv.prime2;
          var m1 = c1.redPow(priv.exponent1);
          var m2 = c2.redPow(priv.exponent2);
          m1 = m1.fromRed();
          m2 = m2.fromRed();
          var h = m1.isub(m2).imul(qinv).umod(p);
          h.imul(q);
          m2.iadd(h);
          return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
        }
        crt.getr = getr;
        function getr(priv) {
          var len = priv.modulus.byteLength();
          var r = new bn(randomBytes(len));
          while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
            r = new bn(randomBytes(len));
          }
          return r;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "bn.js": 16,
      "buffer": 45,
      "randombytes": 109
    }],
    38: [function(require, module, exports) {
      (function(Buffer) {
        'use strict';
        exports['RSA-SHA224'] = exports.sha224WithRSAEncryption = {
          sign: 'rsa',
          hash: 'sha224',
          id: new Buffer('302d300d06096086480165030402040500041c', 'hex')
        };
        exports['RSA-SHA256'] = exports.sha256WithRSAEncryption = {
          sign: 'rsa',
          hash: 'sha256',
          id: new Buffer('3031300d060960864801650304020105000420', 'hex')
        };
        exports['RSA-SHA384'] = exports.sha384WithRSAEncryption = {
          sign: 'rsa',
          hash: 'sha384',
          id: new Buffer('3041300d060960864801650304020205000430', 'hex')
        };
        exports['RSA-SHA512'] = exports.sha512WithRSAEncryption = {
          sign: 'rsa',
          hash: 'sha512',
          id: new Buffer('3051300d060960864801650304020305000440', 'hex')
        };
        exports['RSA-SHA1'] = {
          sign: 'rsa',
          hash: 'sha1',
          id: new Buffer('3021300906052b0e03021a05000414', 'hex')
        };
        exports['ecdsa-with-SHA1'] = {
          sign: 'ecdsa',
          hash: 'sha1',
          id: new Buffer('', 'hex')
        };
        exports.DSA = exports['DSA-SHA1'] = exports['DSA-SHA'] = {
          sign: 'dsa',
          hash: 'sha1',
          id: new Buffer('', 'hex')
        };
        exports['DSA-SHA224'] = exports['DSA-WITH-SHA224'] = {
          sign: 'dsa',
          hash: 'sha224',
          id: new Buffer('', 'hex')
        };
        exports['DSA-SHA256'] = exports['DSA-WITH-SHA256'] = {
          sign: 'dsa',
          hash: 'sha256',
          id: new Buffer('', 'hex')
        };
        exports['DSA-SHA384'] = exports['DSA-WITH-SHA384'] = {
          sign: 'dsa',
          hash: 'sha384',
          id: new Buffer('', 'hex')
        };
        exports['DSA-SHA512'] = exports['DSA-WITH-SHA512'] = {
          sign: 'dsa',
          hash: 'sha512',
          id: new Buffer('', 'hex')
        };
        exports['DSA-RIPEMD160'] = {
          sign: 'dsa',
          hash: 'rmd160',
          id: new Buffer('', 'hex')
        };
        exports['RSA-RIPEMD160'] = exports.ripemd160WithRSA = {
          sign: 'rsa',
          hash: 'rmd160',
          id: new Buffer('3021300906052b2403020105000414', 'hex')
        };
        exports['RSA-MD5'] = exports.md5WithRSAEncryption = {
          sign: 'rsa',
          hash: 'md5',
          id: new Buffer('3020300c06082a864886f70d020505000410', 'hex')
        };
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    39: [function(require, module, exports) {
      (function(Buffer) {
        var _algos = require('./algos');
        var createHash = require('create-hash');
        var inherits = require('inherits');
        var sign = require('./sign');
        var stream = require('stream');
        var verify = require('./verify');
        var algos = {};
        Object.keys(_algos).forEach(function(key) {
          algos[key] = algos[key.toLowerCase()] = _algos[key];
        });
        function Sign(algorithm) {
          stream.Writable.call(this);
          var data = algos[algorithm];
          if (!data) {
            throw new Error('Unknown message digest');
          }
          this._hashType = data.hash;
          this._hash = createHash(data.hash);
          this._tag = data.id;
          this._signType = data.sign;
        }
        inherits(Sign, stream.Writable);
        Sign.prototype._write = function _write(data, _, done) {
          this._hash.update(data);
          done();
        };
        Sign.prototype.update = function update(data, enc) {
          if (typeof data === 'string') {
            data = new Buffer(data, enc);
          }
          this._hash.update(data);
          return this;
        };
        Sign.prototype.sign = function signMethod(key, enc) {
          this.end();
          var hash = this._hash.digest();
          var sig = sign(Buffer.concat([this._tag, hash]), key, this._hashType, this._signType);
          return enc ? sig.toString(enc) : sig;
        };
        function Verify(algorithm) {
          stream.Writable.call(this);
          var data = algos[algorithm];
          if (!data) {
            throw new Error('Unknown message digest');
          }
          this._hash = createHash(data.hash);
          this._tag = data.id;
          this._signType = data.sign;
        }
        inherits(Verify, stream.Writable);
        Verify.prototype._write = function _write(data, _, done) {
          this._hash.update(data);
          done();
        };
        Verify.prototype.update = function update(data, enc) {
          if (typeof data === 'string') {
            data = new Buffer(data, enc);
          }
          this._hash.update(data);
          return this;
        };
        Verify.prototype.verify = function verifyMethod(key, sig, enc) {
          if (typeof sig === 'string') {
            sig = new Buffer(sig, enc);
          }
          this.end();
          var hash = this._hash.digest();
          return verify(sig, Buffer.concat([this._tag, hash]), key, this._signType);
        };
        function createSign(algorithm) {
          return new Sign(algorithm);
        }
        function createVerify(algorithm) {
          return new Verify(algorithm);
        }
        module.exports = {
          Sign: createSign,
          Verify: createVerify,
          createSign: createSign,
          createVerify: createVerify
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "./algos": 38,
      "./sign": 41,
      "./verify": 42,
      "buffer": 45,
      "create-hash": 49,
      "inherits": 91,
      "stream": 129
    }],
    40: [function(require, module, exports) {
      'use strict';
      exports['1.3.132.0.10'] = 'secp256k1';
      exports['1.3.132.0.33'] = 'p224';
      exports['1.2.840.10045.3.1.1'] = 'p192';
      exports['1.2.840.10045.3.1.7'] = 'p256';
      exports['1.3.132.0.34'] = 'p384';
      exports['1.3.132.0.35'] = 'p521';
    }, {}],
    41: [function(require, module, exports) {
      (function(Buffer) {
        var createHmac = require('create-hmac');
        var crt = require('browserify-rsa');
        var curves = require('./curves');
        var elliptic = require('elliptic');
        var parseKeys = require('parse-asn1');
        var BN = require('bn.js');
        var EC = elliptic.ec;
        function sign(hash, key, hashType, signType) {
          var priv = parseKeys(key);
          if (priv.curve) {
            if (signType !== 'ecdsa')
              throw new Error('wrong private key type');
            return ecSign(hash, priv);
          } else if (priv.type === 'dsa') {
            if (signType !== 'dsa') {
              throw new Error('wrong private key type');
            }
            return dsaSign(hash, priv, hashType);
          } else {
            if (signType !== 'rsa')
              throw new Error('wrong private key type');
          }
          var len = priv.modulus.byteLength();
          var pad = [0, 1];
          while (hash.length + pad.length + 1 < len) {
            pad.push(0xff);
          }
          pad.push(0x00);
          var i = -1;
          while (++i < hash.length) {
            pad.push(hash[i]);
          }
          var out = crt(pad, priv);
          return out;
        }
        function ecSign(hash, priv) {
          var curveId = curves[priv.curve.join('.')];
          if (!curveId)
            throw new Error('unknown curve ' + priv.curve.join('.'));
          var curve = new EC(curveId);
          var key = curve.genKeyPair();
          key._importPrivate(priv.privateKey);
          var out = key.sign(hash);
          return new Buffer(out.toDER());
        }
        function dsaSign(hash, priv, algo) {
          var x = priv.params.priv_key;
          var p = priv.params.p;
          var q = priv.params.q;
          var g = priv.params.g;
          var r = new BN(0);
          var k;
          var H = bits2int(hash, q).mod(q);
          var s = false;
          var kv = getKey(x, q, hash, algo);
          while (s === false) {
            k = makeKey(q, kv, algo);
            r = makeR(g, k, p, q);
            s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
            if (!s.cmpn(0)) {
              s = false;
              r = new BN(0);
            }
          }
          return toDER(r, s);
        }
        function toDER(r, s) {
          r = r.toArray();
          s = s.toArray();
          if (r[0] & 0x80) {
            r = [0].concat(r);
          }
          if (s[0] & 0x80) {
            s = [0].concat(s);
          }
          var total = r.length + s.length + 4;
          var res = [0x30, total, 0x02, r.length];
          res = res.concat(r, [0x02, s.length], s);
          return new Buffer(res);
        }
        function getKey(x, q, hash, algo) {
          x = new Buffer(x.toArray());
          if (x.length < q.byteLength()) {
            var zeros = new Buffer(q.byteLength() - x.length);
            zeros.fill(0);
            x = Buffer.concat([zeros, x]);
          }
          var hlen = hash.length;
          var hbits = bits2octets(hash, q);
          var v = new Buffer(hlen);
          v.fill(1);
          var k = new Buffer(hlen);
          k.fill(0);
          k = createHmac(algo, k).update(v).update(new Buffer([0])).update(x).update(hbits).digest();
          v = createHmac(algo, k).update(v).digest();
          k = createHmac(algo, k).update(v).update(new Buffer([1])).update(x).update(hbits).digest();
          v = createHmac(algo, k).update(v).digest();
          return {
            k: k,
            v: v
          };
        }
        function bits2int(obits, q) {
          var bits = new BN(obits);
          var shift = (obits.length << 3) - q.bitLength();
          if (shift > 0) {
            bits.ishrn(shift);
          }
          return bits;
        }
        function bits2octets(bits, q) {
          bits = bits2int(bits, q);
          bits = bits.mod(q);
          var out = new Buffer(bits.toArray());
          if (out.length < q.byteLength()) {
            var zeros = new Buffer(q.byteLength() - out.length);
            zeros.fill(0);
            out = Buffer.concat([zeros, out]);
          }
          return out;
        }
        function makeKey(q, kv, algo) {
          var t,
              k;
          do {
            t = new Buffer('');
            while (t.length * 8 < q.bitLength()) {
              kv.v = createHmac(algo, kv.k).update(kv.v).digest();
              t = Buffer.concat([t, kv.v]);
            }
            k = bits2int(t, q);
            kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([0])).digest();
            kv.v = createHmac(algo, kv.k).update(kv.v).digest();
          } while (k.cmp(q) !== -1);
          return k;
        }
        function makeR(g, k, p, q) {
          return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
        }
        module.exports = sign;
        module.exports.getKey = getKey;
        module.exports.makeKey = makeKey;
      }).call(this, require("buffer").Buffer);
    }, {
      "./curves": 40,
      "bn.js": 16,
      "browserify-rsa": 37,
      "buffer": 45,
      "create-hmac": 52,
      "elliptic": 64,
      "parse-asn1": 99
    }],
    42: [function(require, module, exports) {
      (function(Buffer) {
        var curves = require('./curves');
        var elliptic = require('elliptic');
        var parseKeys = require('parse-asn1');
        var BN = require('bn.js');
        var EC = elliptic.ec;
        function verify(sig, hash, key, signType) {
          var pub = parseKeys(key);
          if (pub.type === 'ec') {
            if (signType !== 'ecdsa') {
              throw new Error('wrong public key type');
            }
            return ecVerify(sig, hash, pub);
          } else if (pub.type === 'dsa') {
            if (signType !== 'dsa') {
              throw new Error('wrong public key type');
            }
            return dsaVerify(sig, hash, pub);
          } else {
            if (signType !== 'rsa') {
              throw new Error('wrong public key type');
            }
          }
          var len = pub.modulus.byteLength();
          var pad = [1];
          var padNum = 0;
          while (hash.length + pad.length + 2 < len) {
            pad.push(0xff);
            padNum++;
          }
          pad.push(0x00);
          var i = -1;
          while (++i < hash.length) {
            pad.push(hash[i]);
          }
          pad = new Buffer(pad);
          var red = BN.mont(pub.modulus);
          sig = new BN(sig).toRed(red);
          sig = sig.redPow(new BN(pub.publicExponent));
          sig = new Buffer(sig.fromRed().toArray());
          var out = 0;
          if (padNum < 8) {
            out = 1;
          }
          len = Math.min(sig.length, pad.length);
          if (sig.length !== pad.length) {
            out = 1;
          }
          i = -1;
          while (++i < len) {
            out |= (sig[i] ^ pad[i]);
          }
          return out === 0;
        }
        function ecVerify(sig, hash, pub) {
          var curveId = curves[pub.data.algorithm.curve.join('.')];
          if (!curveId)
            throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'));
          var curve = new EC(curveId);
          var pubkey = pub.data.subjectPrivateKey.data;
          return curve.verify(hash, sig, pubkey);
        }
        function dsaVerify(sig, hash, pub) {
          var p = pub.data.p;
          var q = pub.data.q;
          var g = pub.data.g;
          var y = pub.data.pub_key;
          var unpacked = parseKeys.signature.decode(sig, 'der');
          var s = unpacked.s;
          var r = unpacked.r;
          checkValue(s, q);
          checkValue(r, q);
          var montp = BN.mont(p);
          var w = s.invm(q);
          var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);
          return !v.cmp(r);
        }
        function checkValue(b, q) {
          if (b.cmpn(0) <= 0) {
            throw new Error('invalid sig');
          }
          if (b.cmp(q) >= q) {
            throw new Error('invalid sig');
          }
        }
        module.exports = verify;
      }).call(this, require("buffer").Buffer);
    }, {
      "./curves": 40,
      "bn.js": 16,
      "buffer": 45,
      "elliptic": 64,
      "parse-asn1": 99
    }],
    43: [function(require, module, exports) {
      (function(global) {
        'use strict';
        var buffer = require('buffer');
        var Buffer = buffer.Buffer;
        var SlowBuffer = buffer.SlowBuffer;
        var MAX_LEN = buffer.kMaxLength || 2147483647;
        exports.alloc = function alloc(size, fill, encoding) {
          if (typeof Buffer.alloc === 'function') {
            return Buffer.alloc(size, fill, encoding);
          }
          if (typeof encoding === 'number') {
            throw new TypeError('encoding must not be number');
          }
          if (typeof size !== 'number') {
            throw new TypeError('size must be a number');
          }
          if (size > MAX_LEN) {
            throw new RangeError('size is too large');
          }
          var enc = encoding;
          var _fill = fill;
          if (_fill === undefined) {
            enc = undefined;
            _fill = 0;
          }
          var buf = new Buffer(size);
          if (typeof _fill === 'string') {
            var fillBuf = new Buffer(_fill, enc);
            var flen = fillBuf.length;
            var i = -1;
            while (++i < size) {
              buf[i] = fillBuf[i % flen];
            }
          } else {
            buf.fill(_fill);
          }
          return buf;
        };
        exports.allocUnsafe = function allocUnsafe(size) {
          if (typeof Buffer.allocUnsafe === 'function') {
            return Buffer.allocUnsafe(size);
          }
          if (typeof size !== 'number') {
            throw new TypeError('size must be a number');
          }
          if (size > MAX_LEN) {
            throw new RangeError('size is too large');
          }
          return new Buffer(size);
        };
        exports.from = function from(value, encodingOrOffset, length) {
          if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {
            return Buffer.from(value, encodingOrOffset, length);
          }
          if (typeof value === 'number') {
            throw new TypeError('"value" argument must not be a number');
          }
          if (typeof value === 'string') {
            return new Buffer(value, encodingOrOffset);
          }
          if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
            var offset = encodingOrOffset;
            if (arguments.length === 1) {
              return new Buffer(value);
            }
            if (typeof offset === 'undefined') {
              offset = 0;
            }
            var len = length;
            if (typeof len === 'undefined') {
              len = value.byteLength - offset;
            }
            if (offset >= value.byteLength) {
              throw new RangeError('\'offset\' is out of bounds');
            }
            if (len > value.byteLength - offset) {
              throw new RangeError('\'length\' is out of bounds');
            }
            return new Buffer(value.slice(offset, offset + len));
          }
          if (Buffer.isBuffer(value)) {
            var out = new Buffer(value.length);
            value.copy(out, 0, 0, value.length);
            return out;
          }
          if (value) {
            if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {
              return new Buffer(value);
            }
            if (value.type === 'Buffer' && Array.isArray(value.data)) {
              return new Buffer(value.data);
            }
          }
          throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');
        };
        exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
          if (typeof Buffer.allocUnsafeSlow === 'function') {
            return Buffer.allocUnsafeSlow(size);
          }
          if (typeof size !== 'number') {
            throw new TypeError('size must be a number');
          }
          if (size >= MAX_LEN) {
            throw new RangeError('size is too large');
          }
          return new SlowBuffer(size);
        };
      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {"buffer": 45}],
    44: [function(require, module, exports) {
      (function(Buffer) {
        module.exports = function xor(a, b) {
          var length = Math.min(a.length, b.length);
          var buffer = new Buffer(length);
          for (var i = 0; i < length; ++i) {
            buffer[i] = a[i] ^ b[i];
          }
          return buffer;
        };
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    45: [function(require, module, exports) {
      (function(global) {
        'use strict';
        var base64 = require('base64-js');
        var ieee754 = require('ieee754');
        var isArray = require('isarray');
        exports.Buffer = Buffer;
        exports.SlowBuffer = SlowBuffer;
        exports.INSPECT_MAX_BYTES = 50;
        Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
        exports.kMaxLength = kMaxLength();
        function typedArraySupport() {
          try {
            var arr = new Uint8Array(1);
            arr.__proto__ = {
              __proto__: Uint8Array.prototype,
              foo: function() {
                return 42;
              }
            };
            return arr.foo() === 42 && typeof arr.subarray === 'function' && arr.subarray(1, 1).byteLength === 0;
          } catch (e) {
            return false;
          }
        }
        function kMaxLength() {
          return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
        }
        function createBuffer(that, length) {
          if (kMaxLength() < length) {
            throw new RangeError('Invalid typed array length');
          }
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            that = new Uint8Array(length);
            that.__proto__ = Buffer.prototype;
          } else {
            if (that === null) {
              that = new Buffer(length);
            }
            that.length = length;
          }
          return that;
        }
        function Buffer(arg, encodingOrOffset, length) {
          if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
            return new Buffer(arg, encodingOrOffset, length);
          }
          if (typeof arg === 'number') {
            if (typeof encodingOrOffset === 'string') {
              throw new Error('If encoding is specified then the first argument must be a string');
            }
            return allocUnsafe(this, arg);
          }
          return from(this, arg, encodingOrOffset, length);
        }
        Buffer.poolSize = 8192;
        Buffer._augment = function(arr) {
          arr.__proto__ = Buffer.prototype;
          return arr;
        };
        function from(that, value, encodingOrOffset, length) {
          if (typeof value === 'number') {
            throw new TypeError('"value" argument must not be a number');
          }
          if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
            return fromArrayBuffer(that, value, encodingOrOffset, length);
          }
          if (typeof value === 'string') {
            return fromString(that, value, encodingOrOffset);
          }
          return fromObject(that, value);
        }
        Buffer.from = function(value, encodingOrOffset, length) {
          return from(null, value, encodingOrOffset, length);
        };
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          Buffer.prototype.__proto__ = Uint8Array.prototype;
          Buffer.__proto__ = Uint8Array;
          if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
            Object.defineProperty(Buffer, Symbol.species, {
              value: null,
              configurable: true
            });
          }
        }
        function assertSize(size) {
          if (typeof size !== 'number') {
            throw new TypeError('"size" argument must be a number');
          }
        }
        function alloc(that, size, fill, encoding) {
          assertSize(size);
          if (size <= 0) {
            return createBuffer(that, size);
          }
          if (fill !== undefined) {
            return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
          }
          return createBuffer(that, size);
        }
        Buffer.alloc = function(size, fill, encoding) {
          return alloc(null, size, fill, encoding);
        };
        function allocUnsafe(that, size) {
          assertSize(size);
          that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
          if (!Buffer.TYPED_ARRAY_SUPPORT) {
            for (var i = 0; i < size; ++i) {
              that[i] = 0;
            }
          }
          return that;
        }
        Buffer.allocUnsafe = function(size) {
          return allocUnsafe(null, size);
        };
        Buffer.allocUnsafeSlow = function(size) {
          return allocUnsafe(null, size);
        };
        function fromString(that, string, encoding) {
          if (typeof encoding !== 'string' || encoding === '') {
            encoding = 'utf8';
          }
          if (!Buffer.isEncoding(encoding)) {
            throw new TypeError('"encoding" must be a valid string encoding');
          }
          var length = byteLength(string, encoding) | 0;
          that = createBuffer(that, length);
          var actual = that.write(string, encoding);
          if (actual !== length) {
            that = that.slice(0, actual);
          }
          return that;
        }
        function fromArrayLike(that, array) {
          var length = checked(array.length) | 0;
          that = createBuffer(that, length);
          for (var i = 0; i < length; i += 1) {
            that[i] = array[i] & 255;
          }
          return that;
        }
        function fromArrayBuffer(that, array, byteOffset, length) {
          array.byteLength;
          if (byteOffset < 0 || array.byteLength < byteOffset) {
            throw new RangeError('\'offset\' is out of bounds');
          }
          if (array.byteLength < byteOffset + (length || 0)) {
            throw new RangeError('\'length\' is out of bounds');
          }
          if (byteOffset === undefined && length === undefined) {
            array = new Uint8Array(array);
          } else if (length === undefined) {
            array = new Uint8Array(array, byteOffset);
          } else {
            array = new Uint8Array(array, byteOffset, length);
          }
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            that = array;
            that.__proto__ = Buffer.prototype;
          } else {
            that = fromArrayLike(that, array);
          }
          return that;
        }
        function fromObject(that, obj) {
          if (Buffer.isBuffer(obj)) {
            var len = checked(obj.length) | 0;
            that = createBuffer(that, len);
            if (that.length === 0) {
              return that;
            }
            obj.copy(that, 0, 0, len);
            return that;
          }
          if (obj) {
            if ((typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
              if (typeof obj.length !== 'number' || isnan(obj.length)) {
                return createBuffer(that, 0);
              }
              return fromArrayLike(that, obj);
            }
            if (obj.type === 'Buffer' && isArray(obj.data)) {
              return fromArrayLike(that, obj.data);
            }
          }
          throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
        }
        function checked(length) {
          if (length >= kMaxLength()) {
            throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
          }
          return length | 0;
        }
        function SlowBuffer(length) {
          if (+length != length) {
            length = 0;
          }
          return Buffer.alloc(+length);
        }
        Buffer.isBuffer = function isBuffer(b) {
          return !!(b != null && b._isBuffer);
        };
        Buffer.compare = function compare(a, b) {
          if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
            throw new TypeError('Arguments must be Buffers');
          }
          if (a === b)
            return 0;
          var x = a.length;
          var y = b.length;
          for (var i = 0,
              len = Math.min(x, y); i < len; ++i) {
            if (a[i] !== b[i]) {
              x = a[i];
              y = b[i];
              break;
            }
          }
          if (x < y)
            return -1;
          if (y < x)
            return 1;
          return 0;
        };
        Buffer.isEncoding = function isEncoding(encoding) {
          switch (String(encoding).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return true;
            default:
              return false;
          }
        };
        Buffer.concat = function concat(list, length) {
          if (!isArray(list)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          }
          if (list.length === 0) {
            return Buffer.alloc(0);
          }
          var i;
          if (length === undefined) {
            length = 0;
            for (i = 0; i < list.length; ++i) {
              length += list[i].length;
            }
          }
          var buffer = Buffer.allocUnsafe(length);
          var pos = 0;
          for (i = 0; i < list.length; ++i) {
            var buf = list[i];
            if (!Buffer.isBuffer(buf)) {
              throw new TypeError('"list" argument must be an Array of Buffers');
            }
            buf.copy(buffer, pos);
            pos += buf.length;
          }
          return buffer;
        };
        function byteLength(string, encoding) {
          if (Buffer.isBuffer(string)) {
            return string.length;
          }
          if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
            return string.byteLength;
          }
          if (typeof string !== 'string') {
            string = '' + string;
          }
          var len = string.length;
          if (len === 0)
            return 0;
          var loweredCase = false;
          for (; ; ) {
            switch (encoding) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                return len;
              case 'utf8':
              case 'utf-8':
              case undefined:
                return utf8ToBytes(string).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return len * 2;
              case 'hex':
                return len >>> 1;
              case 'base64':
                return base64ToBytes(string).length;
              default:
                if (loweredCase)
                  return utf8ToBytes(string).length;
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
        }
        Buffer.byteLength = byteLength;
        function slowToString(encoding, start, end) {
          var loweredCase = false;
          if (start === undefined || start < 0) {
            start = 0;
          }
          if (start > this.length) {
            return '';
          }
          if (end === undefined || end > this.length) {
            end = this.length;
          }
          if (end <= 0) {
            return '';
          }
          end >>>= 0;
          start >>>= 0;
          if (end <= start) {
            return '';
          }
          if (!encoding)
            encoding = 'utf8';
          while (true) {
            switch (encoding) {
              case 'hex':
                return hexSlice(this, start, end);
              case 'utf8':
              case 'utf-8':
                return utf8Slice(this, start, end);
              case 'ascii':
                return asciiSlice(this, start, end);
              case 'latin1':
              case 'binary':
                return latin1Slice(this, start, end);
              case 'base64':
                return base64Slice(this, start, end);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return utf16leSlice(this, start, end);
              default:
                if (loweredCase)
                  throw new TypeError('Unknown encoding: ' + encoding);
                encoding = (encoding + '').toLowerCase();
                loweredCase = true;
            }
          }
        }
        Buffer.prototype._isBuffer = true;
        function swap(b, n, m) {
          var i = b[n];
          b[n] = b[m];
          b[m] = i;
        }
        Buffer.prototype.swap16 = function swap16() {
          var len = this.length;
          if (len % 2 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 16-bits');
          }
          for (var i = 0; i < len; i += 2) {
            swap(this, i, i + 1);
          }
          return this;
        };
        Buffer.prototype.swap32 = function swap32() {
          var len = this.length;
          if (len % 4 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 32-bits');
          }
          for (var i = 0; i < len; i += 4) {
            swap(this, i, i + 3);
            swap(this, i + 1, i + 2);
          }
          return this;
        };
        Buffer.prototype.swap64 = function swap64() {
          var len = this.length;
          if (len % 8 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 64-bits');
          }
          for (var i = 0; i < len; i += 8) {
            swap(this, i, i + 7);
            swap(this, i + 1, i + 6);
            swap(this, i + 2, i + 5);
            swap(this, i + 3, i + 4);
          }
          return this;
        };
        Buffer.prototype.toString = function toString() {
          var length = this.length | 0;
          if (length === 0)
            return '';
          if (arguments.length === 0)
            return utf8Slice(this, 0, length);
          return slowToString.apply(this, arguments);
        };
        Buffer.prototype.equals = function equals(b) {
          if (!Buffer.isBuffer(b))
            throw new TypeError('Argument must be a Buffer');
          if (this === b)
            return true;
          return Buffer.compare(this, b) === 0;
        };
        Buffer.prototype.inspect = function inspect() {
          var str = '';
          var max = exports.INSPECT_MAX_BYTES;
          if (this.length > 0) {
            str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
            if (this.length > max)
              str += ' ... ';
          }
          return '<Buffer ' + str + '>';
        };
        Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
          if (!Buffer.isBuffer(target)) {
            throw new TypeError('Argument must be a Buffer');
          }
          if (start === undefined) {
            start = 0;
          }
          if (end === undefined) {
            end = target ? target.length : 0;
          }
          if (thisStart === undefined) {
            thisStart = 0;
          }
          if (thisEnd === undefined) {
            thisEnd = this.length;
          }
          if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
            throw new RangeError('out of range index');
          }
          if (thisStart >= thisEnd && start >= end) {
            return 0;
          }
          if (thisStart >= thisEnd) {
            return -1;
          }
          if (start >= end) {
            return 1;
          }
          start >>>= 0;
          end >>>= 0;
          thisStart >>>= 0;
          thisEnd >>>= 0;
          if (this === target)
            return 0;
          var x = thisEnd - thisStart;
          var y = end - start;
          var len = Math.min(x, y);
          var thisCopy = this.slice(thisStart, thisEnd);
          var targetCopy = target.slice(start, end);
          for (var i = 0; i < len; ++i) {
            if (thisCopy[i] !== targetCopy[i]) {
              x = thisCopy[i];
              y = targetCopy[i];
              break;
            }
          }
          if (x < y)
            return -1;
          if (y < x)
            return 1;
          return 0;
        };
        function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
          if (buffer.length === 0)
            return -1;
          if (typeof byteOffset === 'string') {
            encoding = byteOffset;
            byteOffset = 0;
          } else if (byteOffset > 0x7fffffff) {
            byteOffset = 0x7fffffff;
          } else if (byteOffset < -0x80000000) {
            byteOffset = -0x80000000;
          }
          byteOffset = +byteOffset;
          if (isNaN(byteOffset)) {
            byteOffset = dir ? 0 : (buffer.length - 1);
          }
          if (byteOffset < 0)
            byteOffset = buffer.length + byteOffset;
          if (byteOffset >= buffer.length) {
            if (dir)
              return -1;
            else
              byteOffset = buffer.length - 1;
          } else if (byteOffset < 0) {
            if (dir)
              byteOffset = 0;
            else
              return -1;
          }
          if (typeof val === 'string') {
            val = Buffer.from(val, encoding);
          }
          if (Buffer.isBuffer(val)) {
            if (val.length === 0) {
              return -1;
            }
            return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
          } else if (typeof val === 'number') {
            val = val & 0xFF;
            if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
              if (dir) {
                return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
              } else {
                return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
              }
            }
            return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
          }
          throw new TypeError('val must be string, number or Buffer');
        }
        function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
          var indexSize = 1;
          var arrLength = arr.length;
          var valLength = val.length;
          if (encoding !== undefined) {
            encoding = String(encoding).toLowerCase();
            if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
              if (arr.length < 2 || val.length < 2) {
                return -1;
              }
              indexSize = 2;
              arrLength /= 2;
              valLength /= 2;
              byteOffset /= 2;
            }
          }
          function read(buf, i) {
            if (indexSize === 1) {
              return buf[i];
            } else {
              return buf.readUInt16BE(i * indexSize);
            }
          }
          var i;
          if (dir) {
            var foundIndex = -1;
            for (i = byteOffset; i < arrLength; i++) {
              if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                if (foundIndex === -1)
                  foundIndex = i;
                if (i - foundIndex + 1 === valLength)
                  return foundIndex * indexSize;
              } else {
                if (foundIndex !== -1)
                  i -= i - foundIndex;
                foundIndex = -1;
              }
            }
          } else {
            if (byteOffset + valLength > arrLength)
              byteOffset = arrLength - valLength;
            for (i = byteOffset; i >= 0; i--) {
              var found = true;
              for (var j = 0; j < valLength; j++) {
                if (read(arr, i + j) !== read(val, j)) {
                  found = false;
                  break;
                }
              }
              if (found)
                return i;
            }
          }
          return -1;
        }
        Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
          return this.indexOf(val, byteOffset, encoding) !== -1;
        };
        Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
          return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
        };
        Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
          return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
        };
        function hexWrite(buf, string, offset, length) {
          offset = Number(offset) || 0;
          var remaining = buf.length - offset;
          if (!length) {
            length = remaining;
          } else {
            length = Number(length);
            if (length > remaining) {
              length = remaining;
            }
          }
          var strLen = string.length;
          if (strLen % 2 !== 0)
            throw new TypeError('Invalid hex string');
          if (length > strLen / 2) {
            length = strLen / 2;
          }
          for (var i = 0; i < length; ++i) {
            var parsed = parseInt(string.substr(i * 2, 2), 16);
            if (isNaN(parsed))
              return i;
            buf[offset + i] = parsed;
          }
          return i;
        }
        function utf8Write(buf, string, offset, length) {
          return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
        }
        function asciiWrite(buf, string, offset, length) {
          return blitBuffer(asciiToBytes(string), buf, offset, length);
        }
        function latin1Write(buf, string, offset, length) {
          return asciiWrite(buf, string, offset, length);
        }
        function base64Write(buf, string, offset, length) {
          return blitBuffer(base64ToBytes(string), buf, offset, length);
        }
        function ucs2Write(buf, string, offset, length) {
          return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
        }
        Buffer.prototype.write = function write(string, offset, length, encoding) {
          if (offset === undefined) {
            encoding = 'utf8';
            length = this.length;
            offset = 0;
          } else if (length === undefined && typeof offset === 'string') {
            encoding = offset;
            length = this.length;
            offset = 0;
          } else if (isFinite(offset)) {
            offset = offset | 0;
            if (isFinite(length)) {
              length = length | 0;
              if (encoding === undefined)
                encoding = 'utf8';
            } else {
              encoding = length;
              length = undefined;
            }
          } else {
            throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
          }
          var remaining = this.length - offset;
          if (length === undefined || length > remaining)
            length = remaining;
          if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
            throw new RangeError('Attempt to write outside buffer bounds');
          }
          if (!encoding)
            encoding = 'utf8';
          var loweredCase = false;
          for (; ; ) {
            switch (encoding) {
              case 'hex':
                return hexWrite(this, string, offset, length);
              case 'utf8':
              case 'utf-8':
                return utf8Write(this, string, offset, length);
              case 'ascii':
                return asciiWrite(this, string, offset, length);
              case 'latin1':
              case 'binary':
                return latin1Write(this, string, offset, length);
              case 'base64':
                return base64Write(this, string, offset, length);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return ucs2Write(this, string, offset, length);
              default:
                if (loweredCase)
                  throw new TypeError('Unknown encoding: ' + encoding);
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
        };
        Buffer.prototype.toJSON = function toJSON() {
          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0)
          };
        };
        function base64Slice(buf, start, end) {
          if (start === 0 && end === buf.length) {
            return base64.fromByteArray(buf);
          } else {
            return base64.fromByteArray(buf.slice(start, end));
          }
        }
        function utf8Slice(buf, start, end) {
          end = Math.min(buf.length, end);
          var res = [];
          var i = start;
          while (i < end) {
            var firstByte = buf[i];
            var codePoint = null;
            var bytesPerSequence = (firstByte > 0xEF) ? 4 : (firstByte > 0xDF) ? 3 : (firstByte > 0xBF) ? 2 : 1;
            if (i + bytesPerSequence <= end) {
              var secondByte,
                  thirdByte,
                  fourthByte,
                  tempCodePoint;
              switch (bytesPerSequence) {
                case 1:
                  if (firstByte < 0x80) {
                    codePoint = firstByte;
                  }
                  break;
                case 2:
                  secondByte = buf[i + 1];
                  if ((secondByte & 0xC0) === 0x80) {
                    tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
                    if (tempCodePoint > 0x7F) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 3:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                    tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
                    if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 4:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  fourthByte = buf[i + 3];
                  if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                    tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
                    if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                      codePoint = tempCodePoint;
                    }
                  }
              }
            }
            if (codePoint === null) {
              codePoint = 0xFFFD;
              bytesPerSequence = 1;
            } else if (codePoint > 0xFFFF) {
              codePoint -= 0x10000;
              res.push(codePoint >>> 10 & 0x3FF | 0xD800);
              codePoint = 0xDC00 | codePoint & 0x3FF;
            }
            res.push(codePoint);
            i += bytesPerSequence;
          }
          return decodeCodePointsArray(res);
        }
        var MAX_ARGUMENTS_LENGTH = 0x1000;
        function decodeCodePointsArray(codePoints) {
          var len = codePoints.length;
          if (len <= MAX_ARGUMENTS_LENGTH) {
            return String.fromCharCode.apply(String, codePoints);
          }
          var res = '';
          var i = 0;
          while (i < len) {
            res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
          }
          return res;
        }
        function asciiSlice(buf, start, end) {
          var ret = '';
          end = Math.min(buf.length, end);
          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i] & 0x7F);
          }
          return ret;
        }
        function latin1Slice(buf, start, end) {
          var ret = '';
          end = Math.min(buf.length, end);
          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i]);
          }
          return ret;
        }
        function hexSlice(buf, start, end) {
          var len = buf.length;
          if (!start || start < 0)
            start = 0;
          if (!end || end < 0 || end > len)
            end = len;
          var out = '';
          for (var i = start; i < end; ++i) {
            out += toHex(buf[i]);
          }
          return out;
        }
        function utf16leSlice(buf, start, end) {
          var bytes = buf.slice(start, end);
          var res = '';
          for (var i = 0; i < bytes.length; i += 2) {
            res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
          }
          return res;
        }
        Buffer.prototype.slice = function slice(start, end) {
          var len = this.length;
          start = ~~start;
          end = end === undefined ? len : ~~end;
          if (start < 0) {
            start += len;
            if (start < 0)
              start = 0;
          } else if (start > len) {
            start = len;
          }
          if (end < 0) {
            end += len;
            if (end < 0)
              end = 0;
          } else if (end > len) {
            end = len;
          }
          if (end < start)
            end = start;
          var newBuf;
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            newBuf = this.subarray(start, end);
            newBuf.__proto__ = Buffer.prototype;
          } else {
            var sliceLen = end - start;
            newBuf = new Buffer(sliceLen, undefined);
            for (var i = 0; i < sliceLen; ++i) {
              newBuf[i] = this[i + start];
            }
          }
          return newBuf;
        };
        function checkOffset(offset, ext, length) {
          if ((offset % 1) !== 0 || offset < 0)
            throw new RangeError('offset is not uint');
          if (offset + ext > length)
            throw new RangeError('Trying to access beyond buffer length');
        }
        Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert)
            checkOffset(offset, byteLength, this.length);
          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }
          return val;
        };
        Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            checkOffset(offset, byteLength, this.length);
          }
          var val = this[offset + --byteLength];
          var mul = 1;
          while (byteLength > 0 && (mul *= 0x100)) {
            val += this[offset + --byteLength] * mul;
          }
          return val;
        };
        Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 1, this.length);
          return this[offset];
        };
        Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 2, this.length);
          return this[offset] | (this[offset + 1] << 8);
        };
        Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 2, this.length);
          return (this[offset] << 8) | this[offset + 1];
        };
        Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 4, this.length);
          return ((this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + (this[offset + 3] * 0x1000000);
        };
        Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 4, this.length);
          return (this[offset] * 0x1000000) + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3]);
        };
        Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert)
            checkOffset(offset, byteLength, this.length);
          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }
          mul *= 0x80;
          if (val >= mul)
            val -= Math.pow(2, 8 * byteLength);
          return val;
        };
        Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert)
            checkOffset(offset, byteLength, this.length);
          var i = byteLength;
          var mul = 1;
          var val = this[offset + --i];
          while (i > 0 && (mul *= 0x100)) {
            val += this[offset + --i] * mul;
          }
          mul *= 0x80;
          if (val >= mul)
            val -= Math.pow(2, 8 * byteLength);
          return val;
        };
        Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 1, this.length);
          if (!(this[offset] & 0x80))
            return (this[offset]);
          return ((0xff - this[offset] + 1) * -1);
        };
        Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 2, this.length);
          var val = this[offset] | (this[offset + 1] << 8);
          return (val & 0x8000) ? val | 0xFFFF0000 : val;
        };
        Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 2, this.length);
          var val = this[offset + 1] | (this[offset] << 8);
          return (val & 0x8000) ? val | 0xFFFF0000 : val;
        };
        Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 4, this.length);
          return (this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24);
        };
        Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 4, this.length);
          return (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | (this[offset + 3]);
        };
        Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 4, this.length);
          return ieee754.read(this, offset, true, 23, 4);
        };
        Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 4, this.length);
          return ieee754.read(this, offset, false, 23, 4);
        };
        Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 8, this.length);
          return ieee754.read(this, offset, true, 52, 8);
        };
        Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
          if (!noAssert)
            checkOffset(offset, 8, this.length);
          return ieee754.read(this, offset, false, 52, 8);
        };
        function checkInt(buf, value, offset, ext, max, min) {
          if (!Buffer.isBuffer(buf))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (value > max || value < min)
            throw new RangeError('"value" argument is out of bounds');
          if (offset + ext > buf.length)
            throw new RangeError('Index out of range');
        }
        Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }
          var mul = 1;
          var i = 0;
          this[offset] = value & 0xFF;
          while (++i < byteLength && (mul *= 0x100)) {
            this[offset + i] = (value / mul) & 0xFF;
          }
          return offset + byteLength;
        };
        Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }
          var i = byteLength - 1;
          var mul = 1;
          this[offset + i] = value & 0xFF;
          while (--i >= 0 && (mul *= 0x100)) {
            this[offset + i] = (value / mul) & 0xFF;
          }
          return offset + byteLength;
        };
        Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 1, 0xff, 0);
          if (!Buffer.TYPED_ARRAY_SUPPORT)
            value = Math.floor(value);
          this[offset] = (value & 0xff);
          return offset + 1;
        };
        function objectWriteUInt16(buf, value, offset, littleEndian) {
          if (value < 0)
            value = 0xffff + value + 1;
          for (var i = 0,
              j = Math.min(buf.length - offset, 2); i < j; ++i) {
            buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>> (littleEndian ? i : 1 - i) * 8;
          }
        }
        Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 2, 0xffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value & 0xff);
            this[offset + 1] = (value >>> 8);
          } else {
            objectWriteUInt16(this, value, offset, true);
          }
          return offset + 2;
        };
        Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 2, 0xffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value >>> 8);
            this[offset + 1] = (value & 0xff);
          } else {
            objectWriteUInt16(this, value, offset, false);
          }
          return offset + 2;
        };
        function objectWriteUInt32(buf, value, offset, littleEndian) {
          if (value < 0)
            value = 0xffffffff + value + 1;
          for (var i = 0,
              j = Math.min(buf.length - offset, 4); i < j; ++i) {
            buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
          }
        }
        Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 4, 0xffffffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset + 3] = (value >>> 24);
            this[offset + 2] = (value >>> 16);
            this[offset + 1] = (value >>> 8);
            this[offset] = (value & 0xff);
          } else {
            objectWriteUInt32(this, value, offset, true);
          }
          return offset + 4;
        };
        Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 4, 0xffffffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value >>> 24);
            this[offset + 1] = (value >>> 16);
            this[offset + 2] = (value >>> 8);
            this[offset + 3] = (value & 0xff);
          } else {
            objectWriteUInt32(this, value, offset, false);
          }
          return offset + 4;
        };
        Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);
            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }
          var i = 0;
          var mul = 1;
          var sub = 0;
          this[offset] = value & 0xFF;
          while (++i < byteLength && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
          }
          return offset + byteLength;
        };
        Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);
            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }
          var i = byteLength - 1;
          var mul = 1;
          var sub = 0;
          this[offset + i] = value & 0xFF;
          while (--i >= 0 && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
          }
          return offset + byteLength;
        };
        Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 1, 0x7f, -0x80);
          if (!Buffer.TYPED_ARRAY_SUPPORT)
            value = Math.floor(value);
          if (value < 0)
            value = 0xff + value + 1;
          this[offset] = (value & 0xff);
          return offset + 1;
        };
        Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value & 0xff);
            this[offset + 1] = (value >>> 8);
          } else {
            objectWriteUInt16(this, value, offset, true);
          }
          return offset + 2;
        };
        Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value >>> 8);
            this[offset + 1] = (value & 0xff);
          } else {
            objectWriteUInt16(this, value, offset, false);
          }
          return offset + 2;
        };
        Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value & 0xff);
            this[offset + 1] = (value >>> 8);
            this[offset + 2] = (value >>> 16);
            this[offset + 3] = (value >>> 24);
          } else {
            objectWriteUInt32(this, value, offset, true);
          }
          return offset + 4;
        };
        Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert)
            checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (value < 0)
            value = 0xffffffff + value + 1;
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = (value >>> 24);
            this[offset + 1] = (value >>> 16);
            this[offset + 2] = (value >>> 8);
            this[offset + 3] = (value & 0xff);
          } else {
            objectWriteUInt32(this, value, offset, false);
          }
          return offset + 4;
        };
        function checkIEEE754(buf, value, offset, ext, max, min) {
          if (offset + ext > buf.length)
            throw new RangeError('Index out of range');
          if (offset < 0)
            throw new RangeError('Index out of range');
        }
        function writeFloat(buf, value, offset, littleEndian, noAssert) {
          if (!noAssert) {
            checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
          }
          ieee754.write(buf, value, offset, littleEndian, 23, 4);
          return offset + 4;
        }
        Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
          return writeFloat(this, value, offset, true, noAssert);
        };
        Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
          return writeFloat(this, value, offset, false, noAssert);
        };
        function writeDouble(buf, value, offset, littleEndian, noAssert) {
          if (!noAssert) {
            checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
          }
          ieee754.write(buf, value, offset, littleEndian, 52, 8);
          return offset + 8;
        }
        Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
          return writeDouble(this, value, offset, true, noAssert);
        };
        Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
          return writeDouble(this, value, offset, false, noAssert);
        };
        Buffer.prototype.copy = function copy(target, targetStart, start, end) {
          if (!start)
            start = 0;
          if (!end && end !== 0)
            end = this.length;
          if (targetStart >= target.length)
            targetStart = target.length;
          if (!targetStart)
            targetStart = 0;
          if (end > 0 && end < start)
            end = start;
          if (end === start)
            return 0;
          if (target.length === 0 || this.length === 0)
            return 0;
          if (targetStart < 0) {
            throw new RangeError('targetStart out of bounds');
          }
          if (start < 0 || start >= this.length)
            throw new RangeError('sourceStart out of bounds');
          if (end < 0)
            throw new RangeError('sourceEnd out of bounds');
          if (end > this.length)
            end = this.length;
          if (target.length - targetStart < end - start) {
            end = target.length - targetStart + start;
          }
          var len = end - start;
          var i;
          if (this === target && start < targetStart && targetStart < end) {
            for (i = len - 1; i >= 0; --i) {
              target[i + targetStart] = this[i + start];
            }
          } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
            for (i = 0; i < len; ++i) {
              target[i + targetStart] = this[i + start];
            }
          } else {
            Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
          }
          return len;
        };
        Buffer.prototype.fill = function fill(val, start, end, encoding) {
          if (typeof val === 'string') {
            if (typeof start === 'string') {
              encoding = start;
              start = 0;
              end = this.length;
            } else if (typeof end === 'string') {
              encoding = end;
              end = this.length;
            }
            if (val.length === 1) {
              var code = val.charCodeAt(0);
              if (code < 256) {
                val = code;
              }
            }
            if (encoding !== undefined && typeof encoding !== 'string') {
              throw new TypeError('encoding must be a string');
            }
            if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
              throw new TypeError('Unknown encoding: ' + encoding);
            }
          } else if (typeof val === 'number') {
            val = val & 255;
          }
          if (start < 0 || this.length < start || this.length < end) {
            throw new RangeError('Out of range index');
          }
          if (end <= start) {
            return this;
          }
          start = start >>> 0;
          end = end === undefined ? this.length : end >>> 0;
          if (!val)
            val = 0;
          var i;
          if (typeof val === 'number') {
            for (i = start; i < end; ++i) {
              this[i] = val;
            }
          } else {
            var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
            var len = bytes.length;
            for (i = 0; i < end - start; ++i) {
              this[i + start] = bytes[i % len];
            }
          }
          return this;
        };
        var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
        function base64clean(str) {
          str = stringtrim(str).replace(INVALID_BASE64_RE, '');
          if (str.length < 2)
            return '';
          while (str.length % 4 !== 0) {
            str = str + '=';
          }
          return str;
        }
        function stringtrim(str) {
          if (str.trim)
            return str.trim();
          return str.replace(/^\s+|\s+$/g, '');
        }
        function toHex(n) {
          if (n < 16)
            return '0' + n.toString(16);
          return n.toString(16);
        }
        function utf8ToBytes(string, units) {
          units = units || Infinity;
          var codePoint;
          var length = string.length;
          var leadSurrogate = null;
          var bytes = [];
          for (var i = 0; i < length; ++i) {
            codePoint = string.charCodeAt(i);
            if (codePoint > 0xD7FF && codePoint < 0xE000) {
              if (!leadSurrogate) {
                if (codePoint > 0xDBFF) {
                  if ((units -= 3) > -1)
                    bytes.push(0xEF, 0xBF, 0xBD);
                  continue;
                } else if (i + 1 === length) {
                  if ((units -= 3) > -1)
                    bytes.push(0xEF, 0xBF, 0xBD);
                  continue;
                }
                leadSurrogate = codePoint;
                continue;
              }
              if (codePoint < 0xDC00) {
                if ((units -= 3) > -1)
                  bytes.push(0xEF, 0xBF, 0xBD);
                leadSurrogate = codePoint;
                continue;
              }
              codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
            } else if (leadSurrogate) {
              if ((units -= 3) > -1)
                bytes.push(0xEF, 0xBF, 0xBD);
            }
            leadSurrogate = null;
            if (codePoint < 0x80) {
              if ((units -= 1) < 0)
                break;
              bytes.push(codePoint);
            } else if (codePoint < 0x800) {
              if ((units -= 2) < 0)
                break;
              bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
            } else if (codePoint < 0x10000) {
              if ((units -= 3) < 0)
                break;
              bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
            } else if (codePoint < 0x110000) {
              if ((units -= 4) < 0)
                break;
              bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
            } else {
              throw new Error('Invalid code point');
            }
          }
          return bytes;
        }
        function asciiToBytes(str) {
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            byteArray.push(str.charCodeAt(i) & 0xFF);
          }
          return byteArray;
        }
        function utf16leToBytes(str, units) {
          var c,
              hi,
              lo;
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            if ((units -= 2) < 0)
              break;
            c = str.charCodeAt(i);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
          }
          return byteArray;
        }
        function base64ToBytes(str) {
          return base64.toByteArray(base64clean(str));
        }
        function blitBuffer(src, dst, offset, length) {
          for (var i = 0; i < length; ++i) {
            if ((i + offset >= dst.length) || (i >= src.length))
              break;
            dst[i + offset] = src[i];
          }
          return i;
        }
        function isnan(val) {
          return val !== val;
        }
      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {
      "base64-js": 15,
      "ieee754": 89,
      "isarray": 93
    }],
    46: [function(require, module, exports) {
      (function(Buffer) {
        var Transform = require('stream').Transform;
        var inherits = require('inherits');
        var StringDecoder = require('string_decoder').StringDecoder;
        module.exports = CipherBase;
        inherits(CipherBase, Transform);
        function CipherBase(hashMode) {
          Transform.call(this);
          this.hashMode = typeof hashMode === 'string';
          if (this.hashMode) {
            this[hashMode] = this._finalOrDigest;
          } else {
            this.final = this._finalOrDigest;
          }
          this._decoder = null;
          this._encoding = null;
        }
        CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
          if (typeof data === 'string') {
            data = new Buffer(data, inputEnc);
          }
          var outData = this._update(data);
          if (this.hashMode) {
            return this;
          }
          if (outputEnc) {
            outData = this._toString(outData, outputEnc);
          }
          return outData;
        };
        CipherBase.prototype.setAutoPadding = function() {};
        CipherBase.prototype.getAuthTag = function() {
          throw new Error('trying to get auth tag in unsupported state');
        };
        CipherBase.prototype.setAuthTag = function() {
          throw new Error('trying to set auth tag in unsupported state');
        };
        CipherBase.prototype.setAAD = function() {
          throw new Error('trying to set aad in unsupported state');
        };
        CipherBase.prototype._transform = function(data, _, next) {
          var err;
          try {
            if (this.hashMode) {
              this._update(data);
            } else {
              this.push(this._update(data));
            }
          } catch (e) {
            err = e;
          } finally {
            next(err);
          }
        };
        CipherBase.prototype._flush = function(done) {
          var err;
          try {
            this.push(this._final());
          } catch (e) {
            err = e;
          } finally {
            done(err);
          }
        };
        CipherBase.prototype._finalOrDigest = function(outputEnc) {
          var outData = this._final() || new Buffer('');
          if (outputEnc) {
            outData = this._toString(outData, outputEnc, true);
          }
          return outData;
        };
        CipherBase.prototype._toString = function(value, enc, final) {
          if (!this._decoder) {
            this._decoder = new StringDecoder(enc);
            this._encoding = enc;
          }
          if (this._encoding !== enc) {
            throw new Error('can\'t switch encodings');
          }
          var out = this._decoder.write(value);
          if (final) {
            out += this._decoder.end();
          }
          return out;
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "inherits": 91,
      "stream": 129,
      "string_decoder": 130
    }],
    47: [function(require, module, exports) {
      (function(Buffer) {
        function isArray(arg) {
          if (Array.isArray) {
            return Array.isArray(arg);
          }
          return objectToString(arg) === '[object Array]';
        }
        exports.isArray = isArray;
        function isBoolean(arg) {
          return typeof arg === 'boolean';
        }
        exports.isBoolean = isBoolean;
        function isNull(arg) {
          return arg === null;
        }
        exports.isNull = isNull;
        function isNullOrUndefined(arg) {
          return arg == null;
        }
        exports.isNullOrUndefined = isNullOrUndefined;
        function isNumber(arg) {
          return typeof arg === 'number';
        }
        exports.isNumber = isNumber;
        function isString(arg) {
          return typeof arg === 'string';
        }
        exports.isString = isString;
        function isSymbol(arg) {
          return typeof arg === 'symbol';
        }
        exports.isSymbol = isSymbol;
        function isUndefined(arg) {
          return arg === void 0;
        }
        exports.isUndefined = isUndefined;
        function isRegExp(re) {
          return objectToString(re) === '[object RegExp]';
        }
        exports.isRegExp = isRegExp;
        function isObject(arg) {
          return typeof arg === 'object' && arg !== null;
        }
        exports.isObject = isObject;
        function isDate(d) {
          return objectToString(d) === '[object Date]';
        }
        exports.isDate = isDate;
        function isError(e) {
          return (objectToString(e) === '[object Error]' || e instanceof Error);
        }
        exports.isError = isError;
        function isFunction(arg) {
          return typeof arg === 'function';
        }
        exports.isFunction = isFunction;
        function isPrimitive(arg) {
          return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
        }
        exports.isPrimitive = isPrimitive;
        exports.isBuffer = Buffer.isBuffer;
        function objectToString(o) {
          return Object.prototype.toString.call(o);
        }
      }).call(this, {"isBuffer": require("../../is-buffer/index.js")});
    }, {"../../is-buffer/index.js": 92}],
    48: [function(require, module, exports) {
      (function(Buffer) {
        var elliptic = require('elliptic');
        var BN = require('bn.js');
        module.exports = function createECDH(curve) {
          return new ECDH(curve);
        };
        var aliases = {
          secp256k1: {
            name: 'secp256k1',
            byteLength: 32
          },
          secp224r1: {
            name: 'p224',
            byteLength: 28
          },
          prime256v1: {
            name: 'p256',
            byteLength: 32
          },
          prime192v1: {
            name: 'p192',
            byteLength: 24
          },
          ed25519: {
            name: 'ed25519',
            byteLength: 32
          },
          secp384r1: {
            name: 'p384',
            byteLength: 48
          },
          secp521r1: {
            name: 'p521',
            byteLength: 66
          }
        };
        aliases.p224 = aliases.secp224r1;
        aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
        aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
        aliases.p384 = aliases.secp384r1;
        aliases.p521 = aliases.secp521r1;
        function ECDH(curve) {
          this.curveType = aliases[curve];
          if (!this.curveType) {
            this.curveType = {name: curve};
          }
          this.curve = new elliptic.ec(this.curveType.name);
          this.keys = void 0;
        }
        ECDH.prototype.generateKeys = function(enc, format) {
          this.keys = this.curve.genKeyPair();
          return this.getPublicKey(enc, format);
        };
        ECDH.prototype.computeSecret = function(other, inenc, enc) {
          inenc = inenc || 'utf8';
          if (!Buffer.isBuffer(other)) {
            other = new Buffer(other, inenc);
          }
          var otherPub = this.curve.keyFromPublic(other).getPublic();
          var out = otherPub.mul(this.keys.getPrivate()).getX();
          return formatReturnValue(out, enc, this.curveType.byteLength);
        };
        ECDH.prototype.getPublicKey = function(enc, format) {
          var key = this.keys.getPublic(format === 'compressed', true);
          if (format === 'hybrid') {
            if (key[key.length - 1] % 2) {
              key[0] = 7;
            } else {
              key[0] = 6;
            }
          }
          return formatReturnValue(key, enc);
        };
        ECDH.prototype.getPrivateKey = function(enc) {
          return formatReturnValue(this.keys.getPrivate(), enc);
        };
        ECDH.prototype.setPublicKey = function(pub, enc) {
          enc = enc || 'utf8';
          if (!Buffer.isBuffer(pub)) {
            pub = new Buffer(pub, enc);
          }
          this.keys._importPublic(pub);
          return this;
        };
        ECDH.prototype.setPrivateKey = function(priv, enc) {
          enc = enc || 'utf8';
          if (!Buffer.isBuffer(priv)) {
            priv = new Buffer(priv, enc);
          }
          var _priv = new BN(priv);
          _priv = _priv.toString(16);
          this.keys._importPrivate(_priv);
          return this;
        };
        function formatReturnValue(bn, enc, len) {
          if (!Array.isArray(bn)) {
            bn = bn.toArray();
          }
          var buf = new Buffer(bn);
          if (len && buf.length < len) {
            var zeros = new Buffer(len - buf.length);
            zeros.fill(0);
            buf = Buffer.concat([zeros, buf]);
          }
          if (!enc) {
            return buf;
          } else {
            return buf.toString(enc);
          }
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "bn.js": 16,
      "buffer": 45,
      "elliptic": 64
    }],
    49: [function(require, module, exports) {
      (function(Buffer) {
        'use strict';
        var inherits = require('inherits');
        var md5 = require('./md5');
        var rmd160 = require('ripemd160');
        var sha = require('sha.js');
        var Base = require('cipher-base');
        function HashNoConstructor(hash) {
          Base.call(this, 'digest');
          this._hash = hash;
          this.buffers = [];
        }
        inherits(HashNoConstructor, Base);
        HashNoConstructor.prototype._update = function(data) {
          this.buffers.push(data);
        };
        HashNoConstructor.prototype._final = function() {
          var buf = Buffer.concat(this.buffers);
          var r = this._hash(buf);
          this.buffers = null;
          return r;
        };
        function Hash(hash) {
          Base.call(this, 'digest');
          this._hash = hash;
        }
        inherits(Hash, Base);
        Hash.prototype._update = function(data) {
          this._hash.update(data);
        };
        Hash.prototype._final = function() {
          return this._hash.digest();
        };
        module.exports = function createHash(alg) {
          alg = alg.toLowerCase();
          if ('md5' === alg)
            return new HashNoConstructor(md5);
          if ('rmd160' === alg || 'ripemd160' === alg)
            return new HashNoConstructor(rmd160);
          return new Hash(sha(alg));
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "./md5": 51,
      "buffer": 45,
      "cipher-base": 46,
      "inherits": 91,
      "ripemd160": 120,
      "sha.js": 122
    }],
    50: [function(require, module, exports) {
      (function(Buffer) {
        'use strict';
        var intSize = 4;
        var zeroBuffer = new Buffer(intSize);
        zeroBuffer.fill(0);
        var chrsz = 8;
        function toArray(buf, bigEndian) {
          if ((buf.length % intSize) !== 0) {
            var len = buf.length + (intSize - (buf.length % intSize));
            buf = Buffer.concat([buf, zeroBuffer], len);
          }
          var arr = [];
          var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
          for (var i = 0; i < buf.length; i += intSize) {
            arr.push(fn.call(buf, i));
          }
          return arr;
        }
        function toBuffer(arr, size, bigEndian) {
          var buf = new Buffer(size);
          var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
          for (var i = 0; i < arr.length; i++) {
            fn.call(buf, arr[i], i * 4, true);
          }
          return buf;
        }
        function hash(buf, fn, hashSize, bigEndian) {
          if (!Buffer.isBuffer(buf))
            buf = new Buffer(buf);
          var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
          return toBuffer(arr, hashSize, bigEndian);
        }
        exports.hash = hash;
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    51: [function(require, module, exports) {
      'use strict';
      var helpers = require('./helpers');
      function core_md5(x, len) {
        x[len >> 5] |= 0x80 << ((len) % 32);
        x[(((len + 64) >>> 9) << 4) + 14] = len;
        var a = 1732584193;
        var b = -271733879;
        var c = -1732584194;
        var d = 271733878;
        for (var i = 0; i < x.length; i += 16) {
          var olda = a;
          var oldb = b;
          var oldc = c;
          var oldd = d;
          a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
          d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
          c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
          b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
          a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
          d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
          c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
          b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
          a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
          d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
          c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
          b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
          a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
          d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
          c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
          b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
          a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
          d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
          c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
          b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
          a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
          d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
          c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
          b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
          a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
          d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
          c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
          b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
          a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
          d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
          c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
          b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
          a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
          d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
          c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
          b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
          a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
          d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
          c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
          b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
          a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
          d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
          c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
          b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
          a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
          d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
          c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
          b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
          a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
          d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
          c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
          b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
          a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
          d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
          c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
          b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
          a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
          d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
          c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
          b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
          a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
          d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
          c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
          b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
          a = safe_add(a, olda);
          b = safe_add(b, oldb);
          c = safe_add(c, oldc);
          d = safe_add(d, oldd);
        }
        return Array(a, b, c, d);
      }
      function md5_cmn(q, a, b, x, s, t) {
        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
      }
      function md5_ff(a, b, c, d, x, s, t) {
        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
      }
      function md5_gg(a, b, c, d, x, s, t) {
        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
      }
      function md5_hh(a, b, c, d, x, s, t) {
        return md5_cmn(b ^ c ^ d, a, b, x, s, t);
      }
      function md5_ii(a, b, c, d, x, s, t) {
        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
      }
      function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF);
        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
      }
      function bit_rol(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
      }
      module.exports = function md5(buf) {
        return helpers.hash(buf, core_md5, 16);
      };
    }, {"./helpers": 50}],
    52: [function(require, module, exports) {
      (function(Buffer) {
        'use strict';
        var createHash = require('create-hash/browser');
        var inherits = require('inherits');
        var Transform = require('stream').Transform;
        var ZEROS = new Buffer(128);
        ZEROS.fill(0);
        function Hmac(alg, key) {
          Transform.call(this);
          alg = alg.toLowerCase();
          if (typeof key === 'string') {
            key = new Buffer(key);
          }
          var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64;
          this._alg = alg;
          this._key = key;
          if (key.length > blocksize) {
            key = createHash(alg).update(key).digest();
          } else if (key.length < blocksize) {
            key = Buffer.concat([key, ZEROS], blocksize);
          }
          var ipad = this._ipad = new Buffer(blocksize);
          var opad = this._opad = new Buffer(blocksize);
          for (var i = 0; i < blocksize; i++) {
            ipad[i] = key[i] ^ 0x36;
            opad[i] = key[i] ^ 0x5C;
          }
          this._hash = createHash(alg).update(ipad);
        }
        inherits(Hmac, Transform);
        Hmac.prototype.update = function(data, enc) {
          this._hash.update(data, enc);
          return this;
        };
        Hmac.prototype._transform = function(data, _, next) {
          this._hash.update(data);
          next();
        };
        Hmac.prototype._flush = function(next) {
          this.push(this.digest());
          next();
        };
        Hmac.prototype.digest = function(enc) {
          var h = this._hash.digest();
          return createHash(this._alg).update(this._opad).update(h).digest(enc);
        };
        module.exports = function createHmac(alg, key) {
          return new Hmac(alg, key);
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "create-hash/browser": 49,
      "inherits": 91,
      "stream": 129
    }],
    53: [function(require, module, exports) {
      'use strict';
      exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes');
      exports.createHash = exports.Hash = require('create-hash');
      exports.createHmac = exports.Hmac = require('create-hmac');
      var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require('browserify-sign/algos')));
      exports.getHashes = function() {
        return hashes;
      };
      var p = require('pbkdf2');
      exports.pbkdf2 = p.pbkdf2;
      exports.pbkdf2Sync = p.pbkdf2Sync;
      var aes = require('browserify-cipher');
      ;
      ['Cipher', 'createCipher', 'Cipheriv', 'createCipheriv', 'Decipher', 'createDecipher', 'Decipheriv', 'createDecipheriv', 'getCiphers', 'listCiphers'].forEach(function(key) {
        exports[key] = aes[key];
      });
      var dh = require('diffie-hellman');
      ;
      ['DiffieHellmanGroup', 'createDiffieHellmanGroup', 'getDiffieHellman', 'createDiffieHellman', 'DiffieHellman'].forEach(function(key) {
        exports[key] = dh[key];
      });
      var sign = require('browserify-sign');
      ;
      ['createSign', 'Sign', 'createVerify', 'Verify'].forEach(function(key) {
        exports[key] = sign[key];
      });
      exports.createECDH = require('create-ecdh');
      var publicEncrypt = require('public-encrypt');
      ;
      ['publicEncrypt', 'privateEncrypt', 'publicDecrypt', 'privateDecrypt'].forEach(function(key) {
        exports[key] = publicEncrypt[key];
      });
      ;
      ['createCredentials'].forEach(function(name) {
        exports[name] = function() {
          throw new Error(['sorry, ' + name + ' is not implemented yet', 'we accept pull requests', 'https://github.com/crypto-browserify/crypto-browserify'].join('\n'));
        };
      });
    }, {
      "browserify-cipher": 34,
      "browserify-sign": 39,
      "browserify-sign/algos": 38,
      "create-ecdh": 48,
      "create-hash": 49,
      "create-hmac": 52,
      "diffie-hellman": 60,
      "pbkdf2": 100,
      "public-encrypt": 103,
      "randombytes": 109
    }],
    54: [function(require, module, exports) {
      'use strict';
      exports.utils = require('./des/utils');
      exports.Cipher = require('./des/cipher');
      exports.DES = require('./des/des');
      exports.CBC = require('./des/cbc');
      exports.EDE = require('./des/ede');
    }, {
      "./des/cbc": 55,
      "./des/cipher": 56,
      "./des/des": 57,
      "./des/ede": 58,
      "./des/utils": 59
    }],
    55: [function(require, module, exports) {
      'use strict';
      var assert = require('minimalistic-assert');
      var inherits = require('inherits');
      var proto = {};
      function CBCState(iv) {
        assert.equal(iv.length, 8, 'Invalid IV length');
        this.iv = new Array(8);
        for (var i = 0; i < this.iv.length; i++)
          this.iv[i] = iv[i];
      }
      function instantiate(Base) {
        function CBC(options) {
          Base.call(this, options);
          this._cbcInit();
        }
        inherits(CBC, Base);
        var keys = Object.keys(proto);
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          CBC.prototype[key] = proto[key];
        }
        CBC.create = function create(options) {
          return new CBC(options);
        };
        return CBC;
      }
      exports.instantiate = instantiate;
      proto._cbcInit = function _cbcInit() {
        var state = new CBCState(this.options.iv);
        this._cbcState = state;
      };
      proto._update = function _update(inp, inOff, out, outOff) {
        var state = this._cbcState;
        var superProto = this.constructor.super_.prototype;
        var iv = state.iv;
        if (this.type === 'encrypt') {
          for (var i = 0; i < this.blockSize; i++)
            iv[i] ^= inp[inOff + i];
          superProto._update.call(this, iv, 0, out, outOff);
          for (var i = 0; i < this.blockSize; i++)
            iv[i] = out[outOff + i];
        } else {
          superProto._update.call(this, inp, inOff, out, outOff);
          for (var i = 0; i < this.blockSize; i++)
            out[outOff + i] ^= iv[i];
          for (var i = 0; i < this.blockSize; i++)
            iv[i] = inp[inOff + i];
        }
      };
    }, {
      "inherits": 91,
      "minimalistic-assert": 95
    }],
    56: [function(require, module, exports) {
      'use strict';
      var assert = require('minimalistic-assert');
      function Cipher(options) {
        this.options = options;
        this.type = this.options.type;
        this.blockSize = 8;
        this._init();
        this.buffer = new Array(this.blockSize);
        this.bufferOff = 0;
      }
      module.exports = Cipher;
      Cipher.prototype._init = function _init() {};
      Cipher.prototype.update = function update(data) {
        if (data.length === 0)
          return [];
        if (this.type === 'decrypt')
          return this._updateDecrypt(data);
        else
          return this._updateEncrypt(data);
      };
      Cipher.prototype._buffer = function _buffer(data, off) {
        var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
        for (var i = 0; i < min; i++)
          this.buffer[this.bufferOff + i] = data[off + i];
        this.bufferOff += min;
        return min;
      };
      Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
        this._update(this.buffer, 0, out, off);
        this.bufferOff = 0;
        return this.blockSize;
      };
      Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
        var inputOff = 0;
        var outputOff = 0;
        var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
        var out = new Array(count * this.blockSize);
        if (this.bufferOff !== 0) {
          inputOff += this._buffer(data, inputOff);
          if (this.bufferOff === this.buffer.length)
            outputOff += this._flushBuffer(out, outputOff);
        }
        var max = data.length - ((data.length - inputOff) % this.blockSize);
        for (; inputOff < max; inputOff += this.blockSize) {
          this._update(data, inputOff, out, outputOff);
          outputOff += this.blockSize;
        }
        for (; inputOff < data.length; inputOff++, this.bufferOff++)
          this.buffer[this.bufferOff] = data[inputOff];
        return out;
      };
      Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
        var inputOff = 0;
        var outputOff = 0;
        var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
        var out = new Array(count * this.blockSize);
        for (; count > 0; count--) {
          inputOff += this._buffer(data, inputOff);
          outputOff += this._flushBuffer(out, outputOff);
        }
        inputOff += this._buffer(data, inputOff);
        return out;
      };
      Cipher.prototype.final = function final(buffer) {
        var first;
        if (buffer)
          first = this.update(buffer);
        var last;
        if (this.type === 'encrypt')
          last = this._finalEncrypt();
        else
          last = this._finalDecrypt();
        if (first)
          return first.concat(last);
        else
          return last;
      };
      Cipher.prototype._pad = function _pad(buffer, off) {
        if (off === 0)
          return false;
        while (off < buffer.length)
          buffer[off++] = 0;
        return true;
      };
      Cipher.prototype._finalEncrypt = function _finalEncrypt() {
        if (!this._pad(this.buffer, this.bufferOff))
          return [];
        var out = new Array(this.blockSize);
        this._update(this.buffer, 0, out, 0);
        return out;
      };
      Cipher.prototype._unpad = function _unpad(buffer) {
        return buffer;
      };
      Cipher.prototype._finalDecrypt = function _finalDecrypt() {
        assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
        var out = new Array(this.blockSize);
        this._flushBuffer(out, 0);
        return this._unpad(out);
      };
    }, {"minimalistic-assert": 95}],
    57: [function(require, module, exports) {
      'use strict';
      var assert = require('minimalistic-assert');
      var inherits = require('inherits');
      var des = require('../des');
      var utils = des.utils;
      var Cipher = des.Cipher;
      function DESState() {
        this.tmp = new Array(2);
        this.keys = null;
      }
      function DES(options) {
        Cipher.call(this, options);
        var state = new DESState();
        this._desState = state;
        this.deriveKeys(state, options.key);
      }
      inherits(DES, Cipher);
      module.exports = DES;
      DES.create = function create(options) {
        return new DES(options);
      };
      var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
      DES.prototype.deriveKeys = function deriveKeys(state, key) {
        state.keys = new Array(16 * 2);
        assert.equal(key.length, this.blockSize, 'Invalid key length');
        var kL = utils.readUInt32BE(key, 0);
        var kR = utils.readUInt32BE(key, 4);
        utils.pc1(kL, kR, state.tmp, 0);
        kL = state.tmp[0];
        kR = state.tmp[1];
        for (var i = 0; i < state.keys.length; i += 2) {
          var shift = shiftTable[i >>> 1];
          kL = utils.r28shl(kL, shift);
          kR = utils.r28shl(kR, shift);
          utils.pc2(kL, kR, state.keys, i);
        }
      };
      DES.prototype._update = function _update(inp, inOff, out, outOff) {
        var state = this._desState;
        var l = utils.readUInt32BE(inp, inOff);
        var r = utils.readUInt32BE(inp, inOff + 4);
        utils.ip(l, r, state.tmp, 0);
        l = state.tmp[0];
        r = state.tmp[1];
        if (this.type === 'encrypt')
          this._encrypt(state, l, r, state.tmp, 0);
        else
          this._decrypt(state, l, r, state.tmp, 0);
        l = state.tmp[0];
        r = state.tmp[1];
        utils.writeUInt32BE(out, l, outOff);
        utils.writeUInt32BE(out, r, outOff + 4);
      };
      DES.prototype._pad = function _pad(buffer, off) {
        var value = buffer.length - off;
        for (var i = off; i < buffer.length; i++)
          buffer[i] = value;
        return true;
      };
      DES.prototype._unpad = function _unpad(buffer) {
        var pad = buffer[buffer.length - 1];
        for (var i = buffer.length - pad; i < buffer.length; i++)
          assert.equal(buffer[i], pad);
        return buffer.slice(0, buffer.length - pad);
      };
      DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
        var l = lStart;
        var r = rStart;
        for (var i = 0; i < state.keys.length; i += 2) {
          var keyL = state.keys[i];
          var keyR = state.keys[i + 1];
          utils.expand(r, state.tmp, 0);
          keyL ^= state.tmp[0];
          keyR ^= state.tmp[1];
          var s = utils.substitute(keyL, keyR);
          var f = utils.permute(s);
          var t = r;
          r = (l ^ f) >>> 0;
          l = t;
        }
        utils.rip(r, l, out, off);
      };
      DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
        var l = rStart;
        var r = lStart;
        for (var i = state.keys.length - 2; i >= 0; i -= 2) {
          var keyL = state.keys[i];
          var keyR = state.keys[i + 1];
          utils.expand(l, state.tmp, 0);
          keyL ^= state.tmp[0];
          keyR ^= state.tmp[1];
          var s = utils.substitute(keyL, keyR);
          var f = utils.permute(s);
          var t = l;
          l = (r ^ f) >>> 0;
          r = t;
        }
        utils.rip(l, r, out, off);
      };
    }, {
      "../des": 54,
      "inherits": 91,
      "minimalistic-assert": 95
    }],
    58: [function(require, module, exports) {
      'use strict';
      var assert = require('minimalistic-assert');
      var inherits = require('inherits');
      var des = require('../des');
      var Cipher = des.Cipher;
      var DES = des.DES;
      function EDEState(type, key) {
        assert.equal(key.length, 24, 'Invalid key length');
        var k1 = key.slice(0, 8);
        var k2 = key.slice(8, 16);
        var k3 = key.slice(16, 24);
        if (type === 'encrypt') {
          this.ciphers = [DES.create({
            type: 'encrypt',
            key: k1
          }), DES.create({
            type: 'decrypt',
            key: k2
          }), DES.create({
            type: 'encrypt',
            key: k3
          })];
        } else {
          this.ciphers = [DES.create({
            type: 'decrypt',
            key: k3
          }), DES.create({
            type: 'encrypt',
            key: k2
          }), DES.create({
            type: 'decrypt',
            key: k1
          })];
        }
      }
      function EDE(options) {
        Cipher.call(this, options);
        var state = new EDEState(this.type, this.options.key);
        this._edeState = state;
      }
      inherits(EDE, Cipher);
      module.exports = EDE;
      EDE.create = function create(options) {
        return new EDE(options);
      };
      EDE.prototype._update = function _update(inp, inOff, out, outOff) {
        var state = this._edeState;
        state.ciphers[0]._update(inp, inOff, out, outOff);
        state.ciphers[1]._update(out, outOff, out, outOff);
        state.ciphers[2]._update(out, outOff, out, outOff);
      };
      EDE.prototype._pad = DES.prototype._pad;
      EDE.prototype._unpad = DES.prototype._unpad;
    }, {
      "../des": 54,
      "inherits": 91,
      "minimalistic-assert": 95
    }],
    59: [function(require, module, exports) {
      'use strict';
      exports.readUInt32BE = function readUInt32BE(bytes, off) {
        var res = (bytes[0 + off] << 24) | (bytes[1 + off] << 16) | (bytes[2 + off] << 8) | bytes[3 + off];
        return res >>> 0;
      };
      exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
        bytes[0 + off] = value >>> 24;
        bytes[1 + off] = (value >>> 16) & 0xff;
        bytes[2 + off] = (value >>> 8) & 0xff;
        bytes[3 + off] = value & 0xff;
      };
      exports.ip = function ip(inL, inR, out, off) {
        var outL = 0;
        var outR = 0;
        for (var i = 6; i >= 0; i -= 2) {
          for (var j = 0; j <= 24; j += 8) {
            outL <<= 1;
            outL |= (inR >>> (j + i)) & 1;
          }
          for (var j = 0; j <= 24; j += 8) {
            outL <<= 1;
            outL |= (inL >>> (j + i)) & 1;
          }
        }
        for (var i = 6; i >= 0; i -= 2) {
          for (var j = 1; j <= 25; j += 8) {
            outR <<= 1;
            outR |= (inR >>> (j + i)) & 1;
          }
          for (var j = 1; j <= 25; j += 8) {
            outR <<= 1;
            outR |= (inL >>> (j + i)) & 1;
          }
        }
        out[off + 0] = outL >>> 0;
        out[off + 1] = outR >>> 0;
      };
      exports.rip = function rip(inL, inR, out, off) {
        var outL = 0;
        var outR = 0;
        for (var i = 0; i < 4; i++) {
          for (var j = 24; j >= 0; j -= 8) {
            outL <<= 1;
            outL |= (inR >>> (j + i)) & 1;
            outL <<= 1;
            outL |= (inL >>> (j + i)) & 1;
          }
        }
        for (var i = 4; i < 8; i++) {
          for (var j = 24; j >= 0; j -= 8) {
            outR <<= 1;
            outR |= (inR >>> (j + i)) & 1;
            outR <<= 1;
            outR |= (inL >>> (j + i)) & 1;
          }
        }
        out[off + 0] = outL >>> 0;
        out[off + 1] = outR >>> 0;
      };
      exports.pc1 = function pc1(inL, inR, out, off) {
        var outL = 0;
        var outR = 0;
        for (var i = 7; i >= 5; i--) {
          for (var j = 0; j <= 24; j += 8) {
            outL <<= 1;
            outL |= (inR >> (j + i)) & 1;
          }
          for (var j = 0; j <= 24; j += 8) {
            outL <<= 1;
            outL |= (inL >> (j + i)) & 1;
          }
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= (inR >> (j + i)) & 1;
        }
        for (var i = 1; i <= 3; i++) {
          for (var j = 0; j <= 24; j += 8) {
            outR <<= 1;
            outR |= (inR >> (j + i)) & 1;
          }
          for (var j = 0; j <= 24; j += 8) {
            outR <<= 1;
            outR |= (inL >> (j + i)) & 1;
          }
        }
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= (inL >> (j + i)) & 1;
        }
        out[off + 0] = outL >>> 0;
        out[off + 1] = outR >>> 0;
      };
      exports.r28shl = function r28shl(num, shift) {
        return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
      };
      var pc2table = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
      exports.pc2 = function pc2(inL, inR, out, off) {
        var outL = 0;
        var outR = 0;
        var len = pc2table.length >>> 1;
        for (var i = 0; i < len; i++) {
          outL <<= 1;
          outL |= (inL >>> pc2table[i]) & 0x1;
        }
        for (var i = len; i < pc2table.length; i++) {
          outR <<= 1;
          outR |= (inR >>> pc2table[i]) & 0x1;
        }
        out[off + 0] = outL >>> 0;
        out[off + 1] = outR >>> 0;
      };
      exports.expand = function expand(r, out, off) {
        var outL = 0;
        var outR = 0;
        outL = ((r & 1) << 5) | (r >>> 27);
        for (var i = 23; i >= 15; i -= 4) {
          outL <<= 6;
          outL |= (r >>> i) & 0x3f;
        }
        for (var i = 11; i >= 3; i -= 4) {
          outR |= (r >>> i) & 0x3f;
          outR <<= 6;
        }
        outR |= ((r & 0x1f) << 1) | (r >>> 31);
        out[off + 0] = outL >>> 0;
        out[off + 1] = outR >>> 0;
      };
      var sTable = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
      exports.substitute = function substitute(inL, inR) {
        var out = 0;
        for (var i = 0; i < 4; i++) {
          var b = (inL >>> (18 - i * 6)) & 0x3f;
          var sb = sTable[i * 0x40 + b];
          out <<= 4;
          out |= sb;
        }
        for (var i = 0; i < 4; i++) {
          var b = (inR >>> (18 - i * 6)) & 0x3f;
          var sb = sTable[4 * 0x40 + i * 0x40 + b];
          out <<= 4;
          out |= sb;
        }
        return out >>> 0;
      };
      var permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
      exports.permute = function permute(num) {
        var out = 0;
        for (var i = 0; i < permuteTable.length; i++) {
          out <<= 1;
          out |= (num >>> permuteTable[i]) & 0x1;
        }
        return out >>> 0;
      };
      exports.padSplit = function padSplit(num, size, group) {
        var str = num.toString(2);
        while (str.length < size)
          str = '0' + str;
        var out = [];
        for (var i = 0; i < size; i += group)
          out.push(str.slice(i, i + group));
        return out.join(' ');
      };
    }, {}],
    60: [function(require, module, exports) {
      (function(Buffer) {
        var generatePrime = require('./lib/generatePrime');
        var primes = require('./lib/primes.json');
        var DH = require('./lib/dh');
        function getDiffieHellman(mod) {
          var prime = new Buffer(primes[mod].prime, 'hex');
          var gen = new Buffer(primes[mod].gen, 'hex');
          return new DH(prime, gen);
        }
        var ENCODINGS = {
          'binary': true,
          'hex': true,
          'base64': true
        };
        function createDiffieHellman(prime, enc, generator, genc) {
          if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
            return createDiffieHellman(prime, 'binary', enc, generator);
          }
          enc = enc || 'binary';
          genc = genc || 'binary';
          generator = generator || new Buffer([2]);
          if (!Buffer.isBuffer(generator)) {
            generator = new Buffer(generator, genc);
          }
          if (typeof prime === 'number') {
            return new DH(generatePrime(prime, generator), generator, true);
          }
          if (!Buffer.isBuffer(prime)) {
            prime = new Buffer(prime, enc);
          }
          return new DH(prime, generator, true);
        }
        exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
        exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;
      }).call(this, require("buffer").Buffer);
    }, {
      "./lib/dh": 61,
      "./lib/generatePrime": 62,
      "./lib/primes.json": 63,
      "buffer": 45
    }],
    61: [function(require, module, exports) {
      (function(Buffer) {
        var BN = require('bn.js');
        var MillerRabin = require('miller-rabin');
        var millerRabin = new MillerRabin();
        var TWENTYFOUR = new BN(24);
        var ELEVEN = new BN(11);
        var TEN = new BN(10);
        var THREE = new BN(3);
        var SEVEN = new BN(7);
        var primes = require('./generatePrime');
        var randomBytes = require('randombytes');
        module.exports = DH;
        function setPublicKey(pub, enc) {
          enc = enc || 'utf8';
          if (!Buffer.isBuffer(pub)) {
            pub = new Buffer(pub, enc);
          }
          this._pub = new BN(pub);
          return this;
        }
        function setPrivateKey(priv, enc) {
          enc = enc || 'utf8';
          if (!Buffer.isBuffer(priv)) {
            priv = new Buffer(priv, enc);
          }
          this._priv = new BN(priv);
          return this;
        }
        var primeCache = {};
        function checkPrime(prime, generator) {
          var gen = generator.toString('hex');
          var hex = [gen, prime.toString(16)].join('_');
          if (hex in primeCache) {
            return primeCache[hex];
          }
          var error = 0;
          if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {
            error += 1;
            if (gen === '02' || gen === '05') {
              error += 8;
            } else {
              error += 4;
            }
            primeCache[hex] = error;
            return error;
          }
          if (!millerRabin.test(prime.shrn(1))) {
            error += 2;
          }
          var rem;
          switch (gen) {
            case '02':
              if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
                error += 8;
              }
              break;
            case '05':
              rem = prime.mod(TEN);
              if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
                error += 8;
              }
              break;
            default:
              error += 4;
          }
          primeCache[hex] = error;
          return error;
        }
        function DH(prime, generator, malleable) {
          this.setGenerator(generator);
          this.__prime = new BN(prime);
          this._prime = BN.mont(this.__prime);
          this._primeLen = prime.length;
          this._pub = undefined;
          this._priv = undefined;
          this._primeCode = undefined;
          if (malleable) {
            this.setPublicKey = setPublicKey;
            this.setPrivateKey = setPrivateKey;
          } else {
            this._primeCode = 8;
          }
        }
        Object.defineProperty(DH.prototype, 'verifyError', {
          enumerable: true,
          get: function() {
            if (typeof this._primeCode !== 'number') {
              this._primeCode = checkPrime(this.__prime, this.__gen);
            }
            return this._primeCode;
          }
        });
        DH.prototype.generateKeys = function() {
          if (!this._priv) {
            this._priv = new BN(randomBytes(this._primeLen));
          }
          this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
          return this.getPublicKey();
        };
        DH.prototype.computeSecret = function(other) {
          other = new BN(other);
          other = other.toRed(this._prime);
          var secret = other.redPow(this._priv).fromRed();
          var out = new Buffer(secret.toArray());
          var prime = this.getPrime();
          if (out.length < prime.length) {
            var front = new Buffer(prime.length - out.length);
            front.fill(0);
            out = Buffer.concat([front, out]);
          }
          return out;
        };
        DH.prototype.getPublicKey = function getPublicKey(enc) {
          return formatReturnValue(this._pub, enc);
        };
        DH.prototype.getPrivateKey = function getPrivateKey(enc) {
          return formatReturnValue(this._priv, enc);
        };
        DH.prototype.getPrime = function(enc) {
          return formatReturnValue(this.__prime, enc);
        };
        DH.prototype.getGenerator = function(enc) {
          return formatReturnValue(this._gen, enc);
        };
        DH.prototype.setGenerator = function(gen, enc) {
          enc = enc || 'utf8';
          if (!Buffer.isBuffer(gen)) {
            gen = new Buffer(gen, enc);
          }
          this.__gen = gen;
          this._gen = new BN(gen);
          return this;
        };
        function formatReturnValue(bn, enc) {
          var buf = new Buffer(bn.toArray());
          if (!enc) {
            return buf;
          } else {
            return buf.toString(enc);
          }
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "./generatePrime": 62,
      "bn.js": 16,
      "buffer": 45,
      "miller-rabin": 94,
      "randombytes": 109
    }],
    62: [function(require, module, exports) {
      var randomBytes = require('randombytes');
      module.exports = findPrime;
      findPrime.simpleSieve = simpleSieve;
      findPrime.fermatTest = fermatTest;
      var BN = require('bn.js');
      var TWENTYFOUR = new BN(24);
      var MillerRabin = require('miller-rabin');
      var millerRabin = new MillerRabin();
      var ONE = new BN(1);
      var TWO = new BN(2);
      var FIVE = new BN(5);
      var SIXTEEN = new BN(16);
      var EIGHT = new BN(8);
      var TEN = new BN(10);
      var THREE = new BN(3);
      var SEVEN = new BN(7);
      var ELEVEN = new BN(11);
      var FOUR = new BN(4);
      var TWELVE = new BN(12);
      var primes = null;
      function _getPrimes() {
        if (primes !== null)
          return primes;
        var limit = 0x100000;
        var res = [];
        res[0] = 2;
        for (var i = 1,
            k = 3; k < limit; k += 2) {
          var sqrt = Math.ceil(Math.sqrt(k));
          for (var j = 0; j < i && res[j] <= sqrt; j++)
            if (k % res[j] === 0)
              break;
          if (i !== j && res[j] <= sqrt)
            continue;
          res[i++] = k;
        }
        primes = res;
        return res;
      }
      function simpleSieve(p) {
        var primes = _getPrimes();
        for (var i = 0; i < primes.length; i++)
          if (p.modn(primes[i]) === 0) {
            if (p.cmpn(primes[i]) === 0) {
              return true;
            } else {
              return false;
            }
          }
        return true;
      }
      function fermatTest(p) {
        var red = BN.mont(p);
        return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
      }
      function findPrime(bits, gen) {
        if (bits < 16) {
          if (gen === 2 || gen === 5) {
            return new BN([0x8c, 0x7b]);
          } else {
            return new BN([0x8c, 0x27]);
          }
        }
        gen = new BN(gen);
        var num,
            n2;
        while (true) {
          num = new BN(randomBytes(Math.ceil(bits / 8)));
          while (num.bitLength() > bits) {
            num.ishrn(1);
          }
          if (num.isEven()) {
            num.iadd(ONE);
          }
          if (!num.testn(1)) {
            num.iadd(TWO);
          }
          if (!gen.cmp(TWO)) {
            while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
              num.iadd(FOUR);
            }
          } else if (!gen.cmp(FIVE)) {
            while (num.mod(TEN).cmp(THREE)) {
              num.iadd(FOUR);
            }
          }
          n2 = num.shrn(1);
          if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {
            return num;
          }
        }
      }
    }, {
      "bn.js": 16,
      "miller-rabin": 94,
      "randombytes": 109
    }],
    63: [function(require, module, exports) {
      module.exports = {
        "modp1": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
        },
        "modp2": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
        },
        "modp5": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
        },
        "modp14": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
        },
        "modp15": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
        },
        "modp16": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
        },
        "modp17": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
        },
        "modp18": {
          "gen": "02",
          "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
        }
      };
    }, {}],
    64: [function(require, module, exports) {
      'use strict';
      var elliptic = exports;
      elliptic.version = require('../package.json').version;
      elliptic.utils = require('./elliptic/utils');
      elliptic.rand = require('brorand');
      elliptic.hmacDRBG = require('./elliptic/hmac-drbg');
      elliptic.curve = require('./elliptic/curve');
      elliptic.curves = require('./elliptic/curves');
      elliptic.ec = require('./elliptic/ec');
      elliptic.eddsa = require('./elliptic/eddsa');
    }, {
      "../package.json": 80,
      "./elliptic/curve": 67,
      "./elliptic/curves": 70,
      "./elliptic/ec": 71,
      "./elliptic/eddsa": 74,
      "./elliptic/hmac-drbg": 77,
      "./elliptic/utils": 79,
      "brorand": 17
    }],
    65: [function(require, module, exports) {
      'use strict';
      var BN = require('bn.js');
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      var getNAF = utils.getNAF;
      var getJSF = utils.getJSF;
      var assert = utils.assert;
      function BaseCurve(type, conf) {
        this.type = type;
        this.p = new BN(conf.p, 16);
        this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
        this.zero = new BN(0).toRed(this.red);
        this.one = new BN(1).toRed(this.red);
        this.two = new BN(2).toRed(this.red);
        this.n = conf.n && new BN(conf.n, 16);
        this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
        this._wnafT1 = new Array(4);
        this._wnafT2 = new Array(4);
        this._wnafT3 = new Array(4);
        this._wnafT4 = new Array(4);
        var adjustCount = this.n && this.p.div(this.n);
        if (!adjustCount || adjustCount.cmpn(100) > 0) {
          this.redN = null;
        } else {
          this._maxwellTrick = true;
          this.redN = this.n.toRed(this.red);
        }
      }
      module.exports = BaseCurve;
      BaseCurve.prototype.point = function point() {
        throw new Error('Not implemented');
      };
      BaseCurve.prototype.validate = function validate() {
        throw new Error('Not implemented');
      };
      BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
        assert(p.precomputed);
        var doubles = p._getDoubles();
        var naf = getNAF(k, 1);
        var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
        I /= 3;
        var repr = [];
        for (var j = 0; j < naf.length; j += doubles.step) {
          var nafW = 0;
          for (var k = j + doubles.step - 1; k >= j; k--)
            nafW = (nafW << 1) + naf[k];
          repr.push(nafW);
        }
        var a = this.jpoint(null, null, null);
        var b = this.jpoint(null, null, null);
        for (var i = I; i > 0; i--) {
          for (var j = 0; j < repr.length; j++) {
            var nafW = repr[j];
            if (nafW === i)
              b = b.mixedAdd(doubles.points[j]);
            else if (nafW === -i)
              b = b.mixedAdd(doubles.points[j].neg());
          }
          a = a.add(b);
        }
        return a.toP();
      };
      BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
        var w = 4;
        var nafPoints = p._getNAFPoints(w);
        w = nafPoints.wnd;
        var wnd = nafPoints.points;
        var naf = getNAF(k, w);
        var acc = this.jpoint(null, null, null);
        for (var i = naf.length - 1; i >= 0; i--) {
          for (var k = 0; i >= 0 && naf[i] === 0; i--)
            k++;
          if (i >= 0)
            k++;
          acc = acc.dblp(k);
          if (i < 0)
            break;
          var z = naf[i];
          assert(z !== 0);
          if (p.type === 'affine') {
            if (z > 0)
              acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
            else
              acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
          } else {
            if (z > 0)
              acc = acc.add(wnd[(z - 1) >> 1]);
            else
              acc = acc.add(wnd[(-z - 1) >> 1].neg());
          }
        }
        return p.type === 'affine' ? acc.toP() : acc;
      };
      BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
        var wndWidth = this._wnafT1;
        var wnd = this._wnafT2;
        var naf = this._wnafT3;
        var max = 0;
        for (var i = 0; i < len; i++) {
          var p = points[i];
          var nafPoints = p._getNAFPoints(defW);
          wndWidth[i] = nafPoints.wnd;
          wnd[i] = nafPoints.points;
        }
        for (var i = len - 1; i >= 1; i -= 2) {
          var a = i - 1;
          var b = i;
          if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
            naf[a] = getNAF(coeffs[a], wndWidth[a]);
            naf[b] = getNAF(coeffs[b], wndWidth[b]);
            max = Math.max(naf[a].length, max);
            max = Math.max(naf[b].length, max);
            continue;
          }
          var comb = [points[a], null, null, points[b]];
          if (points[a].y.cmp(points[b].y) === 0) {
            comb[1] = points[a].add(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
          } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].add(points[b].neg());
          } else {
            comb[1] = points[a].toJ().mixedAdd(points[b]);
            comb[2] = points[a].toJ().mixedAdd(points[b].neg());
          }
          var index = [-3, -1, -5, -7, 0, 7, 5, 1, 3];
          var jsf = getJSF(coeffs[a], coeffs[b]);
          max = Math.max(jsf[0].length, max);
          naf[a] = new Array(max);
          naf[b] = new Array(max);
          for (var j = 0; j < max; j++) {
            var ja = jsf[0][j] | 0;
            var jb = jsf[1][j] | 0;
            naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
            naf[b][j] = 0;
            wnd[a] = comb;
          }
        }
        var acc = this.jpoint(null, null, null);
        var tmp = this._wnafT4;
        for (var i = max; i >= 0; i--) {
          var k = 0;
          while (i >= 0) {
            var zero = true;
            for (var j = 0; j < len; j++) {
              tmp[j] = naf[j][i] | 0;
              if (tmp[j] !== 0)
                zero = false;
            }
            if (!zero)
              break;
            k++;
            i--;
          }
          if (i >= 0)
            k++;
          acc = acc.dblp(k);
          if (i < 0)
            break;
          for (var j = 0; j < len; j++) {
            var z = tmp[j];
            var p;
            if (z === 0)
              continue;
            else if (z > 0)
              p = wnd[j][(z - 1) >> 1];
            else if (z < 0)
              p = wnd[j][(-z - 1) >> 1].neg();
            if (p.type === 'affine')
              acc = acc.mixedAdd(p);
            else
              acc = acc.add(p);
          }
        }
        for (var i = 0; i < len; i++)
          wnd[i] = null;
        if (jacobianResult)
          return acc;
        else
          return acc.toP();
      };
      function BasePoint(curve, type) {
        this.curve = curve;
        this.type = type;
        this.precomputed = null;
      }
      BaseCurve.BasePoint = BasePoint;
      BasePoint.prototype.eq = function eq() {
        throw new Error('Not implemented');
      };
      BasePoint.prototype.validate = function validate() {
        return this.curve.validate(this);
      };
      BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
        bytes = utils.toArray(bytes, enc);
        var len = this.p.byteLength();
        if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
          if (bytes[0] === 0x06)
            assert(bytes[bytes.length - 1] % 2 === 0);
          else if (bytes[0] === 0x07)
            assert(bytes[bytes.length - 1] % 2 === 1);
          var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
          return res;
        } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
          return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
        }
        throw new Error('Unknown point format');
      };
      BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
        return this.encode(enc, true);
      };
      BasePoint.prototype._encode = function _encode(compact) {
        var len = this.curve.p.byteLength();
        var x = this.getX().toArray('be', len);
        if (compact)
          return [this.getY().isEven() ? 0x02 : 0x03].concat(x);
        return [0x04].concat(x, this.getY().toArray('be', len));
      };
      BasePoint.prototype.encode = function encode(enc, compact) {
        return utils.encode(this._encode(compact), enc);
      };
      BasePoint.prototype.precompute = function precompute(power) {
        if (this.precomputed)
          return this;
        var precomputed = {
          doubles: null,
          naf: null,
          beta: null
        };
        precomputed.naf = this._getNAFPoints(8);
        precomputed.doubles = this._getDoubles(4, power);
        precomputed.beta = this._getBeta();
        this.precomputed = precomputed;
        return this;
      };
      BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
        if (!this.precomputed)
          return false;
        var doubles = this.precomputed.doubles;
        if (!doubles)
          return false;
        return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
      };
      BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        var doubles = [this];
        var acc = this;
        for (var i = 0; i < power; i += step) {
          for (var j = 0; j < step; j++)
            acc = acc.dbl();
          doubles.push(acc);
        }
        return {
          step: step,
          points: doubles
        };
      };
      BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        var res = [this];
        var max = (1 << wnd) - 1;
        var dbl = max === 1 ? null : this.dbl();
        for (var i = 1; i < max; i++)
          res[i] = res[i - 1].add(dbl);
        return {
          wnd: wnd,
          points: res
        };
      };
      BasePoint.prototype._getBeta = function _getBeta() {
        return null;
      };
      BasePoint.prototype.dblp = function dblp(k) {
        var r = this;
        for (var i = 0; i < k; i++)
          r = r.dbl();
        return r;
      };
    }, {
      "../../elliptic": 64,
      "bn.js": 16
    }],
    66: [function(require, module, exports) {
      'use strict';
      var curve = require('../curve');
      var elliptic = require('../../elliptic');
      var BN = require('bn.js');
      var inherits = require('inherits');
      var Base = curve.base;
      var assert = elliptic.utils.assert;
      function EdwardsCurve(conf) {
        this.twisted = (conf.a | 0) !== 1;
        this.mOneA = this.twisted && (conf.a | 0) === -1;
        this.extended = this.mOneA;
        Base.call(this, 'edwards', conf);
        this.a = new BN(conf.a, 16).umod(this.red.m);
        this.a = this.a.toRed(this.red);
        this.c = new BN(conf.c, 16).toRed(this.red);
        this.c2 = this.c.redSqr();
        this.d = new BN(conf.d, 16).toRed(this.red);
        this.dd = this.d.redAdd(this.d);
        assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
        this.oneC = (conf.c | 0) === 1;
      }
      inherits(EdwardsCurve, Base);
      module.exports = EdwardsCurve;
      EdwardsCurve.prototype._mulA = function _mulA(num) {
        if (this.mOneA)
          return num.redNeg();
        else
          return this.a.redMul(num);
      };
      EdwardsCurve.prototype._mulC = function _mulC(num) {
        if (this.oneC)
          return num;
        else
          return this.c.redMul(num);
      };
      EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
        return this.point(x, y, z, t);
      };
      EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
        x = new BN(x, 16);
        if (!x.red)
          x = x.toRed(this.red);
        var x2 = x.redSqr();
        var rhs = this.c2.redSub(this.a.redMul(x2));
        var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
        var y2 = rhs.redMul(lhs.redInvm());
        var y = y2.redSqrt();
        if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
          throw new Error('invalid point');
        var isOdd = y.fromRed().isOdd();
        if (odd && !isOdd || !odd && isOdd)
          y = y.redNeg();
        return this.point(x, y);
      };
      EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
        y = new BN(y, 16);
        if (!y.red)
          y = y.toRed(this.red);
        var y2 = y.redSqr();
        var lhs = y2.redSub(this.one);
        var rhs = y2.redMul(this.d).redAdd(this.one);
        var x2 = lhs.redMul(rhs.redInvm());
        if (x2.cmp(this.zero) === 0) {
          if (odd)
            throw new Error('invalid point');
          else
            return this.point(this.zero, y);
        }
        var x = x2.redSqrt();
        if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
          throw new Error('invalid point');
        if (x.isOdd() !== odd)
          x = x.redNeg();
        return this.point(x, y);
      };
      EdwardsCurve.prototype.validate = function validate(point) {
        if (point.isInfinity())
          return true;
        point.normalize();
        var x2 = point.x.redSqr();
        var y2 = point.y.redSqr();
        var lhs = x2.redMul(this.a).redAdd(y2);
        var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
        return lhs.cmp(rhs) === 0;
      };
      function Point(curve, x, y, z, t) {
        Base.BasePoint.call(this, curve, 'projective');
        if (x === null && y === null && z === null) {
          this.x = this.curve.zero;
          this.y = this.curve.one;
          this.z = this.curve.one;
          this.t = this.curve.zero;
          this.zOne = true;
        } else {
          this.x = new BN(x, 16);
          this.y = new BN(y, 16);
          this.z = z ? new BN(z, 16) : this.curve.one;
          this.t = t && new BN(t, 16);
          if (!this.x.red)
            this.x = this.x.toRed(this.curve.red);
          if (!this.y.red)
            this.y = this.y.toRed(this.curve.red);
          if (!this.z.red)
            this.z = this.z.toRed(this.curve.red);
          if (this.t && !this.t.red)
            this.t = this.t.toRed(this.curve.red);
          this.zOne = this.z === this.curve.one;
          if (this.curve.extended && !this.t) {
            this.t = this.x.redMul(this.y);
            if (!this.zOne)
              this.t = this.t.redMul(this.z.redInvm());
          }
        }
      }
      inherits(Point, Base.BasePoint);
      EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
        return Point.fromJSON(this, obj);
      };
      EdwardsCurve.prototype.point = function point(x, y, z, t) {
        return new Point(this, x, y, z, t);
      };
      Point.fromJSON = function fromJSON(curve, obj) {
        return new Point(curve, obj[0], obj[1], obj[2]);
      };
      Point.prototype.inspect = function inspect() {
        if (this.isInfinity())
          return '<EC Point Infinity>';
        return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
      };
      Point.prototype.isInfinity = function isInfinity() {
        return this.x.cmpn(0) === 0 && this.y.cmp(this.z) === 0;
      };
      Point.prototype._extDbl = function _extDbl() {
        var a = this.x.redSqr();
        var b = this.y.redSqr();
        var c = this.z.redSqr();
        c = c.redIAdd(c);
        var d = this.curve._mulA(a);
        var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
        var g = d.redAdd(b);
        var f = g.redSub(c);
        var h = d.redSub(b);
        var nx = e.redMul(f);
        var ny = g.redMul(h);
        var nt = e.redMul(h);
        var nz = f.redMul(g);
        return this.curve.point(nx, ny, nz, nt);
      };
      Point.prototype._projDbl = function _projDbl() {
        var b = this.x.redAdd(this.y).redSqr();
        var c = this.x.redSqr();
        var d = this.y.redSqr();
        var nx;
        var ny;
        var nz;
        if (this.curve.twisted) {
          var e = this.curve._mulA(c);
          var f = e.redAdd(d);
          if (this.zOne) {
            nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
            ny = f.redMul(e.redSub(d));
            nz = f.redSqr().redSub(f).redSub(f);
          } else {
            var h = this.z.redSqr();
            var j = f.redSub(h).redISub(h);
            nx = b.redSub(c).redISub(d).redMul(j);
            ny = f.redMul(e.redSub(d));
            nz = f.redMul(j);
          }
        } else {
          var e = c.redAdd(d);
          var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
          var j = e.redSub(h).redSub(h);
          nx = this.curve._mulC(b.redISub(e)).redMul(j);
          ny = this.curve._mulC(e).redMul(c.redISub(d));
          nz = e.redMul(j);
        }
        return this.curve.point(nx, ny, nz);
      };
      Point.prototype.dbl = function dbl() {
        if (this.isInfinity())
          return this;
        if (this.curve.extended)
          return this._extDbl();
        else
          return this._projDbl();
      };
      Point.prototype._extAdd = function _extAdd(p) {
        var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
        var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
        var c = this.t.redMul(this.curve.dd).redMul(p.t);
        var d = this.z.redMul(p.z.redAdd(p.z));
        var e = b.redSub(a);
        var f = d.redSub(c);
        var g = d.redAdd(c);
        var h = b.redAdd(a);
        var nx = e.redMul(f);
        var ny = g.redMul(h);
        var nt = e.redMul(h);
        var nz = f.redMul(g);
        return this.curve.point(nx, ny, nz, nt);
      };
      Point.prototype._projAdd = function _projAdd(p) {
        var a = this.z.redMul(p.z);
        var b = a.redSqr();
        var c = this.x.redMul(p.x);
        var d = this.y.redMul(p.y);
        var e = this.curve.d.redMul(c).redMul(d);
        var f = b.redSub(e);
        var g = b.redAdd(e);
        var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
        var nx = a.redMul(f).redMul(tmp);
        var ny;
        var nz;
        if (this.curve.twisted) {
          ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
          nz = f.redMul(g);
        } else {
          ny = a.redMul(g).redMul(d.redSub(c));
          nz = this.curve._mulC(f).redMul(g);
        }
        return this.curve.point(nx, ny, nz);
      };
      Point.prototype.add = function add(p) {
        if (this.isInfinity())
          return p;
        if (p.isInfinity())
          return this;
        if (this.curve.extended)
          return this._extAdd(p);
        else
          return this._projAdd(p);
      };
      Point.prototype.mul = function mul(k) {
        if (this._hasDoubles(k))
          return this.curve._fixedNafMul(this, k);
        else
          return this.curve._wnafMul(this, k);
      };
      Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
        return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
      };
      Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
        return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
      };
      Point.prototype.normalize = function normalize() {
        if (this.zOne)
          return this;
        var zi = this.z.redInvm();
        this.x = this.x.redMul(zi);
        this.y = this.y.redMul(zi);
        if (this.t)
          this.t = this.t.redMul(zi);
        this.z = this.curve.one;
        this.zOne = true;
        return this;
      };
      Point.prototype.neg = function neg() {
        return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
      };
      Point.prototype.getX = function getX() {
        this.normalize();
        return this.x.fromRed();
      };
      Point.prototype.getY = function getY() {
        this.normalize();
        return this.y.fromRed();
      };
      Point.prototype.eq = function eq(other) {
        return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
      };
      Point.prototype.eqXToP = function eqXToP(x) {
        var rx = x.toRed(this.curve.red).redMul(this.z);
        if (this.x.cmp(rx) === 0)
          return true;
        var xc = x.clone();
        var t = this.curve.redN.redMul(this.z);
        for (; ; ) {
          xc.iadd(this.curve.n);
          if (xc.cmp(this.curve.p) >= 0)
            return false;
          rx.redIAdd(t);
          if (this.x.cmp(rx) === 0)
            return true;
        }
        return false;
      };
      Point.prototype.toP = Point.prototype.normalize;
      Point.prototype.mixedAdd = Point.prototype.add;
    }, {
      "../../elliptic": 64,
      "../curve": 67,
      "bn.js": 16,
      "inherits": 91
    }],
    67: [function(require, module, exports) {
      'use strict';
      var curve = exports;
      curve.base = require('./base');
      curve.short = require('./short');
      curve.mont = require('./mont');
      curve.edwards = require('./edwards');
    }, {
      "./base": 65,
      "./edwards": 66,
      "./mont": 68,
      "./short": 69
    }],
    68: [function(require, module, exports) {
      'use strict';
      var curve = require('../curve');
      var BN = require('bn.js');
      var inherits = require('inherits');
      var Base = curve.base;
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      function MontCurve(conf) {
        Base.call(this, 'mont', conf);
        this.a = new BN(conf.a, 16).toRed(this.red);
        this.b = new BN(conf.b, 16).toRed(this.red);
        this.i4 = new BN(4).toRed(this.red).redInvm();
        this.two = new BN(2).toRed(this.red);
        this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      inherits(MontCurve, Base);
      module.exports = MontCurve;
      MontCurve.prototype.validate = function validate(point) {
        var x = point.normalize().x;
        var x2 = x.redSqr();
        var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
        var y = rhs.redSqrt();
        return y.redSqr().cmp(rhs) === 0;
      };
      function Point(curve, x, z) {
        Base.BasePoint.call(this, curve, 'projective');
        if (x === null && z === null) {
          this.x = this.curve.one;
          this.z = this.curve.zero;
        } else {
          this.x = new BN(x, 16);
          this.z = new BN(z, 16);
          if (!this.x.red)
            this.x = this.x.toRed(this.curve.red);
          if (!this.z.red)
            this.z = this.z.toRed(this.curve.red);
        }
      }
      inherits(Point, Base.BasePoint);
      MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
        return this.point(utils.toArray(bytes, enc), 1);
      };
      MontCurve.prototype.point = function point(x, z) {
        return new Point(this, x, z);
      };
      MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
        return Point.fromJSON(this, obj);
      };
      Point.prototype.precompute = function precompute() {};
      Point.prototype._encode = function _encode() {
        return this.getX().toArray('be', this.curve.p.byteLength());
      };
      Point.fromJSON = function fromJSON(curve, obj) {
        return new Point(curve, obj[0], obj[1] || curve.one);
      };
      Point.prototype.inspect = function inspect() {
        if (this.isInfinity())
          return '<EC Point Infinity>';
        return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
      };
      Point.prototype.isInfinity = function isInfinity() {
        return this.z.cmpn(0) === 0;
      };
      Point.prototype.dbl = function dbl() {
        var a = this.x.redAdd(this.z);
        var aa = a.redSqr();
        var b = this.x.redSub(this.z);
        var bb = b.redSqr();
        var c = aa.redSub(bb);
        var nx = aa.redMul(bb);
        var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
        return this.curve.point(nx, nz);
      };
      Point.prototype.add = function add() {
        throw new Error('Not supported on Montgomery curve');
      };
      Point.prototype.diffAdd = function diffAdd(p, diff) {
        var a = this.x.redAdd(this.z);
        var b = this.x.redSub(this.z);
        var c = p.x.redAdd(p.z);
        var d = p.x.redSub(p.z);
        var da = d.redMul(a);
        var cb = c.redMul(b);
        var nx = diff.z.redMul(da.redAdd(cb).redSqr());
        var nz = diff.x.redMul(da.redISub(cb).redSqr());
        return this.curve.point(nx, nz);
      };
      Point.prototype.mul = function mul(k) {
        var t = k.clone();
        var a = this;
        var b = this.curve.point(null, null);
        var c = this;
        for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
          bits.push(t.andln(1));
        for (var i = bits.length - 1; i >= 0; i--) {
          if (bits[i] === 0) {
            a = a.diffAdd(b, c);
            b = b.dbl();
          } else {
            b = a.diffAdd(b, c);
            a = a.dbl();
          }
        }
        return b;
      };
      Point.prototype.mulAdd = function mulAdd() {
        throw new Error('Not supported on Montgomery curve');
      };
      Point.prototype.jumlAdd = function jumlAdd() {
        throw new Error('Not supported on Montgomery curve');
      };
      Point.prototype.eq = function eq(other) {
        return this.getX().cmp(other.getX()) === 0;
      };
      Point.prototype.normalize = function normalize() {
        this.x = this.x.redMul(this.z.redInvm());
        this.z = this.curve.one;
        return this;
      };
      Point.prototype.getX = function getX() {
        this.normalize();
        return this.x.fromRed();
      };
    }, {
      "../../elliptic": 64,
      "../curve": 67,
      "bn.js": 16,
      "inherits": 91
    }],
    69: [function(require, module, exports) {
      'use strict';
      var curve = require('../curve');
      var elliptic = require('../../elliptic');
      var BN = require('bn.js');
      var inherits = require('inherits');
      var Base = curve.base;
      var assert = elliptic.utils.assert;
      function ShortCurve(conf) {
        Base.call(this, 'short', conf);
        this.a = new BN(conf.a, 16).toRed(this.red);
        this.b = new BN(conf.b, 16).toRed(this.red);
        this.tinv = this.two.redInvm();
        this.zeroA = this.a.fromRed().cmpn(0) === 0;
        this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
        this.endo = this._getEndomorphism(conf);
        this._endoWnafT1 = new Array(4);
        this._endoWnafT2 = new Array(4);
      }
      inherits(ShortCurve, Base);
      module.exports = ShortCurve;
      ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
        if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
          return;
        var beta;
        var lambda;
        if (conf.beta) {
          beta = new BN(conf.beta, 16).toRed(this.red);
        } else {
          var betas = this._getEndoRoots(this.p);
          beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
          beta = beta.toRed(this.red);
        }
        if (conf.lambda) {
          lambda = new BN(conf.lambda, 16);
        } else {
          var lambdas = this._getEndoRoots(this.n);
          if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
            lambda = lambdas[0];
          } else {
            lambda = lambdas[1];
            assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
          }
        }
        var basis;
        if (conf.basis) {
          basis = conf.basis.map(function(vec) {
            return {
              a: new BN(vec.a, 16),
              b: new BN(vec.b, 16)
            };
          });
        } else {
          basis = this._getEndoBasis(lambda);
        }
        return {
          beta: beta,
          lambda: lambda,
          basis: basis
        };
      };
      ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
        var red = num === this.p ? this.red : BN.mont(num);
        var tinv = new BN(2).toRed(red).redInvm();
        var ntinv = tinv.redNeg();
        var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
        var l1 = ntinv.redAdd(s).fromRed();
        var l2 = ntinv.redSub(s).fromRed();
        return [l1, l2];
      };
      ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
        var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
        var u = lambda;
        var v = this.n.clone();
        var x1 = new BN(1);
        var y1 = new BN(0);
        var x2 = new BN(0);
        var y2 = new BN(1);
        var a0;
        var b0;
        var a1;
        var b1;
        var a2;
        var b2;
        var prevR;
        var i = 0;
        var r;
        var x;
        while (u.cmpn(0) !== 0) {
          var q = v.div(u);
          r = v.sub(q.mul(u));
          x = x2.sub(q.mul(x1));
          var y = y2.sub(q.mul(y1));
          if (!a1 && r.cmp(aprxSqrt) < 0) {
            a0 = prevR.neg();
            b0 = x1;
            a1 = r.neg();
            b1 = x;
          } else if (a1 && ++i === 2) {
            break;
          }
          prevR = r;
          v = u;
          u = r;
          x2 = x1;
          x1 = x;
          y2 = y1;
          y1 = y;
        }
        a2 = r.neg();
        b2 = x;
        var len1 = a1.sqr().add(b1.sqr());
        var len2 = a2.sqr().add(b2.sqr());
        if (len2.cmp(len1) >= 0) {
          a2 = a0;
          b2 = b0;
        }
        if (a1.negative) {
          a1 = a1.neg();
          b1 = b1.neg();
        }
        if (a2.negative) {
          a2 = a2.neg();
          b2 = b2.neg();
        }
        return [{
          a: a1,
          b: b1
        }, {
          a: a2,
          b: b2
        }];
      };
      ShortCurve.prototype._endoSplit = function _endoSplit(k) {
        var basis = this.endo.basis;
        var v1 = basis[0];
        var v2 = basis[1];
        var c1 = v2.b.mul(k).divRound(this.n);
        var c2 = v1.b.neg().mul(k).divRound(this.n);
        var p1 = c1.mul(v1.a);
        var p2 = c2.mul(v2.a);
        var q1 = c1.mul(v1.b);
        var q2 = c2.mul(v2.b);
        var k1 = k.sub(p1).sub(p2);
        var k2 = q1.add(q2).neg();
        return {
          k1: k1,
          k2: k2
        };
      };
      ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
        x = new BN(x, 16);
        if (!x.red)
          x = x.toRed(this.red);
        var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
        var y = y2.redSqrt();
        if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
          throw new Error('invalid point');
        var isOdd = y.fromRed().isOdd();
        if (odd && !isOdd || !odd && isOdd)
          y = y.redNeg();
        return this.point(x, y);
      };
      ShortCurve.prototype.validate = function validate(point) {
        if (point.inf)
          return true;
        var x = point.x;
        var y = point.y;
        var ax = this.a.redMul(x);
        var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
        return y.redSqr().redISub(rhs).cmpn(0) === 0;
      };
      ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
        var npoints = this._endoWnafT1;
        var ncoeffs = this._endoWnafT2;
        for (var i = 0; i < points.length; i++) {
          var split = this._endoSplit(coeffs[i]);
          var p = points[i];
          var beta = p._getBeta();
          if (split.k1.negative) {
            split.k1.ineg();
            p = p.neg(true);
          }
          if (split.k2.negative) {
            split.k2.ineg();
            beta = beta.neg(true);
          }
          npoints[i * 2] = p;
          npoints[i * 2 + 1] = beta;
          ncoeffs[i * 2] = split.k1;
          ncoeffs[i * 2 + 1] = split.k2;
        }
        var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
        for (var j = 0; j < i * 2; j++) {
          npoints[j] = null;
          ncoeffs[j] = null;
        }
        return res;
      };
      function Point(curve, x, y, isRed) {
        Base.BasePoint.call(this, curve, 'affine');
        if (x === null && y === null) {
          this.x = null;
          this.y = null;
          this.inf = true;
        } else {
          this.x = new BN(x, 16);
          this.y = new BN(y, 16);
          if (isRed) {
            this.x.forceRed(this.curve.red);
            this.y.forceRed(this.curve.red);
          }
          if (!this.x.red)
            this.x = this.x.toRed(this.curve.red);
          if (!this.y.red)
            this.y = this.y.toRed(this.curve.red);
          this.inf = false;
        }
      }
      inherits(Point, Base.BasePoint);
      ShortCurve.prototype.point = function point(x, y, isRed) {
        return new Point(this, x, y, isRed);
      };
      ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
        return Point.fromJSON(this, obj, red);
      };
      Point.prototype._getBeta = function _getBeta() {
        if (!this.curve.endo)
          return;
        var pre = this.precomputed;
        if (pre && pre.beta)
          return pre.beta;
        var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
        if (pre) {
          var curve = this.curve;
          var endoMul = function(p) {
            return curve.point(p.x.redMul(curve.endo.beta), p.y);
          };
          pre.beta = beta;
          beta.precomputed = {
            beta: null,
            naf: pre.naf && {
              wnd: pre.naf.wnd,
              points: pre.naf.points.map(endoMul)
            },
            doubles: pre.doubles && {
              step: pre.doubles.step,
              points: pre.doubles.points.map(endoMul)
            }
          };
        }
        return beta;
      };
      Point.prototype.toJSON = function toJSON() {
        if (!this.precomputed)
          return [this.x, this.y];
        return [this.x, this.y, this.precomputed && {
          doubles: this.precomputed.doubles && {
            step: this.precomputed.doubles.step,
            points: this.precomputed.doubles.points.slice(1)
          },
          naf: this.precomputed.naf && {
            wnd: this.precomputed.naf.wnd,
            points: this.precomputed.naf.points.slice(1)
          }
        }];
      };
      Point.fromJSON = function fromJSON(curve, obj, red) {
        if (typeof obj === 'string')
          obj = JSON.parse(obj);
        var res = curve.point(obj[0], obj[1], red);
        if (!obj[2])
          return res;
        function obj2point(obj) {
          return curve.point(obj[0], obj[1], red);
        }
        var pre = obj[2];
        res.precomputed = {
          beta: null,
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: [res].concat(pre.doubles.points.map(obj2point))
          },
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: [res].concat(pre.naf.points.map(obj2point))
          }
        };
        return res;
      };
      Point.prototype.inspect = function inspect() {
        if (this.isInfinity())
          return '<EC Point Infinity>';
        return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
      };
      Point.prototype.isInfinity = function isInfinity() {
        return this.inf;
      };
      Point.prototype.add = function add(p) {
        if (this.inf)
          return p;
        if (p.inf)
          return this;
        if (this.eq(p))
          return this.dbl();
        if (this.neg().eq(p))
          return this.curve.point(null, null);
        if (this.x.cmp(p.x) === 0)
          return this.curve.point(null, null);
        var c = this.y.redSub(p.y);
        if (c.cmpn(0) !== 0)
          c = c.redMul(this.x.redSub(p.x).redInvm());
        var nx = c.redSqr().redISub(this.x).redISub(p.x);
        var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
        return this.curve.point(nx, ny);
      };
      Point.prototype.dbl = function dbl() {
        if (this.inf)
          return this;
        var ys1 = this.y.redAdd(this.y);
        if (ys1.cmpn(0) === 0)
          return this.curve.point(null, null);
        var a = this.curve.a;
        var x2 = this.x.redSqr();
        var dyinv = ys1.redInvm();
        var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
        var nx = c.redSqr().redISub(this.x.redAdd(this.x));
        var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
        return this.curve.point(nx, ny);
      };
      Point.prototype.getX = function getX() {
        return this.x.fromRed();
      };
      Point.prototype.getY = function getY() {
        return this.y.fromRed();
      };
      Point.prototype.mul = function mul(k) {
        k = new BN(k, 16);
        if (this._hasDoubles(k))
          return this.curve._fixedNafMul(this, k);
        else if (this.curve.endo)
          return this.curve._endoWnafMulAdd([this], [k]);
        else
          return this.curve._wnafMul(this, k);
      };
      Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
        var points = [this, p2];
        var coeffs = [k1, k2];
        if (this.curve.endo)
          return this.curve._endoWnafMulAdd(points, coeffs);
        else
          return this.curve._wnafMulAdd(1, points, coeffs, 2);
      };
      Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
        var points = [this, p2];
        var coeffs = [k1, k2];
        if (this.curve.endo)
          return this.curve._endoWnafMulAdd(points, coeffs, true);
        else
          return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
      };
      Point.prototype.eq = function eq(p) {
        return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
      };
      Point.prototype.neg = function neg(_precompute) {
        if (this.inf)
          return this;
        var res = this.curve.point(this.x, this.y.redNeg());
        if (_precompute && this.precomputed) {
          var pre = this.precomputed;
          var negate = function(p) {
            return p.neg();
          };
          res.precomputed = {
            naf: pre.naf && {
              wnd: pre.naf.wnd,
              points: pre.naf.points.map(negate)
            },
            doubles: pre.doubles && {
              step: pre.doubles.step,
              points: pre.doubles.points.map(negate)
            }
          };
        }
        return res;
      };
      Point.prototype.toJ = function toJ() {
        if (this.inf)
          return this.curve.jpoint(null, null, null);
        var res = this.curve.jpoint(this.x, this.y, this.curve.one);
        return res;
      };
      function JPoint(curve, x, y, z) {
        Base.BasePoint.call(this, curve, 'jacobian');
        if (x === null && y === null && z === null) {
          this.x = this.curve.one;
          this.y = this.curve.one;
          this.z = new BN(0);
        } else {
          this.x = new BN(x, 16);
          this.y = new BN(y, 16);
          this.z = new BN(z, 16);
        }
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
        this.zOne = this.z === this.curve.one;
      }
      inherits(JPoint, Base.BasePoint);
      ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
        return new JPoint(this, x, y, z);
      };
      JPoint.prototype.toP = function toP() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var zinv = this.z.redInvm();
        var zinv2 = zinv.redSqr();
        var ax = this.x.redMul(zinv2);
        var ay = this.y.redMul(zinv2).redMul(zinv);
        return this.curve.point(ax, ay);
      };
      JPoint.prototype.neg = function neg() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      };
      JPoint.prototype.add = function add(p) {
        if (this.isInfinity())
          return p;
        if (p.isInfinity())
          return this;
        var pz2 = p.z.redSqr();
        var z2 = this.z.redSqr();
        var u1 = this.x.redMul(pz2);
        var u2 = p.x.redMul(z2);
        var s1 = this.y.redMul(pz2.redMul(p.z));
        var s2 = p.y.redMul(z2.redMul(this.z));
        var h = u1.redSub(u2);
        var r = s1.redSub(s2);
        if (h.cmpn(0) === 0) {
          if (r.cmpn(0) !== 0)
            return this.curve.jpoint(null, null, null);
          else
            return this.dbl();
        }
        var h2 = h.redSqr();
        var h3 = h2.redMul(h);
        var v = u1.redMul(h2);
        var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
        var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
        var nz = this.z.redMul(p.z).redMul(h);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.mixedAdd = function mixedAdd(p) {
        if (this.isInfinity())
          return p.toJ();
        if (p.isInfinity())
          return this;
        var z2 = this.z.redSqr();
        var u1 = this.x;
        var u2 = p.x.redMul(z2);
        var s1 = this.y;
        var s2 = p.y.redMul(z2).redMul(this.z);
        var h = u1.redSub(u2);
        var r = s1.redSub(s2);
        if (h.cmpn(0) === 0) {
          if (r.cmpn(0) !== 0)
            return this.curve.jpoint(null, null, null);
          else
            return this.dbl();
        }
        var h2 = h.redSqr();
        var h3 = h2.redMul(h);
        var v = u1.redMul(h2);
        var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
        var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
        var nz = this.z.redMul(h);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.dblp = function dblp(pow) {
        if (pow === 0)
          return this;
        if (this.isInfinity())
          return this;
        if (!pow)
          return this.dbl();
        if (this.curve.zeroA || this.curve.threeA) {
          var r = this;
          for (var i = 0; i < pow; i++)
            r = r.dbl();
          return r;
        }
        var a = this.curve.a;
        var tinv = this.curve.tinv;
        var jx = this.x;
        var jy = this.y;
        var jz = this.z;
        var jz4 = jz.redSqr().redSqr();
        var jyd = jy.redAdd(jy);
        for (var i = 0; i < pow; i++) {
          var jx2 = jx.redSqr();
          var jyd2 = jyd.redSqr();
          var jyd4 = jyd2.redSqr();
          var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
          var t1 = jx.redMul(jyd2);
          var nx = c.redSqr().redISub(t1.redAdd(t1));
          var t2 = t1.redISub(nx);
          var dny = c.redMul(t2);
          dny = dny.redIAdd(dny).redISub(jyd4);
          var nz = jyd.redMul(jz);
          if (i + 1 < pow)
            jz4 = jz4.redMul(jyd4);
          jx = nx;
          jz = nz;
          jyd = dny;
        }
        return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
      };
      JPoint.prototype.dbl = function dbl() {
        if (this.isInfinity())
          return this;
        if (this.curve.zeroA)
          return this._zeroDbl();
        else if (this.curve.threeA)
          return this._threeDbl();
        else
          return this._dbl();
      };
      JPoint.prototype._zeroDbl = function _zeroDbl() {
        var nx;
        var ny;
        var nz;
        if (this.zOne) {
          var xx = this.x.redSqr();
          var yy = this.y.redSqr();
          var yyyy = yy.redSqr();
          var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
          s = s.redIAdd(s);
          var m = xx.redAdd(xx).redIAdd(xx);
          var t = m.redSqr().redISub(s).redISub(s);
          var yyyy8 = yyyy.redIAdd(yyyy);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          nx = t;
          ny = m.redMul(s.redISub(t)).redISub(yyyy8);
          nz = this.y.redAdd(this.y);
        } else {
          var a = this.x.redSqr();
          var b = this.y.redSqr();
          var c = b.redSqr();
          var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
          d = d.redIAdd(d);
          var e = a.redAdd(a).redIAdd(a);
          var f = e.redSqr();
          var c8 = c.redIAdd(c);
          c8 = c8.redIAdd(c8);
          c8 = c8.redIAdd(c8);
          nx = f.redISub(d).redISub(d);
          ny = e.redMul(d.redISub(nx)).redISub(c8);
          nz = this.y.redMul(this.z);
          nz = nz.redIAdd(nz);
        }
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype._threeDbl = function _threeDbl() {
        var nx;
        var ny;
        var nz;
        if (this.zOne) {
          var xx = this.x.redSqr();
          var yy = this.y.redSqr();
          var yyyy = yy.redSqr();
          var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
          s = s.redIAdd(s);
          var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
          var t = m.redSqr().redISub(s).redISub(s);
          nx = t;
          var yyyy8 = yyyy.redIAdd(yyyy);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          yyyy8 = yyyy8.redIAdd(yyyy8);
          ny = m.redMul(s.redISub(t)).redISub(yyyy8);
          nz = this.y.redAdd(this.y);
        } else {
          var delta = this.z.redSqr();
          var gamma = this.y.redSqr();
          var beta = this.x.redMul(gamma);
          var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
          alpha = alpha.redAdd(alpha).redIAdd(alpha);
          var beta4 = beta.redIAdd(beta);
          beta4 = beta4.redIAdd(beta4);
          var beta8 = beta4.redAdd(beta4);
          nx = alpha.redSqr().redISub(beta8);
          nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
          var ggamma8 = gamma.redSqr();
          ggamma8 = ggamma8.redIAdd(ggamma8);
          ggamma8 = ggamma8.redIAdd(ggamma8);
          ggamma8 = ggamma8.redIAdd(ggamma8);
          ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
        }
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype._dbl = function _dbl() {
        var a = this.curve.a;
        var jx = this.x;
        var jy = this.y;
        var jz = this.z;
        var jz4 = jz.redSqr().redSqr();
        var jx2 = jx.redSqr();
        var jy2 = jy.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var jxd4 = jx.redAdd(jx);
        jxd4 = jxd4.redIAdd(jxd4);
        var t1 = jxd4.redMul(jy2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var jyd8 = jy2.redSqr();
        jyd8 = jyd8.redIAdd(jyd8);
        jyd8 = jyd8.redIAdd(jyd8);
        jyd8 = jyd8.redIAdd(jyd8);
        var ny = c.redMul(t2).redISub(jyd8);
        var nz = jy.redAdd(jy).redMul(jz);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.trpl = function trpl() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var zz = this.z.redSqr();
        var yyyy = yy.redSqr();
        var m = xx.redAdd(xx).redIAdd(xx);
        var mm = m.redSqr();
        var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        e = e.redIAdd(e);
        e = e.redAdd(e).redIAdd(e);
        e = e.redISub(mm);
        var ee = e.redSqr();
        var t = yyyy.redIAdd(yyyy);
        t = t.redIAdd(t);
        t = t.redIAdd(t);
        t = t.redIAdd(t);
        var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
        var yyu4 = yy.redMul(u);
        yyu4 = yyu4.redIAdd(yyu4);
        yyu4 = yyu4.redIAdd(yyu4);
        var nx = this.x.redMul(ee).redISub(yyu4);
        nx = nx.redIAdd(nx);
        nx = nx.redIAdd(nx);
        var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
        ny = ny.redIAdd(ny);
        ny = ny.redIAdd(ny);
        ny = ny.redIAdd(ny);
        var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
        return this.curve.jpoint(nx, ny, nz);
      };
      JPoint.prototype.mul = function mul(k, kbase) {
        k = new BN(k, kbase);
        return this.curve._wnafMul(this, k);
      };
      JPoint.prototype.eq = function eq(p) {
        if (p.type === 'affine')
          return this.eq(p.toJ());
        if (this === p)
          return true;
        var z2 = this.z.redSqr();
        var pz2 = p.z.redSqr();
        if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
          return false;
        var z3 = z2.redMul(this.z);
        var pz3 = pz2.redMul(p.z);
        return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
      };
      JPoint.prototype.eqXToP = function eqXToP(x) {
        var zs = this.z.redSqr();
        var rx = x.toRed(this.curve.red).redMul(zs);
        if (this.x.cmp(rx) === 0)
          return true;
        var xc = x.clone();
        var t = this.curve.redN.redMul(zs);
        for (; ; ) {
          xc.iadd(this.curve.n);
          if (xc.cmp(this.curve.p) >= 0)
            return false;
          rx.redIAdd(t);
          if (this.x.cmp(rx) === 0)
            return true;
        }
        return false;
      };
      JPoint.prototype.inspect = function inspect() {
        if (this.isInfinity())
          return '<EC JPoint Infinity>';
        return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
      };
      JPoint.prototype.isInfinity = function isInfinity() {
        return this.z.cmpn(0) === 0;
      };
    }, {
      "../../elliptic": 64,
      "../curve": 67,
      "bn.js": 16,
      "inherits": 91
    }],
    70: [function(require, module, exports) {
      'use strict';
      var curves = exports;
      var hash = require('hash.js');
      var elliptic = require('../elliptic');
      var assert = elliptic.utils.assert;
      function PresetCurve(options) {
        if (options.type === 'short')
          this.curve = new elliptic.curve.short(options);
        else if (options.type === 'edwards')
          this.curve = new elliptic.curve.edwards(options);
        else
          this.curve = new elliptic.curve.mont(options);
        this.g = this.curve.g;
        this.n = this.curve.n;
        this.hash = options.hash;
        assert(this.g.validate(), 'Invalid curve');
        assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
      }
      curves.PresetCurve = PresetCurve;
      function defineCurve(name, options) {
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          get: function() {
            var curve = new PresetCurve(options);
            Object.defineProperty(curves, name, {
              configurable: true,
              enumerable: true,
              value: curve
            });
            return curve;
          }
        });
      }
      defineCurve('p192', {
        type: 'short',
        prime: 'p192',
        p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
        a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
        b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
        n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
        hash: hash.sha256,
        gRed: false,
        g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']
      });
      defineCurve('p224', {
        type: 'short',
        prime: 'p224',
        p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
        a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
        b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
        n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
        hash: hash.sha256,
        gRed: false,
        g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']
      });
      defineCurve('p256', {
        type: 'short',
        prime: null,
        p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
        a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
        b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
        n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
        hash: hash.sha256,
        gRed: false,
        g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']
      });
      defineCurve('p384', {
        type: 'short',
        prime: null,
        p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
        a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
        b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
        n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
        hash: hash.sha384,
        gRed: false,
        g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']
      });
      defineCurve('p521', {
        type: 'short',
        prime: null,
        p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
        a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
        b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
        n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
        hash: hash.sha512,
        gRed: false,
        g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']
      });
      defineCurve('curve25519', {
        type: 'mont',
        prime: 'p25519',
        p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
        a: '76d06',
        b: '0',
        n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
        hash: hash.sha256,
        gRed: false,
        g: ['9']
      });
      defineCurve('ed25519', {
        type: 'edwards',
        prime: 'p25519',
        p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
        a: '-1',
        c: '1',
        d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
        n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
        hash: hash.sha256,
        gRed: false,
        g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', '6666666666666666666666666666666666666666666666666666666666666658']
      });
      var pre;
      try {
        pre = require('./precomputed/secp256k1');
      } catch (e) {
        pre = undefined;
      }
      defineCurve('secp256k1', {
        type: 'short',
        prime: 'k256',
        p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
        a: '0',
        b: '7',
        n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
        h: '1',
        hash: hash.sha256,
        beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
        lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
        basis: [{
          a: '3086d221a7d46bcde86c90e49284eb15',
          b: '-e4437ed6010e88286f547fa90abfe4c3'
        }, {
          a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
          b: '3086d221a7d46bcde86c90e49284eb15'
        }],
        gRed: false,
        g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]
      });
    }, {
      "../elliptic": 64,
      "./precomputed/secp256k1": 78,
      "hash.js": 83
    }],
    71: [function(require, module, exports) {
      'use strict';
      var BN = require('bn.js');
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      var assert = utils.assert;
      var KeyPair = require('./key');
      var Signature = require('./signature');
      function EC(options) {
        if (!(this instanceof EC))
          return new EC(options);
        if (typeof options === 'string') {
          assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);
          options = elliptic.curves[options];
        }
        if (options instanceof elliptic.curves.PresetCurve)
          options = {curve: options};
        this.curve = options.curve.curve;
        this.n = this.curve.n;
        this.nh = this.n.ushrn(1);
        this.g = this.curve.g;
        this.g = options.curve.g;
        this.g.precompute(options.curve.n.bitLength() + 1);
        this.hash = options.hash || options.curve.hash;
      }
      module.exports = EC;
      EC.prototype.keyPair = function keyPair(options) {
        return new KeyPair(this, options);
      };
      EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
        return KeyPair.fromPrivate(this, priv, enc);
      };
      EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
        return KeyPair.fromPublic(this, pub, enc);
      };
      EC.prototype.genKeyPair = function genKeyPair(options) {
        if (!options)
          options = {};
        var drbg = new elliptic.hmacDRBG({
          hash: this.hash,
          pers: options.pers,
          entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
          nonce: this.n.toArray()
        });
        var bytes = this.n.byteLength();
        var ns2 = this.n.sub(new BN(2));
        do {
          var priv = new BN(drbg.generate(bytes));
          if (priv.cmp(ns2) > 0)
            continue;
          priv.iaddn(1);
          return this.keyFromPrivate(priv);
        } while (true);
      };
      EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
        var delta = msg.byteLength() * 8 - this.n.bitLength();
        if (delta > 0)
          msg = msg.ushrn(delta);
        if (!truncOnly && msg.cmp(this.n) >= 0)
          return msg.sub(this.n);
        else
          return msg;
      };
      EC.prototype.sign = function sign(msg, key, enc, options) {
        if (typeof enc === 'object') {
          options = enc;
          enc = null;
        }
        if (!options)
          options = {};
        key = this.keyFromPrivate(key, enc);
        msg = this._truncateToN(new BN(msg, 16));
        var bytes = this.n.byteLength();
        var bkey = key.getPrivate().toArray('be', bytes);
        var nonce = msg.toArray('be', bytes);
        var drbg = new elliptic.hmacDRBG({
          hash: this.hash,
          entropy: bkey,
          nonce: nonce,
          pers: options.pers,
          persEnc: options.persEnc
        });
        var ns1 = this.n.sub(new BN(1));
        for (var iter = 0; true; iter++) {
          var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
          k = this._truncateToN(k, true);
          if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
            continue;
          var kp = this.g.mul(k);
          if (kp.isInfinity())
            continue;
          var kpX = kp.getX();
          var r = kpX.umod(this.n);
          if (r.cmpn(0) === 0)
            continue;
          var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
          s = s.umod(this.n);
          if (s.cmpn(0) === 0)
            continue;
          var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
          if (options.canonical && s.cmp(this.nh) > 0) {
            s = this.n.sub(s);
            recoveryParam ^= 1;
          }
          return new Signature({
            r: r,
            s: s,
            recoveryParam: recoveryParam
          });
        }
      };
      EC.prototype.verify = function verify(msg, signature, key, enc) {
        msg = this._truncateToN(new BN(msg, 16));
        key = this.keyFromPublic(key, enc);
        signature = new Signature(signature, 'hex');
        var r = signature.r;
        var s = signature.s;
        if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
          return false;
        if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
          return false;
        var sinv = s.invm(this.n);
        var u1 = sinv.mul(msg).umod(this.n);
        var u2 = sinv.mul(r).umod(this.n);
        if (!this.curve._maxwellTrick) {
          var p = this.g.mulAdd(u1, key.getPublic(), u2);
          if (p.isInfinity())
            return false;
          return p.getX().umod(this.n).cmp(r) === 0;
        }
        var p = this.g.jmulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity())
          return false;
        return p.eqXToP(r);
      };
      EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
        assert((3 & j) === j, 'The recovery param is more than two bits');
        signature = new Signature(signature, enc);
        var n = this.n;
        var e = new BN(msg);
        var r = signature.r;
        var s = signature.s;
        var isYOdd = j & 1;
        var isSecondKey = j >> 1;
        if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
          throw new Error('Unable to find sencond key candinate');
        if (isSecondKey)
          r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
        else
          r = this.curve.pointFromX(r, isYOdd);
        var eNeg = n.sub(e);
        var rInv = signature.r.invm(n);
        return this.g.mulAdd(eNeg, r, s).mul(rInv);
      };
      EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
        signature = new Signature(signature, enc);
        if (signature.recoveryParam !== null)
          return signature.recoveryParam;
        for (var i = 0; i < 4; i++) {
          var Qprime;
          try {
            Qprime = this.recoverPubKey(e, signature, i);
          } catch (e) {
            continue;
          }
          if (Qprime.eq(Q))
            return i;
        }
        throw new Error('Unable to find valid recovery factor');
      };
    }, {
      "../../elliptic": 64,
      "./key": 72,
      "./signature": 73,
      "bn.js": 16
    }],
    72: [function(require, module, exports) {
      'use strict';
      var BN = require('bn.js');
      function KeyPair(ec, options) {
        this.ec = ec;
        this.priv = null;
        this.pub = null;
        if (options.priv)
          this._importPrivate(options.priv, options.privEnc);
        if (options.pub)
          this._importPublic(options.pub, options.pubEnc);
      }
      module.exports = KeyPair;
      KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
        if (pub instanceof KeyPair)
          return pub;
        return new KeyPair(ec, {
          pub: pub,
          pubEnc: enc
        });
      };
      KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
        if (priv instanceof KeyPair)
          return priv;
        return new KeyPair(ec, {
          priv: priv,
          privEnc: enc
        });
      };
      KeyPair.prototype.validate = function validate() {
        var pub = this.getPublic();
        if (pub.isInfinity())
          return {
            result: false,
            reason: 'Invalid public key'
          };
        if (!pub.validate())
          return {
            result: false,
            reason: 'Public key is not a point'
          };
        if (!pub.mul(this.ec.curve.n).isInfinity())
          return {
            result: false,
            reason: 'Public key * N != O'
          };
        return {
          result: true,
          reason: null
        };
      };
      KeyPair.prototype.getPublic = function getPublic(compact, enc) {
        if (typeof compact === 'string') {
          enc = compact;
          compact = null;
        }
        if (!this.pub)
          this.pub = this.ec.g.mul(this.priv);
        if (!enc)
          return this.pub;
        return this.pub.encode(enc, compact);
      };
      KeyPair.prototype.getPrivate = function getPrivate(enc) {
        if (enc === 'hex')
          return this.priv.toString(16, 2);
        else
          return this.priv;
      };
      KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
        this.priv = new BN(key, enc || 16);
        this.priv = this.priv.umod(this.ec.curve.n);
      };
      KeyPair.prototype._importPublic = function _importPublic(key, enc) {
        if (key.x || key.y) {
          this.pub = this.ec.curve.point(key.x, key.y);
          return;
        }
        this.pub = this.ec.curve.decodePoint(key, enc);
      };
      KeyPair.prototype.derive = function derive(pub) {
        return pub.mul(this.priv).getX();
      };
      KeyPair.prototype.sign = function sign(msg, enc, options) {
        return this.ec.sign(msg, this, enc, options);
      };
      KeyPair.prototype.verify = function verify(msg, signature) {
        return this.ec.verify(msg, signature, this);
      };
      KeyPair.prototype.inspect = function inspect() {
        return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
      };
    }, {"bn.js": 16}],
    73: [function(require, module, exports) {
      'use strict';
      var BN = require('bn.js');
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      var assert = utils.assert;
      function Signature(options, enc) {
        if (options instanceof Signature)
          return options;
        if (this._importDER(options, enc))
          return;
        assert(options.r && options.s, 'Signature without r or s');
        this.r = new BN(options.r, 16);
        this.s = new BN(options.s, 16);
        if (options.recoveryParam === undefined)
          this.recoveryParam = null;
        else
          this.recoveryParam = options.recoveryParam;
      }
      module.exports = Signature;
      function Position() {
        this.place = 0;
      }
      function getLength(buf, p) {
        var initial = buf[p.place++];
        if (!(initial & 0x80)) {
          return initial;
        }
        var octetLen = initial & 0xf;
        var val = 0;
        for (var i = 0,
            off = p.place; i < octetLen; i++, off++) {
          val <<= 8;
          val |= buf[off];
        }
        p.place = off;
        return val;
      }
      function rmPadding(buf) {
        var i = 0;
        var len = buf.length - 1;
        while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
          i++;
        }
        if (i === 0) {
          return buf;
        }
        return buf.slice(i);
      }
      Signature.prototype._importDER = function _importDER(data, enc) {
        data = utils.toArray(data, enc);
        var p = new Position();
        if (data[p.place++] !== 0x30) {
          return false;
        }
        var len = getLength(data, p);
        if ((len + p.place) !== data.length) {
          return false;
        }
        if (data[p.place++] !== 0x02) {
          return false;
        }
        var rlen = getLength(data, p);
        var r = data.slice(p.place, rlen + p.place);
        p.place += rlen;
        if (data[p.place++] !== 0x02) {
          return false;
        }
        var slen = getLength(data, p);
        if (data.length !== slen + p.place) {
          return false;
        }
        var s = data.slice(p.place, slen + p.place);
        if (r[0] === 0 && (r[1] & 0x80)) {
          r = r.slice(1);
        }
        if (s[0] === 0 && (s[1] & 0x80)) {
          s = s.slice(1);
        }
        this.r = new BN(r);
        this.s = new BN(s);
        this.recoveryParam = null;
        return true;
      };
      function constructLength(arr, len) {
        if (len < 0x80) {
          arr.push(len);
          return;
        }
        var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
        arr.push(octets | 0x80);
        while (--octets) {
          arr.push((len >>> (octets << 3)) & 0xff);
        }
        arr.push(len);
      }
      Signature.prototype.toDER = function toDER(enc) {
        var r = this.r.toArray();
        var s = this.s.toArray();
        if (r[0] & 0x80)
          r = [0].concat(r);
        if (s[0] & 0x80)
          s = [0].concat(s);
        r = rmPadding(r);
        s = rmPadding(s);
        while (!s[0] && !(s[1] & 0x80)) {
          s = s.slice(1);
        }
        var arr = [0x02];
        constructLength(arr, r.length);
        arr = arr.concat(r);
        arr.push(0x02);
        constructLength(arr, s.length);
        var backHalf = arr.concat(s);
        var res = [0x30];
        constructLength(res, backHalf.length);
        res = res.concat(backHalf);
        return utils.encode(res, enc);
      };
    }, {
      "../../elliptic": 64,
      "bn.js": 16
    }],
    74: [function(require, module, exports) {
      'use strict';
      var hash = require('hash.js');
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      var assert = utils.assert;
      var parseBytes = utils.parseBytes;
      var KeyPair = require('./key');
      var Signature = require('./signature');
      function EDDSA(curve) {
        assert(curve === 'ed25519', 'only tested with ed25519 so far');
        if (!(this instanceof EDDSA))
          return new EDDSA(curve);
        var curve = elliptic.curves[curve].curve;
        this.curve = curve;
        this.g = curve.g;
        this.g.precompute(curve.n.bitLength() + 1);
        this.pointClass = curve.point().constructor;
        this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
        this.hash = hash.sha512;
      }
      module.exports = EDDSA;
      EDDSA.prototype.sign = function sign(message, secret) {
        message = parseBytes(message);
        var key = this.keyFromSecret(secret);
        var r = this.hashInt(key.messagePrefix(), message);
        var R = this.g.mul(r);
        var Rencoded = this.encodePoint(R);
        var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
        var S = r.add(s_).umod(this.curve.n);
        return this.makeSignature({
          R: R,
          S: S,
          Rencoded: Rencoded
        });
      };
      EDDSA.prototype.verify = function verify(message, sig, pub) {
        message = parseBytes(message);
        sig = this.makeSignature(sig);
        var key = this.keyFromPublic(pub);
        var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
        var SG = this.g.mul(sig.S());
        var RplusAh = sig.R().add(key.pub().mul(h));
        return RplusAh.eq(SG);
      };
      EDDSA.prototype.hashInt = function hashInt() {
        var hash = this.hash();
        for (var i = 0; i < arguments.length; i++)
          hash.update(arguments[i]);
        return utils.intFromLE(hash.digest()).umod(this.curve.n);
      };
      EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
        return KeyPair.fromPublic(this, pub);
      };
      EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
        return KeyPair.fromSecret(this, secret);
      };
      EDDSA.prototype.makeSignature = function makeSignature(sig) {
        if (sig instanceof Signature)
          return sig;
        return new Signature(this, sig);
      };
      EDDSA.prototype.encodePoint = function encodePoint(point) {
        var enc = point.getY().toArray('le', this.encodingLength);
        enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
        return enc;
      };
      EDDSA.prototype.decodePoint = function decodePoint(bytes) {
        bytes = utils.parseBytes(bytes);
        var lastIx = bytes.length - 1;
        var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
        var xIsOdd = (bytes[lastIx] & 0x80) !== 0;
        var y = utils.intFromLE(normed);
        return this.curve.pointFromY(y, xIsOdd);
      };
      EDDSA.prototype.encodeInt = function encodeInt(num) {
        return num.toArray('le', this.encodingLength);
      };
      EDDSA.prototype.decodeInt = function decodeInt(bytes) {
        return utils.intFromLE(bytes);
      };
      EDDSA.prototype.isPoint = function isPoint(val) {
        return val instanceof this.pointClass;
      };
    }, {
      "../../elliptic": 64,
      "./key": 75,
      "./signature": 76,
      "hash.js": 83
    }],
    75: [function(require, module, exports) {
      'use strict';
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      var assert = utils.assert;
      var parseBytes = utils.parseBytes;
      var cachedProperty = utils.cachedProperty;
      function KeyPair(eddsa, params) {
        this.eddsa = eddsa;
        this._secret = parseBytes(params.secret);
        if (eddsa.isPoint(params.pub))
          this._pub = params.pub;
        else
          this._pubBytes = parseBytes(params.pub);
      }
      KeyPair.fromPublic = function fromPublic(eddsa, pub) {
        if (pub instanceof KeyPair)
          return pub;
        return new KeyPair(eddsa, {pub: pub});
      };
      KeyPair.fromSecret = function fromSecret(eddsa, secret) {
        if (secret instanceof KeyPair)
          return secret;
        return new KeyPair(eddsa, {secret: secret});
      };
      KeyPair.prototype.secret = function secret() {
        return this._secret;
      };
      cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
        return this.eddsa.encodePoint(this.pub());
      });
      cachedProperty(KeyPair, 'pub', function pub() {
        if (this._pubBytes)
          return this.eddsa.decodePoint(this._pubBytes);
        return this.eddsa.g.mul(this.priv());
      });
      cachedProperty(KeyPair, 'privBytes', function privBytes() {
        var eddsa = this.eddsa;
        var hash = this.hash();
        var lastIx = eddsa.encodingLength - 1;
        var a = hash.slice(0, eddsa.encodingLength);
        a[0] &= 248;
        a[lastIx] &= 127;
        a[lastIx] |= 64;
        return a;
      });
      cachedProperty(KeyPair, 'priv', function priv() {
        return this.eddsa.decodeInt(this.privBytes());
      });
      cachedProperty(KeyPair, 'hash', function hash() {
        return this.eddsa.hash().update(this.secret()).digest();
      });
      cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
        return this.hash().slice(this.eddsa.encodingLength);
      });
      KeyPair.prototype.sign = function sign(message) {
        assert(this._secret, 'KeyPair can only verify');
        return this.eddsa.sign(message, this);
      };
      KeyPair.prototype.verify = function verify(message, sig) {
        return this.eddsa.verify(message, sig, this);
      };
      KeyPair.prototype.getSecret = function getSecret(enc) {
        assert(this._secret, 'KeyPair is public only');
        return utils.encode(this.secret(), enc);
      };
      KeyPair.prototype.getPublic = function getPublic(enc) {
        return utils.encode(this.pubBytes(), enc);
      };
      module.exports = KeyPair;
    }, {"../../elliptic": 64}],
    76: [function(require, module, exports) {
      'use strict';
      var BN = require('bn.js');
      var elliptic = require('../../elliptic');
      var utils = elliptic.utils;
      var assert = utils.assert;
      var cachedProperty = utils.cachedProperty;
      var parseBytes = utils.parseBytes;
      function Signature(eddsa, sig) {
        this.eddsa = eddsa;
        if (typeof sig !== 'object')
          sig = parseBytes(sig);
        if (Array.isArray(sig)) {
          sig = {
            R: sig.slice(0, eddsa.encodingLength),
            S: sig.slice(eddsa.encodingLength)
          };
        }
        assert(sig.R && sig.S, 'Signature without R or S');
        if (eddsa.isPoint(sig.R))
          this._R = sig.R;
        if (sig.S instanceof BN)
          this._S = sig.S;
        this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
        this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
      }
      cachedProperty(Signature, 'S', function S() {
        return this.eddsa.decodeInt(this.Sencoded());
      });
      cachedProperty(Signature, 'R', function R() {
        return this.eddsa.decodePoint(this.Rencoded());
      });
      cachedProperty(Signature, 'Rencoded', function Rencoded() {
        return this.eddsa.encodePoint(this.R());
      });
      cachedProperty(Signature, 'Sencoded', function Sencoded() {
        return this.eddsa.encodeInt(this.S());
      });
      Signature.prototype.toBytes = function toBytes() {
        return this.Rencoded().concat(this.Sencoded());
      };
      Signature.prototype.toHex = function toHex() {
        return utils.encode(this.toBytes(), 'hex').toUpperCase();
      };
      module.exports = Signature;
    }, {
      "../../elliptic": 64,
      "bn.js": 16
    }],
    77: [function(require, module, exports) {
      'use strict';
      var hash = require('hash.js');
      var elliptic = require('../elliptic');
      var utils = elliptic.utils;
      var assert = utils.assert;
      function HmacDRBG(options) {
        if (!(this instanceof HmacDRBG))
          return new HmacDRBG(options);
        this.hash = options.hash;
        this.predResist = !!options.predResist;
        this.outLen = this.hash.outSize;
        this.minEntropy = options.minEntropy || this.hash.hmacStrength;
        this.reseed = null;
        this.reseedInterval = null;
        this.K = null;
        this.V = null;
        var entropy = utils.toArray(options.entropy, options.entropyEnc);
        var nonce = utils.toArray(options.nonce, options.nonceEnc);
        var pers = utils.toArray(options.pers, options.persEnc);
        assert(entropy.length >= (this.minEntropy / 8), 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
        this._init(entropy, nonce, pers);
      }
      module.exports = HmacDRBG;
      HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
        var seed = entropy.concat(nonce).concat(pers);
        this.K = new Array(this.outLen / 8);
        this.V = new Array(this.outLen / 8);
        for (var i = 0; i < this.V.length; i++) {
          this.K[i] = 0x00;
          this.V[i] = 0x01;
        }
        this._update(seed);
        this.reseed = 1;
        this.reseedInterval = 0x1000000000000;
      };
      HmacDRBG.prototype._hmac = function hmac() {
        return new hash.hmac(this.hash, this.K);
      };
      HmacDRBG.prototype._update = function update(seed) {
        var kmac = this._hmac().update(this.V).update([0x00]);
        if (seed)
          kmac = kmac.update(seed);
        this.K = kmac.digest();
        this.V = this._hmac().update(this.V).digest();
        if (!seed)
          return;
        this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();
        this.V = this._hmac().update(this.V).digest();
      };
      HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
        if (typeof entropyEnc !== 'string') {
          addEnc = add;
          add = entropyEnc;
          entropyEnc = null;
        }
        entropy = utils.toBuffer(entropy, entropyEnc);
        add = utils.toBuffer(add, addEnc);
        assert(entropy.length >= (this.minEntropy / 8), 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
        this._update(entropy.concat(add || []));
        this.reseed = 1;
      };
      HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
        if (this.reseed > this.reseedInterval)
          throw new Error('Reseed is required');
        if (typeof enc !== 'string') {
          addEnc = add;
          add = enc;
          enc = null;
        }
        if (add) {
          add = utils.toArray(add, addEnc);
          this._update(add);
        }
        var temp = [];
        while (temp.length < len) {
          this.V = this._hmac().update(this.V).digest();
          temp = temp.concat(this.V);
        }
        var res = temp.slice(0, len);
        this._update(add);
        this.reseed++;
        return utils.encode(res, enc);
      };
    }, {
      "../elliptic": 64,
      "hash.js": 83
    }],
    78: [function(require, module, exports) {
      module.exports = {
        doubles: {
          step: 4,
          points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]
        },
        naf: {
          wnd: 7,
          points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]
        }
      };
    }, {}],
    79: [function(require, module, exports) {
      'use strict';
      var utils = exports;
      var BN = require('bn.js');
      utils.assert = function assert(val, msg) {
        if (!val)
          throw new Error(msg || 'Assertion failed');
      };
      function toArray(msg, enc) {
        if (Array.isArray(msg))
          return msg.slice();
        if (!msg)
          return [];
        var res = [];
        if (typeof msg !== 'string') {
          for (var i = 0; i < msg.length; i++)
            res[i] = msg[i] | 0;
          return res;
        }
        if (!enc) {
          for (var i = 0; i < msg.length; i++) {
            var c = msg.charCodeAt(i);
            var hi = c >> 8;
            var lo = c & 0xff;
            if (hi)
              res.push(hi, lo);
            else
              res.push(lo);
          }
        } else if (enc === 'hex') {
          msg = msg.replace(/[^a-z0-9]+/ig, '');
          if (msg.length % 2 !== 0)
            msg = '0' + msg;
          for (var i = 0; i < msg.length; i += 2)
            res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
        return res;
      }
      utils.toArray = toArray;
      function zero2(word) {
        if (word.length === 1)
          return '0' + word;
        else
          return word;
      }
      utils.zero2 = zero2;
      function toHex(msg) {
        var res = '';
        for (var i = 0; i < msg.length; i++)
          res += zero2(msg[i].toString(16));
        return res;
      }
      utils.toHex = toHex;
      utils.encode = function encode(arr, enc) {
        if (enc === 'hex')
          return toHex(arr);
        else
          return arr;
      };
      function getNAF(num, w) {
        var naf = [];
        var ws = 1 << (w + 1);
        var k = num.clone();
        while (k.cmpn(1) >= 0) {
          var z;
          if (k.isOdd()) {
            var mod = k.andln(ws - 1);
            if (mod > (ws >> 1) - 1)
              z = (ws >> 1) - mod;
            else
              z = mod;
            k.isubn(z);
          } else {
            z = 0;
          }
          naf.push(z);
          var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
          for (var i = 1; i < shift; i++)
            naf.push(0);
          k.iushrn(shift);
        }
        return naf;
      }
      utils.getNAF = getNAF;
      function getJSF(k1, k2) {
        var jsf = [[], []];
        k1 = k1.clone();
        k2 = k2.clone();
        var d1 = 0;
        var d2 = 0;
        while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
          var m14 = (k1.andln(3) + d1) & 3;
          var m24 = (k2.andln(3) + d2) & 3;
          if (m14 === 3)
            m14 = -1;
          if (m24 === 3)
            m24 = -1;
          var u1;
          if ((m14 & 1) === 0) {
            u1 = 0;
          } else {
            var m8 = (k1.andln(7) + d1) & 7;
            if ((m8 === 3 || m8 === 5) && m24 === 2)
              u1 = -m14;
            else
              u1 = m14;
          }
          jsf[0].push(u1);
          var u2;
          if ((m24 & 1) === 0) {
            u2 = 0;
          } else {
            var m8 = (k2.andln(7) + d2) & 7;
            if ((m8 === 3 || m8 === 5) && m14 === 2)
              u2 = -m24;
            else
              u2 = m24;
          }
          jsf[1].push(u2);
          if (2 * d1 === u1 + 1)
            d1 = 1 - d1;
          if (2 * d2 === u2 + 1)
            d2 = 1 - d2;
          k1.iushrn(1);
          k2.iushrn(1);
        }
        return jsf;
      }
      utils.getJSF = getJSF;
      function cachedProperty(obj, name, computer) {
        var key = '_' + name;
        obj.prototype[name] = function cachedProperty() {
          return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
        };
      }
      utils.cachedProperty = cachedProperty;
      function parseBytes(bytes) {
        return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
      }
      utils.parseBytes = parseBytes;
      function intFromLE(bytes) {
        return new BN(bytes, 'hex', 'le');
      }
      utils.intFromLE = intFromLE;
    }, {"bn.js": 16}],
    80: [function(require, module, exports) {
      module.exports = {
        "_args": [["elliptic@^6.0.0", "/Users/kang/.nvm/versions/node/v5.11.1/lib/node_modules/browserify/node_modules/browserify-sign"]],
        "_from": "elliptic@>=6.0.0 <7.0.0",
        "_id": "elliptic@6.3.1",
        "_inCache": true,
        "_installable": true,
        "_location": "/browserify/elliptic",
        "_nodeVersion": "6.0.0",
        "_npmOperationalInternal": {
          "host": "packages-16-east.internal.npmjs.com",
          "tmp": "tmp/elliptic-6.3.1.tgz_1465921413402_0.5202967382501811"
        },
        "_npmUser": {
          "email": "fedor@indutny.com",
          "name": "indutny"
        },
        "_npmVersion": "3.8.6",
        "_phantomChildren": {},
        "_requested": {
          "name": "elliptic",
          "raw": "elliptic@^6.0.0",
          "rawSpec": "^6.0.0",
          "scope": null,
          "spec": ">=6.0.0 <7.0.0",
          "type": "range"
        },
        "_requiredBy": ["/browserify/browserify-sign", "/browserify/create-ecdh"],
        "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.1.tgz",
        "_shasum": "17781f2109ab0ec686b146bdcff5d2e8c6aeceda",
        "_shrinkwrap": null,
        "_spec": "elliptic@^6.0.0",
        "_where": "/Users/kang/.nvm/versions/node/v5.11.1/lib/node_modules/browserify/node_modules/browserify-sign",
        "author": {
          "email": "fedor@indutny.com",
          "name": "Fedor Indutny"
        },
        "bugs": {"url": "https://github.com/indutny/elliptic/issues"},
        "dependencies": {
          "bn.js": "^4.4.0",
          "brorand": "^1.0.1",
          "hash.js": "^1.0.0",
          "inherits": "^2.0.1"
        },
        "description": "EC cryptography",
        "devDependencies": {
          "brfs": "^1.4.3",
          "coveralls": "^2.11.3",
          "grunt": "^0.4.5",
          "grunt-browserify": "^5.0.0",
          "grunt-contrib-connect": "^1.0.0",
          "grunt-contrib-copy": "^1.0.0",
          "grunt-contrib-uglify": "^1.0.1",
          "grunt-mocha-istanbul": "^3.0.1",
          "grunt-saucelabs": "^8.6.2",
          "istanbul": "^0.4.2",
          "jscs": "^2.9.0",
          "jshint": "^2.6.0",
          "mocha": "^2.1.0"
        },
        "directories": {},
        "dist": {
          "shasum": "17781f2109ab0ec686b146bdcff5d2e8c6aeceda",
          "tarball": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.1.tgz"
        },
        "files": ["lib"],
        "gitHead": "c53f5cf3d832c0073eb4a4ed423a464cbce68f3e",
        "homepage": "https://github.com/indutny/elliptic",
        "keywords": ["EC", "Elliptic", "curve", "Cryptography"],
        "license": "MIT",
        "main": "lib/elliptic.js",
        "maintainers": [{
          "email": "fedor@indutny.com",
          "name": "indutny"
        }],
        "name": "elliptic",
        "optionalDependencies": {},
        "readme": "ERROR: No README data found!",
        "repository": {
          "type": "git",
          "url": "git+ssh://git@github.com/indutny/elliptic.git"
        },
        "scripts": {
          "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
          "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
          "lint": "npm run jscs && npm run jshint",
          "test": "npm run lint && npm run unit",
          "unit": "istanbul test _mocha --reporter=spec test/index.js",
          "version": "grunt dist && git add dist/"
        },
        "version": "6.3.1"
      };
    }, {}],
    81: [function(require, module, exports) {
      function EventEmitter() {
        this._events = this._events || {};
        this._maxListeners = this._maxListeners || undefined;
      }
      module.exports = EventEmitter;
      EventEmitter.EventEmitter = EventEmitter;
      EventEmitter.prototype._events = undefined;
      EventEmitter.prototype._maxListeners = undefined;
      EventEmitter.defaultMaxListeners = 10;
      EventEmitter.prototype.setMaxListeners = function(n) {
        if (!isNumber(n) || n < 0 || isNaN(n))
          throw TypeError('n must be a positive number');
        this._maxListeners = n;
        return this;
      };
      EventEmitter.prototype.emit = function(type) {
        var er,
            handler,
            len,
            args,
            i,
            listeners;
        if (!this._events)
          this._events = {};
        if (type === 'error') {
          if (!this._events.error || (isObject(this._events.error) && !this._events.error.length)) {
            er = arguments[1];
            if (er instanceof Error) {
              throw er;
            } else {
              var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
              err.context = er;
              throw err;
            }
          }
        }
        handler = this._events[type];
        if (isUndefined(handler))
          return false;
        if (isFunction(handler)) {
          switch (arguments.length) {
            case 1:
              handler.call(this);
              break;
            case 2:
              handler.call(this, arguments[1]);
              break;
            case 3:
              handler.call(this, arguments[1], arguments[2]);
              break;
            default:
              args = Array.prototype.slice.call(arguments, 1);
              handler.apply(this, args);
          }
        } else if (isObject(handler)) {
          args = Array.prototype.slice.call(arguments, 1);
          listeners = handler.slice();
          len = listeners.length;
          for (i = 0; i < len; i++)
            listeners[i].apply(this, args);
        }
        return true;
      };
      EventEmitter.prototype.addListener = function(type, listener) {
        var m;
        if (!isFunction(listener))
          throw TypeError('listener must be a function');
        if (!this._events)
          this._events = {};
        if (this._events.newListener)
          this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);
        if (!this._events[type])
          this._events[type] = listener;
        else if (isObject(this._events[type]))
          this._events[type].push(listener);
        else
          this._events[type] = [this._events[type], listener];
        if (isObject(this._events[type]) && !this._events[type].warned) {
          if (!isUndefined(this._maxListeners)) {
            m = this._maxListeners;
          } else {
            m = EventEmitter.defaultMaxListeners;
          }
          if (m && m > 0 && this._events[type].length > m) {
            this._events[type].warned = true;
            console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
            if (typeof console.trace === 'function') {
              console.trace();
            }
          }
        }
        return this;
      };
      EventEmitter.prototype.on = EventEmitter.prototype.addListener;
      EventEmitter.prototype.once = function(type, listener) {
        if (!isFunction(listener))
          throw TypeError('listener must be a function');
        var fired = false;
        function g() {
          this.removeListener(type, g);
          if (!fired) {
            fired = true;
            listener.apply(this, arguments);
          }
        }
        g.listener = listener;
        this.on(type, g);
        return this;
      };
      EventEmitter.prototype.removeListener = function(type, listener) {
        var list,
            position,
            length,
            i;
        if (!isFunction(listener))
          throw TypeError('listener must be a function');
        if (!this._events || !this._events[type])
          return this;
        list = this._events[type];
        length = list.length;
        position = -1;
        if (list === listener || (isFunction(list.listener) && list.listener === listener)) {
          delete this._events[type];
          if (this._events.removeListener)
            this.emit('removeListener', type, listener);
        } else if (isObject(list)) {
          for (i = length; i-- > 0; ) {
            if (list[i] === listener || (list[i].listener && list[i].listener === listener)) {
              position = i;
              break;
            }
          }
          if (position < 0)
            return this;
          if (list.length === 1) {
            list.length = 0;
            delete this._events[type];
          } else {
            list.splice(position, 1);
          }
          if (this._events.removeListener)
            this.emit('removeListener', type, listener);
        }
        return this;
      };
      EventEmitter.prototype.removeAllListeners = function(type) {
        var key,
            listeners;
        if (!this._events)
          return this;
        if (!this._events.removeListener) {
          if (arguments.length === 0)
            this._events = {};
          else if (this._events[type])
            delete this._events[type];
          return this;
        }
        if (arguments.length === 0) {
          for (key in this._events) {
            if (key === 'removeListener')
              continue;
            this.removeAllListeners(key);
          }
          this.removeAllListeners('removeListener');
          this._events = {};
          return this;
        }
        listeners = this._events[type];
        if (isFunction(listeners)) {
          this.removeListener(type, listeners);
        } else if (listeners) {
          while (listeners.length)
            this.removeListener(type, listeners[listeners.length - 1]);
        }
        delete this._events[type];
        return this;
      };
      EventEmitter.prototype.listeners = function(type) {
        var ret;
        if (!this._events || !this._events[type])
          ret = [];
        else if (isFunction(this._events[type]))
          ret = [this._events[type]];
        else
          ret = this._events[type].slice();
        return ret;
      };
      EventEmitter.prototype.listenerCount = function(type) {
        if (this._events) {
          var evlistener = this._events[type];
          if (isFunction(evlistener))
            return 1;
          else if (evlistener)
            return evlistener.length;
        }
        return 0;
      };
      EventEmitter.listenerCount = function(emitter, type) {
        return emitter.listenerCount(type);
      };
      function isFunction(arg) {
        return typeof arg === 'function';
      }
      function isNumber(arg) {
        return typeof arg === 'number';
      }
      function isObject(arg) {
        return typeof arg === 'object' && arg !== null;
      }
      function isUndefined(arg) {
        return arg === void 0;
      }
    }, {}],
    82: [function(require, module, exports) {
      (function(Buffer) {
        var md5 = require('create-hash/md5');
        module.exports = EVP_BytesToKey;
        function EVP_BytesToKey(password, salt, keyLen, ivLen) {
          if (!Buffer.isBuffer(password)) {
            password = new Buffer(password, 'binary');
          }
          if (salt && !Buffer.isBuffer(salt)) {
            salt = new Buffer(salt, 'binary');
          }
          keyLen = keyLen / 8;
          ivLen = ivLen || 0;
          var ki = 0;
          var ii = 0;
          var key = new Buffer(keyLen);
          var iv = new Buffer(ivLen);
          var addmd = 0;
          var md_buf;
          var i;
          var bufs = [];
          while (true) {
            if (addmd++ > 0) {
              bufs.push(md_buf);
            }
            bufs.push(password);
            if (salt) {
              bufs.push(salt);
            }
            md_buf = md5(Buffer.concat(bufs));
            bufs = [];
            i = 0;
            if (keyLen > 0) {
              while (true) {
                if (keyLen === 0) {
                  break;
                }
                if (i === md_buf.length) {
                  break;
                }
                key[ki++] = md_buf[i];
                keyLen--;
                i++;
              }
            }
            if (ivLen > 0 && i !== md_buf.length) {
              while (true) {
                if (ivLen === 0) {
                  break;
                }
                if (i === md_buf.length) {
                  break;
                }
                iv[ii++] = md_buf[i];
                ivLen--;
                i++;
              }
            }
            if (keyLen === 0 && ivLen === 0) {
              break;
            }
          }
          for (i = 0; i < md_buf.length; i++) {
            md_buf[i] = 0;
          }
          return {
            key: key,
            iv: iv
          };
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "create-hash/md5": 51
    }],
    83: [function(require, module, exports) {
      var hash = exports;
      hash.utils = require('./hash/utils');
      hash.common = require('./hash/common');
      hash.sha = require('./hash/sha');
      hash.ripemd = require('./hash/ripemd');
      hash.hmac = require('./hash/hmac');
      hash.sha1 = hash.sha.sha1;
      hash.sha256 = hash.sha.sha256;
      hash.sha224 = hash.sha.sha224;
      hash.sha384 = hash.sha.sha384;
      hash.sha512 = hash.sha.sha512;
      hash.ripemd160 = hash.ripemd.ripemd160;
    }, {
      "./hash/common": 84,
      "./hash/hmac": 85,
      "./hash/ripemd": 86,
      "./hash/sha": 87,
      "./hash/utils": 88
    }],
    84: [function(require, module, exports) {
      var hash = require('../hash');
      var utils = hash.utils;
      var assert = utils.assert;
      function BlockHash() {
        this.pending = null;
        this.pendingTotal = 0;
        this.blockSize = this.constructor.blockSize;
        this.outSize = this.constructor.outSize;
        this.hmacStrength = this.constructor.hmacStrength;
        this.padLength = this.constructor.padLength / 8;
        this.endian = 'big';
        this._delta8 = this.blockSize / 8;
        this._delta32 = this.blockSize / 32;
      }
      exports.BlockHash = BlockHash;
      BlockHash.prototype.update = function update(msg, enc) {
        msg = utils.toArray(msg, enc);
        if (!this.pending)
          this.pending = msg;
        else
          this.pending = this.pending.concat(msg);
        this.pendingTotal += msg.length;
        if (this.pending.length >= this._delta8) {
          msg = this.pending;
          var r = msg.length % this._delta8;
          this.pending = msg.slice(msg.length - r, msg.length);
          if (this.pending.length === 0)
            this.pending = null;
          msg = utils.join32(msg, 0, msg.length - r, this.endian);
          for (var i = 0; i < msg.length; i += this._delta32)
            this._update(msg, i, i + this._delta32);
        }
        return this;
      };
      BlockHash.prototype.digest = function digest(enc) {
        this.update(this._pad());
        assert(this.pending === null);
        return this._digest(enc);
      };
      BlockHash.prototype._pad = function pad() {
        var len = this.pendingTotal;
        var bytes = this._delta8;
        var k = bytes - ((len + this.padLength) % bytes);
        var res = new Array(k + this.padLength);
        res[0] = 0x80;
        for (var i = 1; i < k; i++)
          res[i] = 0;
        len <<= 3;
        if (this.endian === 'big') {
          for (var t = 8; t < this.padLength; t++)
            res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = (len >>> 24) & 0xff;
          res[i++] = (len >>> 16) & 0xff;
          res[i++] = (len >>> 8) & 0xff;
          res[i++] = len & 0xff;
        } else {
          res[i++] = len & 0xff;
          res[i++] = (len >>> 8) & 0xff;
          res[i++] = (len >>> 16) & 0xff;
          res[i++] = (len >>> 24) & 0xff;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          for (var t = 8; t < this.padLength; t++)
            res[i++] = 0;
        }
        return res;
      };
    }, {"../hash": 83}],
    85: [function(require, module, exports) {
      var hmac = exports;
      var hash = require('../hash');
      var utils = hash.utils;
      var assert = utils.assert;
      function Hmac(hash, key, enc) {
        if (!(this instanceof Hmac))
          return new Hmac(hash, key, enc);
        this.Hash = hash;
        this.blockSize = hash.blockSize / 8;
        this.outSize = hash.outSize / 8;
        this.inner = null;
        this.outer = null;
        this._init(utils.toArray(key, enc));
      }
      module.exports = Hmac;
      Hmac.prototype._init = function init(key) {
        if (key.length > this.blockSize)
          key = new this.Hash().update(key).digest();
        assert(key.length <= this.blockSize);
        for (var i = key.length; i < this.blockSize; i++)
          key.push(0);
        for (var i = 0; i < key.length; i++)
          key[i] ^= 0x36;
        this.inner = new this.Hash().update(key);
        for (var i = 0; i < key.length; i++)
          key[i] ^= 0x6a;
        this.outer = new this.Hash().update(key);
      };
      Hmac.prototype.update = function update(msg, enc) {
        this.inner.update(msg, enc);
        return this;
      };
      Hmac.prototype.digest = function digest(enc) {
        this.outer.update(this.inner.digest());
        return this.outer.digest(enc);
      };
    }, {"../hash": 83}],
    86: [function(require, module, exports) {
      var hash = require('../hash');
      var utils = hash.utils;
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_3 = utils.sum32_3;
      var sum32_4 = utils.sum32_4;
      var BlockHash = hash.common.BlockHash;
      function RIPEMD160() {
        if (!(this instanceof RIPEMD160))
          return new RIPEMD160();
        BlockHash.call(this);
        this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
        this.endian = 'little';
      }
      utils.inherits(RIPEMD160, BlockHash);
      exports.ripemd160 = RIPEMD160;
      RIPEMD160.blockSize = 512;
      RIPEMD160.outSize = 160;
      RIPEMD160.hmacStrength = 192;
      RIPEMD160.padLength = 64;
      RIPEMD160.prototype._update = function update(msg, start) {
        var A = this.h[0];
        var B = this.h[1];
        var C = this.h[2];
        var D = this.h[3];
        var E = this.h[4];
        var Ah = A;
        var Bh = B;
        var Ch = C;
        var Dh = D;
        var Eh = E;
        for (var j = 0; j < 80; j++) {
          var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
          A = E;
          E = D;
          D = rotl32(C, 10);
          C = B;
          B = T;
          T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
          Ah = Eh;
          Eh = Dh;
          Dh = rotl32(Ch, 10);
          Ch = Bh;
          Bh = T;
        }
        T = sum32_3(this.h[1], C, Dh);
        this.h[1] = sum32_3(this.h[2], D, Eh);
        this.h[2] = sum32_3(this.h[3], E, Ah);
        this.h[3] = sum32_3(this.h[4], A, Bh);
        this.h[4] = sum32_3(this.h[0], B, Ch);
        this.h[0] = T;
      };
      RIPEMD160.prototype._digest = function digest(enc) {
        if (enc === 'hex')
          return utils.toHex32(this.h, 'little');
        else
          return utils.split32(this.h, 'little');
      };
      function f(j, x, y, z) {
        if (j <= 15)
          return x ^ y ^ z;
        else if (j <= 31)
          return (x & y) | ((~x) & z);
        else if (j <= 47)
          return (x | (~y)) ^ z;
        else if (j <= 63)
          return (x & z) | (y & (~z));
        else
          return x ^ (y | (~z));
      }
      function K(j) {
        if (j <= 15)
          return 0x00000000;
        else if (j <= 31)
          return 0x5a827999;
        else if (j <= 47)
          return 0x6ed9eba1;
        else if (j <= 63)
          return 0x8f1bbcdc;
        else
          return 0xa953fd4e;
      }
      function Kh(j) {
        if (j <= 15)
          return 0x50a28be6;
        else if (j <= 31)
          return 0x5c4dd124;
        else if (j <= 47)
          return 0x6d703ef3;
        else if (j <= 63)
          return 0x7a6d76e9;
        else
          return 0x00000000;
      }
      var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
      var rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
      var s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
      var sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
    }, {"../hash": 83}],
    87: [function(require, module, exports) {
      var hash = require('../hash');
      var utils = hash.utils;
      var assert = utils.assert;
      var rotr32 = utils.rotr32;
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_4 = utils.sum32_4;
      var sum32_5 = utils.sum32_5;
      var rotr64_hi = utils.rotr64_hi;
      var rotr64_lo = utils.rotr64_lo;
      var shr64_hi = utils.shr64_hi;
      var shr64_lo = utils.shr64_lo;
      var sum64 = utils.sum64;
      var sum64_hi = utils.sum64_hi;
      var sum64_lo = utils.sum64_lo;
      var sum64_4_hi = utils.sum64_4_hi;
      var sum64_4_lo = utils.sum64_4_lo;
      var sum64_5_hi = utils.sum64_5_hi;
      var sum64_5_lo = utils.sum64_5_lo;
      var BlockHash = hash.common.BlockHash;
      var sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];
      var sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];
      var sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];
      function SHA256() {
        if (!(this instanceof SHA256))
          return new SHA256();
        BlockHash.call(this);
        this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
        this.k = sha256_K;
        this.W = new Array(64);
      }
      utils.inherits(SHA256, BlockHash);
      exports.sha256 = SHA256;
      SHA256.blockSize = 512;
      SHA256.outSize = 256;
      SHA256.hmacStrength = 192;
      SHA256.padLength = 64;
      SHA256.prototype._update = function _update(msg, start) {
        var W = this.W;
        for (var i = 0; i < 16; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i++)
          W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        var f = this.h[5];
        var g = this.h[6];
        var h = this.h[7];
        assert(this.k.length === W.length);
        for (var i = 0; i < W.length; i++) {
          var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
          var T2 = sum32(s0_256(a), maj32(a, b, c));
          h = g;
          g = f;
          f = e;
          e = sum32(d, T1);
          d = c;
          c = b;
          b = a;
          a = sum32(T1, T2);
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
        this.h[5] = sum32(this.h[5], f);
        this.h[6] = sum32(this.h[6], g);
        this.h[7] = sum32(this.h[7], h);
      };
      SHA256.prototype._digest = function digest(enc) {
        if (enc === 'hex')
          return utils.toHex32(this.h, 'big');
        else
          return utils.split32(this.h, 'big');
      };
      function SHA224() {
        if (!(this instanceof SHA224))
          return new SHA224();
        SHA256.call(this);
        this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];
      }
      utils.inherits(SHA224, SHA256);
      exports.sha224 = SHA224;
      SHA224.blockSize = 512;
      SHA224.outSize = 224;
      SHA224.hmacStrength = 192;
      SHA224.padLength = 64;
      SHA224.prototype._digest = function digest(enc) {
        if (enc === 'hex')
          return utils.toHex32(this.h.slice(0, 7), 'big');
        else
          return utils.split32(this.h.slice(0, 7), 'big');
      };
      function SHA512() {
        if (!(this instanceof SHA512))
          return new SHA512();
        BlockHash.call(this);
        this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];
        this.k = sha512_K;
        this.W = new Array(160);
      }
      utils.inherits(SHA512, BlockHash);
      exports.sha512 = SHA512;
      SHA512.blockSize = 1024;
      SHA512.outSize = 512;
      SHA512.hmacStrength = 192;
      SHA512.padLength = 128;
      SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
        var W = this.W;
        for (var i = 0; i < 32; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i += 2) {
          var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
          var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
          var c1_hi = W[i - 14];
          var c1_lo = W[i - 13];
          var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
          var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
          var c3_hi = W[i - 32];
          var c3_lo = W[i - 31];
          W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
          W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
        }
      };
      SHA512.prototype._update = function _update(msg, start) {
        this._prepareBlock(msg, start);
        var W = this.W;
        var ah = this.h[0];
        var al = this.h[1];
        var bh = this.h[2];
        var bl = this.h[3];
        var ch = this.h[4];
        var cl = this.h[5];
        var dh = this.h[6];
        var dl = this.h[7];
        var eh = this.h[8];
        var el = this.h[9];
        var fh = this.h[10];
        var fl = this.h[11];
        var gh = this.h[12];
        var gl = this.h[13];
        var hh = this.h[14];
        var hl = this.h[15];
        assert(this.k.length === W.length);
        for (var i = 0; i < W.length; i += 2) {
          var c0_hi = hh;
          var c0_lo = hl;
          var c1_hi = s1_512_hi(eh, el);
          var c1_lo = s1_512_lo(eh, el);
          var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
          var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
          var c3_hi = this.k[i];
          var c3_lo = this.k[i + 1];
          var c4_hi = W[i];
          var c4_lo = W[i + 1];
          var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
          var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
          var c0_hi = s0_512_hi(ah, al);
          var c0_lo = s0_512_lo(ah, al);
          var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
          var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
          var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
          var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          eh = sum64_hi(dh, dl, T1_hi, T1_lo);
          el = sum64_lo(dl, dl, T1_hi, T1_lo);
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
          al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
        }
        sum64(this.h, 0, ah, al);
        sum64(this.h, 2, bh, bl);
        sum64(this.h, 4, ch, cl);
        sum64(this.h, 6, dh, dl);
        sum64(this.h, 8, eh, el);
        sum64(this.h, 10, fh, fl);
        sum64(this.h, 12, gh, gl);
        sum64(this.h, 14, hh, hl);
      };
      SHA512.prototype._digest = function digest(enc) {
        if (enc === 'hex')
          return utils.toHex32(this.h, 'big');
        else
          return utils.split32(this.h, 'big');
      };
      function SHA384() {
        if (!(this instanceof SHA384))
          return new SHA384();
        SHA512.call(this);
        this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];
      }
      utils.inherits(SHA384, SHA512);
      exports.sha384 = SHA384;
      SHA384.blockSize = 1024;
      SHA384.outSize = 384;
      SHA384.hmacStrength = 192;
      SHA384.padLength = 128;
      SHA384.prototype._digest = function digest(enc) {
        if (enc === 'hex')
          return utils.toHex32(this.h.slice(0, 12), 'big');
        else
          return utils.split32(this.h.slice(0, 12), 'big');
      };
      function SHA1() {
        if (!(this instanceof SHA1))
          return new SHA1();
        BlockHash.call(this);
        this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
        this.W = new Array(80);
      }
      utils.inherits(SHA1, BlockHash);
      exports.sha1 = SHA1;
      SHA1.blockSize = 512;
      SHA1.outSize = 160;
      SHA1.hmacStrength = 80;
      SHA1.padLength = 64;
      SHA1.prototype._update = function _update(msg, start) {
        var W = this.W;
        for (var i = 0; i < 16; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i++)
          W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        for (var i = 0; i < W.length; i++) {
          var s = ~~(i / 20);
          var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
          e = d;
          d = c;
          c = rotl32(b, 30);
          b = a;
          a = t;
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
      };
      SHA1.prototype._digest = function digest(enc) {
        if (enc === 'hex')
          return utils.toHex32(this.h, 'big');
        else
          return utils.split32(this.h, 'big');
      };
      function ch32(x, y, z) {
        return (x & y) ^ ((~x) & z);
      }
      function maj32(x, y, z) {
        return (x & y) ^ (x & z) ^ (y & z);
      }
      function p32(x, y, z) {
        return x ^ y ^ z;
      }
      function s0_256(x) {
        return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
      }
      function s1_256(x) {
        return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
      }
      function g0_256(x) {
        return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
      }
      function g1_256(x) {
        return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
      }
      function ft_1(s, x, y, z) {
        if (s === 0)
          return ch32(x, y, z);
        if (s === 1 || s === 3)
          return p32(x, y, z);
        if (s === 2)
          return maj32(x, y, z);
      }
      function ch64_hi(xh, xl, yh, yl, zh, zl) {
        var r = (xh & yh) ^ ((~xh) & zh);
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function ch64_lo(xh, xl, yh, yl, zh, zl) {
        var r = (xl & yl) ^ ((~xl) & zl);
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function maj64_hi(xh, xl, yh, yl, zh, zl) {
        var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function maj64_lo(xh, xl, yh, yl, zh, zl) {
        var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function s0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 28);
        var c1_hi = rotr64_hi(xl, xh, 2);
        var c2_hi = rotr64_hi(xl, xh, 7);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function s0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 28);
        var c1_lo = rotr64_lo(xl, xh, 2);
        var c2_lo = rotr64_lo(xl, xh, 7);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function s1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 14);
        var c1_hi = rotr64_hi(xh, xl, 18);
        var c2_hi = rotr64_hi(xl, xh, 9);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function s1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 14);
        var c1_lo = rotr64_lo(xh, xl, 18);
        var c2_lo = rotr64_lo(xl, xh, 9);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function g0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 1);
        var c1_hi = rotr64_hi(xh, xl, 8);
        var c2_hi = shr64_hi(xh, xl, 7);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function g0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 1);
        var c1_lo = rotr64_lo(xh, xl, 8);
        var c2_lo = shr64_lo(xh, xl, 7);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function g1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 19);
        var c1_hi = rotr64_hi(xl, xh, 29);
        var c2_hi = shr64_hi(xh, xl, 6);
        var r = c0_hi ^ c1_hi ^ c2_hi;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
      function g1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 19);
        var c1_lo = rotr64_lo(xl, xh, 29);
        var c2_lo = shr64_lo(xh, xl, 6);
        var r = c0_lo ^ c1_lo ^ c2_lo;
        if (r < 0)
          r += 0x100000000;
        return r;
      }
    }, {"../hash": 83}],
    88: [function(require, module, exports) {
      var utils = exports;
      var inherits = require('inherits');
      function toArray(msg, enc) {
        if (Array.isArray(msg))
          return msg.slice();
        if (!msg)
          return [];
        var res = [];
        if (typeof msg === 'string') {
          if (!enc) {
            for (var i = 0; i < msg.length; i++) {
              var c = msg.charCodeAt(i);
              var hi = c >> 8;
              var lo = c & 0xff;
              if (hi)
                res.push(hi, lo);
              else
                res.push(lo);
            }
          } else if (enc === 'hex') {
            msg = msg.replace(/[^a-z0-9]+/ig, '');
            if (msg.length % 2 !== 0)
              msg = '0' + msg;
            for (var i = 0; i < msg.length; i += 2)
              res.push(parseInt(msg[i] + msg[i + 1], 16));
          }
        } else {
          for (var i = 0; i < msg.length; i++)
            res[i] = msg[i] | 0;
        }
        return res;
      }
      utils.toArray = toArray;
      function toHex(msg) {
        var res = '';
        for (var i = 0; i < msg.length; i++)
          res += zero2(msg[i].toString(16));
        return res;
      }
      utils.toHex = toHex;
      function htonl(w) {
        var res = (w >>> 24) | ((w >>> 8) & 0xff00) | ((w << 8) & 0xff0000) | ((w & 0xff) << 24);
        return res >>> 0;
      }
      utils.htonl = htonl;
      function toHex32(msg, endian) {
        var res = '';
        for (var i = 0; i < msg.length; i++) {
          var w = msg[i];
          if (endian === 'little')
            w = htonl(w);
          res += zero8(w.toString(16));
        }
        return res;
      }
      utils.toHex32 = toHex32;
      function zero2(word) {
        if (word.length === 1)
          return '0' + word;
        else
          return word;
      }
      utils.zero2 = zero2;
      function zero8(word) {
        if (word.length === 7)
          return '0' + word;
        else if (word.length === 6)
          return '00' + word;
        else if (word.length === 5)
          return '000' + word;
        else if (word.length === 4)
          return '0000' + word;
        else if (word.length === 3)
          return '00000' + word;
        else if (word.length === 2)
          return '000000' + word;
        else if (word.length === 1)
          return '0000000' + word;
        else
          return word;
      }
      utils.zero8 = zero8;
      function join32(msg, start, end, endian) {
        var len = end - start;
        assert(len % 4 === 0);
        var res = new Array(len / 4);
        for (var i = 0,
            k = start; i < res.length; i++, k += 4) {
          var w;
          if (endian === 'big')
            w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
          else
            w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
          res[i] = w >>> 0;
        }
        return res;
      }
      utils.join32 = join32;
      function split32(msg, endian) {
        var res = new Array(msg.length * 4);
        for (var i = 0,
            k = 0; i < msg.length; i++, k += 4) {
          var m = msg[i];
          if (endian === 'big') {
            res[k] = m >>> 24;
            res[k + 1] = (m >>> 16) & 0xff;
            res[k + 2] = (m >>> 8) & 0xff;
            res[k + 3] = m & 0xff;
          } else {
            res[k + 3] = m >>> 24;
            res[k + 2] = (m >>> 16) & 0xff;
            res[k + 1] = (m >>> 8) & 0xff;
            res[k] = m & 0xff;
          }
        }
        return res;
      }
      utils.split32 = split32;
      function rotr32(w, b) {
        return (w >>> b) | (w << (32 - b));
      }
      utils.rotr32 = rotr32;
      function rotl32(w, b) {
        return (w << b) | (w >>> (32 - b));
      }
      utils.rotl32 = rotl32;
      function sum32(a, b) {
        return (a + b) >>> 0;
      }
      utils.sum32 = sum32;
      function sum32_3(a, b, c) {
        return (a + b + c) >>> 0;
      }
      utils.sum32_3 = sum32_3;
      function sum32_4(a, b, c, d) {
        return (a + b + c + d) >>> 0;
      }
      utils.sum32_4 = sum32_4;
      function sum32_5(a, b, c, d, e) {
        return (a + b + c + d + e) >>> 0;
      }
      utils.sum32_5 = sum32_5;
      function assert(cond, msg) {
        if (!cond)
          throw new Error(msg || 'Assertion failed');
      }
      utils.assert = assert;
      utils.inherits = inherits;
      function sum64(buf, pos, ah, al) {
        var bh = buf[pos];
        var bl = buf[pos + 1];
        var lo = (al + bl) >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        buf[pos] = hi >>> 0;
        buf[pos + 1] = lo;
      }
      exports.sum64 = sum64;
      function sum64_hi(ah, al, bh, bl) {
        var lo = (al + bl) >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        return hi >>> 0;
      }
      ;
      exports.sum64_hi = sum64_hi;
      function sum64_lo(ah, al, bh, bl) {
        var lo = al + bl;
        return lo >>> 0;
      }
      ;
      exports.sum64_lo = sum64_lo;
      function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
        var carry = 0;
        var lo = al;
        lo = (lo + bl) >>> 0;
        carry += lo < al ? 1 : 0;
        lo = (lo + cl) >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = (lo + dl) >>> 0;
        carry += lo < dl ? 1 : 0;
        var hi = ah + bh + ch + dh + carry;
        return hi >>> 0;
      }
      ;
      exports.sum64_4_hi = sum64_4_hi;
      function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
        var lo = al + bl + cl + dl;
        return lo >>> 0;
      }
      ;
      exports.sum64_4_lo = sum64_4_lo;
      function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var carry = 0;
        var lo = al;
        lo = (lo + bl) >>> 0;
        carry += lo < al ? 1 : 0;
        lo = (lo + cl) >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = (lo + dl) >>> 0;
        carry += lo < dl ? 1 : 0;
        lo = (lo + el) >>> 0;
        carry += lo < el ? 1 : 0;
        var hi = ah + bh + ch + dh + eh + carry;
        return hi >>> 0;
      }
      ;
      exports.sum64_5_hi = sum64_5_hi;
      function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var lo = al + bl + cl + dl + el;
        return lo >>> 0;
      }
      ;
      exports.sum64_5_lo = sum64_5_lo;
      function rotr64_hi(ah, al, num) {
        var r = (al << (32 - num)) | (ah >>> num);
        return r >>> 0;
      }
      ;
      exports.rotr64_hi = rotr64_hi;
      function rotr64_lo(ah, al, num) {
        var r = (ah << (32 - num)) | (al >>> num);
        return r >>> 0;
      }
      ;
      exports.rotr64_lo = rotr64_lo;
      function shr64_hi(ah, al, num) {
        return ah >>> num;
      }
      ;
      exports.shr64_hi = shr64_hi;
      function shr64_lo(ah, al, num) {
        var r = (ah << (32 - num)) | (al >>> num);
        return r >>> 0;
      }
      ;
      exports.shr64_lo = shr64_lo;
    }, {"inherits": 91}],
    89: [function(require, module, exports) {
      exports.read = function(buffer, offset, isLE, mLen, nBytes) {
        var e,
            m;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i = isLE ? (nBytes - 1) : 0;
        var d = isLE ? -1 : 1;
        var s = buffer[offset + i];
        i += d;
        e = s & ((1 << (-nBits)) - 1);
        s >>= (-nBits);
        nBits += eLen;
        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
        m = e & ((1 << (-nBits)) - 1);
        e >>= (-nBits);
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
          return m ? NaN : ((s ? -1 : 1) * Infinity);
        } else {
          m = m + Math.pow(2, mLen);
          e = e - eBias;
        }
        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
      };
      exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
        var e,
            m,
            c;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
        var i = isLE ? 0 : (nBytes - 1);
        var d = isLE ? 1 : -1;
        var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;
        value = Math.abs(value);
        if (isNaN(value) || value === Infinity) {
          m = isNaN(value) ? 1 : 0;
          e = eMax;
        } else {
          e = Math.floor(Math.log(value) / Math.LN2);
          if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * Math.pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }
          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
          }
        }
        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
        e = (e << mLen) | m;
        eLen += mLen;
        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
        buffer[offset + i - d] |= s * 128;
      };
    }, {}],
    90: [function(require, module, exports) {
      var indexOf = [].indexOf;
      module.exports = function(arr, obj) {
        if (indexOf)
          return arr.indexOf(obj);
        for (var i = 0; i < arr.length; ++i) {
          if (arr[i] === obj)
            return i;
        }
        return -1;
      };
    }, {}],
    91: [function(require, module, exports) {
      if (typeof Object.create === 'function') {
        module.exports = function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }});
        };
      } else {
        module.exports = function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        };
      }
    }, {}],
    92: [function(require, module, exports) {
      module.exports = function(obj) {
        return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
      };
      function isBuffer(obj) {
        return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
      }
      function isSlowBuffer(obj) {
        return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));
      }
    }, {}],
    93: [function(require, module, exports) {
      var toString = {}.toString;
      module.exports = Array.isArray || function(arr) {
        return toString.call(arr) == '[object Array]';
      };
    }, {}],
    94: [function(require, module, exports) {
      var bn = require('bn.js');
      var brorand = require('brorand');
      function MillerRabin(rand) {
        this.rand = rand || new brorand.Rand();
      }
      module.exports = MillerRabin;
      MillerRabin.create = function create(rand) {
        return new MillerRabin(rand);
      };
      MillerRabin.prototype._rand = function _rand(n) {
        var len = n.bitLength();
        var buf = this.rand.generate(Math.ceil(len / 8));
        buf[0] |= 3;
        var mask = len & 0x7;
        if (mask !== 0)
          buf[buf.length - 1] >>= 7 - mask;
        return new bn(buf);
      };
      MillerRabin.prototype.test = function test(n, k, cb) {
        var len = n.bitLength();
        var red = bn.mont(n);
        var rone = new bn(1).toRed(red);
        if (!k)
          k = Math.max(1, (len / 48) | 0);
        var n1 = n.subn(1);
        var n2 = n1.subn(1);
        for (var s = 0; !n1.testn(s); s++) {}
        var d = n.shrn(s);
        var rn1 = n1.toRed(red);
        var prime = true;
        for (; k > 0; k--) {
          var a = this._rand(n2);
          if (cb)
            cb(a);
          var x = a.toRed(red).redPow(d);
          if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
            continue;
          for (var i = 1; i < s; i++) {
            x = x.redSqr();
            if (x.cmp(rone) === 0)
              return false;
            if (x.cmp(rn1) === 0)
              break;
          }
          if (i === s)
            return false;
        }
        return prime;
      };
      MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
        var len = n.bitLength();
        var red = bn.mont(n);
        var rone = new bn(1).toRed(red);
        if (!k)
          k = Math.max(1, (len / 48) | 0);
        var n1 = n.subn(1);
        var n2 = n1.subn(1);
        for (var s = 0; !n1.testn(s); s++) {}
        var d = n.shrn(s);
        var rn1 = n1.toRed(red);
        for (; k > 0; k--) {
          var a = this._rand(n2);
          var g = n.gcd(a);
          if (g.cmpn(1) !== 0)
            return g;
          var x = a.toRed(red).redPow(d);
          if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
            continue;
          for (var i = 1; i < s; i++) {
            x = x.redSqr();
            if (x.cmp(rone) === 0)
              return x.fromRed().subn(1).gcd(n);
            if (x.cmp(rn1) === 0)
              break;
          }
          if (i === s) {
            x = x.redSqr();
            return x.fromRed().subn(1).gcd(n);
          }
        }
        return false;
      };
    }, {
      "bn.js": 16,
      "brorand": 17
    }],
    95: [function(require, module, exports) {
      module.exports = assert;
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || 'Assertion failed');
      }
      assert.equal = function assertEqual(l, r, msg) {
        if (l != r)
          throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
      };
    }, {}],
    96: [function(require, module, exports) {
      module.exports = {
        "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
        "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
        "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
        "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
        "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
        "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
        "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
        "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
        "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
        "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
        "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
        "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
      };
    }, {}],
    97: [function(require, module, exports) {
      var asn1 = require('asn1.js');
      var RSAPrivateKey = asn1.define('RSAPrivateKey', function() {
        this.seq().obj(this.key('version').int(), this.key('modulus').int(), this.key('publicExponent').int(), this.key('privateExponent').int(), this.key('prime1').int(), this.key('prime2').int(), this.key('exponent1').int(), this.key('exponent2').int(), this.key('coefficient').int());
      });
      exports.RSAPrivateKey = RSAPrivateKey;
      var RSAPublicKey = asn1.define('RSAPublicKey', function() {
        this.seq().obj(this.key('modulus').int(), this.key('publicExponent').int());
      });
      exports.RSAPublicKey = RSAPublicKey;
      var PublicKey = asn1.define('SubjectPublicKeyInfo', function() {
        this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());
      });
      exports.PublicKey = PublicKey;
      var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function() {
        this.seq().obj(this.key('algorithm').objid(), this.key('none').null_().optional(), this.key('curve').objid().optional(), this.key('params').seq().obj(this.key('p').int(), this.key('q').int(), this.key('g').int()).optional());
      });
      var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function() {
        this.seq().obj(this.key('version').int(), this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPrivateKey').octstr());
      });
      exports.PrivateKey = PrivateKeyInfo;
      var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function() {
        this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(), this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(), this.key('kdeparams').seq().obj(this.key('salt').octstr(), this.key('iters').int())), this.key('cipher').seq().obj(this.key('algo').objid(), this.key('iv').octstr()))), this.key('subjectPrivateKey').octstr());
      });
      exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
      var DSAPrivateKey = asn1.define('DSAPrivateKey', function() {
        this.seq().obj(this.key('version').int(), this.key('p').int(), this.key('q').int(), this.key('g').int(), this.key('pub_key').int(), this.key('priv_key').int());
      });
      exports.DSAPrivateKey = DSAPrivateKey;
      exports.DSAparam = asn1.define('DSAparam', function() {
        this.int();
      });
      var ECPrivateKey = asn1.define('ECPrivateKey', function() {
        this.seq().obj(this.key('version').int(), this.key('privateKey').octstr(), this.key('parameters').optional().explicit(0).use(ECParameters), this.key('publicKey').optional().explicit(1).bitstr());
      });
      exports.ECPrivateKey = ECPrivateKey;
      var ECParameters = asn1.define('ECParameters', function() {
        this.choice({namedCurve: this.objid()});
      });
      exports.signature = asn1.define('signature', function() {
        this.seq().obj(this.key('r').int(), this.key('s').int());
      });
    }, {"asn1.js": 1}],
    98: [function(require, module, exports) {
      (function(Buffer) {
        var findProc = /Proc-Type: 4,ENCRYPTED\r?\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\r?\n\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n/m;
        var startRegex = /^-----BEGIN (.*) KEY-----\r?\n/m;
        var fullRegex = /^-----BEGIN (.*) KEY-----\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n-----END \1 KEY-----$/m;
        var evp = require('evp_bytestokey');
        var ciphers = require('browserify-aes');
        module.exports = function(okey, password) {
          var key = okey.toString();
          var match = key.match(findProc);
          var decrypted;
          if (!match) {
            var match2 = key.match(fullRegex);
            decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64');
          } else {
            var suite = 'aes' + match[1];
            var iv = new Buffer(match[2], 'hex');
            var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64');
            var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;
            var out = [];
            var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
            out.push(cipher.update(cipherText));
            out.push(cipher.final());
            decrypted = Buffer.concat(out);
          }
          var tag = key.match(startRegex)[1] + ' KEY';
          return {
            tag: tag,
            data: decrypted
          };
        };
      }).call(this, require("buffer").Buffer);
    }, {
      "browserify-aes": 21,
      "buffer": 45,
      "evp_bytestokey": 82
    }],
    99: [function(require, module, exports) {
      (function(Buffer) {
        var asn1 = require('./asn1');
        var aesid = require('./aesid.json');
        var fixProc = require('./fixProc');
        var ciphers = require('browserify-aes');
        var compat = require('pbkdf2');
        module.exports = parseKeys;
        function parseKeys(buffer) {
          var password;
          if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
            password = buffer.passphrase;
            buffer = buffer.key;
          }
          if (typeof buffer === 'string') {
            buffer = new Buffer(buffer);
          }
          var stripped = fixProc(buffer, password);
          var type = stripped.tag;
          var data = stripped.data;
          var subtype,
              ndata;
          switch (type) {
            case 'PUBLIC KEY':
              ndata = asn1.PublicKey.decode(data, 'der');
              subtype = ndata.algorithm.algorithm.join('.');
              switch (subtype) {
                case '1.2.840.113549.1.1.1':
                  return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');
                case '1.2.840.10045.2.1':
                  ndata.subjectPrivateKey = ndata.subjectPublicKey;
                  return {
                    type: 'ec',
                    data: ndata
                  };
                case '1.2.840.10040.4.1':
                  ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');
                  return {
                    type: 'dsa',
                    data: ndata.algorithm.params
                  };
                default:
                  throw new Error('unknown key id ' + subtype);
              }
              throw new Error('unknown key type ' + type);
            case 'ENCRYPTED PRIVATE KEY':
              data = asn1.EncryptedPrivateKey.decode(data, 'der');
              data = decrypt(data, password);
            case 'PRIVATE KEY':
              ndata = asn1.PrivateKey.decode(data, 'der');
              subtype = ndata.algorithm.algorithm.join('.');
              switch (subtype) {
                case '1.2.840.113549.1.1.1':
                  return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');
                case '1.2.840.10045.2.1':
                  return {
                    curve: ndata.algorithm.curve,
                    privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
                  };
                case '1.2.840.10040.4.1':
                  ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');
                  return {
                    type: 'dsa',
                    params: ndata.algorithm.params
                  };
                default:
                  throw new Error('unknown key id ' + subtype);
              }
              throw new Error('unknown key type ' + type);
            case 'RSA PUBLIC KEY':
              return asn1.RSAPublicKey.decode(data, 'der');
            case 'RSA PRIVATE KEY':
              return asn1.RSAPrivateKey.decode(data, 'der');
            case 'DSA PRIVATE KEY':
              return {
                type: 'dsa',
                params: asn1.DSAPrivateKey.decode(data, 'der')
              };
            case 'EC PRIVATE KEY':
              data = asn1.ECPrivateKey.decode(data, 'der');
              return {
                curve: data.parameters.value,
                privateKey: data.privateKey
              };
            default:
              throw new Error('unknown key type ' + type);
          }
        }
        parseKeys.signature = asn1.signature;
        function decrypt(data, password) {
          var salt = data.algorithm.decrypt.kde.kdeparams.salt;
          var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);
          var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];
          var iv = data.algorithm.decrypt.cipher.iv;
          var cipherText = data.subjectPrivateKey;
          var keylen = parseInt(algo.split('-')[1], 10) / 8;
          var key = compat.pbkdf2Sync(password, salt, iters, keylen);
          var cipher = ciphers.createDecipheriv(algo, key, iv);
          var out = [];
          out.push(cipher.update(cipherText));
          out.push(cipher.final());
          return Buffer.concat(out);
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "./aesid.json": 96,
      "./asn1": 97,
      "./fixProc": 98,
      "browserify-aes": 21,
      "buffer": 45,
      "pbkdf2": 100
    }],
    100: [function(require, module, exports) {
      (function(Buffer) {
        var createHmac = require('create-hmac');
        var MAX_ALLOC = Math.pow(2, 30) - 1;
        exports.pbkdf2 = pbkdf2;
        function pbkdf2(password, salt, iterations, keylen, digest, callback) {
          if (typeof digest === 'function') {
            callback = digest;
            digest = undefined;
          }
          if (typeof callback !== 'function') {
            throw new Error('No callback provided to pbkdf2');
          }
          var result = pbkdf2Sync(password, salt, iterations, keylen, digest);
          setTimeout(function() {
            callback(undefined, result);
          });
        }
        exports.pbkdf2Sync = pbkdf2Sync;
        function pbkdf2Sync(password, salt, iterations, keylen, digest) {
          if (typeof iterations !== 'number') {
            throw new TypeError('Iterations not a number');
          }
          if (iterations < 0) {
            throw new TypeError('Bad iterations');
          }
          if (typeof keylen !== 'number') {
            throw new TypeError('Key length not a number');
          }
          if (keylen < 0 || keylen > MAX_ALLOC) {
            throw new TypeError('Bad key length');
          }
          digest = digest || 'sha1';
          if (!Buffer.isBuffer(password))
            password = new Buffer(password, 'binary');
          if (!Buffer.isBuffer(salt))
            salt = new Buffer(salt, 'binary');
          var hLen;
          var l = 1;
          var DK = new Buffer(keylen);
          var block1 = new Buffer(salt.length + 4);
          salt.copy(block1, 0, 0, salt.length);
          var r;
          var T;
          for (var i = 1; i <= l; i++) {
            block1.writeUInt32BE(i, salt.length);
            var U = createHmac(digest, password).update(block1).digest();
            if (!hLen) {
              hLen = U.length;
              T = new Buffer(hLen);
              l = Math.ceil(keylen / hLen);
              r = keylen - (l - 1) * hLen;
            }
            U.copy(T, 0, 0, hLen);
            for (var j = 1; j < iterations; j++) {
              U = createHmac(digest, password).update(U).digest();
              for (var k = 0; k < hLen; k++) {
                T[k] ^= U[k];
              }
            }
            var destPos = (i - 1) * hLen;
            var len = (i === l ? r : hLen);
            T.copy(DK, destPos, 0, len);
          }
          return DK;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "create-hmac": 52
    }],
    101: [function(require, module, exports) {
      (function(process) {
        'use strict';
        if (!process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
          module.exports = nextTick;
        } else {
          module.exports = process.nextTick;
        }
        function nextTick(fn, arg1, arg2, arg3) {
          if (typeof fn !== 'function') {
            throw new TypeError('"callback" argument must be a function');
          }
          var len = arguments.length;
          var args,
              i;
          switch (len) {
            case 0:
            case 1:
              return process.nextTick(fn);
            case 2:
              return process.nextTick(function afterTickOne() {
                fn.call(null, arg1);
              });
            case 3:
              return process.nextTick(function afterTickTwo() {
                fn.call(null, arg1, arg2);
              });
            case 4:
              return process.nextTick(function afterTickThree() {
                fn.call(null, arg1, arg2, arg3);
              });
            default:
              args = new Array(len - 1);
              i = 0;
              while (i < args.length) {
                args[i++] = arguments[i];
              }
              return process.nextTick(function afterTick() {
                fn.apply(null, args);
              });
          }
        }
      }).call(this, require('_process'));
    }, {"_process": 102}],
    102: [function(require, module, exports) {
      var process = module.exports = {};
      var cachedSetTimeout;
      var cachedClearTimeout;
      (function() {
        try {
          cachedSetTimeout = setTimeout;
        } catch (e) {
          cachedSetTimeout = function() {
            throw new Error('setTimeout is not defined');
          };
        }
        try {
          cachedClearTimeout = clearTimeout;
        } catch (e) {
          cachedClearTimeout = function() {
            throw new Error('clearTimeout is not defined');
          };
        }
      }());
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          return setTimeout(fun, 0);
        }
        try {
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e) {
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          return clearTimeout(marker);
        }
        try {
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            return cachedClearTimeout.call(null, marker);
          } catch (e) {
            return cachedClearTimeout.call(this, marker);
          }
        }
      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;
      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }
      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;
        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }
      process.nextTick = function(fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      process.title = 'browser';
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = '';
      process.versions = {};
      function noop() {}
      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;
      process.binding = function(name) {
        throw new Error('process.binding is not supported');
      };
      process.cwd = function() {
        return '/';
      };
      process.chdir = function(dir) {
        throw new Error('process.chdir is not supported');
      };
      process.umask = function() {
        return 0;
      };
    }, {}],
    103: [function(require, module, exports) {
      exports.publicEncrypt = require('./publicEncrypt');
      exports.privateDecrypt = require('./privateDecrypt');
      exports.privateEncrypt = function privateEncrypt(key, buf) {
        return exports.publicEncrypt(key, buf, true);
      };
      exports.publicDecrypt = function publicDecrypt(key, buf) {
        return exports.privateDecrypt(key, buf, true);
      };
    }, {
      "./privateDecrypt": 105,
      "./publicEncrypt": 106
    }],
    104: [function(require, module, exports) {
      (function(Buffer) {
        var createHash = require('create-hash');
        module.exports = function(seed, len) {
          var t = new Buffer('');
          var i = 0,
              c;
          while (t.length < len) {
            c = i2ops(i++);
            t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
          }
          return t.slice(0, len);
        };
        function i2ops(c) {
          var out = new Buffer(4);
          out.writeUInt32BE(c, 0);
          return out;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "create-hash": 49
    }],
    105: [function(require, module, exports) {
      (function(Buffer) {
        var parseKeys = require('parse-asn1');
        var mgf = require('./mgf');
        var xor = require('./xor');
        var bn = require('bn.js');
        var crt = require('browserify-rsa');
        var createHash = require('create-hash');
        var withPublic = require('./withPublic');
        module.exports = function privateDecrypt(private_key, enc, reverse) {
          var padding;
          if (private_key.padding) {
            padding = private_key.padding;
          } else if (reverse) {
            padding = 1;
          } else {
            padding = 4;
          }
          var key = parseKeys(private_key);
          var k = key.modulus.byteLength();
          if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
            throw new Error('decryption error');
          }
          var msg;
          if (reverse) {
            msg = withPublic(new bn(enc), key);
          } else {
            msg = crt(enc, key);
          }
          var zBuffer = new Buffer(k - msg.length);
          zBuffer.fill(0);
          msg = Buffer.concat([zBuffer, msg], k);
          if (padding === 4) {
            return oaep(key, msg);
          } else if (padding === 1) {
            return pkcs1(key, msg, reverse);
          } else if (padding === 3) {
            return msg;
          } else {
            throw new Error('unknown padding');
          }
        };
        function oaep(key, msg) {
          var n = key.modulus;
          var k = key.modulus.byteLength();
          var mLen = msg.length;
          var iHash = createHash('sha1').update(new Buffer('')).digest();
          var hLen = iHash.length;
          var hLen2 = 2 * hLen;
          if (msg[0] !== 0) {
            throw new Error('decryption error');
          }
          var maskedSeed = msg.slice(1, hLen + 1);
          var maskedDb = msg.slice(hLen + 1);
          var seed = xor(maskedSeed, mgf(maskedDb, hLen));
          var db = xor(maskedDb, mgf(seed, k - hLen - 1));
          if (compare(iHash, db.slice(0, hLen))) {
            throw new Error('decryption error');
          }
          var i = hLen;
          while (db[i] === 0) {
            i++;
          }
          if (db[i++] !== 1) {
            throw new Error('decryption error');
          }
          return db.slice(i);
        }
        function pkcs1(key, msg, reverse) {
          var p1 = msg.slice(0, 2);
          var i = 2;
          var status = 0;
          while (msg[i++] !== 0) {
            if (i >= msg.length) {
              status++;
              break;
            }
          }
          var ps = msg.slice(2, i - 1);
          var p2 = msg.slice(i - 1, i);
          if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
            status++;
          }
          if (ps.length < 8) {
            status++;
          }
          if (status) {
            throw new Error('decryption error');
          }
          return msg.slice(i);
        }
        function compare(a, b) {
          a = new Buffer(a);
          b = new Buffer(b);
          var dif = 0;
          var len = a.length;
          if (a.length !== b.length) {
            dif++;
            len = Math.min(a.length, b.length);
          }
          var i = -1;
          while (++i < len) {
            dif += (a[i] ^ b[i]);
          }
          return dif;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "./mgf": 104,
      "./withPublic": 107,
      "./xor": 108,
      "bn.js": 16,
      "browserify-rsa": 37,
      "buffer": 45,
      "create-hash": 49,
      "parse-asn1": 99
    }],
    106: [function(require, module, exports) {
      (function(Buffer) {
        var parseKeys = require('parse-asn1');
        var randomBytes = require('randombytes');
        var createHash = require('create-hash');
        var mgf = require('./mgf');
        var xor = require('./xor');
        var bn = require('bn.js');
        var withPublic = require('./withPublic');
        var crt = require('browserify-rsa');
        var constants = {
          RSA_PKCS1_OAEP_PADDING: 4,
          RSA_PKCS1_PADDIN: 1,
          RSA_NO_PADDING: 3
        };
        module.exports = function publicEncrypt(public_key, msg, reverse) {
          var padding;
          if (public_key.padding) {
            padding = public_key.padding;
          } else if (reverse) {
            padding = 1;
          } else {
            padding = 4;
          }
          var key = parseKeys(public_key);
          var paddedMsg;
          if (padding === 4) {
            paddedMsg = oaep(key, msg);
          } else if (padding === 1) {
            paddedMsg = pkcs1(key, msg, reverse);
          } else if (padding === 3) {
            paddedMsg = new bn(msg);
            if (paddedMsg.cmp(key.modulus) >= 0) {
              throw new Error('data too long for modulus');
            }
          } else {
            throw new Error('unknown padding');
          }
          if (reverse) {
            return crt(paddedMsg, key);
          } else {
            return withPublic(paddedMsg, key);
          }
        };
        function oaep(key, msg) {
          var k = key.modulus.byteLength();
          var mLen = msg.length;
          var iHash = createHash('sha1').update(new Buffer('')).digest();
          var hLen = iHash.length;
          var hLen2 = 2 * hLen;
          if (mLen > k - hLen2 - 2) {
            throw new Error('message too long');
          }
          var ps = new Buffer(k - mLen - hLen2 - 2);
          ps.fill(0);
          var dblen = k - hLen - 1;
          var seed = randomBytes(hLen);
          var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
          var maskedSeed = xor(seed, mgf(maskedDb, hLen));
          return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
        }
        function pkcs1(key, msg, reverse) {
          var mLen = msg.length;
          var k = key.modulus.byteLength();
          if (mLen > k - 11) {
            throw new Error('message too long');
          }
          var ps;
          if (reverse) {
            ps = new Buffer(k - mLen - 3);
            ps.fill(0xff);
          } else {
            ps = nonZero(k - mLen - 3);
          }
          return new bn(Buffer.concat([new Buffer([0, reverse ? 1 : 2]), ps, new Buffer([0]), msg], k));
        }
        function nonZero(len, crypto) {
          var out = new Buffer(len);
          var i = 0;
          var cache = randomBytes(len * 2);
          var cur = 0;
          var num;
          while (i < len) {
            if (cur === cache.length) {
              cache = randomBytes(len * 2);
              cur = 0;
            }
            num = cache[cur++];
            if (num) {
              out[i++] = num;
            }
          }
          return out;
        }
      }).call(this, require("buffer").Buffer);
    }, {
      "./mgf": 104,
      "./withPublic": 107,
      "./xor": 108,
      "bn.js": 16,
      "browserify-rsa": 37,
      "buffer": 45,
      "create-hash": 49,
      "parse-asn1": 99,
      "randombytes": 109
    }],
    107: [function(require, module, exports) {
      (function(Buffer) {
        var bn = require('bn.js');
        function withPublic(paddedMsg, key) {
          return new Buffer(paddedMsg.toRed(bn.mont(key.modulus)).redPow(new bn(key.publicExponent)).fromRed().toArray());
        }
        module.exports = withPublic;
      }).call(this, require("buffer").Buffer);
    }, {
      "bn.js": 16,
      "buffer": 45
    }],
    108: [function(require, module, exports) {
      module.exports = function xor(a, b) {
        var len = a.length;
        var i = -1;
        while (++i < len) {
          a[i] ^= b[i];
        }
        return a;
      };
    }, {}],
    109: [function(require, module, exports) {
      (function(process, global, Buffer) {
        'use strict';
        function oldBrowser() {
          throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11');
        }
        var crypto = global.crypto || global.msCrypto;
        if (crypto && crypto.getRandomValues) {
          module.exports = randomBytes;
        } else {
          module.exports = oldBrowser;
        }
        function randomBytes(size, cb) {
          if (size > 65536)
            throw new Error('requested too many random bytes');
          var rawBytes = new global.Uint8Array(size);
          if (size > 0) {
            crypto.getRandomValues(rawBytes);
          }
          var bytes = new Buffer(rawBytes.buffer);
          if (typeof cb === 'function') {
            return process.nextTick(function() {
              cb(null, bytes);
            });
          }
          return bytes;
        }
      }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, require("buffer").Buffer);
    }, {
      "_process": 102,
      "buffer": 45
    }],
    110: [function(require, module, exports) {
      module.exports = require("./lib/_stream_duplex.js");
    }, {"./lib/_stream_duplex.js": 111}],
    111: [function(require, module, exports) {
      'use strict';
      var objectKeys = Object.keys || function(obj) {
        var keys = [];
        for (var key in obj) {
          keys.push(key);
        }
        return keys;
      };
      module.exports = Duplex;
      var processNextTick = require('process-nextick-args');
      var util = require('core-util-is');
      util.inherits = require('inherits');
      var Readable = require('./_stream_readable');
      var Writable = require('./_stream_writable');
      util.inherits(Duplex, Readable);
      var keys = objectKeys(Writable.prototype);
      for (var v = 0; v < keys.length; v++) {
        var method = keys[v];
        if (!Duplex.prototype[method])
          Duplex.prototype[method] = Writable.prototype[method];
      }
      function Duplex(options) {
        if (!(this instanceof Duplex))
          return new Duplex(options);
        Readable.call(this, options);
        Writable.call(this, options);
        if (options && options.readable === false)
          this.readable = false;
        if (options && options.writable === false)
          this.writable = false;
        this.allowHalfOpen = true;
        if (options && options.allowHalfOpen === false)
          this.allowHalfOpen = false;
        this.once('end', onend);
      }
      function onend() {
        if (this.allowHalfOpen || this._writableState.ended)
          return;
        processNextTick(onEndNT, this);
      }
      function onEndNT(self) {
        self.end();
      }
      function forEach(xs, f) {
        for (var i = 0,
            l = xs.length; i < l; i++) {
          f(xs[i], i);
        }
      }
    }, {
      "./_stream_readable": 113,
      "./_stream_writable": 115,
      "core-util-is": 47,
      "inherits": 91,
      "process-nextick-args": 101
    }],
    112: [function(require, module, exports) {
      'use strict';
      module.exports = PassThrough;
      var Transform = require('./_stream_transform');
      var util = require('core-util-is');
      util.inherits = require('inherits');
      util.inherits(PassThrough, Transform);
      function PassThrough(options) {
        if (!(this instanceof PassThrough))
          return new PassThrough(options);
        Transform.call(this, options);
      }
      PassThrough.prototype._transform = function(chunk, encoding, cb) {
        cb(null, chunk);
      };
    }, {
      "./_stream_transform": 114,
      "core-util-is": 47,
      "inherits": 91
    }],
    113: [function(require, module, exports) {
      (function(process) {
        'use strict';
        module.exports = Readable;
        var processNextTick = require('process-nextick-args');
        var isArray = require('isarray');
        Readable.ReadableState = ReadableState;
        var EE = require('events').EventEmitter;
        var EElistenerCount = function(emitter, type) {
          return emitter.listeners(type).length;
        };
        var Stream;
        (function() {
          try {
            Stream = require('st' + 'ream');
          } catch (_) {} finally {
            if (!Stream)
              Stream = require('events').EventEmitter;
          }
        })();
        var Buffer = require('buffer').Buffer;
        var bufferShim = require('buffer-shims');
        var util = require('core-util-is');
        util.inherits = require('inherits');
        var debugUtil = require('util');
        var debug = void 0;
        if (debugUtil && debugUtil.debuglog) {
          debug = debugUtil.debuglog('stream');
        } else {
          debug = function() {};
        }
        var StringDecoder;
        util.inherits(Readable, Stream);
        var hasPrependListener = typeof EE.prototype.prependListener === 'function';
        function prependListener(emitter, event, fn) {
          if (hasPrependListener)
            return emitter.prependListener(event, fn);
          if (!emitter._events || !emitter._events[event])
            emitter.on(event, fn);
          else if (isArray(emitter._events[event]))
            emitter._events[event].unshift(fn);
          else
            emitter._events[event] = [fn, emitter._events[event]];
        }
        var Duplex;
        function ReadableState(options, stream) {
          Duplex = Duplex || require('./_stream_duplex');
          options = options || {};
          this.objectMode = !!options.objectMode;
          if (stream instanceof Duplex)
            this.objectMode = this.objectMode || !!options.readableObjectMode;
          var hwm = options.highWaterMark;
          var defaultHwm = this.objectMode ? 16 : 16 * 1024;
          this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
          this.highWaterMark = ~~this.highWaterMark;
          this.buffer = [];
          this.length = 0;
          this.pipes = null;
          this.pipesCount = 0;
          this.flowing = null;
          this.ended = false;
          this.endEmitted = false;
          this.reading = false;
          this.sync = true;
          this.needReadable = false;
          this.emittedReadable = false;
          this.readableListening = false;
          this.resumeScheduled = false;
          this.defaultEncoding = options.defaultEncoding || 'utf8';
          this.ranOut = false;
          this.awaitDrain = 0;
          this.readingMore = false;
          this.decoder = null;
          this.encoding = null;
          if (options.encoding) {
            if (!StringDecoder)
              StringDecoder = require('string_decoder/').StringDecoder;
            this.decoder = new StringDecoder(options.encoding);
            this.encoding = options.encoding;
          }
        }
        var Duplex;
        function Readable(options) {
          Duplex = Duplex || require('./_stream_duplex');
          if (!(this instanceof Readable))
            return new Readable(options);
          this._readableState = new ReadableState(options, this);
          this.readable = true;
          if (options && typeof options.read === 'function')
            this._read = options.read;
          Stream.call(this);
        }
        Readable.prototype.push = function(chunk, encoding) {
          var state = this._readableState;
          if (!state.objectMode && typeof chunk === 'string') {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
              chunk = bufferShim.from(chunk, encoding);
              encoding = '';
            }
          }
          return readableAddChunk(this, state, chunk, encoding, false);
        };
        Readable.prototype.unshift = function(chunk) {
          var state = this._readableState;
          return readableAddChunk(this, state, chunk, '', true);
        };
        Readable.prototype.isPaused = function() {
          return this._readableState.flowing === false;
        };
        function readableAddChunk(stream, state, chunk, encoding, addToFront) {
          var er = chunkInvalid(state, chunk);
          if (er) {
            stream.emit('error', er);
          } else if (chunk === null) {
            state.reading = false;
            onEofChunk(stream, state);
          } else if (state.objectMode || chunk && chunk.length > 0) {
            if (state.ended && !addToFront) {
              var e = new Error('stream.push() after EOF');
              stream.emit('error', e);
            } else if (state.endEmitted && addToFront) {
              var _e = new Error('stream.unshift() after end event');
              stream.emit('error', _e);
            } else {
              var skipAdd;
              if (state.decoder && !addToFront && !encoding) {
                chunk = state.decoder.write(chunk);
                skipAdd = !state.objectMode && chunk.length === 0;
              }
              if (!addToFront)
                state.reading = false;
              if (!skipAdd) {
                if (state.flowing && state.length === 0 && !state.sync) {
                  stream.emit('data', chunk);
                  stream.read(0);
                } else {
                  state.length += state.objectMode ? 1 : chunk.length;
                  if (addToFront)
                    state.buffer.unshift(chunk);
                  else
                    state.buffer.push(chunk);
                  if (state.needReadable)
                    emitReadable(stream);
                }
              }
              maybeReadMore(stream, state);
            }
          } else if (!addToFront) {
            state.reading = false;
          }
          return needMoreData(state);
        }
        function needMoreData(state) {
          return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
        }
        Readable.prototype.setEncoding = function(enc) {
          if (!StringDecoder)
            StringDecoder = require('string_decoder/').StringDecoder;
          this._readableState.decoder = new StringDecoder(enc);
          this._readableState.encoding = enc;
          return this;
        };
        var MAX_HWM = 0x800000;
        function computeNewHighWaterMark(n) {
          if (n >= MAX_HWM) {
            n = MAX_HWM;
          } else {
            n--;
            n |= n >>> 1;
            n |= n >>> 2;
            n |= n >>> 4;
            n |= n >>> 8;
            n |= n >>> 16;
            n++;
          }
          return n;
        }
        function howMuchToRead(n, state) {
          if (state.length === 0 && state.ended)
            return 0;
          if (state.objectMode)
            return n === 0 ? 0 : 1;
          if (n === null || isNaN(n)) {
            if (state.flowing && state.buffer.length)
              return state.buffer[0].length;
            else
              return state.length;
          }
          if (n <= 0)
            return 0;
          if (n > state.highWaterMark)
            state.highWaterMark = computeNewHighWaterMark(n);
          if (n > state.length) {
            if (!state.ended) {
              state.needReadable = true;
              return 0;
            } else {
              return state.length;
            }
          }
          return n;
        }
        Readable.prototype.read = function(n) {
          debug('read', n);
          var state = this._readableState;
          var nOrig = n;
          if (typeof n !== 'number' || n > 0)
            state.emittedReadable = false;
          if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
            debug('read: emitReadable', state.length, state.ended);
            if (state.length === 0 && state.ended)
              endReadable(this);
            else
              emitReadable(this);
            return null;
          }
          n = howMuchToRead(n, state);
          if (n === 0 && state.ended) {
            if (state.length === 0)
              endReadable(this);
            return null;
          }
          var doRead = state.needReadable;
          debug('need readable', doRead);
          if (state.length === 0 || state.length - n < state.highWaterMark) {
            doRead = true;
            debug('length less than watermark', doRead);
          }
          if (state.ended || state.reading) {
            doRead = false;
            debug('reading or ended', doRead);
          }
          if (doRead) {
            debug('do read');
            state.reading = true;
            state.sync = true;
            if (state.length === 0)
              state.needReadable = true;
            this._read(state.highWaterMark);
            state.sync = false;
          }
          if (doRead && !state.reading)
            n = howMuchToRead(nOrig, state);
          var ret;
          if (n > 0)
            ret = fromList(n, state);
          else
            ret = null;
          if (ret === null) {
            state.needReadable = true;
            n = 0;
          }
          state.length -= n;
          if (state.length === 0 && !state.ended)
            state.needReadable = true;
          if (nOrig !== n && state.ended && state.length === 0)
            endReadable(this);
          if (ret !== null)
            this.emit('data', ret);
          return ret;
        };
        function chunkInvalid(state, chunk) {
          var er = null;
          if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
            er = new TypeError('Invalid non-string/buffer chunk');
          }
          return er;
        }
        function onEofChunk(stream, state) {
          if (state.ended)
            return;
          if (state.decoder) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) {
              state.buffer.push(chunk);
              state.length += state.objectMode ? 1 : chunk.length;
            }
          }
          state.ended = true;
          emitReadable(stream);
        }
        function emitReadable(stream) {
          var state = stream._readableState;
          state.needReadable = false;
          if (!state.emittedReadable) {
            debug('emitReadable', state.flowing);
            state.emittedReadable = true;
            if (state.sync)
              processNextTick(emitReadable_, stream);
            else
              emitReadable_(stream);
          }
        }
        function emitReadable_(stream) {
          debug('emit readable');
          stream.emit('readable');
          flow(stream);
        }
        function maybeReadMore(stream, state) {
          if (!state.readingMore) {
            state.readingMore = true;
            processNextTick(maybeReadMore_, stream, state);
          }
        }
        function maybeReadMore_(stream, state) {
          var len = state.length;
          while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
            debug('maybeReadMore read 0');
            stream.read(0);
            if (len === state.length)
              break;
            else
              len = state.length;
          }
          state.readingMore = false;
        }
        Readable.prototype._read = function(n) {
          this.emit('error', new Error('not implemented'));
        };
        Readable.prototype.pipe = function(dest, pipeOpts) {
          var src = this;
          var state = this._readableState;
          switch (state.pipesCount) {
            case 0:
              state.pipes = dest;
              break;
            case 1:
              state.pipes = [state.pipes, dest];
              break;
            default:
              state.pipes.push(dest);
              break;
          }
          state.pipesCount += 1;
          debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
          var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
          var endFn = doEnd ? onend : cleanup;
          if (state.endEmitted)
            processNextTick(endFn);
          else
            src.once('end', endFn);
          dest.on('unpipe', onunpipe);
          function onunpipe(readable) {
            debug('onunpipe');
            if (readable === src) {
              cleanup();
            }
          }
          function onend() {
            debug('onend');
            dest.end();
          }
          var ondrain = pipeOnDrain(src);
          dest.on('drain', ondrain);
          var cleanedUp = false;
          function cleanup() {
            debug('cleanup');
            dest.removeListener('close', onclose);
            dest.removeListener('finish', onfinish);
            dest.removeListener('drain', ondrain);
            dest.removeListener('error', onerror);
            dest.removeListener('unpipe', onunpipe);
            src.removeListener('end', onend);
            src.removeListener('end', cleanup);
            src.removeListener('data', ondata);
            cleanedUp = true;
            if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
              ondrain();
          }
          src.on('data', ondata);
          function ondata(chunk) {
            debug('ondata');
            var ret = dest.write(chunk);
            if (false === ret) {
              if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                debug('false write response, pause', src._readableState.awaitDrain);
                src._readableState.awaitDrain++;
              }
              src.pause();
            }
          }
          function onerror(er) {
            debug('onerror', er);
            unpipe();
            dest.removeListener('error', onerror);
            if (EElistenerCount(dest, 'error') === 0)
              dest.emit('error', er);
          }
          prependListener(dest, 'error', onerror);
          function onclose() {
            dest.removeListener('finish', onfinish);
            unpipe();
          }
          dest.once('close', onclose);
          function onfinish() {
            debug('onfinish');
            dest.removeListener('close', onclose);
            unpipe();
          }
          dest.once('finish', onfinish);
          function unpipe() {
            debug('unpipe');
            src.unpipe(dest);
          }
          dest.emit('pipe', src);
          if (!state.flowing) {
            debug('pipe resume');
            src.resume();
          }
          return dest;
        };
        function pipeOnDrain(src) {
          return function() {
            var state = src._readableState;
            debug('pipeOnDrain', state.awaitDrain);
            if (state.awaitDrain)
              state.awaitDrain--;
            if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
              state.flowing = true;
              flow(src);
            }
          };
        }
        Readable.prototype.unpipe = function(dest) {
          var state = this._readableState;
          if (state.pipesCount === 0)
            return this;
          if (state.pipesCount === 1) {
            if (dest && dest !== state.pipes)
              return this;
            if (!dest)
              dest = state.pipes;
            state.pipes = null;
            state.pipesCount = 0;
            state.flowing = false;
            if (dest)
              dest.emit('unpipe', this);
            return this;
          }
          if (!dest) {
            var dests = state.pipes;
            var len = state.pipesCount;
            state.pipes = null;
            state.pipesCount = 0;
            state.flowing = false;
            for (var _i = 0; _i < len; _i++) {
              dests[_i].emit('unpipe', this);
            }
            return this;
          }
          var i = indexOf(state.pipes, dest);
          if (i === -1)
            return this;
          state.pipes.splice(i, 1);
          state.pipesCount -= 1;
          if (state.pipesCount === 1)
            state.pipes = state.pipes[0];
          dest.emit('unpipe', this);
          return this;
        };
        Readable.prototype.on = function(ev, fn) {
          var res = Stream.prototype.on.call(this, ev, fn);
          if (ev === 'data' && false !== this._readableState.flowing) {
            this.resume();
          }
          if (ev === 'readable' && !this._readableState.endEmitted) {
            var state = this._readableState;
            if (!state.readableListening) {
              state.readableListening = true;
              state.emittedReadable = false;
              state.needReadable = true;
              if (!state.reading) {
                processNextTick(nReadingNextTick, this);
              } else if (state.length) {
                emitReadable(this, state);
              }
            }
          }
          return res;
        };
        Readable.prototype.addListener = Readable.prototype.on;
        function nReadingNextTick(self) {
          debug('readable nexttick read 0');
          self.read(0);
        }
        Readable.prototype.resume = function() {
          var state = this._readableState;
          if (!state.flowing) {
            debug('resume');
            state.flowing = true;
            resume(this, state);
          }
          return this;
        };
        function resume(stream, state) {
          if (!state.resumeScheduled) {
            state.resumeScheduled = true;
            processNextTick(resume_, stream, state);
          }
        }
        function resume_(stream, state) {
          if (!state.reading) {
            debug('resume read 0');
            stream.read(0);
          }
          state.resumeScheduled = false;
          stream.emit('resume');
          flow(stream);
          if (state.flowing && !state.reading)
            stream.read(0);
        }
        Readable.prototype.pause = function() {
          debug('call pause flowing=%j', this._readableState.flowing);
          if (false !== this._readableState.flowing) {
            debug('pause');
            this._readableState.flowing = false;
            this.emit('pause');
          }
          return this;
        };
        function flow(stream) {
          var state = stream._readableState;
          debug('flow', state.flowing);
          if (state.flowing) {
            do {
              var chunk = stream.read();
            } while (null !== chunk && state.flowing);
          }
        }
        Readable.prototype.wrap = function(stream) {
          var state = this._readableState;
          var paused = false;
          var self = this;
          stream.on('end', function() {
            debug('wrapped end');
            if (state.decoder && !state.ended) {
              var chunk = state.decoder.end();
              if (chunk && chunk.length)
                self.push(chunk);
            }
            self.push(null);
          });
          stream.on('data', function(chunk) {
            debug('wrapped data');
            if (state.decoder)
              chunk = state.decoder.write(chunk);
            if (state.objectMode && (chunk === null || chunk === undefined))
              return;
            else if (!state.objectMode && (!chunk || !chunk.length))
              return;
            var ret = self.push(chunk);
            if (!ret) {
              paused = true;
              stream.pause();
            }
          });
          for (var i in stream) {
            if (this[i] === undefined && typeof stream[i] === 'function') {
              this[i] = function(method) {
                return function() {
                  return stream[method].apply(stream, arguments);
                };
              }(i);
            }
          }
          var events = ['error', 'close', 'destroy', 'pause', 'resume'];
          forEach(events, function(ev) {
            stream.on(ev, self.emit.bind(self, ev));
          });
          self._read = function(n) {
            debug('wrapped _read', n);
            if (paused) {
              paused = false;
              stream.resume();
            }
          };
          return self;
        };
        Readable._fromList = fromList;
        function fromList(n, state) {
          var list = state.buffer;
          var length = state.length;
          var stringMode = !!state.decoder;
          var objectMode = !!state.objectMode;
          var ret;
          if (list.length === 0)
            return null;
          if (length === 0)
            ret = null;
          else if (objectMode)
            ret = list.shift();
          else if (!n || n >= length) {
            if (stringMode)
              ret = list.join('');
            else if (list.length === 1)
              ret = list[0];
            else
              ret = Buffer.concat(list, length);
            list.length = 0;
          } else {
            if (n < list[0].length) {
              var buf = list[0];
              ret = buf.slice(0, n);
              list[0] = buf.slice(n);
            } else if (n === list[0].length) {
              ret = list.shift();
            } else {
              if (stringMode)
                ret = '';
              else
                ret = bufferShim.allocUnsafe(n);
              var c = 0;
              for (var i = 0,
                  l = list.length; i < l && c < n; i++) {
                var _buf = list[0];
                var cpy = Math.min(n - c, _buf.length);
                if (stringMode)
                  ret += _buf.slice(0, cpy);
                else
                  _buf.copy(ret, c, 0, cpy);
                if (cpy < _buf.length)
                  list[0] = _buf.slice(cpy);
                else
                  list.shift();
                c += cpy;
              }
            }
          }
          return ret;
        }
        function endReadable(stream) {
          var state = stream._readableState;
          if (state.length > 0)
            throw new Error('"endReadable()" called on non-empty stream');
          if (!state.endEmitted) {
            state.ended = true;
            processNextTick(endReadableNT, state, stream);
          }
        }
        function endReadableNT(state, stream) {
          if (!state.endEmitted && state.length === 0) {
            state.endEmitted = true;
            stream.readable = false;
            stream.emit('end');
          }
        }
        function forEach(xs, f) {
          for (var i = 0,
              l = xs.length; i < l; i++) {
            f(xs[i], i);
          }
        }
        function indexOf(xs, x) {
          for (var i = 0,
              l = xs.length; i < l; i++) {
            if (xs[i] === x)
              return i;
          }
          return -1;
        }
      }).call(this, require('_process'));
    }, {
      "./_stream_duplex": 111,
      "_process": 102,
      "buffer": 45,
      "buffer-shims": 43,
      "core-util-is": 47,
      "events": 81,
      "inherits": 91,
      "isarray": 93,
      "process-nextick-args": 101,
      "string_decoder/": 130,
      "util": 18
    }],
    114: [function(require, module, exports) {
      'use strict';
      module.exports = Transform;
      var Duplex = require('./_stream_duplex');
      var util = require('core-util-is');
      util.inherits = require('inherits');
      util.inherits(Transform, Duplex);
      function TransformState(stream) {
        this.afterTransform = function(er, data) {
          return afterTransform(stream, er, data);
        };
        this.needTransform = false;
        this.transforming = false;
        this.writecb = null;
        this.writechunk = null;
        this.writeencoding = null;
      }
      function afterTransform(stream, er, data) {
        var ts = stream._transformState;
        ts.transforming = false;
        var cb = ts.writecb;
        if (!cb)
          return stream.emit('error', new Error('no writecb in Transform class'));
        ts.writechunk = null;
        ts.writecb = null;
        if (data !== null && data !== undefined)
          stream.push(data);
        cb(er);
        var rs = stream._readableState;
        rs.reading = false;
        if (rs.needReadable || rs.length < rs.highWaterMark) {
          stream._read(rs.highWaterMark);
        }
      }
      function Transform(options) {
        if (!(this instanceof Transform))
          return new Transform(options);
        Duplex.call(this, options);
        this._transformState = new TransformState(this);
        var stream = this;
        this._readableState.needReadable = true;
        this._readableState.sync = false;
        if (options) {
          if (typeof options.transform === 'function')
            this._transform = options.transform;
          if (typeof options.flush === 'function')
            this._flush = options.flush;
        }
        this.once('prefinish', function() {
          if (typeof this._flush === 'function')
            this._flush(function(er) {
              done(stream, er);
            });
          else
            done(stream);
        });
      }
      Transform.prototype.push = function(chunk, encoding) {
        this._transformState.needTransform = false;
        return Duplex.prototype.push.call(this, chunk, encoding);
      };
      Transform.prototype._transform = function(chunk, encoding, cb) {
        throw new Error('Not implemented');
      };
      Transform.prototype._write = function(chunk, encoding, cb) {
        var ts = this._transformState;
        ts.writecb = cb;
        ts.writechunk = chunk;
        ts.writeencoding = encoding;
        if (!ts.transforming) {
          var rs = this._readableState;
          if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
            this._read(rs.highWaterMark);
        }
      };
      Transform.prototype._read = function(n) {
        var ts = this._transformState;
        if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
          ts.transforming = true;
          this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
        } else {
          ts.needTransform = true;
        }
      };
      function done(stream, er) {
        if (er)
          return stream.emit('error', er);
        var ws = stream._writableState;
        var ts = stream._transformState;
        if (ws.length)
          throw new Error('Calling transform done when ws.length != 0');
        if (ts.transforming)
          throw new Error('Calling transform done when still transforming');
        return stream.push(null);
      }
    }, {
      "./_stream_duplex": 111,
      "core-util-is": 47,
      "inherits": 91
    }],
    115: [function(require, module, exports) {
      (function(process) {
        'use strict';
        module.exports = Writable;
        var processNextTick = require('process-nextick-args');
        var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
        Writable.WritableState = WritableState;
        var util = require('core-util-is');
        util.inherits = require('inherits');
        var internalUtil = {deprecate: require('util-deprecate')};
        var Stream;
        (function() {
          try {
            Stream = require('st' + 'ream');
          } catch (_) {} finally {
            if (!Stream)
              Stream = require('events').EventEmitter;
          }
        })();
        var Buffer = require('buffer').Buffer;
        var bufferShim = require('buffer-shims');
        util.inherits(Writable, Stream);
        function nop() {}
        function WriteReq(chunk, encoding, cb) {
          this.chunk = chunk;
          this.encoding = encoding;
          this.callback = cb;
          this.next = null;
        }
        var Duplex;
        function WritableState(options, stream) {
          Duplex = Duplex || require('./_stream_duplex');
          options = options || {};
          this.objectMode = !!options.objectMode;
          if (stream instanceof Duplex)
            this.objectMode = this.objectMode || !!options.writableObjectMode;
          var hwm = options.highWaterMark;
          var defaultHwm = this.objectMode ? 16 : 16 * 1024;
          this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
          this.highWaterMark = ~~this.highWaterMark;
          this.needDrain = false;
          this.ending = false;
          this.ended = false;
          this.finished = false;
          var noDecode = options.decodeStrings === false;
          this.decodeStrings = !noDecode;
          this.defaultEncoding = options.defaultEncoding || 'utf8';
          this.length = 0;
          this.writing = false;
          this.corked = 0;
          this.sync = true;
          this.bufferProcessing = false;
          this.onwrite = function(er) {
            onwrite(stream, er);
          };
          this.writecb = null;
          this.writelen = 0;
          this.bufferedRequest = null;
          this.lastBufferedRequest = null;
          this.pendingcb = 0;
          this.prefinished = false;
          this.errorEmitted = false;
          this.bufferedRequestCount = 0;
          this.corkedRequestsFree = new CorkedRequest(this);
        }
        WritableState.prototype.getBuffer = function writableStateGetBuffer() {
          var current = this.bufferedRequest;
          var out = [];
          while (current) {
            out.push(current);
            current = current.next;
          }
          return out;
        };
        (function() {
          try {
            Object.defineProperty(WritableState.prototype, 'buffer', {get: internalUtil.deprecate(function() {
                return this.getBuffer();
              }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')});
          } catch (_) {}
        })();
        var Duplex;
        function Writable(options) {
          Duplex = Duplex || require('./_stream_duplex');
          if (!(this instanceof Writable) && !(this instanceof Duplex))
            return new Writable(options);
          this._writableState = new WritableState(options, this);
          this.writable = true;
          if (options) {
            if (typeof options.write === 'function')
              this._write = options.write;
            if (typeof options.writev === 'function')
              this._writev = options.writev;
          }
          Stream.call(this);
        }
        Writable.prototype.pipe = function() {
          this.emit('error', new Error('Cannot pipe, not readable'));
        };
        function writeAfterEnd(stream, cb) {
          var er = new Error('write after end');
          stream.emit('error', er);
          processNextTick(cb, er);
        }
        function validChunk(stream, state, chunk, cb) {
          var valid = true;
          var er = false;
          if (chunk === null) {
            er = new TypeError('May not write null values to stream');
          } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
            er = new TypeError('Invalid non-string/buffer chunk');
          }
          if (er) {
            stream.emit('error', er);
            processNextTick(cb, er);
            valid = false;
          }
          return valid;
        }
        Writable.prototype.write = function(chunk, encoding, cb) {
          var state = this._writableState;
          var ret = false;
          if (typeof encoding === 'function') {
            cb = encoding;
            encoding = null;
          }
          if (Buffer.isBuffer(chunk))
            encoding = 'buffer';
          else if (!encoding)
            encoding = state.defaultEncoding;
          if (typeof cb !== 'function')
            cb = nop;
          if (state.ended)
            writeAfterEnd(this, cb);
          else if (validChunk(this, state, chunk, cb)) {
            state.pendingcb++;
            ret = writeOrBuffer(this, state, chunk, encoding, cb);
          }
          return ret;
        };
        Writable.prototype.cork = function() {
          var state = this._writableState;
          state.corked++;
        };
        Writable.prototype.uncork = function() {
          var state = this._writableState;
          if (state.corked) {
            state.corked--;
            if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest)
              clearBuffer(this, state);
          }
        };
        Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
          if (typeof encoding === 'string')
            encoding = encoding.toLowerCase();
          if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1))
            throw new TypeError('Unknown encoding: ' + encoding);
          this._writableState.defaultEncoding = encoding;
          return this;
        };
        function decodeChunk(state, chunk, encoding) {
          if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
            chunk = bufferShim.from(chunk, encoding);
          }
          return chunk;
        }
        function writeOrBuffer(stream, state, chunk, encoding, cb) {
          chunk = decodeChunk(state, chunk, encoding);
          if (Buffer.isBuffer(chunk))
            encoding = 'buffer';
          var len = state.objectMode ? 1 : chunk.length;
          state.length += len;
          var ret = state.length < state.highWaterMark;
          if (!ret)
            state.needDrain = true;
          if (state.writing || state.corked) {
            var last = state.lastBufferedRequest;
            state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
            if (last) {
              last.next = state.lastBufferedRequest;
            } else {
              state.bufferedRequest = state.lastBufferedRequest;
            }
            state.bufferedRequestCount += 1;
          } else {
            doWrite(stream, state, false, len, chunk, encoding, cb);
          }
          return ret;
        }
        function doWrite(stream, state, writev, len, chunk, encoding, cb) {
          state.writelen = len;
          state.writecb = cb;
          state.writing = true;
          state.sync = true;
          if (writev)
            stream._writev(chunk, state.onwrite);
          else
            stream._write(chunk, encoding, state.onwrite);
          state.sync = false;
        }
        function onwriteError(stream, state, sync, er, cb) {
          --state.pendingcb;
          if (sync)
            processNextTick(cb, er);
          else
            cb(er);
          stream._writableState.errorEmitted = true;
          stream.emit('error', er);
        }
        function onwriteStateUpdate(state) {
          state.writing = false;
          state.writecb = null;
          state.length -= state.writelen;
          state.writelen = 0;
        }
        function onwrite(stream, er) {
          var state = stream._writableState;
          var sync = state.sync;
          var cb = state.writecb;
          onwriteStateUpdate(state);
          if (er)
            onwriteError(stream, state, sync, er, cb);
          else {
            var finished = needFinish(state);
            if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
              clearBuffer(stream, state);
            }
            if (sync) {
              asyncWrite(afterWrite, stream, state, finished, cb);
            } else {
              afterWrite(stream, state, finished, cb);
            }
          }
        }
        function afterWrite(stream, state, finished, cb) {
          if (!finished)
            onwriteDrain(stream, state);
          state.pendingcb--;
          cb();
          finishMaybe(stream, state);
        }
        function onwriteDrain(stream, state) {
          if (state.length === 0 && state.needDrain) {
            state.needDrain = false;
            stream.emit('drain');
          }
        }
        function clearBuffer(stream, state) {
          state.bufferProcessing = true;
          var entry = state.bufferedRequest;
          if (stream._writev && entry && entry.next) {
            var l = state.bufferedRequestCount;
            var buffer = new Array(l);
            var holder = state.corkedRequestsFree;
            holder.entry = entry;
            var count = 0;
            while (entry) {
              buffer[count] = entry;
              entry = entry.next;
              count += 1;
            }
            doWrite(stream, state, true, state.length, buffer, '', holder.finish);
            state.pendingcb++;
            state.lastBufferedRequest = null;
            if (holder.next) {
              state.corkedRequestsFree = holder.next;
              holder.next = null;
            } else {
              state.corkedRequestsFree = new CorkedRequest(state);
            }
          } else {
            while (entry) {
              var chunk = entry.chunk;
              var encoding = entry.encoding;
              var cb = entry.callback;
              var len = state.objectMode ? 1 : chunk.length;
              doWrite(stream, state, false, len, chunk, encoding, cb);
              entry = entry.next;
              if (state.writing) {
                break;
              }
            }
            if (entry === null)
              state.lastBufferedRequest = null;
          }
          state.bufferedRequestCount = 0;
          state.bufferedRequest = entry;
          state.bufferProcessing = false;
        }
        Writable.prototype._write = function(chunk, encoding, cb) {
          cb(new Error('not implemented'));
        };
        Writable.prototype._writev = null;
        Writable.prototype.end = function(chunk, encoding, cb) {
          var state = this._writableState;
          if (typeof chunk === 'function') {
            cb = chunk;
            chunk = null;
            encoding = null;
          } else if (typeof encoding === 'function') {
            cb = encoding;
            encoding = null;
          }
          if (chunk !== null && chunk !== undefined)
            this.write(chunk, encoding);
          if (state.corked) {
            state.corked = 1;
            this.uncork();
          }
          if (!state.ending && !state.finished)
            endWritable(this, state, cb);
        };
        function needFinish(state) {
          return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
        }
        function prefinish(stream, state) {
          if (!state.prefinished) {
            state.prefinished = true;
            stream.emit('prefinish');
          }
        }
        function finishMaybe(stream, state) {
          var need = needFinish(state);
          if (need) {
            if (state.pendingcb === 0) {
              prefinish(stream, state);
              state.finished = true;
              stream.emit('finish');
            } else {
              prefinish(stream, state);
            }
          }
          return need;
        }
        function endWritable(stream, state, cb) {
          state.ending = true;
          finishMaybe(stream, state);
          if (cb) {
            if (state.finished)
              processNextTick(cb);
            else
              stream.once('finish', cb);
          }
          state.ended = true;
          stream.writable = false;
        }
        function CorkedRequest(state) {
          var _this = this;
          this.next = null;
          this.entry = null;
          this.finish = function(err) {
            var entry = _this.entry;
            _this.entry = null;
            while (entry) {
              var cb = entry.callback;
              state.pendingcb--;
              cb(err);
              entry = entry.next;
            }
            if (state.corkedRequestsFree) {
              state.corkedRequestsFree.next = _this;
            } else {
              state.corkedRequestsFree = _this;
            }
          };
        }
      }).call(this, require('_process'));
    }, {
      "./_stream_duplex": 111,
      "_process": 102,
      "buffer": 45,
      "buffer-shims": 43,
      "core-util-is": 47,
      "events": 81,
      "inherits": 91,
      "process-nextick-args": 101,
      "util-deprecate": 131
    }],
    116: [function(require, module, exports) {
      module.exports = require("./lib/_stream_passthrough.js");
    }, {"./lib/_stream_passthrough.js": 112}],
    117: [function(require, module, exports) {
      (function(process) {
        var Stream = (function() {
          try {
            return require('st' + 'ream');
          } catch (_) {}
        }());
        exports = module.exports = require('./lib/_stream_readable.js');
        exports.Stream = Stream || exports;
        exports.Readable = exports;
        exports.Writable = require('./lib/_stream_writable.js');
        exports.Duplex = require('./lib/_stream_duplex.js');
        exports.Transform = require('./lib/_stream_transform.js');
        exports.PassThrough = require('./lib/_stream_passthrough.js');
        if (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {
          module.exports = Stream;
        }
      }).call(this, require('_process'));
    }, {
      "./lib/_stream_duplex.js": 111,
      "./lib/_stream_passthrough.js": 112,
      "./lib/_stream_readable.js": 113,
      "./lib/_stream_transform.js": 114,
      "./lib/_stream_writable.js": 115,
      "_process": 102
    }],
    118: [function(require, module, exports) {
      module.exports = require("./lib/_stream_transform.js");
    }, {"./lib/_stream_transform.js": 114}],
    119: [function(require, module, exports) {
      module.exports = require("./lib/_stream_writable.js");
    }, {"./lib/_stream_writable.js": 115}],
    120: [function(require, module, exports) {
      (function(Buffer) {
        var zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
        var zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
        var sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
        var sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
        var hl = [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E];
        var hr = [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000];
        function bytesToWords(bytes) {
          var words = [];
          for (var i = 0,
              b = 0; i < bytes.length; i++, b += 8) {
            words[b >>> 5] |= bytes[i] << (24 - b % 32);
          }
          return words;
        }
        function wordsToBytes(words) {
          var bytes = [];
          for (var b = 0; b < words.length * 32; b += 8) {
            bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
          }
          return bytes;
        }
        function processBlock(H, M, offset) {
          for (var i = 0; i < 16; i++) {
            var offset_i = offset + i;
            var M_offset_i = M[offset_i];
            M[offset_i] = ((((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00));
          }
          var al,
              bl,
              cl,
              dl,
              el;
          var ar,
              br,
              cr,
              dr,
              er;
          ar = al = H[0];
          br = bl = H[1];
          cr = cl = H[2];
          dr = dl = H[3];
          er = el = H[4];
          var t;
          for (i = 0; i < 80; i += 1) {
            t = (al + M[offset + zl[i]]) | 0;
            if (i < 16) {
              t += f1(bl, cl, dl) + hl[0];
            } else if (i < 32) {
              t += f2(bl, cl, dl) + hl[1];
            } else if (i < 48) {
              t += f3(bl, cl, dl) + hl[2];
            } else if (i < 64) {
              t += f4(bl, cl, dl) + hl[3];
            } else {
              t += f5(bl, cl, dl) + hl[4];
            }
            t = t | 0;
            t = rotl(t, sl[i]);
            t = (t + el) | 0;
            al = el;
            el = dl;
            dl = rotl(cl, 10);
            cl = bl;
            bl = t;
            t = (ar + M[offset + zr[i]]) | 0;
            if (i < 16) {
              t += f5(br, cr, dr) + hr[0];
            } else if (i < 32) {
              t += f4(br, cr, dr) + hr[1];
            } else if (i < 48) {
              t += f3(br, cr, dr) + hr[2];
            } else if (i < 64) {
              t += f2(br, cr, dr) + hr[3];
            } else {
              t += f1(br, cr, dr) + hr[4];
            }
            t = t | 0;
            t = rotl(t, sr[i]);
            t = (t + er) | 0;
            ar = er;
            er = dr;
            dr = rotl(cr, 10);
            cr = br;
            br = t;
          }
          t = (H[1] + cl + dr) | 0;
          H[1] = (H[2] + dl + er) | 0;
          H[2] = (H[3] + el + ar) | 0;
          H[3] = (H[4] + al + br) | 0;
          H[4] = (H[0] + bl + cr) | 0;
          H[0] = t;
        }
        function f1(x, y, z) {
          return ((x) ^ (y) ^ (z));
        }
        function f2(x, y, z) {
          return (((x) & (y)) | ((~x) & (z)));
        }
        function f3(x, y, z) {
          return (((x) | (~(y))) ^ (z));
        }
        function f4(x, y, z) {
          return (((x) & (z)) | ((y) & (~(z))));
        }
        function f5(x, y, z) {
          return ((x) ^ ((y) | (~(z))));
        }
        function rotl(x, n) {
          return (x << n) | (x >>> (32 - n));
        }
        function ripemd160(message) {
          var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];
          if (typeof message === 'string') {
            message = new Buffer(message, 'utf8');
          }
          var m = bytesToWords(message);
          var nBitsLeft = message.length * 8;
          var nBitsTotal = message.length * 8;
          m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
          m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = ((((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) | (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00));
          for (var i = 0; i < m.length; i += 16) {
            processBlock(H, m, i);
          }
          for (i = 0; i < 5; i++) {
            var H_i = H[i];
            H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);
          }
          var digestbytes = wordsToBytes(H);
          return new Buffer(digestbytes);
        }
        module.exports = ripemd160;
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    121: [function(require, module, exports) {
      (function(Buffer) {
        function Hash(blockSize, finalSize) {
          this._block = new Buffer(blockSize);
          this._finalSize = finalSize;
          this._blockSize = blockSize;
          this._len = 0;
          this._s = 0;
        }
        Hash.prototype.update = function(data, enc) {
          if (typeof data === 'string') {
            enc = enc || 'utf8';
            data = new Buffer(data, enc);
          }
          var l = this._len += data.length;
          var s = this._s || 0;
          var f = 0;
          var buffer = this._block;
          while (s < l) {
            var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize));
            var ch = (t - f);
            for (var i = 0; i < ch; i++) {
              buffer[(s % this._blockSize) + i] = data[i + f];
            }
            s += ch;
            f += ch;
            if ((s % this._blockSize) === 0) {
              this._update(buffer);
            }
          }
          this._s = s;
          return this;
        };
        Hash.prototype.digest = function(enc) {
          var l = this._len * 8;
          this._block[this._len % this._blockSize] = 0x80;
          this._block.fill(0, this._len % this._blockSize + 1);
          if (l % (this._blockSize * 8) >= this._finalSize * 8) {
            this._update(this._block);
            this._block.fill(0);
          }
          this._block.writeInt32BE(l, this._blockSize - 4);
          var hash = this._update(this._block) || this._hash();
          return enc ? hash.toString(enc) : hash;
        };
        Hash.prototype._update = function() {
          throw new Error('_update must be implemented by subclass');
        };
        module.exports = Hash;
      }).call(this, require("buffer").Buffer);
    }, {"buffer": 45}],
    122: [function(require, module, exports) {
      var exports = module.exports = function SHA(algorithm) {
        algorithm = algorithm.toLowerCase();
        var Algorithm = exports[algorithm];
        if (!Algorithm)
          throw new Error(algorithm + ' is not supported (we accept pull requests)');
        return new Algorithm();
      };
      exports.sha = require('./sha');
      exports.sha1 = require('./sha1');
      exports.sha224 = require('./sha224');
      exports.sha256 = require('./sha256');
      exports.sha384 = require('./sha384');
      exports.sha512 = require('./sha512');
    }, {
      "./sha": 123,
      "./sha1": 124,
      "./sha224": 125,
      "./sha256": 126,
      "./sha384": 127,
      "./sha512": 128
    }],
    123: [function(require, module, exports) {
      (function(Buffer) {
        var inherits = require('inherits');
        var Hash = require('./hash');
        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];
        var W = new Array(80);
        function Sha() {
          this.init();
          this._w = W;
          Hash.call(this, 64, 56);
        }
        inherits(Sha, Hash);
        Sha.prototype.init = function() {
          this._a = 0x67452301;
          this._b = 0xefcdab89;
          this._c = 0x98badcfe;
          this._d = 0x10325476;
          this._e = 0xc3d2e1f0;
          return this;
        };
        function rotl5(num) {
          return (num << 5) | (num >>> 27);
        }
        function rotl30(num) {
          return (num << 30) | (num >>> 2);
        }
        function ft(s, b, c, d) {
          if (s === 0)
            return (b & c) | ((~b) & d);
          if (s === 2)
            return (b & c) | (b & d) | (c & d);
          return b ^ c ^ d;
        }
        Sha.prototype._update = function(M) {
          var W = this._w;
          var a = this._a | 0;
          var b = this._b | 0;
          var c = this._c | 0;
          var d = this._d | 0;
          var e = this._e | 0;
          for (var i = 0; i < 16; ++i)
            W[i] = M.readInt32BE(i * 4);
          for (; i < 80; ++i)
            W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
          for (var j = 0; j < 80; ++j) {
            var s = ~~(j / 20);
            var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;
            e = d;
            d = c;
            c = rotl30(b);
            b = a;
            a = t;
          }
          this._a = (a + this._a) | 0;
          this._b = (b + this._b) | 0;
          this._c = (c + this._c) | 0;
          this._d = (d + this._d) | 0;
          this._e = (e + this._e) | 0;
        };
        Sha.prototype._hash = function() {
          var H = new Buffer(20);
          H.writeInt32BE(this._a | 0, 0);
          H.writeInt32BE(this._b | 0, 4);
          H.writeInt32BE(this._c | 0, 8);
          H.writeInt32BE(this._d | 0, 12);
          H.writeInt32BE(this._e | 0, 16);
          return H;
        };
        module.exports = Sha;
      }).call(this, require("buffer").Buffer);
    }, {
      "./hash": 121,
      "buffer": 45,
      "inherits": 91
    }],
    124: [function(require, module, exports) {
      (function(Buffer) {
        var inherits = require('inherits');
        var Hash = require('./hash');
        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];
        var W = new Array(80);
        function Sha1() {
          this.init();
          this._w = W;
          Hash.call(this, 64, 56);
        }
        inherits(Sha1, Hash);
        Sha1.prototype.init = function() {
          this._a = 0x67452301;
          this._b = 0xefcdab89;
          this._c = 0x98badcfe;
          this._d = 0x10325476;
          this._e = 0xc3d2e1f0;
          return this;
        };
        function rotl1(num) {
          return (num << 1) | (num >>> 31);
        }
        function rotl5(num) {
          return (num << 5) | (num >>> 27);
        }
        function rotl30(num) {
          return (num << 30) | (num >>> 2);
        }
        function ft(s, b, c, d) {
          if (s === 0)
            return (b & c) | ((~b) & d);
          if (s === 2)
            return (b & c) | (b & d) | (c & d);
          return b ^ c ^ d;
        }
        Sha1.prototype._update = function(M) {
          var W = this._w;
          var a = this._a | 0;
          var b = this._b | 0;
          var c = this._c | 0;
          var d = this._d | 0;
          var e = this._e | 0;
          for (var i = 0; i < 16; ++i)
            W[i] = M.readInt32BE(i * 4);
          for (; i < 80; ++i)
            W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]);
          for (var j = 0; j < 80; ++j) {
            var s = ~~(j / 20);
            var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;
            e = d;
            d = c;
            c = rotl30(b);
            b = a;
            a = t;
          }
          this._a = (a + this._a) | 0;
          this._b = (b + this._b) | 0;
          this._c = (c + this._c) | 0;
          this._d = (d + this._d) | 0;
          this._e = (e + this._e) | 0;
        };
        Sha1.prototype._hash = function() {
          var H = new Buffer(20);
          H.writeInt32BE(this._a | 0, 0);
          H.writeInt32BE(this._b | 0, 4);
          H.writeInt32BE(this._c | 0, 8);
          H.writeInt32BE(this._d | 0, 12);
          H.writeInt32BE(this._e | 0, 16);
          return H;
        };
        module.exports = Sha1;
      }).call(this, require("buffer").Buffer);
    }, {
      "./hash": 121,
      "buffer": 45,
      "inherits": 91
    }],
    125: [function(require, module, exports) {
      (function(Buffer) {
        var inherits = require('inherits');
        var Sha256 = require('./sha256');
        var Hash = require('./hash');
        var W = new Array(64);
        function Sha224() {
          this.init();
          this._w = W;
          Hash.call(this, 64, 56);
        }
        inherits(Sha224, Sha256);
        Sha224.prototype.init = function() {
          this._a = 0xc1059ed8;
          this._b = 0x367cd507;
          this._c = 0x3070dd17;
          this._d = 0xf70e5939;
          this._e = 0xffc00b31;
          this._f = 0x68581511;
          this._g = 0x64f98fa7;
          this._h = 0xbefa4fa4;
          return this;
        };
        Sha224.prototype._hash = function() {
          var H = new Buffer(28);
          H.writeInt32BE(this._a, 0);
          H.writeInt32BE(this._b, 4);
          H.writeInt32BE(this._c, 8);
          H.writeInt32BE(this._d, 12);
          H.writeInt32BE(this._e, 16);
          H.writeInt32BE(this._f, 20);
          H.writeInt32BE(this._g, 24);
          return H;
        };
        module.exports = Sha224;
      }).call(this, require("buffer").Buffer);
    }, {
      "./hash": 121,
      "./sha256": 126,
      "buffer": 45,
      "inherits": 91
    }],
    126: [function(require, module, exports) {
      (function(Buffer) {
        var inherits = require('inherits');
        var Hash = require('./hash');
        var K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];
        var W = new Array(64);
        function Sha256() {
          this.init();
          this._w = W;
          Hash.call(this, 64, 56);
        }
        inherits(Sha256, Hash);
        Sha256.prototype.init = function() {
          this._a = 0x6a09e667;
          this._b = 0xbb67ae85;
          this._c = 0x3c6ef372;
          this._d = 0xa54ff53a;
          this._e = 0x510e527f;
          this._f = 0x9b05688c;
          this._g = 0x1f83d9ab;
          this._h = 0x5be0cd19;
          return this;
        };
        function ch(x, y, z) {
          return z ^ (x & (y ^ z));
        }
        function maj(x, y, z) {
          return (x & y) | (z & (x | y));
        }
        function sigma0(x) {
          return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
        }
        function sigma1(x) {
          return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
        }
        function gamma0(x) {
          return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3);
        }
        function gamma1(x) {
          return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10);
        }
        Sha256.prototype._update = function(M) {
          var W = this._w;
          var a = this._a | 0;
          var b = this._b | 0;
          var c = this._c | 0;
          var d = this._d | 0;
          var e = this._e | 0;
          var f = this._f | 0;
          var g = this._g | 0;
          var h = this._h | 0;
          for (var i = 0; i < 16; ++i)
            W[i] = M.readInt32BE(i * 4);
          for (; i < 64; ++i)
            W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0;
          for (var j = 0; j < 64; ++j) {
            var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0;
            var T2 = (sigma0(a) + maj(a, b, c)) | 0;
            h = g;
            g = f;
            f = e;
            e = (d + T1) | 0;
            d = c;
            c = b;
            b = a;
            a = (T1 + T2) | 0;
          }
          this._a = (a + this._a) | 0;
          this._b = (b + this._b) | 0;
          this._c = (c + this._c) | 0;
          this._d = (d + this._d) | 0;
          this._e = (e + this._e) | 0;
          this._f = (f + this._f) | 0;
          this._g = (g + this._g) | 0;
          this._h = (h + this._h) | 0;
        };
        Sha256.prototype._hash = function() {
          var H = new Buffer(32);
          H.writeInt32BE(this._a, 0);
          H.writeInt32BE(this._b, 4);
          H.writeInt32BE(this._c, 8);
          H.writeInt32BE(this._d, 12);
          H.writeInt32BE(this._e, 16);
          H.writeInt32BE(this._f, 20);
          H.writeInt32BE(this._g, 24);
          H.writeInt32BE(this._h, 28);
          return H;
        };
        module.exports = Sha256;
      }).call(this, require("buffer").Buffer);
    }, {
      "./hash": 121,
      "buffer": 45,
      "inherits": 91
    }],
    127: [function(require, module, exports) {
      (function(Buffer) {
        var inherits = require('inherits');
        var SHA512 = require('./sha512');
        var Hash = require('./hash');
        var W = new Array(160);
        function Sha384() {
          this.init();
          this._w = W;
          Hash.call(this, 128, 112);
        }
        inherits(Sha384, SHA512);
        Sha384.prototype.init = function() {
          this._ah = 0xcbbb9d5d;
          this._bh = 0x629a292a;
          this._ch = 0x9159015a;
          this._dh = 0x152fecd8;
          this._eh = 0x67332667;
          this._fh = 0x8eb44a87;
          this._gh = 0xdb0c2e0d;
          this._hh = 0x47b5481d;
          this._al = 0xc1059ed8;
          this._bl = 0x367cd507;
          this._cl = 0x3070dd17;
          this._dl = 0xf70e5939;
          this._el = 0xffc00b31;
          this._fl = 0x68581511;
          this._gl = 0x64f98fa7;
          this._hl = 0xbefa4fa4;
          return this;
        };
        Sha384.prototype._hash = function() {
          var H = new Buffer(48);
          function writeInt64BE(h, l, offset) {
            H.writeInt32BE(h, offset);
            H.writeInt32BE(l, offset + 4);
          }
          writeInt64BE(this._ah, this._al, 0);
          writeInt64BE(this._bh, this._bl, 8);
          writeInt64BE(this._ch, this._cl, 16);
          writeInt64BE(this._dh, this._dl, 24);
          writeInt64BE(this._eh, this._el, 32);
          writeInt64BE(this._fh, this._fl, 40);
          return H;
        };
        module.exports = Sha384;
      }).call(this, require("buffer").Buffer);
    }, {
      "./hash": 121,
      "./sha512": 128,
      "buffer": 45,
      "inherits": 91
    }],
    128: [function(require, module, exports) {
      (function(Buffer) {
        var inherits = require('inherits');
        var Hash = require('./hash');
        var K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];
        var W = new Array(160);
        function Sha512() {
          this.init();
          this._w = W;
          Hash.call(this, 128, 112);
        }
        inherits(Sha512, Hash);
        Sha512.prototype.init = function() {
          this._ah = 0x6a09e667;
          this._bh = 0xbb67ae85;
          this._ch = 0x3c6ef372;
          this._dh = 0xa54ff53a;
          this._eh = 0x510e527f;
          this._fh = 0x9b05688c;
          this._gh = 0x1f83d9ab;
          this._hh = 0x5be0cd19;
          this._al = 0xf3bcc908;
          this._bl = 0x84caa73b;
          this._cl = 0xfe94f82b;
          this._dl = 0x5f1d36f1;
          this._el = 0xade682d1;
          this._fl = 0x2b3e6c1f;
          this._gl = 0xfb41bd6b;
          this._hl = 0x137e2179;
          return this;
        };
        function Ch(x, y, z) {
          return z ^ (x & (y ^ z));
        }
        function maj(x, y, z) {
          return (x & y) | (z & (x | y));
        }
        function sigma0(x, xl) {
          return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
        }
        function sigma1(x, xl) {
          return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
        }
        function Gamma0(x, xl) {
          return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7);
        }
        function Gamma0l(x, xl) {
          return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
        }
        function Gamma1(x, xl) {
          return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6);
        }
        function Gamma1l(x, xl) {
          return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
        }
        function getCarry(a, b) {
          return (a >>> 0) < (b >>> 0) ? 1 : 0;
        }
        Sha512.prototype._update = function(M) {
          var W = this._w;
          var ah = this._ah | 0;
          var bh = this._bh | 0;
          var ch = this._ch | 0;
          var dh = this._dh | 0;
          var eh = this._eh | 0;
          var fh = this._fh | 0;
          var gh = this._gh | 0;
          var hh = this._hh | 0;
          var al = this._al | 0;
          var bl = this._bl | 0;
          var cl = this._cl | 0;
          var dl = this._dl | 0;
          var el = this._el | 0;
          var fl = this._fl | 0;
          var gl = this._gl | 0;
          var hl = this._hl | 0;
          for (var i = 0; i < 32; i += 2) {
            W[i] = M.readInt32BE(i * 4);
            W[i + 1] = M.readInt32BE(i * 4 + 4);
          }
          for (; i < 160; i += 2) {
            var xh = W[i - 15 * 2];
            var xl = W[i - 15 * 2 + 1];
            var gamma0 = Gamma0(xh, xl);
            var gamma0l = Gamma0l(xl, xh);
            xh = W[i - 2 * 2];
            xl = W[i - 2 * 2 + 1];
            var gamma1 = Gamma1(xh, xl);
            var gamma1l = Gamma1l(xl, xh);
            var Wi7h = W[i - 7 * 2];
            var Wi7l = W[i - 7 * 2 + 1];
            var Wi16h = W[i - 16 * 2];
            var Wi16l = W[i - 16 * 2 + 1];
            var Wil = (gamma0l + Wi7l) | 0;
            var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0;
            Wil = (Wil + gamma1l) | 0;
            Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0;
            Wil = (Wil + Wi16l) | 0;
            Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0;
            W[i] = Wih;
            W[i + 1] = Wil;
          }
          for (var j = 0; j < 160; j += 2) {
            Wih = W[j];
            Wil = W[j + 1];
            var majh = maj(ah, bh, ch);
            var majl = maj(al, bl, cl);
            var sigma0h = sigma0(ah, al);
            var sigma0l = sigma0(al, ah);
            var sigma1h = sigma1(eh, el);
            var sigma1l = sigma1(el, eh);
            var Kih = K[j];
            var Kil = K[j + 1];
            var chh = Ch(eh, fh, gh);
            var chl = Ch(el, fl, gl);
            var t1l = (hl + sigma1l) | 0;
            var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0;
            t1l = (t1l + chl) | 0;
            t1h = (t1h + chh + getCarry(t1l, chl)) | 0;
            t1l = (t1l + Kil) | 0;
            t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0;
            t1l = (t1l + Wil) | 0;
            t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0;
            var t2l = (sigma0l + majl) | 0;
            var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0;
            hh = gh;
            hl = gl;
            gh = fh;
            gl = fl;
            fh = eh;
            fl = el;
            el = (dl + t1l) | 0;
            eh = (dh + t1h + getCarry(el, dl)) | 0;
            dh = ch;
            dl = cl;
            ch = bh;
            cl = bl;
            bh = ah;
            bl = al;
            al = (t1l + t2l) | 0;
            ah = (t1h + t2h + getCarry(al, t1l)) | 0;
          }
          this._al = (this._al + al) | 0;
          this._bl = (this._bl + bl) | 0;
          this._cl = (this._cl + cl) | 0;
          this._dl = (this._dl + dl) | 0;
          this._el = (this._el + el) | 0;
          this._fl = (this._fl + fl) | 0;
          this._gl = (this._gl + gl) | 0;
          this._hl = (this._hl + hl) | 0;
          this._ah = (this._ah + ah + getCarry(this._al, al)) | 0;
          this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0;
          this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0;
          this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0;
          this._eh = (this._eh + eh + getCarry(this._el, el)) | 0;
          this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0;
          this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0;
          this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0;
        };
        Sha512.prototype._hash = function() {
          var H = new Buffer(64);
          function writeInt64BE(h, l, offset) {
            H.writeInt32BE(h, offset);
            H.writeInt32BE(l, offset + 4);
          }
          writeInt64BE(this._ah, this._al, 0);
          writeInt64BE(this._bh, this._bl, 8);
          writeInt64BE(this._ch, this._cl, 16);
          writeInt64BE(this._dh, this._dl, 24);
          writeInt64BE(this._eh, this._el, 32);
          writeInt64BE(this._fh, this._fl, 40);
          writeInt64BE(this._gh, this._gl, 48);
          writeInt64BE(this._hh, this._hl, 56);
          return H;
        };
        module.exports = Sha512;
      }).call(this, require("buffer").Buffer);
    }, {
      "./hash": 121,
      "buffer": 45,
      "inherits": 91
    }],
    129: [function(require, module, exports) {
      module.exports = Stream;
      var EE = require('events').EventEmitter;
      var inherits = require('inherits');
      inherits(Stream, EE);
      Stream.Readable = require('readable-stream/readable.js');
      Stream.Writable = require('readable-stream/writable.js');
      Stream.Duplex = require('readable-stream/duplex.js');
      Stream.Transform = require('readable-stream/transform.js');
      Stream.PassThrough = require('readable-stream/passthrough.js');
      Stream.Stream = Stream;
      function Stream() {
        EE.call(this);
      }
      Stream.prototype.pipe = function(dest, options) {
        var source = this;
        function ondata(chunk) {
          if (dest.writable) {
            if (false === dest.write(chunk) && source.pause) {
              source.pause();
            }
          }
        }
        source.on('data', ondata);
        function ondrain() {
          if (source.readable && source.resume) {
            source.resume();
          }
        }
        dest.on('drain', ondrain);
        if (!dest._isStdio && (!options || options.end !== false)) {
          source.on('end', onend);
          source.on('close', onclose);
        }
        var didOnEnd = false;
        function onend() {
          if (didOnEnd)
            return;
          didOnEnd = true;
          dest.end();
        }
        function onclose() {
          if (didOnEnd)
            return;
          didOnEnd = true;
          if (typeof dest.destroy === 'function')
            dest.destroy();
        }
        function onerror(er) {
          cleanup();
          if (EE.listenerCount(this, 'error') === 0) {
            throw er;
          }
        }
        source.on('error', onerror);
        dest.on('error', onerror);
        function cleanup() {
          source.removeListener('data', ondata);
          dest.removeListener('drain', ondrain);
          source.removeListener('end', onend);
          source.removeListener('close', onclose);
          source.removeListener('error', onerror);
          dest.removeListener('error', onerror);
          source.removeListener('end', cleanup);
          source.removeListener('close', cleanup);
          dest.removeListener('close', cleanup);
        }
        source.on('end', cleanup);
        source.on('close', cleanup);
        dest.on('close', cleanup);
        dest.emit('pipe', source);
        return dest;
      };
    }, {
      "events": 81,
      "inherits": 91,
      "readable-stream/duplex.js": 110,
      "readable-stream/passthrough.js": 116,
      "readable-stream/readable.js": 117,
      "readable-stream/transform.js": 118,
      "readable-stream/writable.js": 119
    }],
    130: [function(require, module, exports) {
      var Buffer = require('buffer').Buffer;
      var isBufferEncoding = Buffer.isEncoding || function(encoding) {
        switch (encoding && encoding.toLowerCase()) {
          case 'hex':
          case 'utf8':
          case 'utf-8':
          case 'ascii':
          case 'binary':
          case 'base64':
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
          case 'raw':
            return true;
          default:
            return false;
        }
      };
      function assertEncoding(encoding) {
        if (encoding && !isBufferEncoding(encoding)) {
          throw new Error('Unknown encoding: ' + encoding);
        }
      }
      var StringDecoder = exports.StringDecoder = function(encoding) {
        this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
        assertEncoding(encoding);
        switch (this.encoding) {
          case 'utf8':
            this.surrogateSize = 3;
            break;
          case 'ucs2':
          case 'utf16le':
            this.surrogateSize = 2;
            this.detectIncompleteChar = utf16DetectIncompleteChar;
            break;
          case 'base64':
            this.surrogateSize = 3;
            this.detectIncompleteChar = base64DetectIncompleteChar;
            break;
          default:
            this.write = passThroughWrite;
            return;
        }
        this.charBuffer = new Buffer(6);
        this.charReceived = 0;
        this.charLength = 0;
      };
      StringDecoder.prototype.write = function(buffer) {
        var charStr = '';
        while (this.charLength) {
          var available = (buffer.length >= this.charLength - this.charReceived) ? this.charLength - this.charReceived : buffer.length;
          buffer.copy(this.charBuffer, this.charReceived, 0, available);
          this.charReceived += available;
          if (this.charReceived < this.charLength) {
            return '';
          }
          buffer = buffer.slice(available, buffer.length);
          charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
          var charCode = charStr.charCodeAt(charStr.length - 1);
          if (charCode >= 0xD800 && charCode <= 0xDBFF) {
            this.charLength += this.surrogateSize;
            charStr = '';
            continue;
          }
          this.charReceived = this.charLength = 0;
          if (buffer.length === 0) {
            return charStr;
          }
          break;
        }
        this.detectIncompleteChar(buffer);
        var end = buffer.length;
        if (this.charLength) {
          buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
          end -= this.charReceived;
        }
        charStr += buffer.toString(this.encoding, 0, end);
        var end = charStr.length - 1;
        var charCode = charStr.charCodeAt(end);
        if (charCode >= 0xD800 && charCode <= 0xDBFF) {
          var size = this.surrogateSize;
          this.charLength += size;
          this.charReceived += size;
          this.charBuffer.copy(this.charBuffer, size, 0, size);
          buffer.copy(this.charBuffer, 0, 0, size);
          return charStr.substring(0, end);
        }
        return charStr;
      };
      StringDecoder.prototype.detectIncompleteChar = function(buffer) {
        var i = (buffer.length >= 3) ? 3 : buffer.length;
        for (; i > 0; i--) {
          var c = buffer[buffer.length - i];
          if (i == 1 && c >> 5 == 0x06) {
            this.charLength = 2;
            break;
          }
          if (i <= 2 && c >> 4 == 0x0E) {
            this.charLength = 3;
            break;
          }
          if (i <= 3 && c >> 3 == 0x1E) {
            this.charLength = 4;
            break;
          }
        }
        this.charReceived = i;
      };
      StringDecoder.prototype.end = function(buffer) {
        var res = '';
        if (buffer && buffer.length)
          res = this.write(buffer);
        if (this.charReceived) {
          var cr = this.charReceived;
          var buf = this.charBuffer;
          var enc = this.encoding;
          res += buf.slice(0, cr).toString(enc);
        }
        return res;
      };
      function passThroughWrite(buffer) {
        return buffer.toString(this.encoding);
      }
      function utf16DetectIncompleteChar(buffer) {
        this.charReceived = buffer.length % 2;
        this.charLength = this.charReceived ? 2 : 0;
      }
      function base64DetectIncompleteChar(buffer) {
        this.charReceived = buffer.length % 3;
        this.charLength = this.charReceived ? 3 : 0;
      }
    }, {"buffer": 45}],
    131: [function(require, module, exports) {
      (function(global) {
        module.exports = deprecate;
        function deprecate(fn, msg) {
          if (config('noDeprecation')) {
            return fn;
          }
          var warned = false;
          function deprecated() {
            if (!warned) {
              if (config('throwDeprecation')) {
                throw new Error(msg);
              } else if (config('traceDeprecation')) {
                console.trace(msg);
              } else {
                console.warn(msg);
              }
              warned = true;
            }
            return fn.apply(this, arguments);
          }
          return deprecated;
        }
        function config(name) {
          try {
            if (!global.localStorage)
              return false;
          } catch (_) {
            return false;
          }
          var val = global.localStorage[name];
          if (null == val)
            return false;
          return String(val).toLowerCase() === 'true';
        }
      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {}],
    132: [function(require, module, exports) {
      module.exports = function isBuffer(arg) {
        return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
      };
    }, {}],
    133: [function(require, module, exports) {
      (function(process, global) {
        var formatRegExp = /%[sdj%]/g;
        exports.format = function(f) {
          if (!isString(f)) {
            var objects = [];
            for (var i = 0; i < arguments.length; i++) {
              objects.push(inspect(arguments[i]));
            }
            return objects.join(' ');
          }
          var i = 1;
          var args = arguments;
          var len = args.length;
          var str = String(f).replace(formatRegExp, function(x) {
            if (x === '%%')
              return '%';
            if (i >= len)
              return x;
            switch (x) {
              case '%s':
                return String(args[i++]);
              case '%d':
                return Number(args[i++]);
              case '%j':
                try {
                  return JSON.stringify(args[i++]);
                } catch (_) {
                  return '[Circular]';
                }
              default:
                return x;
            }
          });
          for (var x = args[i]; i < len; x = args[++i]) {
            if (isNull(x) || !isObject(x)) {
              str += ' ' + x;
            } else {
              str += ' ' + inspect(x);
            }
          }
          return str;
        };
        exports.deprecate = function(fn, msg) {
          if (isUndefined(global.process)) {
            return function() {
              return exports.deprecate(fn, msg).apply(this, arguments);
            };
          }
          if (process.noDeprecation === true) {
            return fn;
          }
          var warned = false;
          function deprecated() {
            if (!warned) {
              if (process.throwDeprecation) {
                throw new Error(msg);
              } else if (process.traceDeprecation) {
                console.trace(msg);
              } else {
                console.error(msg);
              }
              warned = true;
            }
            return fn.apply(this, arguments);
          }
          return deprecated;
        };
        var debugs = {};
        var debugEnviron;
        exports.debuglog = function(set) {
          if (isUndefined(debugEnviron))
            debugEnviron = process.env.NODE_DEBUG || '';
          set = set.toUpperCase();
          if (!debugs[set]) {
            if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
              var pid = process.pid;
              debugs[set] = function() {
                var msg = exports.format.apply(exports, arguments);
                console.error('%s %d: %s', set, pid, msg);
              };
            } else {
              debugs[set] = function() {};
            }
          }
          return debugs[set];
        };
        function inspect(obj, opts) {
          var ctx = {
            seen: [],
            stylize: stylizeNoColor
          };
          if (arguments.length >= 3)
            ctx.depth = arguments[2];
          if (arguments.length >= 4)
            ctx.colors = arguments[3];
          if (isBoolean(opts)) {
            ctx.showHidden = opts;
          } else if (opts) {
            exports._extend(ctx, opts);
          }
          if (isUndefined(ctx.showHidden))
            ctx.showHidden = false;
          if (isUndefined(ctx.depth))
            ctx.depth = 2;
          if (isUndefined(ctx.colors))
            ctx.colors = false;
          if (isUndefined(ctx.customInspect))
            ctx.customInspect = true;
          if (ctx.colors)
            ctx.stylize = stylizeWithColor;
          return formatValue(ctx, obj, ctx.depth);
        }
        exports.inspect = inspect;
        inspect.colors = {
          'bold': [1, 22],
          'italic': [3, 23],
          'underline': [4, 24],
          'inverse': [7, 27],
          'white': [37, 39],
          'grey': [90, 39],
          'black': [30, 39],
          'blue': [34, 39],
          'cyan': [36, 39],
          'green': [32, 39],
          'magenta': [35, 39],
          'red': [31, 39],
          'yellow': [33, 39]
        };
        inspect.styles = {
          'special': 'cyan',
          'number': 'yellow',
          'boolean': 'yellow',
          'undefined': 'grey',
          'null': 'bold',
          'string': 'green',
          'date': 'magenta',
          'regexp': 'red'
        };
        function stylizeWithColor(str, styleType) {
          var style = inspect.styles[styleType];
          if (style) {
            return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
          } else {
            return str;
          }
        }
        function stylizeNoColor(str, styleType) {
          return str;
        }
        function arrayToHash(array) {
          var hash = {};
          array.forEach(function(val, idx) {
            hash[val] = true;
          });
          return hash;
        }
        function formatValue(ctx, value, recurseTimes) {
          if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {
            var ret = value.inspect(recurseTimes, ctx);
            if (!isString(ret)) {
              ret = formatValue(ctx, ret, recurseTimes);
            }
            return ret;
          }
          var primitive = formatPrimitive(ctx, value);
          if (primitive) {
            return primitive;
          }
          var keys = Object.keys(value);
          var visibleKeys = arrayToHash(keys);
          if (ctx.showHidden) {
            keys = Object.getOwnPropertyNames(value);
          }
          if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
            return formatError(value);
          }
          if (keys.length === 0) {
            if (isFunction(value)) {
              var name = value.name ? ': ' + value.name : '';
              return ctx.stylize('[Function' + name + ']', 'special');
            }
            if (isRegExp(value)) {
              return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
            }
            if (isDate(value)) {
              return ctx.stylize(Date.prototype.toString.call(value), 'date');
            }
            if (isError(value)) {
              return formatError(value);
            }
          }
          var base = '',
              array = false,
              braces = ['{', '}'];
          if (isArray(value)) {
            array = true;
            braces = ['[', ']'];
          }
          if (isFunction(value)) {
            var n = value.name ? ': ' + value.name : '';
            base = ' [Function' + n + ']';
          }
          if (isRegExp(value)) {
            base = ' ' + RegExp.prototype.toString.call(value);
          }
          if (isDate(value)) {
            base = ' ' + Date.prototype.toUTCString.call(value);
          }
          if (isError(value)) {
            base = ' ' + formatError(value);
          }
          if (keys.length === 0 && (!array || value.length == 0)) {
            return braces[0] + base + braces[1];
          }
          if (recurseTimes < 0) {
            if (isRegExp(value)) {
              return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
            } else {
              return ctx.stylize('[Object]', 'special');
            }
          }
          ctx.seen.push(value);
          var output;
          if (array) {
            output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
          } else {
            output = keys.map(function(key) {
              return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
            });
          }
          ctx.seen.pop();
          return reduceToSingleString(output, base, braces);
        }
        function formatPrimitive(ctx, value) {
          if (isUndefined(value))
            return ctx.stylize('undefined', 'undefined');
          if (isString(value)) {
            var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
            return ctx.stylize(simple, 'string');
          }
          if (isNumber(value))
            return ctx.stylize('' + value, 'number');
          if (isBoolean(value))
            return ctx.stylize('' + value, 'boolean');
          if (isNull(value))
            return ctx.stylize('null', 'null');
        }
        function formatError(value) {
          return '[' + Error.prototype.toString.call(value) + ']';
        }
        function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
          var output = [];
          for (var i = 0,
              l = value.length; i < l; ++i) {
            if (hasOwnProperty(value, String(i))) {
              output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
            } else {
              output.push('');
            }
          }
          keys.forEach(function(key) {
            if (!key.match(/^\d+$/)) {
              output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
            }
          });
          return output;
        }
        function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
          var name,
              str,
              desc;
          desc = Object.getOwnPropertyDescriptor(value, key) || {value: value[key]};
          if (desc.get) {
            if (desc.set) {
              str = ctx.stylize('[Getter/Setter]', 'special');
            } else {
              str = ctx.stylize('[Getter]', 'special');
            }
          } else {
            if (desc.set) {
              str = ctx.stylize('[Setter]', 'special');
            }
          }
          if (!hasOwnProperty(visibleKeys, key)) {
            name = '[' + key + ']';
          }
          if (!str) {
            if (ctx.seen.indexOf(desc.value) < 0) {
              if (isNull(recurseTimes)) {
                str = formatValue(ctx, desc.value, null);
              } else {
                str = formatValue(ctx, desc.value, recurseTimes - 1);
              }
              if (str.indexOf('\n') > -1) {
                if (array) {
                  str = str.split('\n').map(function(line) {
                    return '  ' + line;
                  }).join('\n').substr(2);
                } else {
                  str = '\n' + str.split('\n').map(function(line) {
                    return '   ' + line;
                  }).join('\n');
                }
              }
            } else {
              str = ctx.stylize('[Circular]', 'special');
            }
          }
          if (isUndefined(name)) {
            if (array && key.match(/^\d+$/)) {
              return str;
            }
            name = JSON.stringify('' + key);
            if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
              name = name.substr(1, name.length - 2);
              name = ctx.stylize(name, 'name');
            } else {
              name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
              name = ctx.stylize(name, 'string');
            }
          }
          return name + ': ' + str;
        }
        function reduceToSingleString(output, base, braces) {
          var numLinesEst = 0;
          var length = output.reduce(function(prev, cur) {
            numLinesEst++;
            if (cur.indexOf('\n') >= 0)
              numLinesEst++;
            return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
          }, 0);
          if (length > 60) {
            return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
          }
          return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
        }
        function isArray(ar) {
          return Array.isArray(ar);
        }
        exports.isArray = isArray;
        function isBoolean(arg) {
          return typeof arg === 'boolean';
        }
        exports.isBoolean = isBoolean;
        function isNull(arg) {
          return arg === null;
        }
        exports.isNull = isNull;
        function isNullOrUndefined(arg) {
          return arg == null;
        }
        exports.isNullOrUndefined = isNullOrUndefined;
        function isNumber(arg) {
          return typeof arg === 'number';
        }
        exports.isNumber = isNumber;
        function isString(arg) {
          return typeof arg === 'string';
        }
        exports.isString = isString;
        function isSymbol(arg) {
          return typeof arg === 'symbol';
        }
        exports.isSymbol = isSymbol;
        function isUndefined(arg) {
          return arg === void 0;
        }
        exports.isUndefined = isUndefined;
        function isRegExp(re) {
          return isObject(re) && objectToString(re) === '[object RegExp]';
        }
        exports.isRegExp = isRegExp;
        function isObject(arg) {
          return typeof arg === 'object' && arg !== null;
        }
        exports.isObject = isObject;
        function isDate(d) {
          return isObject(d) && objectToString(d) === '[object Date]';
        }
        exports.isDate = isDate;
        function isError(e) {
          return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
        }
        exports.isError = isError;
        function isFunction(arg) {
          return typeof arg === 'function';
        }
        exports.isFunction = isFunction;
        function isPrimitive(arg) {
          return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
        }
        exports.isPrimitive = isPrimitive;
        exports.isBuffer = require('./support/isBuffer');
        function objectToString(o) {
          return Object.prototype.toString.call(o);
        }
        function pad(n) {
          return n < 10 ? '0' + n.toString(10) : n.toString(10);
        }
        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        function timestamp() {
          var d = new Date();
          var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
          return [d.getDate(), months[d.getMonth()], time].join(' ');
        }
        exports.log = function() {
          console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
        };
        exports.inherits = require('inherits');
        exports._extend = function(origin, add) {
          if (!add || !isObject(add))
            return origin;
          var keys = Object.keys(add);
          var i = keys.length;
          while (i--) {
            origin[keys[i]] = add[keys[i]];
          }
          return origin;
        };
        function hasOwnProperty(obj, prop) {
          return Object.prototype.hasOwnProperty.call(obj, prop);
        }
      }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {
      "./support/isBuffer": 132,
      "_process": 102,
      "inherits": 91
    }],
    134: [function(require, module, exports) {
      var indexOf = require('indexof');
      var Object_keys = function(obj) {
        if (Object.keys)
          return Object.keys(obj);
        else {
          var res = [];
          for (var key in obj)
            res.push(key);
          return res;
        }
      };
      var forEach = function(xs, fn) {
        if (xs.forEach)
          return xs.forEach(fn);
        else
          for (var i = 0; i < xs.length; i++) {
            fn(xs[i], i, xs);
          }
      };
      var defineProp = (function() {
        try {
          Object.defineProperty({}, '_', {});
          return function(obj, name, value) {
            Object.defineProperty(obj, name, {
              writable: true,
              enumerable: false,
              configurable: true,
              value: value
            });
          };
        } catch (e) {
          return function(obj, name, value) {
            obj[name] = value;
          };
        }
      }());
      var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function', 'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError', 'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError', 'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape', 'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];
      function Context() {}
      Context.prototype = {};
      var Script = exports.Script = function NodeScript(code) {
        if (!(this instanceof Script))
          return new Script(code);
        this.code = code;
      };
      Script.prototype.runInContext = function(context) {
        if (!(context instanceof Context)) {
          throw new TypeError("needs a 'context' argument.");
        }
        var iframe = document.createElement('iframe');
        if (!iframe.style)
          iframe.style = {};
        iframe.style.display = 'none';
        document.body.appendChild(iframe);
        var win = iframe.contentWindow;
        var wEval = win.eval,
            wExecScript = win.execScript;
        if (!wEval && wExecScript) {
          wExecScript.call(win, 'null');
          wEval = win.eval;
        }
        forEach(Object_keys(context), function(key) {
          win[key] = context[key];
        });
        forEach(globals, function(key) {
          if (context[key]) {
            win[key] = context[key];
          }
        });
        var winKeys = Object_keys(win);
        var res = wEval.call(win, this.code);
        forEach(Object_keys(win), function(key) {
          if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
          }
        });
        forEach(globals, function(key) {
          if (!(key in context)) {
            defineProp(context, key, win[key]);
          }
        });
        document.body.removeChild(iframe);
        return res;
      };
      Script.prototype.runInThisContext = function() {
        return eval(this.code);
      };
      Script.prototype.runInNewContext = function(context) {
        var ctx = Script.createContext(context);
        var res = this.runInContext(ctx);
        forEach(Object_keys(ctx), function(key) {
          context[key] = ctx[key];
        });
        return res;
      };
      forEach(Object_keys(Script.prototype), function(name) {
        exports[name] = Script[name] = function(code) {
          var s = Script(code);
          return s[name].apply(s, [].slice.call(arguments, 1));
        };
      });
      exports.createScript = function(code) {
        return exports.Script(code);
      };
      exports.createContext = Script.createContext = function(context) {
        var copy = new Context();
        if (typeof context === 'object') {
          forEach(Object_keys(context), function(key) {
            copy[key] = context[key];
          });
        }
        return copy;
      };
    }, {"indexof": 90}],
    135: [function(require, module, exports) {
      Event = require('./def/evt').Event;
      var internals = {};
      module.exports = internals.API = function() {};
      internals.API.prototype.signup = function(pipe, account, cb) {
        pipe.emit(Event.CREATE_ACCOUNT, account);
        pipe.once(Event.CREATE_ACCOUNT_ACK, cb);
      };
      internals.API.prototype.create_account_easy = function(pipe, account, cb) {
        pipe.emit(Event.CREATE_ACCOUNT_EASY, account);
        pipe.once(Event.CREATE_ACCOUNT_EASY_ACK, cb);
      };
      internals.API.prototype.set_password = function(pipe, request, cb) {
        pipe.emit(Event.SET_PASSWORD, request);
        pipe.once(Event.SET_PASSWORD_ACK, cb);
      };
      internals.API.prototype.set_recovery_keys = function(pipe, request, cb) {
        pipe.emit(Event.SSO_SET_RECOVERY_KEYS, request);
        pipe.once(Event.SSO_SET_RECOVERY_KEYS_ACK, cb);
      };
      internals.API.prototype.get_recovery_keys = function(pipe, request, cb) {
        pipe.emit(Event.SSO_GET_RECOVERY_KEYS, request);
        pipe.once(Event.SSO_GET_RECOVERY_KEYS_ACK, cb);
      };
      internals.API.prototype.check_pin = function(pipe, request, cb) {
        pipe.emit(Event.CHECK_PIN, request);
        pipe.once(Event.CHECK_PIN_ACK, cb);
      };
      internals.API.prototype.sso_signup = function(pipe, account, cb) {
        pipe.emit(Event.SSO_SIGNUP, account);
        pipe.once(Event.SSO_SIGNUP_ACK, cb);
      };
      internals.API.prototype.login = function(pipe, credentials, cb) {
        pipe.emit(Event.LOGIN, credentials);
        pipe.once(Event.LOGIN_ACK, cb);
      };
      internals.API.prototype.sso_login = function(pipe, credentials, cb) {
        pipe.emit(Event.SSO_LOGIN, credentials);
        pipe.once(Event.SSO_LOGIN_ACK, cb);
      };
      internals.API.prototype.prepare_upgrade_unity = function(pipe, request, cb) {
        pipe.emit(Event.PREPARE_UPGRADE_UNITY, request);
        pipe.once(Event.PREPARE_UPGRADE_UNITY_ACK, cb);
      };
      internals.API.prototype.get_session_token = function(pipe, request, cb) {
        pipe.emit(Event.SSO_GET_SESSION_TOKEN, request);
        pipe.once(Event.SSO_GET_SESSION_TOKEN_ACK, cb);
      };
      internals.API.prototype.check_session_token = function(pipe, request, cb) {
        pipe.emit(Event.SSO_CHECK_SESSION_TOKEN, request);
        pipe.once(Event.SSO_CHECK_SESSION_TOKEN_ACK, cb);
      };
      internals.API.prototype.logout = function(pipe, cb) {
        pipe.emit(Event.LOGOUT);
        pipe.once(Event.LOGOUT_ACK, cb);
      };
      internals.API.prototype.update_profile = function(pipe, account, cb) {
        pipe.emit(Event.UPDATE_ACCOUNT, account);
        pipe.once(Event.UPDATE_ACCOUNT_ACK, cb);
      };
      internals.API.prototype.get_profile = function(pipe, request, cb) {
        pipe.emit(Event.GET_PROFILE, request);
        pipe.once(Event.GET_PROFILE_ACK, cb);
      };
      internals.API.prototype.get_wallet_secret = function(pipe, request, cb) {
        pipe.emit(Event.GET_WALLET_SECRET, request);
        pipe.once(Event.GET_WALLET_SECRET_ACK, cb);
      };
      internals.API.prototype.send_verify_email = function(pipe, request, cb) {
        pipe.emit(Event.SEND_VERIF_EMAIL, request);
        pipe.once(Event.SEND_VERIF_EMAIL_ACK, cb);
      };
      internals.API.prototype.verify_email = function(pipe, request, cb) {
        pipe.emit(Event.VERIFY_EMAIL, request);
        pipe.once(Event.VERIFY_EMAIL_ACK, cb);
      };
      internals.API.prototype.check_email_in_use = function(pipe, request, cb) {
        pipe.emit(Event.CHECK_EMAIL_IN_USE, request);
        pipe.once(Event.CHECK_EMAIL_IN_USE_ACK, cb);
      };
      internals.API.prototype.check_phone_number_in_use = function(pipe, request, cb) {
        pipe.emit(Event.CHECK_PHONE_NUMBER_IN_USE, request);
        pipe.once(Event.CHECK_PHONE_NUMBER_IN_USE_ACK, cb);
      };
      internals.API.prototype.search_wallet = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_SEARCH_WALLET, criteria);
        pipe.once(Event.KEYS_SEARCH_WALLET_ACK, cb);
      };
      internals.API.prototype.get_recv_money_req_by_id = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_RECV_MONEY_REQ_BY_ID, criteria);
        pipe.once(Event.KEYS_GET_RECV_MONEY_REQ_BY_ID_ACK, cb);
      };
      internals.API.prototype.get_requests = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_REQS, criteria);
        pipe.once(Event.KEYS_GET_REQS_ACK, cb);
      };
      internals.API.prototype.update_wallet_balance = function(pipe, balance_info, cb) {
        pipe.emit(Event.KEYS_UPDATE_WALLET_BALANCE, balance_info);
        pipe.once(Event.KEYS_UPDATE_WALLET_BALANCE_ACK, cb);
      };
      internals.API.prototype.get_txns = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_TXN, criteria);
        pipe.once(Event.KEYS_GET_TXN_ACK, cb);
      };
      internals.API.prototype.get_txn_by_id = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_TXN_BY_ID, criteria);
        pipe.once(Event.KEYS_GET_TXN_BY_ID_ACK, cb);
      };
      internals.API.prototype.get_sent_txns = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_SENT_TXN, criteria);
        pipe.once(Event.KEYS_GET_SENT_TXN_ACK, cb);
      };
      internals.API.prototype.get_recv_txns = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_RECV_TXN, criteria);
        pipe.once(Event.KEYS_GET_RECV_TXN_ACK, cb);
      };
      internals.API.prototype.add_txn = function(pipe, txn_info, cb) {
        pipe.emit(Event.KEYS_ADD_TXN_LOG, txn_info);
        pipe.once(Event.KEYS_ADD_TXN_LOG_ACK, cb);
      };
      internals.API.prototype.get_my_wallets = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_GET_MY_WALLETS, request);
        pipe.once(Event.KEYS_GET_MY_WALLETS_ACK, cb);
      };
      internals.API.prototype.send_verification_sms = function(pipe, request, cb) {
        pipe.emit(Event.SEND_VERIF_SMS, request);
        pipe.once(Event.SEND_VERIF_SMS_ACK, cb);
      };
      internals.API.prototype.add_session_token_listener = function(pipe, callback) {
        pipe.removeAllListeners(Event.SESSION_TOKEN_RECV);
        pipe.on(Event.SESSION_TOKEN_RECV, function(response) {});
      };
      internals.API.prototype.add_session_invalid_listener = function(pipe, callback) {
        pipe.removeAllListeners(Event.SESSION_INVALID);
        this._on(pipe, Event.SESSION_INVALID, callback);
      };
      internals.API.prototype.request_money = function(pipe, request, callback) {
        pipe.emit(Event.KEYS_ADD_MONEY_REQ, request);
        pipe.once(Event.KEYS_ADD_MONEY_REQ_ACK, callback);
      };
      internals.API.prototype.mark_sent_money_requests = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_MARK_ACCEPT_MONEY_REQ, request);
        pipe.once(Event.KEYS_MARK_ACCEPT_MONEY_REQ_ACK, cb);
      };
      internals.API.prototype.mark_rejected_money_requests = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_MARK_REJECTED_MONEY_REQ, criteria);
        pipe.once(Event.KEYS_MARK_REJECTED_MONEY_REQ_ACK, cb);
      };
      internals.API.prototype.mark_cancelled_money_requests = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_MARK_CANCELLED_MONEY_REQ, criteria);
        pipe.once(Event.KEYS_MARK_CANCELLED_MONEY_REQ_ACK, cb);
      };
      internals.API.prototype.mark_read_money_requests = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_MARK_READ_MONEY_REQ, criteria);
        pipe.once(Event.KEYS_MARK_READ_MONEY_REQ_ACK, cb);
      };
      internals.API.prototype.get_roster = function(pipe, criteria, cb) {
        pipe.emit(Event.ROS_GET, criteria);
        pipe.once(Event.ROS_GET_ACK, cb);
      };
      internals.API.prototype.add_contact = function(pipe, criteria, cb) {
        pipe.emit(Event.ROS_ADD, criteria);
        pipe.once(Event.ROS_ADD_ACK, cb);
      };
      internals.API.prototype.remove_contact = function(pipe, criteria, cb) {
        criteria.op = 3;
        pipe.emit(Event.ROS_OP, criteria);
        pipe.once(Event.ROS_OP_ACK, cb);
      };
      internals.API.prototype.store_wallet_data = function(pipe, request, cb) {
        pipe.emit(Event.CL_STORE_WALLET_DATA, request);
        pipe.once(Event.CL_STORE_WALLET_DATA_ACK, cb);
      };
      internals.API.prototype.restore_wallet_data = function(pipe, request, cb) {
        pipe.emit(Event.CL_RESTORE_WALLET_DATA, request);
        pipe.once(Event.CL_RESTORE_WALLET_DATA_ACK, cb);
      };
      internals.API.prototype.create_wallet = function(pipe, wallet, cb) {
        pipe.emit(Event.KEYS_CREATE_WALLET, wallet);
        pipe.once(Event.KEYS_CREATE_WALLET_ACK, cb);
      };
      internals.API.prototype.create_unity_wallet = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_CREATE_UNITY_WALLET, request);
        pipe.once(Event.KEYS_CREATE_UNITY_WALLET_ACK, cb);
      };
      internals.API.prototype.add_wallet_address = function(pipe, addr_info, cb) {
        pipe.emit(Event.KEYS_ADD_WALLET_ADDRESS, addr_info);
        pipe.once(Event.KEYS_ADD_WALLET_ADDRESS_ACK, cb);
      };
      internals.API.prototype.create_wallet_and_address = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_CREATE_WALLET_AND_ADDRESS, request);
        pipe.once(Event.KEYS_CREATE_WALLET_AND_ADDRESS_ACK, cb);
      };
      internals.API.prototype.get_txns_by_contact = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_TXN_BY_CONTACT, criteria);
        pipe.once(Event.KEYS_GET_TXN_BY_CONTACT_ACK, cb);
      };
      internals.API.prototype.get_money_requests = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_RECV_MONEY_REQ, criteria);
        pipe.once(Event.KEYS_GET_RECV_MONEY_REQ_ACK, cb);
      };
      internals.API.prototype.get_sent_money_requests = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_SENT_MONEY_REQ, criteria);
        pipe.once(Event.KEYS_GET_SENT_MONEY_REQ_ACK, cb);
      };
      internals.API.prototype.get_wallets_by_email = function(pipe, criteria, cb) {
        pipe.emit(Event.KEYS_GET_WALLET_BY_EMAIL, criteria);
        pipe.once(Event.KEYS_GET_WALLET_BY_EMAIL_ACK, cb);
      };
      internals.API.prototype.create_unsigned_raw_txn = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_CREATE_USN_RAW_TXN, request);
        pipe.once(Event.KEYS_CREATE_USN_RAW_TXN_ACK, cb);
      };
      internals.API.prototype.get_txn_details = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_GET_TXN_DETAILS, request);
        pipe.once(Event.KEYS_GET_TXN_DETAILS_ACK, cb);
      };
      internals.API.prototype.get_balance = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_GET_BALANCE, request);
        pipe.once(Event.KEYS_GET_BALANCE_ACK, cb);
      };
      internals.API.prototype.enable_fountain = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_FOUNTAIN_ENABLE, request);
        pipe.once(Event.KEYS_FOUNTAIN_ENABLE_ACK, cb);
      };
      internals.API.prototype.update_fountain = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_FOUNTAIN_UPDATE, request);
        pipe.once(Event.KEYS_FOUNTAIN_UPDATE_ACK, cb);
      };
      internals.API.prototype.disable_fountain = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_FOUNTAIN_DISABLE, request);
        pipe.once(Event.KEYS_FOUNTAIN_DISABLE_ACK, cb);
      };
      internals.API.prototype.get_my_fountain = function(pipe, request, cb) {
        pipe.emit(Event.KEYS_FOUNTAIN_MY, request);
        pipe.once(Event.KEYS_FOUNTAIN_MY_ACK, cb);
      };
      internals.API.prototype.admin_get_signup_daily_stats = function(pipe, criteria, cb) {
        pipe.emit(Event.ADMIN_GET_SIGNUP_DAILY_STATS, criteria);
        pipe.once(Event.ADMIN_GET_SIGNUP_DAILY_STATS_ACK, cb);
      };
      internals.API.prototype._on = function(pipe, ev, cb) {
        var listener;
        if (ev && cb) {
          listener = function() {
            console.log('Andaman resp received for  - ', ev, ' resp ', JSON.stringify(arguments));
            if (arguments.length > 0) {
              cb.apply(this, arguments);
            } else {
              cb();
            }
          };
          pipe.on(ev, listener);
        }
      };
    }, {"./def/evt": 136}],
    136: [function(require, module, exports) {
      const Event = {
        JOIN: 1,
        SEND: 2,
        RECV: 3,
        STATS: 4,
        LEAVE: 5,
        FILE_SEND: 6,
        FILE_GET: 7,
        RESTORE_SESSION: 100,
        LOGIN: 101,
        LOGOUT: 102,
        CREATE_ACCOUNT: 103,
        UPDATE_ACCOUNT: 104,
        UPDATE_PASSWORD: 105,
        RESET_PASSWORD: 106,
        SEARCH_USERS: 107,
        GET_USERS_BY_UID: 108,
        UPLOAD_PROFILE_PIC: 109,
        UPLOAD_FILE_XFER: 110,
        VALIDATE_SERVICE_TICKET: 112,
        VALIDATE_SESSION_COOKIE: 113,
        USER_LOCK: 114,
        USER_UNLOCK: 115,
        SEND_VERIF_EMAIL: 116,
        VERIFY_EMAIL: 117,
        SEND_VERIF_SMS: 118,
        VERIFY_PHONE: 119,
        SET_PIN: 120,
        CHANGE_PIN: 121,
        GET_CONTACT_DETAIL_BY_USERNAME: 122,
        GET_CONTACT_DETAIL_BY_EMAIL: 123,
        CHECK_EMAIL_IN_USE: 124,
        CHECK_PHONE_NUMBER_IN_USE: 124,
        CREATE_ACCOUNT_EASY: 128,
        SET_PASSWORD: 129,
        CHAT_SEND: 201,
        CHAT_UPDATE: 202,
        CHAT_DELETE: 203,
        CHAT_GET_MSGS: 204,
        CHAT_TYPING: 205,
        CHAT_BROADCAST: 206,
        SSO_SIGNUP: 301,
        SSO_SIGNUP_ACK: 302,
        SSO_LOGIN: 303,
        SSO_LOGIN_ACK: 304,
        SSO_GET_SESSION_TOKEN: 305,
        SSO_GET_SESSION_TOKEN_ACK: 306,
        GET_PROFILE: 307,
        GET_PROFILE_ACK: 308,
        GET_WALLET_SECRET: 309,
        GET_WALLET_SECRET_ACK: 310,
        SSO_CHECK_SESSION_TOKEN: 311,
        SSO_CHECK_SESSION_TOKEN_ACK: 312,
        PREPARE_UPGRADE_UNITY: 313,
        PREPARE_UPGRADE_UNITY_ACK: 314,
        CHECK_PIN: 315,
        CHECK_PIN_ACK: 316,
        SSO_SET_PASSWORD_V1: 317,
        SSO_SET_PASSWORD_V1_ACK: 318,
        SSO_SET_RECOVERY_KEYS: 319,
        SSO_SET_RECOVERY_KEYS_ACK: 320,
        SSO_GET_RECOVERY_KEYS: 321,
        SSO_GET_RECOVERY_KEYS_ACK: 322,
        AV_CALL: 375,
        AV_BUSY: 376,
        AV_HANGUP: 377,
        ROS_GET: 401,
        ROS_OP: 402,
        ROS_CONN_USER: 403,
        ROS_ADD: 405,
        PRES_UPDT: 501,
        KEYS_CREATE_WALLET: 1000,
        KEYS_ADD_WALLET_ADDRESS: 1001,
        KEYS_SEARCH_WALLET: 1002,
        KEYS_ADD_WALLET_KEYS: 1003,
        KEYS_UPDT_WALLET_KEYS: 1003,
        KEYS_ACTIVATE_WALLET: 1004,
        KEYS_DEACTIVATE_WALLET: 1005,
        KEYS_ADD_WALLET_CONTACT: 1006,
        KEYS_REM_WALLET_CONTACT: 1007,
        KEYS_GET_MY_WALLETS: 1008,
        KEYS_UPDT_WALLET_ADDRESS: 1009,
        KEYS_GET_WALLET_BY_EMAIL: 1010,
        KEYS_ADD_TXN_LOG: 1011,
        KEYS_GET_SENT_TXN: 1012,
        KEYS_GET_RECV_TXN: 1013,
        KEYS_ADD_MONEY_REQ: 1014,
        KEYS_GET_SENT_MONEY_REQ: 1015,
        KEYS_GET_RECV_MONEY_REQ: 1016,
        KEYS_MARK_ACCEPT_MONEY_REQ: 1017,
        KEYS_MARK_REJECTED_MONEY_REQ: 1018,
        KEYS_MARK_CANCELLED_MONEY_REQ: 1019,
        KEYS_MARK_READ_MONEY_REQ: 1020,
        KEYS_GET_WALLET_BY_USERNAME: 1021,
        KEYS_GET_RECV_MONEY_REQ_BY_ID: 1022,
        KEYS_UPDATE_WALLET_BALANCE: 1023,
        KEYS_GET_TXN: 1024,
        KEYS_UPDATE_TXN_LOG: 1025,
        KEYS_GET_REQS: 1026,
        KEYS_GET_TXN_BY_CONTACT: 1027,
        KEYS_CREATE_UNITY_WALLET: 1028,
        KEYS_CREATE_WALLET_AND_ADDRESS: 1029,
        KEYS_GET_TXN_BY_ID: 1030,
        KEYS_CREATE_USN_RAW_TXN: 1031,
        KEYS_CREATE_USN_RAW_TXN_ACK: 1032,
        KEYS_GET_TXN_DETAILS: 1033,
        KEYS_GET_TXN_DETAILS_ACK: 1034,
        KEYS_GET_BALANCE: 1035,
        KEYS_GET_BALANCE_ACK: 1036,
        KEYS_GET_LIST_MESSAGE: 1042,
        KEYS_GET_MESSAGE_BY_ID: 1043,
        KEYS_MARK_MESSAGE_AS_READ: 1044,
        KEYS_MARK_MESSAGE_AS_DELETED: 1045,
        KEYS_FOUNTAIN_ENABLE: 1045,
        KEYS_FOUNTAIN_ENABLE_ACK: 1046,
        KEYS_FOUNTAIN_DISABLE: 1047,
        KEYS_FOUNTAIN_DISABLE_ACK: 1048,
        KEYS_FOUNTAIN_MY: 1049,
        KEYS_FOUNTAIN_MY_ACK: 1050,
        KEYS_FOUNTAIN_UPDATE: 1051,
        KEYS_FOUNTAIN_UPDATE_ACK: 1052,
        ADMIN_GET_WALLETS_OF_USER: 1100,
        ADMIN_UPDT_WALLETS_OF_USER: 1101,
        ADMIN_UPDT_PASSWORD_OF_USER: 1102,
        ADMIN_SEND_MAIL: 1103,
        ADMIN_GET_RESET_PW_TOKEN: 1104,
        CHECK_RESET_PW_TOKEN: 1105,
        REQUEST_RESET_PW: 1106,
        ADMIN_GET_RESET_PW_REQ: 1107,
        ADMIN_UPDT_RESET_PW_REQ: 1108,
        ADMIN_LOCK: 1109,
        ADMIN_UNLOCK: 1110,
        ADMIN_GET_GENERAL_STATS: 1111,
        UPGRADE_PASSWORD_V1_V2: 1112,
        ADMIN_GET_WALLET_DAILY_STATS: 1113,
        ADMIN_GET_WALLET_BL_SNAPSHOT: 1114,
        ADMIN_GET_TX_DAILY_STATS: 1115,
        ADMIN_SEARCH_USERS: 1116,
        ADMIN_SET_WALLET_CFG: 1117,
        ADMIN_GET_SIGNUP_DAILY_STATS: 1118,
        CC_CREATE_ACCOUNT: 1200,
        CC_CREATE_ACCOUNT_ACK: 1201,
        CC_ACTIVATE_ACCOUNT: 1202,
        CC_ACTIVATE_ACCOUNT_ACK: 1203,
        CC_GET_ACCOUNT: 1204,
        CC_GET_ACCOUNT_ACK: 1205,
        CC_PUT_ACCOUNT: 1206,
        CC_PUT_ACCOUNT_ACK: 1207,
        CC_POST_VERIF_ID: 1208,
        CC_POST_VERIF_ID_ACK: 1209,
        CC_POST_VERIF_ID_RECV: 1210,
        CC_POST_VERIF_ADDR: 1211,
        CC_POST_VERIF_ADDR_ACK: 1212,
        CC_POST_VERIF_ADDR_RECV: 1213,
        CC_GET_VERIF_STATUS: 1214,
        CC_GET_VERIF_STATUS_ACK: 1215,
        CC_ADD_FUND: 1216,
        CC_ADD_FUND_ACK: 1217,
        CC_ADD_FUND_RECV: 1218,
        CC_WITHDRAW_EUR: 1219,
        CC_WITHDRAW_EUR_ACK: 1220,
        CC_WITHDRAW_EUR_RECV: 1221,
        CC_GET_EUR_BALANCE: 1222,
        CC_GET_EUR_BALANCE_ACK: 1223,
        CL_STORE_WALLET_DATA: 1300,
        CL_STORE_WALLET_DATA_ACK: 1301,
        CL_RESTORE_WALLET_DATA: 1302,
        CL_RESTORE_WALLET_DATA_ACK: 1303,
        RESTORE_SESSION_ACK: 130,
        LOGIN_ACK: 131,
        LOGOUT_ACK: 132,
        CREATE_ACCOUNT_ACK: 133,
        UPDATE_ACCOUNT_ACK: 134,
        UPDATE_PASSWORD_ACK: 135,
        RESET_PASSWORD_ACK: 136,
        SEARCH_USERS_ACK: 137,
        GET_USERS_BY_UID_ACK: 138,
        UPLOAD_PROFILE_PIC_ACK: 139,
        UPLOAD_FILE_XFER_ACK: 140,
        SESSION_INVALID: 141,
        VALIDATE_SERVICE_TICKET_ACK: 142,
        VALIDATE_SESSION_COOKIE_ACK: 143,
        USER_LOCK_ACK: 144,
        USER_UNLOCK_ACK: 145,
        SEND_VERIF_EMAIL_ACK: 146,
        VERIFY_EMAIL_ACK: 147,
        SEND_VERIF_SMS_ACK: 148,
        VERIFY_PHONE_ACK: 149,
        SET_PIN_ACK: 150,
        CHANGE_PIN_ACK: 151,
        GET_CONTACT_DETAIL_BY_USERNAME_ACK: 152,
        GET_CONTACT_DETAIL_BY_EMAIL_ACK: 153,
        CHECK_EMAIL_IN_USE_ACK: 154,
        CHECK_PHONE_NUMBER_IN_USE_ACK: 155,
        CREATE_ACCOUNT_EASY_ACK: 158,
        SET_PASSWORD_ACK: 159,
        CHAT_SEND_ACK: 231,
        CHAT_UPDATE_ACK: 232,
        CHAT_DELETE_ACK: 233,
        CHAT_GET_MSGS_ACK: 234,
        CHAT_BROADCAST_ACK: 235,
        AV_CALL_ACK: 650,
        AV_BUSY_ACK: 651,
        AV_HANGUP_ACK: 652,
        ROS_GET_ACK: 431,
        ROS_OP_ACK: 432,
        ROS_CONN_USER_ACK: 433,
        ROS_ADD_ACK: 435,
        PRES_UPDT_ACK: 434,
        KEYS_CREATE_WALLET_ACK: 1500,
        KEYS_ADD_WALLET_ADDRESS_ACK: 1501,
        KEYS_SEARCH_WALLET_ACK: 1502,
        KEYS_ADD_WALLET_KEYS_ACK: 1503,
        KEYS_UPDT_WALLET_KEYS_ACK: 1503,
        KEYS_ACTIVATE_WALLET_ACK: 1504,
        KEYS_DEACTIVATE_WALLET_ACK: 1505,
        KEYS_ADD_CONTACT_ACK: 1506,
        KEYS_REM_CONTACT_ACK: 1507,
        KEYS_GET_MY_WALLETS_ACK: 1508,
        KEYS_UPDT_WALLET_ADDRESS_ACK: 1509,
        KEYS_GET_WALLET_BY_EMAIL_ACK: 1510,
        KEYS_ADD_TXN_LOG_ACK: 1511,
        KEYS_GET_SENT_TXN_ACK: 1512,
        KEYS_GET_RECV_TXN_ACK: 1513,
        KEYS_ADD_MONEY_REQ_ACK: 1514,
        KEYS_GET_SENT_MONEY_REQ_ACK: 1515,
        KEYS_GET_RECV_MONEY_REQ_ACK: 1516,
        KEYS_MARK_ACCEPT_MONEY_REQ_ACK: 1517,
        KEYS_MARK_REJECTED_MONEY_REQ_ACK: 1518,
        KEYS_MARK_CANCELLED_MONEY_REQ_ACK: 1519,
        KEYS_MARK_READ_MONEY_REQ_ACK: 1520,
        KEYS_GET_WALLET_BY_USERNAME_ACK: 1521,
        KEYS_GET_RECV_MONEY_REQ_BY_ID_ACK: 1522,
        KEYS_UPDATE_WALLET_BALANCE_ACK: 1523,
        KEYS_CREATE_WALLET_AND_ADDRESS_ACK: 1529,
        KEYS_GET_TXN_BY_ID_ACK: 1530,
        KEYS_GET_TXN_ACK: 1524,
        KEYS_UPDATE_TXN_LOG_ACK: 1525,
        KEYS_GET_REQS_ACK: 1526,
        KEYS_GET_TXN_BY_CONTACT_ACK: 1527,
        KEYS_CREATE_UNITY_WALLET_ACK: 1528,
        KEYS_ADD_MESSAGE_ACK: 1541,
        KEYS_GET_LIST_MESSAGE_ACK: 1542,
        KEYS_GET_MESSAGE_BY_ID_ACK: 1543,
        KEYS_MARK_MESSAGE_AS_READ_ACK: 1544,
        KEYS_MARK_MESSAGE_AS_DELETED_ACK: 1545,
        ADMIN_GET_WALLETS_OF_USER_ACK: 1600,
        ADMIN_UPDT_WALLETS_OF_USER_ACK: 1601,
        ADMIN_UPDT_PASSWORD_OF_USER_ACK: 1602,
        ADMIN_SEND_MAIL_ACK: 1603,
        ADMIN_GET_RESET_PW_TOKEN_ACK: 1604,
        CHECK_RESET_PW_TOKEN_ACK: 1605,
        REQUEST_RESET_PW_ACK: 1606,
        ADMIN_GET_RESET_PW_REQ_ACK: 1607,
        ADMIN_UPDT_RESET_PW_REQ_ACK: 1608,
        ADMIN_LOCK_ACK: 1609,
        ADMIN_UNLOCK_ACK: 1610,
        ADMIN_GET_GENERAL_STATS_ACK: 1611,
        UPGRADE_PASSWORD_V1_V2_ACK: 1612,
        ADMIN_GET_WALLET_DAILY_STATS_ACK: 1613,
        ADMIN_GET_WALLET_BL_SNAPSHOT_ACK: 1614,
        ADMIN_GET_TX_DAILY_STATS_ACK: 1615,
        ADMIN_SEARCH_USERS_ACK: 1616,
        ADMIN_SET_WALLET_CFG_ACK: 1617,
        ADMIN_GET_SIGNUP_DAILY_STATS_ACK: 1618,
        SESSION_TOKEN_RECV: 200,
        CHAT_RECV: 261,
        CHAT_UPDT_RECV: 262,
        CHAT_DEL_RECV: 263,
        CHAT_TYPING_RECV: 264,
        CHAT_BROADCAST_RECV: 265,
        GRP_ADDED_TO_RECV: 901,
        GRP_REM_FROM_RECV: 902,
        GRP_ADD_PARTICIPANTS_RECV: 903,
        GRP_REM_PARTICIPANTS_RECV: 904,
        GRP_CHAT_RECV: 905,
        GRP_UPDATE_CHAT_RECV: 906,
        GRP_DELETE_CHAT_RECV: 907,
        GRP_DELETE_RECV: 908,
        GRP_LEAVE_RECV: 909,
        COMM_ADD_RECV: 700,
        COMM_REM_RECV: 703,
        COMM_DEL_RECV: 704,
        COMM_TOP_DEL_RECV: 705,
        AV_CALL_RECV: 725,
        AV_BUSY_RECV: 726,
        AV_HANGUP_RECV: 727,
        ROS_REQ_RECV: 461,
        ROS_APPRV_RECV: 462,
        ROS_REM_RECV: 463,
        ROS_UNBLK_RECV: 464,
        PRES_UPDT_RECV: 561,
        KEYS_ADD_TXN_LOG_RECV: 1711,
        KEYS_UPDATE_TXN_LOG_RECV: 1712,
        KEYS_ADD_MONEY_REQ_RECV: 1714,
        KEYS_MARK_MONEY_REQ_RECV: 1719,
        KEYS_MARK_READ_MONEY_REQ_RECV: 1720,
        KEYS_ADD_MESSAGE_RECV: 1741,
        VERIFY_EMAIL_RECV: 1742
      };
      const Err = {
        unknown: 1,
        ok: 2,
        again: 3
      };
      const Cmd = {
        open: 1,
        ping: 2,
        close: 3,
        event: 4,
        join: 5,
        leave: 6,
        xfer_start: 7,
        xfer: 8,
        xfer_err: 9,
        xfer_end: 10,
        get_file: 11
      };
      const OBJ_TYPE = {
        string: 0,
        blob: 1,
        json: 2
      };
      const HEADER_MIN_LEN = 12;
      const Off = {
        FLAG: 1,
        SEQNO: 3,
        TXN: 7,
        CMD: 9,
        EXT_LEN: 10,
        EXT_TYPE: 12,
        EXT: 13
      };
      const FLAG_ACK = 0x01;
      module.exports = {
        EVP_VER: 1,
        EVP_PATH: '/_evp',
        DEFAULT_NSP: null,
        Err: Err,
        Cmd: Cmd,
        HEADER_MIN_LEN: HEADER_MIN_LEN,
        Off: Off,
        FLAG_ACK: FLAG_ACK,
        OBJ_TYPE: OBJ_TYPE,
        Event: Event
      };
    }, {}],
    137: [function(require, module, exports) {
      var utf8 = require('tweetnacl').util;
      function BufferView(b) {
        if (!b instanceof Uint8Array)
          throw 'backing buffer needs to be Uint8Array';
        this.view = new DataView(b.buffer, b.byteOffset, b.byteLength);
        this.offset = 0;
        this.mark = 0;
        this.buffer = b;
      }
      BufferView.prototype.readUInt8 = function(offset) {
        if (!offset) {
          var res = this.view.getUint8(this.offset, false);
          this.offset += 1;
          return res;
        } else
          return this.view.getUint8(offset, false);
      };
      BufferView.prototype.readInt8 = function(offset) {
        if (!offset) {
          var res = this.view.getInt8(this.offset, false);
          this.offset += 1;
          return res;
        } else
          return this.view.getInt8(offset, false);
      };
      BufferView.prototype.readUInt16 = function(offset) {
        if (!offset) {
          var res = this.view.getUint16(this.offset, false);
          this.offset += 2;
          return res;
        } else
          return this.view.getUint16(offset, false);
      };
      BufferView.prototype.readUInt32 = function(offset) {
        if (!offset) {
          var res = this.view.getUint32(this.offset, false);
          this.offset += 4;
          return res;
        } else
          return this.view.getUint32(offset, false);
      };
      BufferView.prototype.readInt32 = function(offset) {
        if (!offset) {
          var res = this.view.getInt32(this.offset, false);
          this.offset += 4;
          return res;
        } else
          return this.view.getInt32(offset, false);
      };
      BufferView.prototype.reset = function() {
        this.offset = this.mark;
      };
      BufferView.prototype.rewind = function() {
        this.offset = this.mark = 0;
      };
      BufferView.prototype.set = function(offset) {
        this.offset = offset;
      };
      BufferView.prototype.skip = function(s) {
        this.offset += s;
      };
      BufferView.prototype.mark = function() {
        this.mark = offset;
      };
      BufferView.prototype.slice = function(start, end) {
        if (!end)
          end = this.buffer.byteLength;
        var res = this.buffer.subarray(start, end);
        return res;
      };
      BufferView.prototype.writeUInt8 = function(v, offset) {
        if (!offset) {
          this.view.setUint8(this.offset, v);
          this.offset += 1;
        } else
          this.view.setUint8(offset, v);
      };
      BufferView.prototype.writeInt8 = function(v, offset) {
        if (!offset) {
          this.view.setInt8(this.offset, v);
          this.offset += 1;
        } else
          this.view.setInt8(offset, v);
      };
      BufferView.prototype.writeUInt16 = function(v, offset) {
        if (!offset) {
          this.view.setUint16(this.offset, v, false);
          this.offset += 2;
        } else
          this.view.setUint16(offset, v, false);
      };
      BufferView.prototype.writeUInt32 = function(v, offset) {
        if (!offset) {
          this.view.setUint32(this.offset, v, false);
          this.offset += 4;
        } else
          this.view.setUint32(offset, v, false);
      };
      BufferView.prototype.writeInt32 = function(v, offset) {
        if (!offset) {
          this.view.setInt32(this.offset, v, false);
          this.offset += 4;
        } else
          this.view.setInt32(offset, v, false);
      };
      BufferView.prototype.decodeUTF8 = function(string) {
        var a = utf8.decodeUTF8(string);
        return a;
      };
      BufferView.prototype.writeUTF8 = function(string, offset) {
        var a = utf8.decodeUTF8(string);
        var pos = (offset ? offset : this.offset);
        if (pos + a.byteLength > this.buffer.byteLength)
          throw 'range error';
        for (var i = 0; i < a.byteLength; i++)
          this.buffer[pos + i] = a[i];
        if (!offset)
          this.offset += a.byteLength;
        return a.byteLength;
      };
      BufferView.prototype.append = function(buf, offset) {
        if (!buf instanceof Uint8Array)
          throw 'buffer needs to be Uint8Array';
        var pos = (offset ? offset : this.offset);
        if (pos + buf.byteLength > this.buffer.byteLength)
          throw 'range error';
        this.buffer.set(buf, pos);
        if (!offset)
          this.offset += buf.byteLength;
      };
      BufferView.prototype.readUTF8 = function(length, offset) {
        var pos = (offset ? offset : this.offset);
        if (pos + length > this.buffer.byteLength)
          throw 'range error';
        var sub = this.buffer.subarray(pos, pos + length);
        var res = utf8.encodeUTF8(sub);
        if (!offset)
          this.offset += length;
        return res;
      };
      BufferView.prototype.fill = function(v, start, end) {
        var use_offset = false;
        if (!start) {
          start = 0;
          end = this.buffer.byteLength;
          use_offset = true;
        }
        for (var i = start; i < end; i++)
          this.buffer[i] = v;
        if (use_offset)
          this.offset += (end - start);
      };
      BufferView.prototype.length = function() {
        return this.buffer.byteLength;
      };
      BufferView.prototype.toString = function() {
        return 'offset:' + this.offset + 'buf.length:' + this.buffer.byteLength;
      };
      module.exports = BufferView;
    }, {"tweetnacl": 144}],
    138: [function(require, module, exports) {
      var events = require('events'),
          machina = require('machina'),
          nacl = require('tweetnacl'),
          BufferView = require('./buffer-view'),
          PollSocket = require('./poll-socket'),
          util = require('util');
      function CurveWebSocket(opts) {
        this.srv_pub_p = nacl.util.decodeBase64(opts.server_publicKey);
        var keys = nacl.box.keyPair();
        this.pub_t = keys.publicKey;
        this.priv_t = keys.secretKey;
        this.pub_p = this.pub_t;
        this.priv_p = this.priv_t;
        this.message_buf = new BufferView(new Uint8Array(64 * 1024));
        this.fsm = this._fsm(opts);
      }
      util.inherits(CurveWebSocket, events.EventEmitter);
      CurveWebSocket.prototype.encode_hello = function() {
        var pkt_hello = new BufferView(new Uint8Array(215 + 16));
        pkt_hello.fill(0);
        pkt_hello.rewind();
        pkt_hello.writeUTF8('HELLO');
        pkt_hello.writeUInt8(1);
        pkt_hello.writeUInt8(0);
        pkt_hello.fill(0, pkt_hello.offset, pkt_hello.offset + 72);
        pkt_hello.skip(72);
        pkt_hello.append(this.pub_t);
        var nonce = gen_nonce('CurveZMQHELLO---', 8);
        var zeros = new Uint8Array(64);
        var box = nacl.box(zeros, nonce, this.srv_pub_p, this.priv_t);
        pkt_hello.append(nonce);
        pkt_hello.append(new Uint8Array(box.buffer));
        return {
          pkt: pkt_hello.buffer,
          s_nonce: nonce.subarray(16)
        };
      };
      CurveWebSocket.prototype.decode_welcome = function(pkt) {
        if (pkt.length() !== (183 + 32))
          return {err: 'wrong length'};
        var cmd = pkt.readUTF8(7);
        if (cmd !== 'WELCOME')
          return {err: 'wrong cmd'};
        var welcome_nonce = pkt.slice(pkt.offset, pkt.offset + 24);
        pkt.skip(24);
        var welcome = nacl.box.open(pkt.slice(pkt.offset + 16), welcome_nonce, this.srv_pub_p, this.priv_t);
        if (!welcome)
          return {err: 'authentication fails'};
        var srv_pub_t = welcome.subarray(0, 32);
        var cookie = welcome.subarray(32);
        return {
          c: cookie,
          sk: srv_pub_t
        };
      };
      CurveWebSocket.prototype.decode_ready = function(pkt) {
        if (pkt.length() < 46)
          return {err: 'wrong length'};
        var cmd = pkt.readUTF8(5);
        if (cmd !== 'READY')
          return {err: 'wrong cmd'};
        var ready_nonce = pkt.slice(pkt.offset, pkt.offset + 24);
        pkt.skip(24);
        var ready = nacl.box.open(pkt.slice(pkt.offset + 16), ready_nonce, this.srv_pub_t, this.priv_t);
        if (!ready)
          return {err: 'authentication fails'};
        return {s_nonce: ready_nonce.subarray(16)};
      };
      CurveWebSocket.prototype.send = function(data) {
        increment_nonce(this.fsm.short_nonce);
        var msg = this.encode_message(data, this.message_buf, this.fsm.short_nonce);
        this.ws.send(msg.pkt);
      };
      CurveWebSocket.prototype.close = function() {
        if (this.fsm.ws)
          this.fsm.ws.close();
      };
      CurveWebSocket.prototype.encode_message = function(payload, pkt_message, short_nonce) {
        pkt_message.rewind();
        pkt_message.writeUTF8('MESSAGE');
        var mark = pkt_message.offset;
        pkt_message.writeUTF8('CurveZMQMESSAGE-');
        pkt_message.append(short_nonce);
        var message_nonce = pkt_message.slice(mark, pkt_message.offset);
        mark = pkt_message.offset;
        pkt_message.append(payload);
        var box = nacl.box(pkt_message.slice(mark, pkt_message.offset), message_nonce, this.srv_pub_t, this.priv_t);
        var b = new Uint8Array(box.buffer);
        pkt_message.append(b, mark);
        pkt_message.set(mark + b.byteLength);
        return {pkt: pkt_message.buffer.subarray(0, pkt_message.offset)};
      };
      CurveWebSocket.prototype.decode_message = function(pkt, short_nonce) {
        if (pkt.length() < 49)
          return {err: 'wrong length'};
        var cmd = pkt.readUTF8(7);
        if (cmd !== 'MESSAGE')
          return {err: 'wrong cmd'};
        var message_nonce = pkt.slice(pkt.offset, pkt.offset + 24);
        pkt.skip(24);
        var expected_nonce = new BufferView(new Uint8Array(24));
        expected_nonce.writeUTF8('CurveZMQMESSAGE-');
        expected_nonce.append(short_nonce);
        var err = comp(expected_nonce.buffer, message_nonce);
        if (err)
          return {err: 'wrong nonce'};
        var message = nacl.box.open(pkt.slice(pkt.offset + 16), message_nonce, this.srv_pub_t, this.priv_t);
        if (!message)
          return {err: 'authentication fails'};
        return {data: message};
      };
      CurveWebSocket.prototype.encode_initiate = function(cookie, short_nonce) {
        var vouch = new BufferView(new Uint8Array(120));
        var vouch_nonce = gen_nonce('VOUCH---', 16);
        vouch.append(vouch_nonce);
        vouch.append(this.pub_t);
        vouch.append(this.srv_pub_p);
        var vouch_box = nacl.box(vouch.slice(24, 24 + 64), vouch_nonce, this.srv_pub_t, this.priv_p);
        vouch.append(new Uint8Array(vouch_box.buffer), 24);
        var len = 8 + cookie.byteLength + 24 + 32 + vouch.length() + 32;
        var pkt_initiate = new BufferView(new Uint8Array(len));
        pkt_initiate.writeUTF8('INITIATE');
        pkt_initiate.append(cookie);
        var mark = pkt_initiate.offset;
        pkt_initiate.writeUTF8('CurveZMQINITIATE');
        pkt_initiate.append(short_nonce);
        var initiate_nonce = pkt_initiate.slice(mark, pkt_initiate.offset);
        mark = pkt_initiate.offset;
        pkt_initiate.append(this.pub_p);
        pkt_initiate.append(vouch.buffer);
        var init_box = nacl.box(pkt_initiate.slice(mark, pkt_initiate.offset), initiate_nonce, this.srv_pub_t, this.priv_t);
        pkt_initiate.append(new Uint8Array(init_box.buffer), mark);
        return pkt_initiate.buffer;
      };
      CurveWebSocket.prototype._fsm = function(opts) {
        var owner = this;
        var m = new machina.Fsm({
          initialState: "init",
          states: {
            init: {_onEnter: function() {
                if (opts.poll) {
                  this.ws = new PollSocket(opts);
                } else {
                  this.ws = new WebSocket(opts.url);
                  this.ws.binaryType = "arraybuffer";
                }
                var self = this;
                this.ws.addEventListener('open', function() {
                  console.log('connected websocket with', opts.url);
                  self.ws.addEventListener('message', function(data) {
                    self.handle('data', new BufferView(new Uint8Array(data.data)));
                  });
                  self.ws.addEventListener('close', function() {
                    console.log('backing ws closed', self.ws.readyState);
                    owner.emit('close');
                  });
                  self.ws.addEventListener('error', function() {
                    console.log('backing ws error', self.ws.readyState);
                    owner.emit('error');
                  });
                  self.transition('hello');
                });
              }},
            hello: {_onEnter: function() {
                var hello = owner.encode_hello();
                this.short_nonce = hello.s_nonce;
                console.log('sending hello');
                this.ws.send(hello.pkt);
                this.transition('wait_welcome');
              }},
            wait_welcome: {data: function(buffer) {
                var welcome = owner.decode_welcome(buffer);
                if (!welcome.err) {
                  owner.srv_pub_t = welcome.sk;
                  increment_nonce(this.short_nonce);
                  var pkt = owner.encode_initiate(welcome.c, this.short_nonce);
                  console.log('received welcome, sennding initiate');
                  this.ws.send(pkt);
                  this.transition('wait_ready');
                } else {
                  owner.emit('err', welcome.err);
                  this.ws.close();
                }
              }},
            wait_ready: {data: function(buffer) {
                var ready = owner.decode_ready(buffer);
                if (!ready.err) {
                  console.log('channel ready');
                  owner.ws = this.ws;
                  owner.emit('open');
                  this.srv_short_nonce = ready.s_nonce;
                  this.transition('wait_message');
                } else {
                  owner.emit('err', ready.err);
                  this.ws.close();
                }
              }},
            wait_message: {data: function(buffer) {
                increment_nonce(this.srv_short_nonce);
                var message = owner.decode_message(buffer, this.srv_short_nonce);
                if (!message.err)
                  owner.emit('message', message.data);
                else {
                  owner.emit('err', message.err);
                  this.ws.close();
                }
              }}
          }
        });
        return m;
      };
      module.exports = CurveWebSocket;
      const MAX_INT = Math.pow(2, 32);
      function increment_nonce(n) {
        var hi = (n[0] << 24 & 0xffffffff) | (n[1] << 16 & 0xffffff) | (n[2] << 8 & 0xffff) | (n[3] & 0xff);
        var lo = (n[4] << 24 & 0xffffffff) | (n[5] << 16 & 0xffffff) | (n[6] << 8 & 0xffff) | (n[7] & 0xff);
        lo += 1;
        if (lo >= MAX_INT) {
          lo -= MAX_INT;
          hi += 1;
        }
        n[0] = (hi >>> 24 & 0xff);
        n[1] = (hi >>> 16 & 0xff);
        n[2] = (hi >>> 8 & 0xff);
        n[3] = (hi & 0xff);
        n[4] = (lo >>> 24 & 0xff);
        n[5] = (lo >>> 16 & 0xff);
        n[6] = (lo >>> 8 & 0xff);
        n[7] = (lo & 0xff);
      }
      ;
      function comp(a, b) {
        if (a.byteLength == b.byteLength) {
          for (var i = 0; i < a.byteLength; i++)
            if (a[i] != b[i])
              return i + ':' + a[i] + '<->' + b[i];
        } else
          return 'len<>';
      }
      function gen_nonce(prefix, len) {
        var b = new Uint8Array(24);
        var buf = new BufferView(b);
        var start = buf.offset;
        buf.writeUTF8(prefix);
        var rnd = nacl.randomBytes(len);
        buf.append(rnd);
        return b;
      }
    }, {
      "./buffer-view": 137,
      "./poll-socket": 141,
      "events": 81,
      "machina": 142,
      "tweetnacl": 144,
      "util": 133
    }],
    139: [function(require, module, exports) {
      var events = require('events'),
          machina = require('machina'),
          BufferView = require('./buffer-view'),
          nacl = require('tweetnacl'),
          CurveWebSocket = require('./curvews-client'),
          Cmd = require('../def/evt').Cmd,
          Err = require('../def/evt').Err,
          EVP_PATH = require('../def/evt').EVP_PATH,
          FLAG_ACK = require('../def/evt').FLAG_ACK,
          DEFAULT_NSP = require('../def/evt').DEFAULT_NSP;
      var EVP_VER = require('../def/evt').EVP_VER,
          HEADER_MIN_LEN = require('../def/evt').HEADER_MIN_LEN,
          Off = require('../def/evt').Off,
          OBJ_TYPE = require('../def/evt').OBJ_TYPE,
          FLAG_ACK = require('../def/evt').FLAG_ACK;
      WebSocket.prototype.on = WebSocket.prototype.addEventListener;
      const DEFAULT_HB_INTERVAL = 15000;
      const DEFAULT_HB_TMO = 46000;
      const RECONNECT_WAIT = 300;
      const OPEN_RETRY = 3;
      const OPEN_WAIT = 1000;
      const XFER_TMO = 10000;
      const POLL_REC_TMO = 4000;
      const XFER_CHUNK_SIZE = 48 * 1024;
      const MAX_GET_FILE_SIZE = 32 * 1024 * 1024;
      var txn_num = 0;
      function event_client(opts) {
        return new EventPipe(opts);
      }
      function EventPipe(opts) {
        this.delegate = new events.EventEmitter();
        if (!opts.buf instanceof Uint8Array)
          throw 'backing buffee needs to be Uint8Array';
        this.buf = opts.buf;
        this.server_url = opts.proto + '://' + opts.host + ':' + opts.port + EVP_PATH;
        this.namespace = (opts.namespace ? opts.namespace : DEFAULT_NSP);
        this.srv_pub = opts.server_publicKey;
        this.poll = opts.poll;
        this.ping_tmo = 30000 * 2;
        this.fsm = this._fsm(opts);
        this.fsm.handle('start');
        this.seqno = 0;
      }
      EventPipe.prototype.setTokens = function(sessionToken, idToken) {
        this._sessionToken = sessionToken;
        this._idToken = idToken;
      };
      EventPipe.prototype.emit = function(e, payload) {
        if (!this.ready) {
          console.log('websocket not ready');
          return;
        }
        payload.sessionToken = this._sessionToken;
        var ptr = write_header(this.buf, 0, ++this.seqno, 0, Cmd.event);
        var len = write_event(this.buf.subarray(ptr), e, payload);
        this.ws.send(this.buf.subarray(0, ptr + len), {binary: true});
      };
      EventPipe.prototype.on = function(e, fn) {
        this.delegate.on(e, fn);
      };
      EventPipe.prototype.once = function(e, fn) {
        this.delegate.once(e, fn);
      };
      EventPipe.prototype.removeListener = function(e, fn) {
        this.delegate.removeListener(e, fn);
      };
      EventPipe.prototype.removeAllListeners = function(e) {
        this.delegate.removeAllListeners(e);
      };
      EventPipe.prototype.once = function(e, fn) {
        this.delegate.once(e, fn);
      };
      EventPipe.prototype.join = function(channel) {
        if (!this.ready) {
          console.log('not ready');
          return;
        }
        var p = write_header(this.buf, 0, ++this.seqno, 0, Cmd.join, channel);
        this.ws.send(this.buf.subarray(0, p));
      };
      EventPipe.prototype._send_complete = function(txn, context, rx_error, cb) {
        if (rx_error.e)
          return;
        var reg = xfer_end_ack(txn);
        var timer;
        var self = this;
        var listener = function() {
          if (timer)
            clearTimeout(timer);
          console.log('xfer', txn, 'peer has acked end');
          cb();
        };
        timer = setTimeout(function() {
          self.delegate.removeListener(reg, listener);
          cb('end timeout');
        }, 1000);
        this.delegate.once(reg, listener);
        var p = write_header(this.buf, 0, ++this.seqno, txn, Cmd.xfer_end, context);
        this.ws.send(this.buf.subarray(0, p));
      };
      EventPipe.prototype._send_chunk = function(txn, file, remaining, offset, rx_error, cb, size) {
        if (rx_error.e) {
          console.log('xfer:send_chunk', txn, 'peer error, bailing out');
          return;
        }
        var chunk_size;
        if (size)
          chunk_size = Math.min(Math.max(XFER_CHUNK_SIZE, size), remaining);
        else
          chunk_size = Math.min(XFER_CHUNK_SIZE, remaining);
        var reader = new FileReader();
        var chunk = file.slice(offset, offset + chunk_size);
        console.log('request to read', chunk_size, 'bytes');
        var self = this;
        reader.onload = function(evt) {
          remaining -= chunk_size;
          console.log('xfer', txn, 'send_chunk: offset', offset, 'read', evt.target.result.byteLength, 'remaining', remaining);
          var p = write_header(self.buf, 0, ++self.seqno, txn, Cmd.xfer, new Uint8Array(evt.target.result));
          self.ws.send(self.buf.subarray(0, p));
          offset += chunk_size;
          var once_timer;
          self.delegate.once(xfer_req_ack(txn), function() {
            if (once_timer)
              clearTimeout(once_timer);
            cb(undefined, offset);
            if (remaining > 0)
              self._send_chunk(txn, file, remaining, offset, rx_error, cb, size);
          });
          once_timer = setTimeout(function() {
            console.log('xfer', txn, 'timeout at offset', offset);
            self.delegate.removeAllListeners(xfer_req_ack(txn));
            cb('timeout at offset' + offset);
          }, 3000);
        };
        reader.onerror = function(err) {
          console.log('xfer', txn, 'send_chunk:err', err);
          cb(err);
        };
        reader.readAsArrayBuffer(chunk);
      };
      EventPipe.prototype.sendfile = function(context, file, cb, size) {
        if (!this.ready) {
          console.log('not ready');
          cb('not ready');
          return;
        }
        var txn = next_txn();
        console.log('xfer: start with txn', txn, file.name, 'type', file.type, 'size', file.size);
        var reg = xfer_start_ack(txn);
        var timer;
        var self = this;
        var rx_error = {};
        var listener = function() {
          if (timer)
            clearTimeout(timer);
          console.log('xfer:peer has acked start', txn);
          self._send_chunk(txn, file, file.size, 0, rx_error, function(err, offset) {
            if (!err) {
              var p = Math.floor((offset / file.size) * 100);
              cb(Err.again, p);
              if (p === 100) {
                console.log('xfer:chunk send completed', txn);
                self._send_complete(txn, context, rx_error, function(err) {
                  if (!err) {
                    console.log('xfer:send complete', txn);
                    self.delegate.removeAllListeners(xfer_err(txn));
                    cb(Err.ok);
                  } else {
                    console.log('xfer:send complte err', err);
                    self.delegate.removeAllListeners(xfer_err(txn));
                    cb(err);
                  }
                });
              }
            } else {
              console.log('chunk sending error', err);
              self.delegate.removeAllListeners(xfer_err(txn));
              cb(err);
            }
          }, size);
        };
        timer = setTimeout(function() {
          self.delegate.removeListener(reg, listener);
          if (cb)
            cb('start timeout');
        }, 2000);
        this.delegate.once(reg, listener);
        var self = this;
        this.delegate.once(xfer_err(txn), function(message) {
          console.log('xfer', txn, 'peer error', message);
          rx_error.e = true;
          self.delegate.removeAllListeners(xfer_start_ack(txn));
          self.delegate.removeAllListeners(xfer_end_ack(txn));
          cb('peer error');
        });
        var p = write_header(this.buf, 0, ++this.seqno, txn, Cmd.xfer_start, {
          size: file.size,
          type: file.type
        });
        this.ws.send(this.buf.subarray(0, p));
      };
      EventPipe.prototype.getfile = function(token, cb) {
        if (!this.ready) {
          console.log('not ready');
          cb('not ready');
          return;
        }
        var self = this;
        var txn = next_txn();
        var listener = function(err, ack) {
          if (!err) {
            var txn = ack.txn;
            console.log('get file acked with txn', txn);
            var wait_start = function(err, txn, file) {
              if (!err) {
                console.log('peer send file txn started');
                self._create_xfer_receiver(txn, file, cb);
              } else
                cb(err);
            };
            once(self.delegate, xfer_start(txn), 1000, wait_start);
          } else
            cb(err);
        };
        once(this.delegate, xfer_getfile_ack(txn), 1000, listener);
        var p = write_header(this.buf, 0, ++this.seqno, txn, Cmd.get_file, token);
        this.ws.send(this.buf.subarray(0, p));
      };
      EventPipe.prototype._create_xfer_receiver = function(txn, file, cb) {
        var pipe = this;
        var fsm;
        new machina.Fsm({
          initialState: 'init',
          tmo: function() {
            console.log('xfer fsm', txn, 'timeout');
            this.transition('stop');
            this.handle('result', 'timeout');
          },
          io_err: function(err) {
            console.log('xfer', txn, 'io err', err.message);
            this.transition('stop');
            this.handle('result', err.message);
          },
          states: {
            init: {_onEnter: function() {
                fsm = this;
                console.log('start xfer fsm', txn, ' with file type', file.type, 'size', file.size);
                if (file.size > MAX_GET_FILE_SIZE) {
                  fsm.transition('stop');
                  fsm.handle('result', 'file too large');
                  return;
                }
                this.type = file.type;
                this.size = file.size;
                this.offset = 0;
                this.res_buf = new Uint8Array(file.size);
                pipe.delegate.on(xfer_req(txn), function(length, buffer) {
                  fsm.handle('data', length, buffer);
                });
                pipe.delegate.once(xfer_end_req(txn), function(context) {
                  fsm.handle('end', context);
                });
                var len = write_header(pipe.buf, FLAG_ACK, ++pipe.seqno, txn, Cmd.xfer_start);
                console.log('sending xfer start ack, txn', txn);
                pipe.ws.send(pipe.buf.subarray(0, len));
                this.transition('wait_data');
              }},
            wait_data: {
              _onEnter: function() {
                this.timer = setTimeout(this.tmo, XFER_TMO);
                var self = this;
              },
              data: function(chunk_size, buffer) {
                this.res_buf.set(buffer, this.offset);
                clearTimeout(this.timer);
                this.timer = setTimeout(this.tmo, XFER_TMO);
                this.offset += chunk_size;
                var remaining = this.size - this.offset;
                var len = write_header(pipe.buf, FLAG_ACK, ++pipe.seqno, txn, Cmd.xfer);
                pipe.ws.send(pipe.buf.subarray(0, len));
                var p = Math.floor((fsm.offset * 100.0 / fsm.size));
                cb(undefined, p);
              },
              end: function(context) {
                console.log('end xfer fsm', txn, 'context', context);
                clearTimeout(this.timer);
                this.transition('stop');
                this.handle('result', undefined, context);
              }
            },
            stop: {result: function(err, context) {
                pipe.delegate.removeAllListeners(xfer_req(txn));
                pipe.delegate.removeAllListeners(xfer_end_req(txn));
                if (!err) {
                  console.log('xfer', txn, 'end', context);
                  var len = write_header(pipe.buf, FLAG_ACK, ++pipe.seqno, txn, Cmd.xfer_end);
                  console.log('sending xfer end ack, txn', txn);
                  pipe.ws.send(pipe.buf.subarray(0, len));
                  cb(undefined, 100, {
                    size: this.size,
                    type: this.type,
                    result: this.res_buf,
                    context: context
                  });
                } else {
                  var len = write_header(pipe.buf, 0, ++pipe.seqno, txn, Cmd.xfer_err, err);
                  console.log('sending xfer err, txn', txn);
                  pipe.ws.send(pipe.buf.subarray(0, len));
                  cb(err);
                }
              }}
          }
        });
      };
      EventPipe.prototype.leave = function(channel) {
        if (!this.ready) {
          console.log('not ready');
          return;
        }
        var p = write_header(this.buf, 0, ++this.seqno, 0, Cmd.leave, channel);
        this.ws.send(this.buf.subarray(0, p));
      };
      EventPipe.prototype._dispatch_event = function(buf) {
        var event = read_event(buf);
        if (event.data)
          this.delegate.emit(event.event, event.data);
        else
          this.delegate.emit(event.event);
      };
      EventPipe.prototype._up = function(e) {
        this.delegate.emit(e);
      };
      EventPipe.prototype._dispatch = function(data) {
        var hdr = read_header(data);
        switch (hdr.cmd) {
          case Cmd.open:
            if (hdr.flag & FLAG_ACK)
              this.fsm.handle('open_ack', hdr.ext);
            break;
          case Cmd.ping:
            if (hdr.flag & FLAG_ACK)
              this.fsm.handle('pong');
            break;
          case Cmd.close:
            this.fsm.handle('close');
            break;
          case Cmd.event:
            var ebuf = data.subarray(hdr.hlen);
            this._dispatch_event(ebuf);
            break;
          case Cmd.xfer_start:
            if (hdr.flag & FLAG_ACK)
              this.delegate.emit(xfer_start_ack(hdr.txn));
            else
              this.delegate.emit(xfer_start(hdr.txn), hdr.txn, hdr.ext);
            break;
          case Cmd.xfer_err:
            this.delegate.emit(xfer_err(hdr.txn), hdr.ext);
            break;
          case Cmd.xfer:
            if (hdr.flag & FLAG_ACK)
              this.delegate.emit(xfer_req_ack(hdr.txn));
            else
              this.delegate.emit(xfer_req(hdr.txn), hdr.ext_len, hdr.ext);
            break;
          case Cmd.xfer_end:
            if (hdr.flag & FLAG_ACK)
              this.delegate.emit(xfer_end_ack(hdr.txn));
            else
              this.delegate.emit(xfer_end_req(hdr.txn), hdr.ext);
            break;
          case Cmd.get_file:
            if (hdr.flag & FLAG_ACK)
              this.delegate.emit(xfer_getfile_ack(hdr.txn), hdr.ext);
            break;
          default:
            console.log('unknown command, header:', data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7], data[8]);
            break;
        }
      };
      EventPipe.prototype._ping = function() {
        if (this.poll) {
          console.debug("is poll will not _ping");
          this.fsm.handle('pong');
          return;
        }
        var p = write_header(this.buf, 0, ++this.seqno, 0, Cmd.ping);
        this.ws.send(this.buf.subarray(0, p));
      };
      EventPipe.prototype._fsm = function(opts) {
        var evp = this;
        var fsm = new machina.Fsm({
          initialState: "init",
          open: function() {
            var p = write_header(evp.buf, 0, ++evp.seqno, 0, Cmd.open, evp.namespace);
            evp.ws.send(evp.buf.subarray(0, p));
          },
          gen_interval: function(k) {
            var base = (Math.pow(2, k) - 1) * 30;
            if (base > 30000)
              base = 30000;
            if (base < 0)
              base = 0;
            return Math.random() * 1000 + 300 + base;
          },
          states: {
            init: {
              _onEnter: function() {
                evp.ready = false;
              },
              "start": function() {
                this.connect_attempt = 1;
                this.transition("connecting");
              }
            },
            connecting: {_onEnter: function() {
                console.log('try connection', evp.server_url, 'attemp', this.connect_attempt);
                evp.ready = false;
                evp.ws = new CurveWebSocket({
                  url: evp.server_url,
                  server_publicKey: evp.srv_pub,
                  poll: evp.poll,
                  ping_tmo: evp.ping_tmo
                });
                var self = this;
                evp.ws.on('open', function() {
                  self.connect_attempt = 1;
                  if (self.reconnect_timer)
                    clearTimeout(self.reconnect_timer);
                  evp.ws.on('message', function(data) {
                    evp._dispatch(data);
                  });
                  evp.ws.on('close', function() {
                    console.log('connection closed');
                    self.transition('disconnected');
                    evp._up('close');
                  });
                  evp.ws.on('error', function() {
                    console.log('ws error, state', evp.ws.readyState);
                    self.transition('disconnected');
                    evp._up('error');
                  });
                  self.open_retry = 0;
                  self.transition('wait_open');
                });
                var rec_tmo = evp.poll ? POLL_REC_TMO : this.gen_interval(this.connect_attempt);
                rec_tmo = 10 * 1000;
                console.log('connection timeout in', rec_tmo, "ms");
                this.reconnect_timer = setTimeout(function() {
                  self.connect_attempt++;
                  console.log('connection timeout');
                  self.transition('disconnected');
                }, rec_tmo);
              }},
            wait_open: {
              _onEnter: function() {
                if (this.open_retry > OPEN_RETRY) {
                  console.log('open reached max retry');
                  if (this.open_timer)
                    clearTimeout(this.open_timer);
                  this.handle('disconnected');
                } else {
                  this.open_retry++;
                  this.open();
                  if (this.open_timer)
                    clearTimeout(this.open_timer);
                  var self = this;
                  this.open_timer = setTimeout(function() {
                    self.transition('wait_open');
                  }, OPEN_WAIT);
                }
              },
              "open_ack": function(pipe_id) {
                console.log('pipe opened with id', pipe_id);
                clearTimeout(this.open_timer);
                evp.id = pipe_id;
                evp.ready = true;
                var hb_interval = (opts.hb_int ? opts.hb_int : DEFAULT_HB_INTERVAL);
                this.tx_timer = setInterval(function() {
                  evp._ping();
                }, hb_interval);
                evp.delegate.emit('connect');
                this.transition("connected");
              }
            },
            connected: {
              _onEnter: function() {
                var self = this;
                this.hb_tmo = (opts.hb_tmo ? opts.hb_tmo : DEFAULT_HB_TMO);
                this.rx_timer = setTimeout(function() {
                  self.handle("tmo");
                }, self.hb_tmo);
              },
              "pong": function() {
                clearTimeout(this.rx_timer);
                var self = this;
                this.rx_timer = setTimeout(function() {
                  self.handle("tmo");
                }, self.hb_tmo);
              },
              "close": function() {
                console.log('tear down connection');
                this.transition("disconnected");
              },
              "tmo": function() {
                console.log('server may have disconnected');
                this.transition("disconnected");
              }
            },
            disconnected: {_onEnter: function() {
                console.log('socket disconnected or fail to connect');
                if (evp.ws)
                  evp.ws.close();
                clearTimeout(this.rx_timer);
                clearInterval(this.tx_timer);
                var self = this;
                setTimeout(function() {
                  self.transition("connecting");
                }, RECONNECT_WAIT);
              }}
          }
        });
        return fsm;
      };
      var read_event = function(buf) {
        var view = new BufferView(buf);
        var event = view.readUInt16();
        var data = undefined;
        var len = view.readUInt32();
        if (len > 0) {
          var type = view.readUInt8();
          switch (type) {
            case OBJ_TYPE.string:
              data = view.readUTF8(len);
              break;
            case OBJ_TYPE.blob:
              data = view.slice(view.offset, view.offset + len);
              break;
            case OBJ_TYPE.json:
              data = view.readUTF8(len);
              data = JSON.parse(data);
              break;
            default:
              console.log('unknow data type', type);
          }
        }
        console.log('read_event', event, 'data', data);
        return {
          event: event,
          data: data
        };
      };
      var write_event = function(buf, event, payload) {
        var view = new BufferView(buf);
        var start = view.offset;
        view.writeUInt16(event);
        var len = 0;
        if (payload) {
          if (payload.constructor === String) {
            var a = view.decodeUTF8(payload);
            len = a.byteLength;
            view.writeUInt32(len);
            if (len > 0) {
              view.writeUInt8(OBJ_TYPE.string);
              view.append(a);
            }
          } else if (payload instanceof Uint8Array) {
            len = payload.byteLength;
            view.writeUInt32(len);
            if (len > 0) {
              view.writeUInt8(OBJ_TYPE.blob);
              view.append(payload);
            }
          } else {
            var json_string = JSON.stringify(payload);
            var a = view.decodeUTF8(json_string);
            len = a.byteLength;
            view.writeUInt32(len);
            if (len > 0) {
              view.writeUInt8(OBJ_TYPE.json);
              view.append(a);
            }
          }
        } else {
          view.writeUInt32(0);
        }
        return view.offset - start;
      };
      var xfer_start = function(txn) {
        return '_xfer_start_' + txn;
      };
      var xfer_start_ack = function(txn) {
        return '_xfer_start_ack_' + txn;
      };
      var xfer_end_ack = function(txn) {
        return '_xfer_end_ack_' + txn;
      };
      var xfer_end_req = function(txn) {
        return '_xfer_end_req_' + txn;
      };
      var xfer_getfile_ack = function(txn) {
        return '_xfer_getfile_ack_' + txn;
      };
      var xfer_err = function(txn) {
        return '_xfer_err_' + txn;
      };
      var xfer_req = function(txn) {
        return '_xfer_req_' + txn;
      };
      var xfer_req_ack = function(txn) {
        return '_xfer_ack_' + txn;
      };
      var next_txn = function() {
        return ++txn_num;
      };
      var once = function(source, evt, tmo, cb) {
        var timer;
        var listener = function() {
          if (timer)
            clearTimeout(timer);
          if (arguments.length > 0) {
            var args = [undefined].concat(Array.prototype.slice.call(arguments));
            cb.apply(this, args);
          } else
            cb();
        };
        source.once(evt, listener);
        timer = setTimeout(function() {
          source.removeListener(evt, listener);
          cb('timeout');
        }, tmo);
      };
      var read_header = function(data) {
        var view = new BufferView(data);
        var v = view.readUInt8();
        var flag = view.readUInt16();
        var seqno = view.readUInt32();
        var txn = view.readUInt16();
        var c = view.readUInt8();
        var ext_len = view.readUInt16();
        var ext = undefined;
        var hdr_len = HEADER_MIN_LEN;
        if (ext_len > 0) {
          hdr_len = HEADER_MIN_LEN + ext_len + 1;
          var ext_type = view.readUInt8();
          if (ext_type === OBJ_TYPE.string)
            ext = view.readUTF8(ext_len);
          else if (ext_type === OBJ_TYPE.json)
            ext = JSON.parse(view.readUTF8(ext_len));
          else if (ext_type === OBJ_TYPE.blob)
            ext = view.slice(Off.EXT, Off.EXT + ext_len);
          else
            comnsole.log('unknown ext type', ext_type);
        }
        return {
          ver: v,
          flag: flag,
          seq: seqno,
          txn: txn,
          cmd: c,
          ext: ext,
          ext_len: ext_len,
          hlen: hdr_len
        };
      };
      var write_header = function(buf, flag, seqno, txn, cmd, ext) {
        var view = new BufferView(buf);
        view.writeUInt8(EVP_VER);
        view.writeUInt16(flag);
        view.writeUInt32(seqno);
        view.writeUInt16(txn);
        view.writeUInt8(cmd);
        var ext_len = 0;
        var hdr_len = HEADER_MIN_LEN;
        if (!ext) {
          view.writeUInt16(0);
        } else {
          if (ext.constructor === String) {
            var a = view.decodeUTF8(ext);
            ext_len = a.byteLength;
            view.writeUInt16(ext_len);
            if (ext_len > 0) {
              view.writeUInt8(OBJ_TYPE.string);
              view.append(a);
              hdr_len = HEADER_MIN_LEN + ext_len + 1;
            } else
              console.log('write_header:ext', ext, 'length=0');
          } else if (ext instanceof Uint8Array) {
            ext_len = ext.byteLength;
            view.writeUInt16(ext_len);
            if (ext_len > 0) {
              view.writeUInt8(OBJ_TYPE.blob);
              view.append(ext);
              hdr_len = HEADER_MIN_LEN + ext_len + 1;
            } else
              console.log('write_header:ext', ext, 'length=0');
          } else {
            var json_string = JSON.stringify(ext);
            var a = view.decodeUTF8(json_string);
            ext_len = a.byteLength;
            view.writeUInt16(ext_len);
            if (ext_len > 0) {
              view.writeUInt8(OBJ_TYPE.json);
              view.append(a);
              hdr_len = HEADER_MIN_LEN + ext_len + 1;
            } else
              console.log('write_header:ext', ext, 'length=0');
          }
        }
        return hdr_len;
      };
      module.exports = event_client;
    }, {
      "../def/evt": 136,
      "./buffer-view": 137,
      "./curvews-client": 138,
      "events": 81,
      "machina": 142,
      "tweetnacl": 144
    }],
    140: [function(require, module, exports) {
      module.exports = {
        VER: 1,
        CONN_SYNC: 1,
        CONN_SYNC_ACK: 2,
        CONN_ACK: 3,
        DCONN: 4,
        PING: 5,
        PING_ACK: 6,
        TERM: 7,
        EVT: 8,
        RECONN: 9
      };
    }, {}],
    141: [function(require, module, exports) {
      var events = require('events'),
          Consts = require('./poll-common'),
          machina = require('machina'),
          BufferView = require('./buffer-view'),
          util = require('util');
      const OPEN_TMO = 5000;
      const RETRY_INTERVAL = 5000;
      const WAIT_TERM_TMO = 5000;
      function write_header(cmd, id, data, buf) {
        buf.reset();
        buf.writeUInt8(Consts.VER);
        buf.writeUInt8(cmd);
        if (id) {
          buf.writeUInt16(id);
          if (data)
            buf.append(data);
        }
        return buf.offset;
      }
      function read_header(buf) {
        var ver = buf.readUInt8();
        var cmd = buf.readUInt8();
        var id = undefined;
        var data = undefined;
        if (buf.length() >= 4) {
          id = buf.readUInt16();
          if (buf.length() > 4)
            data = buf.slice(buf.offset, buf.length());
        }
        return {
          ver: ver,
          cmd: cmd,
          id: id,
          b: data
        };
      }
      var fsm;
      function PollSocket(opts) {
        this.url = opts.url;
        this.ping_tmo = opts.ping_tmo;
        fsm = this.create_fsm(this);
      }
      util.inherits(PollSocket, events.EventEmitter);
      PollSocket.prototype.send = function(data) {
        fsm.handle('send', data);
      };
      PollSocket.prototype.addEventListener = function(event, listener) {
        this.on(event, listener);
      };
      PollSocket.prototype.error = function(id) {
        console.log('error xhr ', id);
        fsm.handle('error', id);
      };
      PollSocket.prototype.result = function(id, buf) {
        var p = read_header(buf);
        var cmd = p.cmd;
        var data = p.b;
        switch (cmd) {
          case Consts.CONN_SYNC_ACK:
            fsm.handle('conn_sync_ack', id, p.id);
            break;
          case Consts.PING:
            fsm.handle('ping', id, p.id);
            break;
          case Consts.TERM:
            fsm.handle('term', id, p.id);
            break;
          case Consts.EVT:
            fsm.handle('event', id, p.id, data);
            break;
          default:
            console.log('unknown command', cmd);
        }
      };
      var xhr_id = 0;
      function create_xhr(fsm, err_cb, res_cb) {
        fsm.prev_id = fsm.id;
        fsm.prev_xhr = fsm.xhr;
        fsm.id = ++xhr_id;
        console.log('creating xhr with id', fsm.id);
        var xhr = new XMLHttpRequest();
        var x_id = fsm.id;
        xhr.addEventListener('error', function() {
          console.log('xhr', x_id, 'error', arguments);
          err_cb(x_id);
        });
        xhr.onreadystatechange = function() {
          if (xhr.readyState == 4) {
            if (xhr.status == 200) {
              var bv = new BufferView(new Uint8Array(xhr.response));
              res_cb(x_id, bv);
            } else {
              console.log('xhr', x_id, 'error status', xhr.status);
              err_cb(x_id);
            }
          }
        };
        xhr.responseType = "arraybuffer";
        fsm.xhr = xhr;
      }
      function xhr_send(xhr, url, buf, cmd, id, data) {
        xhr.open('POST', url);
        var len = write_header(cmd, id, data, buf);
        xhr.setRequestHeader('Content-Type', 'application/octet-stream');
        xhr.send(buf.slice(0, len));
      }
      PollSocket.prototype.create_fsm = function(socket) {
        var buf = new BufferView(new Uint8Array(64 * 1024));
        var m = new machina.Fsm({
          initialState: "init",
          states: {
            init: {
              _onEnter: function() {
                this.connected = false;
                this.handle('restart');
              },
              restart: function() {
                create_xhr(this, socket.error, socket.result);
                xhr_send(this.xhr, socket.url, buf, Consts.CONN_SYNC);
                var self = this;
                this.open_timer = setTimeout(function() {
                  console.log('open timeout for xhr', self.id);
                  self.xhr.abort();
                  setTimeout(function() {
                    console.log('retry connection');
                    self.handle('restart');
                  }, RETRY_INTERVAL);
                }, OPEN_TMO);
              },
              conn_sync_ack: function(xhr_id, reg_id) {
                if (xhr_id == this.id) {
                  console.log('received conn_sync_ack with reg id', reg_id);
                  socket.id = reg_id;
                  clearTimeout(this.open_timer);
                  create_xhr(this, socket.error, socket.result);
                  xhr_send(this.xhr, socket.url, buf, Consts.CONN_ACK, reg_id);
                  this.transition('connected');
                } else
                  console.log('received conn_sync_ack with wrong xhr id, expected', this.id, 'incommning', xhr_id);
              },
              error: function(xhr_id) {}
            },
            connected: {
              _onEnter: function() {
                var self = this;
                this.ping_timer = setTimeout(function() {
                  self.handle('tmo');
                }, socket.ping_tmo);
                if (!this.connected) {
                  socket.emit('open', socket);
                  this.connected = true;
                }
              },
              tmo: function() {
                console.log('server ping timeout');
                this.handle('error', 'na');
              },
              ping: function(xhr_id, reg_id) {
                if (xhr_id == this.id && socket.id == reg_id) {
                  console.log('received ping');
                  clearTimeout(this.ping_timer);
                  create_xhr(this, socket.error, socket.result);
                  xhr_send(this.xhr, socket.url, buf, Consts.PING_ACK, reg_id);
                  console.debug('sent PING_ACK for ' + reg_id);
                  var self = this;
                  this.ping_timer = setTimeout(function() {
                    self.handle('tmo');
                  }, socket.ping_tmo);
                } else
                  console.log('received ping with wrong xhr id or reg id, expected:', this.id, socket.id, 'incommning', xhr_id, reg_id);
              },
              send: function(data) {
                console.debug('creating new xhr for sending');
                create_xhr(this, socket.error, socket.result);
                xhr_send(this.xhr, socket.url, buf, Consts.EVT, socket.id, data);
                clearTimeout(this.ping_timer);
                this.transition('wait_term');
              },
              event: function(xhr_id, reg_id, data) {
                if (xhr_id == this.id && socket.id == reg_id) {
                  console.debug('received event');
                  clearTimeout(this.ping_timer);
                  create_xhr(this, socket.error, socket.result);
                  xhr_send(this.xhr, socket.url, buf, Consts.RECONN, reg_id);
                  console.debug('sent RECONN for ' + reg_id);
                  var self = this;
                  this.ping_timer = setTimeout(function() {
                    self.handle('tmo');
                  }, socket.ping_tmo);
                  socket.emit('message', {data: data});
                } else
                  console.log('received event with wrong xhr id or reg id, expected:', this.id, socket.id, 'incommning', xhr_id, reg_id);
              },
              error: function(xhr_id) {
                console.log('xhr error in connected state');
                this.xhr.abort();
                clearTimeout(this.ping_timer);
                if (this.connected) {
                  this.connected = false;
                  socket.emit('close', socket);
                }
              }
            },
            wait_term: {
              _onEnter: function() {
                var self = this;
                this.wait_term_tmr = setTimeout(function() {
                  console.log('timeout waiting for term');
                  self.handle('error');
                }, WAIT_TERM_TMO);
              },
              term: function(xhr_id, reg_id) {
                if (xhr_id == this.prev_id && socket.id == reg_id) {
                  console.log('received term');
                  clearTimeout(this.wait_term_tmr);
                  this.transition('connected');
                } else
                  console.log('received term with wrong xhr id or reg id, expected:', this.prev_id, socket.id, 'incommning', xhr_id, reg_id);
              },
              error: function(xhr_id) {
                console.log('xhr error in wait-term state, connected');
                this.prev_xhr.abort();
                this.xhr.abort();
                if (this.connected) {
                  this.connected = false;
                  socket.emit('close');
                }
              }
            }
          }
        });
        return m;
      };
      PollSocket.prototype.close = function() {};
      module.exports = PollSocket;
    }, {
      "./buffer-view": 137,
      "./poll-common": 140,
      "events": 81,
      "machina": 142,
      "util": 133
    }],
    142: [function(require, module, exports) {
      (function(root, factory) {
        if (typeof define === "function" && define.amd) {
          define(["lodash"], function(_) {
            return factory(_, root);
          });
        } else if (typeof module === "object" && module.exports) {
          module.exports = factory(require("lodash"));
        } else {
          root.machina = factory(root._, root);
        }
      }(this, function(_, global, undefined) {
        var slice = [].slice;
        var NEXT_TRANSITION = "transition";
        var NEXT_HANDLER = "handler";
        var HANDLING = "handling";
        var HANDLED = "handled";
        var NO_HANDLER = "nohandler";
        var TRANSITION = "transition";
        var INVALID_STATE = "invalidstate";
        var DEFERRED = "deferred";
        var NEW_FSM = "newfsm";
        var utils = {
          makeFsmNamespace: (function() {
            var machinaCount = 0;
            return function() {
              return "fsm." + machinaCount++;
            };
          })(),
          getDefaultOptions: function() {
            return {
              initialState: "uninitialized",
              eventListeners: {"*": []},
              states: {},
              eventQueue: [],
              namespace: utils.makeFsmNamespace(),
              targetReplayState: "",
              state: undefined,
              priorState: undefined,
              _priorAction: "",
              _currentAction: ""
            };
          }
        };
        if (!_.deepExtend) {
          var behavior = {
            "*": function(obj, sourcePropKey, sourcePropVal) {
              obj[sourcePropKey] = sourcePropVal;
            },
            "object": function(obj, sourcePropKey, sourcePropVal) {
              obj[sourcePropKey] = deepExtend({}, obj[sourcePropKey] || {}, sourcePropVal);
            },
            "array": function(obj, sourcePropKey, sourcePropVal) {
              obj[sourcePropKey] = [];
              _.each(sourcePropVal, function(item, idx) {
                behavior[getHandlerName(item)](obj[sourcePropKey], idx, item);
              }, this);
            }
          },
              getActualType = function(val) {
                if (_.isArray(val)) {
                  return "array";
                }
                if (_.isDate(val)) {
                  return "date";
                }
                if (_.isRegExp(val)) {
                  return "regex";
                }
                return typeof val;
              },
              getHandlerName = function(val) {
                var propType = getActualType(val);
                return behavior[propType] ? propType : "*";
              },
              deepExtend = function(obj) {
                _.each(slice.call(arguments, 1), function(source) {
                  _.each(source, function(sourcePropVal, sourcePropKey) {
                    behavior[getHandlerName(sourcePropVal)](obj, sourcePropKey, sourcePropVal);
                  });
                });
                return obj;
              };
          _.mixin({deepExtend: deepExtend});
        }
        var Fsm = function(options) {
          _.extend(this, options);
          _.defaults(this, utils.getDefaultOptions());
          this.initialize.apply(this, arguments);
          machina.emit(NEW_FSM, this);
          if (this.initialState) {
            this.transition(this.initialState);
          }
        };
        _.extend(Fsm.prototype, {
          initialize: function() {},
          emit: function(eventName) {
            var args = arguments;
            if (this.eventListeners["*"]) {
              _.each(this.eventListeners["*"], function(callback) {
                try {
                  callback.apply(this, slice.call(args, 0));
                } catch (exception) {
                  if (console && typeof console.log !== "undefined") {
                    console.log(exception.stack);
                  }
                }
              }, this);
            }
            if (this.eventListeners[eventName]) {
              _.each(this.eventListeners[eventName], function(callback) {
                try {
                  callback.apply(this, slice.call(args, 1));
                } catch (exception) {
                  if (console && typeof console.log !== "undefined") {
                    console.log(exception.stack);
                  }
                }
              }, this);
            }
          },
          handle: function(inputType) {
            if (!this.inExitHandler) {
              var states = this.states,
                  current = this.state,
                  args = slice.call(arguments, 0),
                  handlerName,
                  handler,
                  catchAll,
                  action;
              this.currentActionArgs = args;
              if (states[current][inputType] || states[current]["*"] || this["*"]) {
                handlerName = states[current][inputType] ? inputType : "*";
                catchAll = handlerName === "*";
                if (states[current][handlerName]) {
                  handler = states[current][handlerName];
                  action = current + "." + handlerName;
                } else {
                  handler = this["*"];
                  action = "*";
                }
                if (!this._currentAction)
                  this._currentAction = action;
                this.emit.call(this, HANDLING, {
                  inputType: inputType,
                  args: args.slice(1)
                });
                if (_.isFunction(handler))
                  handler = handler.apply(this, catchAll ? args : args.slice(1));
                if (_.isString(handler))
                  this.transition(handler);
                this.emit.call(this, HANDLED, {
                  inputType: inputType,
                  args: args.slice(1)
                });
                this._priorAction = this._currentAction;
                this._currentAction = "";
                this.processQueue(NEXT_HANDLER);
              } else {
                this.emit.call(this, NO_HANDLER, {
                  inputType: inputType,
                  args: args.slice(1)
                });
              }
              this.currentActionArgs = undefined;
              return handler;
            }
          },
          transition: function(newState) {
            if (!this.inExitHandler && newState !== this.state) {
              var curState = this.state;
              if (this.states[newState]) {
                if (curState && this.states[curState] && this.states[curState]._onExit) {
                  this.inExitHandler = true;
                  this.states[curState]._onExit.call(this);
                  this.inExitHandler = false;
                }
                this.targetReplayState = newState;
                this.priorState = curState;
                this.state = newState;
                this.emit.call(this, TRANSITION, {
                  fromState: this.priorState,
                  action: this._currentAction,
                  toState: newState
                });
                if (this.states[newState]._onEnter) {
                  this.states[newState]._onEnter.call(this);
                }
                if (this.targetReplayState === newState) {
                  this.processQueue(NEXT_TRANSITION);
                }
                return;
              }
              this.emit.call(this, INVALID_STATE, {
                state: this.state,
                attemptedState: newState
              });
            }
          },
          processQueue: function(type) {
            var filterFn = type === NEXT_TRANSITION ? function(item) {
              return item.type === NEXT_TRANSITION && ((!item.untilState) || (item.untilState === this.state));
            } : function(item) {
              return item.type === NEXT_HANDLER;
            };
            var toProcess = _.filter(this.eventQueue, filterFn, this);
            this.eventQueue = _.difference(this.eventQueue, toProcess);
            _.each(toProcess, function(item) {
              this.handle.apply(this, item.args);
            }, this);
          },
          clearQueue: function(type, name) {
            if (!type) {
              this.eventQueue = [];
            } else {
              var filter;
              if (type === NEXT_TRANSITION) {
                filter = function(evnt) {
                  return (evnt.type === NEXT_TRANSITION && (name ? evnt.untilState === name : true));
                };
              } else if (type === NEXT_HANDLER) {
                filter = function(evnt) {
                  return evnt.type === NEXT_HANDLER;
                };
              }
              this.eventQueue = _.filter(this.eventQueue, filter);
            }
          },
          deferUntilTransition: function(stateName) {
            if (this.currentActionArgs) {
              var queued = {
                type: NEXT_TRANSITION,
                untilState: stateName,
                args: this.currentActionArgs
              };
              this.eventQueue.push(queued);
              this.emit.call(this, DEFERRED, {
                state: this.state,
                queuedArgs: queued
              });
            }
          },
          deferUntilNextHandler: function() {
            if (this.currentActionArgs) {
              var queued = {
                type: NEXT_HANDLER,
                args: this.currentActionArgs
              };
              this.eventQueue.push(queued);
              this.emit.call(this, DEFERRED, {
                state: this.state,
                queuedArgs: queued
              });
            }
          },
          on: function(eventName, callback) {
            var self = this;
            if (!self.eventListeners[eventName]) {
              self.eventListeners[eventName] = [];
            }
            self.eventListeners[eventName].push(callback);
            return {
              eventName: eventName,
              callback: callback,
              off: function() {
                self.off(eventName, callback);
              }
            };
          },
          off: function(eventName, callback) {
            if (!eventName) {
              this.eventListeners = {};
            } else {
              if (this.eventListeners[eventName]) {
                if (callback) {
                  this.eventListeners[eventName] = _.without(this.eventListeners[eventName], callback);
                } else {
                  this.eventListeners[eventName] = [];
                }
              }
            }
          }
        });
        Fsm.prototype.trigger = Fsm.prototype.emit;
        var _machKeys = ["states", "initialState"];
        var inherits = function(parent, protoProps, staticProps) {
          var fsm;
          var machObj = {};
          var ctor = function() {};
          if (protoProps && protoProps.hasOwnProperty('constructor')) {
            fsm = protoProps.constructor;
          } else {
            fsm = function() {
              var args = slice.call(arguments, 0);
              args[0] = args[0] || {};
              var blendedState;
              var instanceStates = args[0].states || {};
              blendedState = _.deepExtend(_.cloneDeep(machObj), {states: instanceStates});
              blendedState.initialState = args[0].initialState || this.initialState;
              _.extend(args[0], blendedState);
              parent.apply(this, args);
            };
          }
          _.deepExtend(fsm, parent);
          ctor.prototype = parent.prototype;
          fsm.prototype = new ctor();
          if (protoProps) {
            _.extend(fsm.prototype, protoProps);
            _.deepExtend(machObj, _.transform(protoProps, function(accum, val, key) {
              if (_machKeys.indexOf(key) !== -1) {
                accum[key] = val;
              }
            }));
          }
          if (staticProps) {
            _.deepExtend(fsm, staticProps);
          }
          fsm.prototype.constructor = fsm;
          fsm.__super__ = parent.prototype;
          return fsm;
        };
        Fsm.extend = function(protoProps, classProps) {
          var fsm = inherits(this, protoProps, classProps);
          fsm.extend = this.extend;
          return fsm;
        };
        var machina = {
          Fsm: Fsm,
          utils: utils,
          on: function(eventName, callback) {
            if (!this.eventListeners[eventName]) {
              this.eventListeners[eventName] = [];
            }
            this.eventListeners[eventName].push(callback);
            return callback;
          },
          off: function(eventName, callback) {
            if (this.eventListeners[eventName]) {
              this.eventListeners[eventName] = _.without(this.eventListeners[eventName], callback);
            }
          },
          trigger: function(eventName) {
            var i = 0,
                len,
                args = arguments,
                listeners = this.eventListeners[eventName] || [];
            if (listeners && listeners.length) {
              _.each(listeners, function(callback) {
                callback.apply(null, slice.call(args, 1));
              });
            }
          },
          eventListeners: {newFsm: []}
        };
        machina.emit = machina.trigger;
        return machina;
      }));
    }, {"lodash": 143}],
    143: [function(require, module, exports) {
      (function(global) {
        ;
        (function() {
          var undefined;
          var arrayPool = [],
              objectPool = [];
          var idCounter = 0;
          var keyPrefix = +new Date + '';
          var largeArraySize = 75;
          var maxPoolSize = 40;
          var whitespace = (' \t\x0B\f\xA0\ufeff' + '\n\r\u2028\u2029' + '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000');
          var reEmptyStringLeading = /\b__p \+= '';/g,
              reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
              reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
          var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
          var reFlags = /\w*$/;
          var reFuncName = /^\s*function[ \n\r\t]+\w/;
          var reInterpolate = /<%=([\s\S]+?)%>/g;
          var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');
          var reNoMatch = /($^)/;
          var reThis = /\bthis\b/;
          var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;
          var contextProps = ['Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object', 'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN', 'parseInt', 'setTimeout'];
          var templateCounter = 0;
          var argsClass = '[object Arguments]',
              arrayClass = '[object Array]',
              boolClass = '[object Boolean]',
              dateClass = '[object Date]',
              funcClass = '[object Function]',
              numberClass = '[object Number]',
              objectClass = '[object Object]',
              regexpClass = '[object RegExp]',
              stringClass = '[object String]';
          var cloneableClasses = {};
          cloneableClasses[funcClass] = false;
          cloneableClasses[argsClass] = cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] = cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;
          var debounceOptions = {
            'leading': false,
            'maxWait': 0,
            'trailing': false
          };
          var descriptor = {
            'configurable': false,
            'enumerable': false,
            'value': null,
            'writable': false
          };
          var objectTypes = {
            'boolean': false,
            'function': true,
            'object': true,
            'number': false,
            'string': false,
            'undefined': false
          };
          var stringEscapes = {
            '\\': '\\',
            "'": "'",
            '\n': 'n',
            '\r': 'r',
            '\t': 't',
            '\u2028': 'u2028',
            '\u2029': 'u2029'
          };
          var root = (objectTypes[typeof window] && window) || this;
          var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
          var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
          var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;
          var freeGlobal = objectTypes[typeof global] && global;
          if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
            root = freeGlobal;
          }
          function baseIndexOf(array, value, fromIndex) {
            var index = (fromIndex || 0) - 1,
                length = array ? array.length : 0;
            while (++index < length) {
              if (array[index] === value) {
                return index;
              }
            }
            return -1;
          }
          function cacheIndexOf(cache, value) {
            var type = typeof value;
            cache = cache.cache;
            if (type == 'boolean' || value == null) {
              return cache[value] ? 0 : -1;
            }
            if (type != 'number' && type != 'string') {
              type = 'object';
            }
            var key = type == 'number' ? value : keyPrefix + value;
            cache = (cache = cache[type]) && cache[key];
            return type == 'object' ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1) : (cache ? 0 : -1);
          }
          function cachePush(value) {
            var cache = this.cache,
                type = typeof value;
            if (type == 'boolean' || value == null) {
              cache[value] = true;
            } else {
              if (type != 'number' && type != 'string') {
                type = 'object';
              }
              var key = type == 'number' ? value : keyPrefix + value,
                  typeCache = cache[type] || (cache[type] = {});
              if (type == 'object') {
                (typeCache[key] || (typeCache[key] = [])).push(value);
              } else {
                typeCache[key] = true;
              }
            }
          }
          function charAtCallback(value) {
            return value.charCodeAt(0);
          }
          function compareAscending(a, b) {
            var ac = a.criteria,
                bc = b.criteria,
                index = -1,
                length = ac.length;
            while (++index < length) {
              var value = ac[index],
                  other = bc[index];
              if (value !== other) {
                if (value > other || typeof value == 'undefined') {
                  return 1;
                }
                if (value < other || typeof other == 'undefined') {
                  return -1;
                }
              }
            }
            return a.index - b.index;
          }
          function createCache(array) {
            var index = -1,
                length = array.length,
                first = array[0],
                mid = array[(length / 2) | 0],
                last = array[length - 1];
            if (first && typeof first == 'object' && mid && typeof mid == 'object' && last && typeof last == 'object') {
              return false;
            }
            var cache = getObject();
            cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;
            var result = getObject();
            result.array = array;
            result.cache = cache;
            result.push = cachePush;
            while (++index < length) {
              result.push(array[index]);
            }
            return result;
          }
          function escapeStringChar(match) {
            return '\\' + stringEscapes[match];
          }
          function getArray() {
            return arrayPool.pop() || [];
          }
          function getObject() {
            return objectPool.pop() || {
              'array': null,
              'cache': null,
              'criteria': null,
              'false': false,
              'index': 0,
              'null': false,
              'number': null,
              'object': null,
              'push': null,
              'string': null,
              'true': false,
              'undefined': false,
              'value': null
            };
          }
          function releaseArray(array) {
            array.length = 0;
            if (arrayPool.length < maxPoolSize) {
              arrayPool.push(array);
            }
          }
          function releaseObject(object) {
            var cache = object.cache;
            if (cache) {
              releaseObject(cache);
            }
            object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
            if (objectPool.length < maxPoolSize) {
              objectPool.push(object);
            }
          }
          function slice(array, start, end) {
            start || (start = 0);
            if (typeof end == 'undefined') {
              end = array ? array.length : 0;
            }
            var index = -1,
                length = end - start || 0,
                result = Array(length < 0 ? 0 : length);
            while (++index < length) {
              result[index] = array[start + index];
            }
            return result;
          }
          function runInContext(context) {
            context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;
            var Array = context.Array,
                Boolean = context.Boolean,
                Date = context.Date,
                Function = context.Function,
                Math = context.Math,
                Number = context.Number,
                Object = context.Object,
                RegExp = context.RegExp,
                String = context.String,
                TypeError = context.TypeError;
            var arrayRef = [];
            var objectProto = Object.prototype;
            var oldDash = context._;
            var toString = objectProto.toString;
            var reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\]\\]/g, '\\$&').replace(/toString| for [^\]]+/g, '.*?') + '$');
            var ceil = Math.ceil,
                clearTimeout = context.clearTimeout,
                floor = Math.floor,
                fnToString = Function.prototype.toString,
                getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
                hasOwnProperty = objectProto.hasOwnProperty,
                push = arrayRef.push,
                setTimeout = context.setTimeout,
                splice = arrayRef.splice,
                unshift = arrayRef.unshift;
            var defineProperty = (function() {
              try {
                var o = {},
                    func = isNative(func = Object.defineProperty) && func,
                    result = func(o, o, o) && func;
              } catch (e) {}
              return result;
            }());
            var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
                nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
                nativeIsFinite = context.isFinite,
                nativeIsNaN = context.isNaN,
                nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
                nativeMax = Math.max,
                nativeMin = Math.min,
                nativeParseInt = context.parseInt,
                nativeRandom = Math.random;
            var ctorByClass = {};
            ctorByClass[arrayClass] = Array;
            ctorByClass[boolClass] = Boolean;
            ctorByClass[dateClass] = Date;
            ctorByClass[funcClass] = Function;
            ctorByClass[objectClass] = Object;
            ctorByClass[numberClass] = Number;
            ctorByClass[regexpClass] = RegExp;
            ctorByClass[stringClass] = String;
            function lodash(value) {
              return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__')) ? value : new lodashWrapper(value);
            }
            function lodashWrapper(value, chainAll) {
              this.__chain__ = !!chainAll;
              this.__wrapped__ = value;
            }
            lodashWrapper.prototype = lodash.prototype;
            var support = lodash.support = {};
            support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);
            support.funcNames = typeof Function.name == 'string';
            lodash.templateSettings = {
              'escape': /<%-([\s\S]+?)%>/g,
              'evaluate': /<%([\s\S]+?)%>/g,
              'interpolate': reInterpolate,
              'variable': '',
              'imports': {'_': lodash}
            };
            function baseBind(bindData) {
              var func = bindData[0],
                  partialArgs = bindData[2],
                  thisArg = bindData[4];
              function bound() {
                if (partialArgs) {
                  var args = slice(partialArgs);
                  push.apply(args, arguments);
                }
                if (this instanceof bound) {
                  var thisBinding = baseCreate(func.prototype),
                      result = func.apply(thisBinding, args || arguments);
                  return isObject(result) ? result : thisBinding;
                }
                return func.apply(thisArg, args || arguments);
              }
              setBindData(bound, bindData);
              return bound;
            }
            function baseClone(value, isDeep, callback, stackA, stackB) {
              if (callback) {
                var result = callback(value);
                if (typeof result != 'undefined') {
                  return result;
                }
              }
              var isObj = isObject(value);
              if (isObj) {
                var className = toString.call(value);
                if (!cloneableClasses[className]) {
                  return value;
                }
                var ctor = ctorByClass[className];
                switch (className) {
                  case boolClass:
                  case dateClass:
                    return new ctor(+value);
                  case numberClass:
                  case stringClass:
                    return new ctor(value);
                  case regexpClass:
                    result = ctor(value.source, reFlags.exec(value));
                    result.lastIndex = value.lastIndex;
                    return result;
                }
              } else {
                return value;
              }
              var isArr = isArray(value);
              if (isDeep) {
                var initedStack = !stackA;
                stackA || (stackA = getArray());
                stackB || (stackB = getArray());
                var length = stackA.length;
                while (length--) {
                  if (stackA[length] == value) {
                    return stackB[length];
                  }
                }
                result = isArr ? ctor(value.length) : {};
              } else {
                result = isArr ? slice(value) : assign({}, value);
              }
              if (isArr) {
                if (hasOwnProperty.call(value, 'index')) {
                  result.index = value.index;
                }
                if (hasOwnProperty.call(value, 'input')) {
                  result.input = value.input;
                }
              }
              if (!isDeep) {
                return result;
              }
              stackA.push(value);
              stackB.push(result);
              (isArr ? forEach : forOwn)(value, function(objValue, key) {
                result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
              });
              if (initedStack) {
                releaseArray(stackA);
                releaseArray(stackB);
              }
              return result;
            }
            function baseCreate(prototype, properties) {
              return isObject(prototype) ? nativeCreate(prototype) : {};
            }
            if (!nativeCreate) {
              baseCreate = (function() {
                function Object() {}
                return function(prototype) {
                  if (isObject(prototype)) {
                    Object.prototype = prototype;
                    var result = new Object;
                    Object.prototype = null;
                  }
                  return result || context.Object();
                };
              }());
            }
            function baseCreateCallback(func, thisArg, argCount) {
              if (typeof func != 'function') {
                return identity;
              }
              if (typeof thisArg == 'undefined' || !('prototype' in func)) {
                return func;
              }
              var bindData = func.__bindData__;
              if (typeof bindData == 'undefined') {
                if (support.funcNames) {
                  bindData = !func.name;
                }
                bindData = bindData || !support.funcDecomp;
                if (!bindData) {
                  var source = fnToString.call(func);
                  if (!support.funcNames) {
                    bindData = !reFuncName.test(source);
                  }
                  if (!bindData) {
                    bindData = reThis.test(source);
                    setBindData(func, bindData);
                  }
                }
              }
              if (bindData === false || (bindData !== true && bindData[1] & 1)) {
                return func;
              }
              switch (argCount) {
                case 1:
                  return function(value) {
                    return func.call(thisArg, value);
                  };
                case 2:
                  return function(a, b) {
                    return func.call(thisArg, a, b);
                  };
                case 3:
                  return function(value, index, collection) {
                    return func.call(thisArg, value, index, collection);
                  };
                case 4:
                  return function(accumulator, value, index, collection) {
                    return func.call(thisArg, accumulator, value, index, collection);
                  };
              }
              return bind(func, thisArg);
            }
            function baseCreateWrapper(bindData) {
              var func = bindData[0],
                  bitmask = bindData[1],
                  partialArgs = bindData[2],
                  partialRightArgs = bindData[3],
                  thisArg = bindData[4],
                  arity = bindData[5];
              var isBind = bitmask & 1,
                  isBindKey = bitmask & 2,
                  isCurry = bitmask & 4,
                  isCurryBound = bitmask & 8,
                  key = func;
              function bound() {
                var thisBinding = isBind ? thisArg : this;
                if (partialArgs) {
                  var args = slice(partialArgs);
                  push.apply(args, arguments);
                }
                if (partialRightArgs || isCurry) {
                  args || (args = slice(arguments));
                  if (partialRightArgs) {
                    push.apply(args, partialRightArgs);
                  }
                  if (isCurry && args.length < arity) {
                    bitmask |= 16 & ~32;
                    return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
                  }
                }
                args || (args = arguments);
                if (isBindKey) {
                  func = thisBinding[key];
                }
                if (this instanceof bound) {
                  thisBinding = baseCreate(func.prototype);
                  var result = func.apply(thisBinding, args);
                  return isObject(result) ? result : thisBinding;
                }
                return func.apply(thisBinding, args);
              }
              setBindData(bound, bindData);
              return bound;
            }
            function baseDifference(array, values) {
              var index = -1,
                  indexOf = getIndexOf(),
                  length = array ? array.length : 0,
                  isLarge = length >= largeArraySize && indexOf === baseIndexOf,
                  result = [];
              if (isLarge) {
                var cache = createCache(values);
                if (cache) {
                  indexOf = cacheIndexOf;
                  values = cache;
                } else {
                  isLarge = false;
                }
              }
              while (++index < length) {
                var value = array[index];
                if (indexOf(values, value) < 0) {
                  result.push(value);
                }
              }
              if (isLarge) {
                releaseObject(values);
              }
              return result;
            }
            function baseFlatten(array, isShallow, isStrict, fromIndex) {
              var index = (fromIndex || 0) - 1,
                  length = array ? array.length : 0,
                  result = [];
              while (++index < length) {
                var value = array[index];
                if (value && typeof value == 'object' && typeof value.length == 'number' && (isArray(value) || isArguments(value))) {
                  if (!isShallow) {
                    value = baseFlatten(value, isShallow, isStrict);
                  }
                  var valIndex = -1,
                      valLength = value.length,
                      resIndex = result.length;
                  result.length += valLength;
                  while (++valIndex < valLength) {
                    result[resIndex++] = value[valIndex];
                  }
                } else if (!isStrict) {
                  result.push(value);
                }
              }
              return result;
            }
            function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
              if (callback) {
                var result = callback(a, b);
                if (typeof result != 'undefined') {
                  return !!result;
                }
              }
              if (a === b) {
                return a !== 0 || (1 / a == 1 / b);
              }
              var type = typeof a,
                  otherType = typeof b;
              if (a === a && !(a && objectTypes[type]) && !(b && objectTypes[otherType])) {
                return false;
              }
              if (a == null || b == null) {
                return a === b;
              }
              var className = toString.call(a),
                  otherClass = toString.call(b);
              if (className == argsClass) {
                className = objectClass;
              }
              if (otherClass == argsClass) {
                otherClass = objectClass;
              }
              if (className != otherClass) {
                return false;
              }
              switch (className) {
                case boolClass:
                case dateClass:
                  return +a == +b;
                case numberClass:
                  return (a != +a) ? b != +b : (a == 0 ? (1 / a == 1 / b) : a == +b);
                case regexpClass:
                case stringClass:
                  return a == String(b);
              }
              var isArr = className == arrayClass;
              if (!isArr) {
                var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
                    bWrapped = hasOwnProperty.call(b, '__wrapped__');
                if (aWrapped || bWrapped) {
                  return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
                }
                if (className != objectClass) {
                  return false;
                }
                var ctorA = a.constructor,
                    ctorB = b.constructor;
                if (ctorA != ctorB && !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && ('constructor' in a && 'constructor' in b)) {
                  return false;
                }
              }
              var initedStack = !stackA;
              stackA || (stackA = getArray());
              stackB || (stackB = getArray());
              var length = stackA.length;
              while (length--) {
                if (stackA[length] == a) {
                  return stackB[length] == b;
                }
              }
              var size = 0;
              result = true;
              stackA.push(a);
              stackB.push(b);
              if (isArr) {
                length = a.length;
                size = b.length;
                result = size == length;
                if (result || isWhere) {
                  while (size--) {
                    var index = length,
                        value = b[size];
                    if (isWhere) {
                      while (index--) {
                        if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                          break;
                        }
                      }
                    } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
                      break;
                    }
                  }
                }
              } else {
                forIn(b, function(value, key, b) {
                  if (hasOwnProperty.call(b, key)) {
                    size++;
                    return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
                  }
                });
                if (result && !isWhere) {
                  forIn(a, function(value, key, a) {
                    if (hasOwnProperty.call(a, key)) {
                      return (result = --size > -1);
                    }
                  });
                }
              }
              stackA.pop();
              stackB.pop();
              if (initedStack) {
                releaseArray(stackA);
                releaseArray(stackB);
              }
              return result;
            }
            function baseMerge(object, source, callback, stackA, stackB) {
              (isArray(source) ? forEach : forOwn)(source, function(source, key) {
                var found,
                    isArr,
                    result = source,
                    value = object[key];
                if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
                  var stackLength = stackA.length;
                  while (stackLength--) {
                    if ((found = stackA[stackLength] == source)) {
                      value = stackB[stackLength];
                      break;
                    }
                  }
                  if (!found) {
                    var isShallow;
                    if (callback) {
                      result = callback(value, source);
                      if ((isShallow = typeof result != 'undefined')) {
                        value = result;
                      }
                    }
                    if (!isShallow) {
                      value = isArr ? (isArray(value) ? value : []) : (isPlainObject(value) ? value : {});
                    }
                    stackA.push(source);
                    stackB.push(value);
                    if (!isShallow) {
                      baseMerge(value, source, callback, stackA, stackB);
                    }
                  }
                } else {
                  if (callback) {
                    result = callback(value, source);
                    if (typeof result == 'undefined') {
                      result = source;
                    }
                  }
                  if (typeof result != 'undefined') {
                    value = result;
                  }
                }
                object[key] = value;
              });
            }
            function baseRandom(min, max) {
              return min + floor(nativeRandom() * (max - min + 1));
            }
            function baseUniq(array, isSorted, callback) {
              var index = -1,
                  indexOf = getIndexOf(),
                  length = array ? array.length : 0,
                  result = [];
              var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
                  seen = (callback || isLarge) ? getArray() : result;
              if (isLarge) {
                var cache = createCache(seen);
                indexOf = cacheIndexOf;
                seen = cache;
              }
              while (++index < length) {
                var value = array[index],
                    computed = callback ? callback(value, index, array) : value;
                if (isSorted ? !index || seen[seen.length - 1] !== computed : indexOf(seen, computed) < 0) {
                  if (callback || isLarge) {
                    seen.push(computed);
                  }
                  result.push(value);
                }
              }
              if (isLarge) {
                releaseArray(seen.array);
                releaseObject(seen);
              } else if (callback) {
                releaseArray(seen);
              }
              return result;
            }
            function createAggregator(setter) {
              return function(collection, callback, thisArg) {
                var result = {};
                callback = lodash.createCallback(callback, thisArg, 3);
                var index = -1,
                    length = collection ? collection.length : 0;
                if (typeof length == 'number') {
                  while (++index < length) {
                    var value = collection[index];
                    setter(result, value, callback(value, index, collection), collection);
                  }
                } else {
                  forOwn(collection, function(value, key, collection) {
                    setter(result, value, callback(value, key, collection), collection);
                  });
                }
                return result;
              };
            }
            function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
              var isBind = bitmask & 1,
                  isBindKey = bitmask & 2,
                  isCurry = bitmask & 4,
                  isCurryBound = bitmask & 8,
                  isPartial = bitmask & 16,
                  isPartialRight = bitmask & 32;
              if (!isBindKey && !isFunction(func)) {
                throw new TypeError;
              }
              if (isPartial && !partialArgs.length) {
                bitmask &= ~16;
                isPartial = partialArgs = false;
              }
              if (isPartialRight && !partialRightArgs.length) {
                bitmask &= ~32;
                isPartialRight = partialRightArgs = false;
              }
              var bindData = func && func.__bindData__;
              if (bindData && bindData !== true) {
                bindData = slice(bindData);
                if (bindData[2]) {
                  bindData[2] = slice(bindData[2]);
                }
                if (bindData[3]) {
                  bindData[3] = slice(bindData[3]);
                }
                if (isBind && !(bindData[1] & 1)) {
                  bindData[4] = thisArg;
                }
                if (!isBind && bindData[1] & 1) {
                  bitmask |= 8;
                }
                if (isCurry && !(bindData[1] & 4)) {
                  bindData[5] = arity;
                }
                if (isPartial) {
                  push.apply(bindData[2] || (bindData[2] = []), partialArgs);
                }
                if (isPartialRight) {
                  unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
                }
                bindData[1] |= bitmask;
                return createWrapper.apply(null, bindData);
              }
              var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
              return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
            }
            function escapeHtmlChar(match) {
              return htmlEscapes[match];
            }
            function getIndexOf() {
              var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
              return result;
            }
            function isNative(value) {
              return typeof value == 'function' && reNative.test(value);
            }
            var setBindData = !defineProperty ? noop : function(func, value) {
              descriptor.value = value;
              defineProperty(func, '__bindData__', descriptor);
            };
            function shimIsPlainObject(value) {
              var ctor,
                  result;
              if (!(value && toString.call(value) == objectClass) || (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
                return false;
              }
              forIn(value, function(value, key) {
                result = key;
              });
              return typeof result == 'undefined' || hasOwnProperty.call(value, result);
            }
            function unescapeHtmlChar(match) {
              return htmlUnescapes[match];
            }
            function isArguments(value) {
              return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == argsClass || false;
            }
            var isArray = nativeIsArray || function(value) {
              return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == arrayClass || false;
            };
            var shimKeys = function(object) {
              var index,
                  iterable = object,
                  result = [];
              if (!iterable)
                return result;
              if (!(objectTypes[typeof object]))
                return result;
              for (index in iterable) {
                if (hasOwnProperty.call(iterable, index)) {
                  result.push(index);
                }
              }
              return result;
            };
            var keys = !nativeKeys ? shimKeys : function(object) {
              if (!isObject(object)) {
                return [];
              }
              return nativeKeys(object);
            };
            var htmlEscapes = {
              '&': '&amp;',
              '<': '&lt;',
              '>': '&gt;',
              '"': '&quot;',
              "'": '&#39;'
            };
            var htmlUnescapes = invert(htmlEscapes);
            var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
                reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');
            var assign = function(object, source, guard) {
              var index,
                  iterable = object,
                  result = iterable;
              if (!iterable)
                return result;
              var args = arguments,
                  argsIndex = 0,
                  argsLength = typeof guard == 'number' ? 2 : args.length;
              if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
                var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
              } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
                callback = args[--argsLength];
              }
              while (++argsIndex < argsLength) {
                iterable = args[argsIndex];
                if (iterable && objectTypes[typeof iterable]) {
                  var ownIndex = -1,
                      ownProps = objectTypes[typeof iterable] && keys(iterable),
                      length = ownProps ? ownProps.length : 0;
                  while (++ownIndex < length) {
                    index = ownProps[ownIndex];
                    result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
                  }
                }
              }
              return result;
            };
            function clone(value, isDeep, callback, thisArg) {
              if (typeof isDeep != 'boolean' && isDeep != null) {
                thisArg = callback;
                callback = isDeep;
                isDeep = false;
              }
              return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
            }
            function cloneDeep(value, callback, thisArg) {
              return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
            }
            function create(prototype, properties) {
              var result = baseCreate(prototype);
              return properties ? assign(result, properties) : result;
            }
            var defaults = function(object, source, guard) {
              var index,
                  iterable = object,
                  result = iterable;
              if (!iterable)
                return result;
              var args = arguments,
                  argsIndex = 0,
                  argsLength = typeof guard == 'number' ? 2 : args.length;
              while (++argsIndex < argsLength) {
                iterable = args[argsIndex];
                if (iterable && objectTypes[typeof iterable]) {
                  var ownIndex = -1,
                      ownProps = objectTypes[typeof iterable] && keys(iterable),
                      length = ownProps ? ownProps.length : 0;
                  while (++ownIndex < length) {
                    index = ownProps[ownIndex];
                    if (typeof result[index] == 'undefined')
                      result[index] = iterable[index];
                  }
                }
              }
              return result;
            };
            function findKey(object, callback, thisArg) {
              var result;
              callback = lodash.createCallback(callback, thisArg, 3);
              forOwn(object, function(value, key, object) {
                if (callback(value, key, object)) {
                  result = key;
                  return false;
                }
              });
              return result;
            }
            function findLastKey(object, callback, thisArg) {
              var result;
              callback = lodash.createCallback(callback, thisArg, 3);
              forOwnRight(object, function(value, key, object) {
                if (callback(value, key, object)) {
                  result = key;
                  return false;
                }
              });
              return result;
            }
            var forIn = function(collection, callback, thisArg) {
              var index,
                  iterable = collection,
                  result = iterable;
              if (!iterable)
                return result;
              if (!objectTypes[typeof iterable])
                return result;
              callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
              for (index in iterable) {
                if (callback(iterable[index], index, collection) === false)
                  return result;
              }
              return result;
            };
            function forInRight(object, callback, thisArg) {
              var pairs = [];
              forIn(object, function(value, key) {
                pairs.push(key, value);
              });
              var length = pairs.length;
              callback = baseCreateCallback(callback, thisArg, 3);
              while (length--) {
                if (callback(pairs[length--], pairs[length], object) === false) {
                  break;
                }
              }
              return object;
            }
            var forOwn = function(collection, callback, thisArg) {
              var index,
                  iterable = collection,
                  result = iterable;
              if (!iterable)
                return result;
              if (!objectTypes[typeof iterable])
                return result;
              callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
              var ownIndex = -1,
                  ownProps = objectTypes[typeof iterable] && keys(iterable),
                  length = ownProps ? ownProps.length : 0;
              while (++ownIndex < length) {
                index = ownProps[ownIndex];
                if (callback(iterable[index], index, collection) === false)
                  return result;
              }
              return result;
            };
            function forOwnRight(object, callback, thisArg) {
              var props = keys(object),
                  length = props.length;
              callback = baseCreateCallback(callback, thisArg, 3);
              while (length--) {
                var key = props[length];
                if (callback(object[key], key, object) === false) {
                  break;
                }
              }
              return object;
            }
            function functions(object) {
              var result = [];
              forIn(object, function(value, key) {
                if (isFunction(value)) {
                  result.push(key);
                }
              });
              return result.sort();
            }
            function has(object, key) {
              return object ? hasOwnProperty.call(object, key) : false;
            }
            function invert(object) {
              var index = -1,
                  props = keys(object),
                  length = props.length,
                  result = {};
              while (++index < length) {
                var key = props[index];
                result[object[key]] = key;
              }
              return result;
            }
            function isBoolean(value) {
              return value === true || value === false || value && typeof value == 'object' && toString.call(value) == boolClass || false;
            }
            function isDate(value) {
              return value && typeof value == 'object' && toString.call(value) == dateClass || false;
            }
            function isElement(value) {
              return value && value.nodeType === 1 || false;
            }
            function isEmpty(value) {
              var result = true;
              if (!value) {
                return result;
              }
              var className = toString.call(value),
                  length = value.length;
              if ((className == arrayClass || className == stringClass || className == argsClass) || (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
                return !length;
              }
              forOwn(value, function() {
                return (result = false);
              });
              return result;
            }
            function isEqual(a, b, callback, thisArg) {
              return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
            }
            function isFinite(value) {
              return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
            }
            function isFunction(value) {
              return typeof value == 'function';
            }
            function isObject(value) {
              return !!(value && objectTypes[typeof value]);
            }
            function isNaN(value) {
              return isNumber(value) && value != +value;
            }
            function isNull(value) {
              return value === null;
            }
            function isNumber(value) {
              return typeof value == 'number' || value && typeof value == 'object' && toString.call(value) == numberClass || false;
            }
            var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
              if (!(value && toString.call(value) == objectClass)) {
                return false;
              }
              var valueOf = value.valueOf,
                  objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);
              return objProto ? (value == objProto || getPrototypeOf(value) == objProto) : shimIsPlainObject(value);
            };
            function isRegExp(value) {
              return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
            }
            function isString(value) {
              return typeof value == 'string' || value && typeof value == 'object' && toString.call(value) == stringClass || false;
            }
            function isUndefined(value) {
              return typeof value == 'undefined';
            }
            function mapValues(object, callback, thisArg) {
              var result = {};
              callback = lodash.createCallback(callback, thisArg, 3);
              forOwn(object, function(value, key, object) {
                result[key] = callback(value, key, object);
              });
              return result;
            }
            function merge(object) {
              var args = arguments,
                  length = 2;
              if (!isObject(object)) {
                return object;
              }
              if (typeof args[2] != 'number') {
                length = args.length;
              }
              if (length > 3 && typeof args[length - 2] == 'function') {
                var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
              } else if (length > 2 && typeof args[length - 1] == 'function') {
                callback = args[--length];
              }
              var sources = slice(arguments, 1, length),
                  index = -1,
                  stackA = getArray(),
                  stackB = getArray();
              while (++index < length) {
                baseMerge(object, sources[index], callback, stackA, stackB);
              }
              releaseArray(stackA);
              releaseArray(stackB);
              return object;
            }
            function omit(object, callback, thisArg) {
              var result = {};
              if (typeof callback != 'function') {
                var props = [];
                forIn(object, function(value, key) {
                  props.push(key);
                });
                props = baseDifference(props, baseFlatten(arguments, true, false, 1));
                var index = -1,
                    length = props.length;
                while (++index < length) {
                  var key = props[index];
                  result[key] = object[key];
                }
              } else {
                callback = lodash.createCallback(callback, thisArg, 3);
                forIn(object, function(value, key, object) {
                  if (!callback(value, key, object)) {
                    result[key] = value;
                  }
                });
              }
              return result;
            }
            function pairs(object) {
              var index = -1,
                  props = keys(object),
                  length = props.length,
                  result = Array(length);
              while (++index < length) {
                var key = props[index];
                result[index] = [key, object[key]];
              }
              return result;
            }
            function pick(object, callback, thisArg) {
              var result = {};
              if (typeof callback != 'function') {
                var index = -1,
                    props = baseFlatten(arguments, true, false, 1),
                    length = isObject(object) ? props.length : 0;
                while (++index < length) {
                  var key = props[index];
                  if (key in object) {
                    result[key] = object[key];
                  }
                }
              } else {
                callback = lodash.createCallback(callback, thisArg, 3);
                forIn(object, function(value, key, object) {
                  if (callback(value, key, object)) {
                    result[key] = value;
                  }
                });
              }
              return result;
            }
            function transform(object, callback, accumulator, thisArg) {
              var isArr = isArray(object);
              if (accumulator == null) {
                if (isArr) {
                  accumulator = [];
                } else {
                  var ctor = object && object.constructor,
                      proto = ctor && ctor.prototype;
                  accumulator = baseCreate(proto);
                }
              }
              if (callback) {
                callback = lodash.createCallback(callback, thisArg, 4);
                (isArr ? forEach : forOwn)(object, function(value, index, object) {
                  return callback(accumulator, value, index, object);
                });
              }
              return accumulator;
            }
            function values(object) {
              var index = -1,
                  props = keys(object),
                  length = props.length,
                  result = Array(length);
              while (++index < length) {
                result[index] = object[props[index]];
              }
              return result;
            }
            function at(collection) {
              var args = arguments,
                  index = -1,
                  props = baseFlatten(args, true, false, 1),
                  length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
                  result = Array(length);
              while (++index < length) {
                result[index] = collection[props[index]];
              }
              return result;
            }
            function contains(collection, target, fromIndex) {
              var index = -1,
                  indexOf = getIndexOf(),
                  length = collection ? collection.length : 0,
                  result = false;
              fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
              if (isArray(collection)) {
                result = indexOf(collection, target, fromIndex) > -1;
              } else if (typeof length == 'number') {
                result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
              } else {
                forOwn(collection, function(value) {
                  if (++index >= fromIndex) {
                    return !(result = value === target);
                  }
                });
              }
              return result;
            }
            var countBy = createAggregator(function(result, value, key) {
              (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
            });
            function every(collection, callback, thisArg) {
              var result = true;
              callback = lodash.createCallback(callback, thisArg, 3);
              var index = -1,
                  length = collection ? collection.length : 0;
              if (typeof length == 'number') {
                while (++index < length) {
                  if (!(result = !!callback(collection[index], index, collection))) {
                    break;
                  }
                }
              } else {
                forOwn(collection, function(value, index, collection) {
                  return (result = !!callback(value, index, collection));
                });
              }
              return result;
            }
            function filter(collection, callback, thisArg) {
              var result = [];
              callback = lodash.createCallback(callback, thisArg, 3);
              var index = -1,
                  length = collection ? collection.length : 0;
              if (typeof length == 'number') {
                while (++index < length) {
                  var value = collection[index];
                  if (callback(value, index, collection)) {
                    result.push(value);
                  }
                }
              } else {
                forOwn(collection, function(value, index, collection) {
                  if (callback(value, index, collection)) {
                    result.push(value);
                  }
                });
              }
              return result;
            }
            function find(collection, callback, thisArg) {
              callback = lodash.createCallback(callback, thisArg, 3);
              var index = -1,
                  length = collection ? collection.length : 0;
              if (typeof length == 'number') {
                while (++index < length) {
                  var value = collection[index];
                  if (callback(value, index, collection)) {
                    return value;
                  }
                }
              } else {
                var result;
                forOwn(collection, function(value, index, collection) {
                  if (callback(value, index, collection)) {
                    result = value;
                    return false;
                  }
                });
                return result;
              }
            }
            function findLast(collection, callback, thisArg) {
              var result;
              callback = lodash.createCallback(callback, thisArg, 3);
              forEachRight(collection, function(value, index, collection) {
                if (callback(value, index, collection)) {
                  result = value;
                  return false;
                }
              });
              return result;
            }
            function forEach(collection, callback, thisArg) {
              var index = -1,
                  length = collection ? collection.length : 0;
              callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
              if (typeof length == 'number') {
                while (++index < length) {
                  if (callback(collection[index], index, collection) === false) {
                    break;
                  }
                }
              } else {
                forOwn(collection, callback);
              }
              return collection;
            }
            function forEachRight(collection, callback, thisArg) {
              var length = collection ? collection.length : 0;
              callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
              if (typeof length == 'number') {
                while (length--) {
                  if (callback(collection[length], length, collection) === false) {
                    break;
                  }
                }
              } else {
                var props = keys(collection);
                length = props.length;
                forOwn(collection, function(value, key, collection) {
                  key = props ? props[--length] : --length;
                  return callback(collection[key], key, collection);
                });
              }
              return collection;
            }
            var groupBy = createAggregator(function(result, value, key) {
              (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
            });
            var indexBy = createAggregator(function(result, value, key) {
              result[key] = value;
            });
            function invoke(collection, methodName) {
              var args = slice(arguments, 2),
                  index = -1,
                  isFunc = typeof methodName == 'function',
                  length = collection ? collection.length : 0,
                  result = Array(typeof length == 'number' ? length : 0);
              forEach(collection, function(value) {
                result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
              });
              return result;
            }
            function map(collection, callback, thisArg) {
              var index = -1,
                  length = collection ? collection.length : 0;
              callback = lodash.createCallback(callback, thisArg, 3);
              if (typeof length == 'number') {
                var result = Array(length);
                while (++index < length) {
                  result[index] = callback(collection[index], index, collection);
                }
              } else {
                result = [];
                forOwn(collection, function(value, key, collection) {
                  result[++index] = callback(value, key, collection);
                });
              }
              return result;
            }
            function max(collection, callback, thisArg) {
              var computed = -Infinity,
                  result = computed;
              if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
                callback = null;
              }
              if (callback == null && isArray(collection)) {
                var index = -1,
                    length = collection.length;
                while (++index < length) {
                  var value = collection[index];
                  if (value > result) {
                    result = value;
                  }
                }
              } else {
                callback = (callback == null && isString(collection)) ? charAtCallback : lodash.createCallback(callback, thisArg, 3);
                forEach(collection, function(value, index, collection) {
                  var current = callback(value, index, collection);
                  if (current > computed) {
                    computed = current;
                    result = value;
                  }
                });
              }
              return result;
            }
            function min(collection, callback, thisArg) {
              var computed = Infinity,
                  result = computed;
              if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
                callback = null;
              }
              if (callback == null && isArray(collection)) {
                var index = -1,
                    length = collection.length;
                while (++index < length) {
                  var value = collection[index];
                  if (value < result) {
                    result = value;
                  }
                }
              } else {
                callback = (callback == null && isString(collection)) ? charAtCallback : lodash.createCallback(callback, thisArg, 3);
                forEach(collection, function(value, index, collection) {
                  var current = callback(value, index, collection);
                  if (current < computed) {
                    computed = current;
                    result = value;
                  }
                });
              }
              return result;
            }
            var pluck = map;
            function reduce(collection, callback, accumulator, thisArg) {
              if (!collection)
                return accumulator;
              var noaccum = arguments.length < 3;
              callback = lodash.createCallback(callback, thisArg, 4);
              var index = -1,
                  length = collection.length;
              if (typeof length == 'number') {
                if (noaccum) {
                  accumulator = collection[++index];
                }
                while (++index < length) {
                  accumulator = callback(accumulator, collection[index], index, collection);
                }
              } else {
                forOwn(collection, function(value, index, collection) {
                  accumulator = noaccum ? (noaccum = false, value) : callback(accumulator, value, index, collection);
                });
              }
              return accumulator;
            }
            function reduceRight(collection, callback, accumulator, thisArg) {
              var noaccum = arguments.length < 3;
              callback = lodash.createCallback(callback, thisArg, 4);
              forEachRight(collection, function(value, index, collection) {
                accumulator = noaccum ? (noaccum = false, value) : callback(accumulator, value, index, collection);
              });
              return accumulator;
            }
            function reject(collection, callback, thisArg) {
              callback = lodash.createCallback(callback, thisArg, 3);
              return filter(collection, function(value, index, collection) {
                return !callback(value, index, collection);
              });
            }
            function sample(collection, n, guard) {
              if (collection && typeof collection.length != 'number') {
                collection = values(collection);
              }
              if (n == null || guard) {
                return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
              }
              var result = shuffle(collection);
              result.length = nativeMin(nativeMax(0, n), result.length);
              return result;
            }
            function shuffle(collection) {
              var index = -1,
                  length = collection ? collection.length : 0,
                  result = Array(typeof length == 'number' ? length : 0);
              forEach(collection, function(value) {
                var rand = baseRandom(0, ++index);
                result[index] = result[rand];
                result[rand] = value;
              });
              return result;
            }
            function size(collection) {
              var length = collection ? collection.length : 0;
              return typeof length == 'number' ? length : keys(collection).length;
            }
            function some(collection, callback, thisArg) {
              var result;
              callback = lodash.createCallback(callback, thisArg, 3);
              var index = -1,
                  length = collection ? collection.length : 0;
              if (typeof length == 'number') {
                while (++index < length) {
                  if ((result = callback(collection[index], index, collection))) {
                    break;
                  }
                }
              } else {
                forOwn(collection, function(value, index, collection) {
                  return !(result = callback(value, index, collection));
                });
              }
              return !!result;
            }
            function sortBy(collection, callback, thisArg) {
              var index = -1,
                  isArr = isArray(callback),
                  length = collection ? collection.length : 0,
                  result = Array(typeof length == 'number' ? length : 0);
              if (!isArr) {
                callback = lodash.createCallback(callback, thisArg, 3);
              }
              forEach(collection, function(value, key, collection) {
                var object = result[++index] = getObject();
                if (isArr) {
                  object.criteria = map(callback, function(key) {
                    return value[key];
                  });
                } else {
                  (object.criteria = getArray())[0] = callback(value, key, collection);
                }
                object.index = index;
                object.value = value;
              });
              length = result.length;
              result.sort(compareAscending);
              while (length--) {
                var object = result[length];
                result[length] = object.value;
                if (!isArr) {
                  releaseArray(object.criteria);
                }
                releaseObject(object);
              }
              return result;
            }
            function toArray(collection) {
              if (collection && typeof collection.length == 'number') {
                return slice(collection);
              }
              return values(collection);
            }
            var where = filter;
            function compact(array) {
              var index = -1,
                  length = array ? array.length : 0,
                  result = [];
              while (++index < length) {
                var value = array[index];
                if (value) {
                  result.push(value);
                }
              }
              return result;
            }
            function difference(array) {
              return baseDifference(array, baseFlatten(arguments, true, true, 1));
            }
            function findIndex(array, callback, thisArg) {
              var index = -1,
                  length = array ? array.length : 0;
              callback = lodash.createCallback(callback, thisArg, 3);
              while (++index < length) {
                if (callback(array[index], index, array)) {
                  return index;
                }
              }
              return -1;
            }
            function findLastIndex(array, callback, thisArg) {
              var length = array ? array.length : 0;
              callback = lodash.createCallback(callback, thisArg, 3);
              while (length--) {
                if (callback(array[length], length, array)) {
                  return length;
                }
              }
              return -1;
            }
            function first(array, callback, thisArg) {
              var n = 0,
                  length = array ? array.length : 0;
              if (typeof callback != 'number' && callback != null) {
                var index = -1;
                callback = lodash.createCallback(callback, thisArg, 3);
                while (++index < length && callback(array[index], index, array)) {
                  n++;
                }
              } else {
                n = callback;
                if (n == null || thisArg) {
                  return array ? array[0] : undefined;
                }
              }
              return slice(array, 0, nativeMin(nativeMax(0, n), length));
            }
            function flatten(array, isShallow, callback, thisArg) {
              if (typeof isShallow != 'boolean' && isShallow != null) {
                thisArg = callback;
                callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
                isShallow = false;
              }
              if (callback != null) {
                array = map(array, callback, thisArg);
              }
              return baseFlatten(array, isShallow);
            }
            function indexOf(array, value, fromIndex) {
              if (typeof fromIndex == 'number') {
                var length = array ? array.length : 0;
                fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
              } else if (fromIndex) {
                var index = sortedIndex(array, value);
                return array[index] === value ? index : -1;
              }
              return baseIndexOf(array, value, fromIndex);
            }
            function initial(array, callback, thisArg) {
              var n = 0,
                  length = array ? array.length : 0;
              if (typeof callback != 'number' && callback != null) {
                var index = length;
                callback = lodash.createCallback(callback, thisArg, 3);
                while (index-- && callback(array[index], index, array)) {
                  n++;
                }
              } else {
                n = (callback == null || thisArg) ? 1 : callback || n;
              }
              return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
            }
            function intersection() {
              var args = [],
                  argsIndex = -1,
                  argsLength = arguments.length,
                  caches = getArray(),
                  indexOf = getIndexOf(),
                  trustIndexOf = indexOf === baseIndexOf,
                  seen = getArray();
              while (++argsIndex < argsLength) {
                var value = arguments[argsIndex];
                if (isArray(value) || isArguments(value)) {
                  args.push(value);
                  caches.push(trustIndexOf && value.length >= largeArraySize && createCache(argsIndex ? args[argsIndex] : seen));
                }
              }
              var array = args[0],
                  index = -1,
                  length = array ? array.length : 0,
                  result = [];
              outer: while (++index < length) {
                var cache = caches[0];
                value = array[index];
                if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
                  argsIndex = argsLength;
                  (cache || seen).push(value);
                  while (--argsIndex) {
                    cache = caches[argsIndex];
                    if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
                      continue outer;
                    }
                  }
                  result.push(value);
                }
              }
              while (argsLength--) {
                cache = caches[argsLength];
                if (cache) {
                  releaseObject(cache);
                }
              }
              releaseArray(caches);
              releaseArray(seen);
              return result;
            }
            function last(array, callback, thisArg) {
              var n = 0,
                  length = array ? array.length : 0;
              if (typeof callback != 'number' && callback != null) {
                var index = length;
                callback = lodash.createCallback(callback, thisArg, 3);
                while (index-- && callback(array[index], index, array)) {
                  n++;
                }
              } else {
                n = callback;
                if (n == null || thisArg) {
                  return array ? array[length - 1] : undefined;
                }
              }
              return slice(array, nativeMax(0, length - n));
            }
            function lastIndexOf(array, value, fromIndex) {
              var index = array ? array.length : 0;
              if (typeof fromIndex == 'number') {
                index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
              }
              while (index--) {
                if (array[index] === value) {
                  return index;
                }
              }
              return -1;
            }
            function pull(array) {
              var args = arguments,
                  argsIndex = 0,
                  argsLength = args.length,
                  length = array ? array.length : 0;
              while (++argsIndex < argsLength) {
                var index = -1,
                    value = args[argsIndex];
                while (++index < length) {
                  if (array[index] === value) {
                    splice.call(array, index--, 1);
                    length--;
                  }
                }
              }
              return array;
            }
            function range(start, end, step) {
              start = +start || 0;
              step = typeof step == 'number' ? step : (+step || 1);
              if (end == null) {
                end = start;
                start = 0;
              }
              var index = -1,
                  length = nativeMax(0, ceil((end - start) / (step || 1))),
                  result = Array(length);
              while (++index < length) {
                result[index] = start;
                start += step;
              }
              return result;
            }
            function remove(array, callback, thisArg) {
              var index = -1,
                  length = array ? array.length : 0,
                  result = [];
              callback = lodash.createCallback(callback, thisArg, 3);
              while (++index < length) {
                var value = array[index];
                if (callback(value, index, array)) {
                  result.push(value);
                  splice.call(array, index--, 1);
                  length--;
                }
              }
              return result;
            }
            function rest(array, callback, thisArg) {
              if (typeof callback != 'number' && callback != null) {
                var n = 0,
                    index = -1,
                    length = array ? array.length : 0;
                callback = lodash.createCallback(callback, thisArg, 3);
                while (++index < length && callback(array[index], index, array)) {
                  n++;
                }
              } else {
                n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
              }
              return slice(array, n);
            }
            function sortedIndex(array, value, callback, thisArg) {
              var low = 0,
                  high = array ? array.length : low;
              callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
              value = callback(value);
              while (low < high) {
                var mid = (low + high) >>> 1;
                (callback(array[mid]) < value) ? low = mid + 1 : high = mid;
              }
              return low;
            }
            function union() {
              return baseUniq(baseFlatten(arguments, true, true));
            }
            function uniq(array, isSorted, callback, thisArg) {
              if (typeof isSorted != 'boolean' && isSorted != null) {
                thisArg = callback;
                callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
                isSorted = false;
              }
              if (callback != null) {
                callback = lodash.createCallback(callback, thisArg, 3);
              }
              return baseUniq(array, isSorted, callback);
            }
            function without(array) {
              return baseDifference(array, slice(arguments, 1));
            }
            function xor() {
              var index = -1,
                  length = arguments.length;
              while (++index < length) {
                var array = arguments[index];
                if (isArray(array) || isArguments(array)) {
                  var result = result ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result))) : array;
                }
              }
              return result || [];
            }
            function zip() {
              var array = arguments.length > 1 ? arguments : arguments[0],
                  index = -1,
                  length = array ? max(pluck(array, 'length')) : 0,
                  result = Array(length < 0 ? 0 : length);
              while (++index < length) {
                result[index] = pluck(array, index);
              }
              return result;
            }
            function zipObject(keys, values) {
              var index = -1,
                  length = keys ? keys.length : 0,
                  result = {};
              if (!values && length && !isArray(keys[0])) {
                values = [];
              }
              while (++index < length) {
                var key = keys[index];
                if (values) {
                  result[key] = values[index];
                } else if (key) {
                  result[key[0]] = key[1];
                }
              }
              return result;
            }
            function after(n, func) {
              if (!isFunction(func)) {
                throw new TypeError;
              }
              return function() {
                if (--n < 1) {
                  return func.apply(this, arguments);
                }
              };
            }
            function bind(func, thisArg) {
              return arguments.length > 2 ? createWrapper(func, 17, slice(arguments, 2), null, thisArg) : createWrapper(func, 1, null, null, thisArg);
            }
            function bindAll(object) {
              var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
                  index = -1,
                  length = funcs.length;
              while (++index < length) {
                var key = funcs[index];
                object[key] = createWrapper(object[key], 1, null, null, object);
              }
              return object;
            }
            function bindKey(object, key) {
              return arguments.length > 2 ? createWrapper(key, 19, slice(arguments, 2), null, object) : createWrapper(key, 3, null, null, object);
            }
            function compose() {
              var funcs = arguments,
                  length = funcs.length;
              while (length--) {
                if (!isFunction(funcs[length])) {
                  throw new TypeError;
                }
              }
              return function() {
                var args = arguments,
                    length = funcs.length;
                while (length--) {
                  args = [funcs[length].apply(this, args)];
                }
                return args[0];
              };
            }
            function curry(func, arity) {
              arity = typeof arity == 'number' ? arity : (+arity || func.length);
              return createWrapper(func, 4, null, null, null, arity);
            }
            function debounce(func, wait, options) {
              var args,
                  maxTimeoutId,
                  result,
                  stamp,
                  thisArg,
                  timeoutId,
                  trailingCall,
                  lastCalled = 0,
                  maxWait = false,
                  trailing = true;
              if (!isFunction(func)) {
                throw new TypeError;
              }
              wait = nativeMax(0, wait) || 0;
              if (options === true) {
                var leading = true;
                trailing = false;
              } else if (isObject(options)) {
                leading = options.leading;
                maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
                trailing = 'trailing' in options ? options.trailing : trailing;
              }
              var delayed = function() {
                var remaining = wait - (now() - stamp);
                if (remaining <= 0) {
                  if (maxTimeoutId) {
                    clearTimeout(maxTimeoutId);
                  }
                  var isCalled = trailingCall;
                  maxTimeoutId = timeoutId = trailingCall = undefined;
                  if (isCalled) {
                    lastCalled = now();
                    result = func.apply(thisArg, args);
                    if (!timeoutId && !maxTimeoutId) {
                      args = thisArg = null;
                    }
                  }
                } else {
                  timeoutId = setTimeout(delayed, remaining);
                }
              };
              var maxDelayed = function() {
                if (timeoutId) {
                  clearTimeout(timeoutId);
                }
                maxTimeoutId = timeoutId = trailingCall = undefined;
                if (trailing || (maxWait !== wait)) {
                  lastCalled = now();
                  result = func.apply(thisArg, args);
                  if (!timeoutId && !maxTimeoutId) {
                    args = thisArg = null;
                  }
                }
              };
              return function() {
                args = arguments;
                stamp = now();
                thisArg = this;
                trailingCall = trailing && (timeoutId || !leading);
                if (maxWait === false) {
                  var leadingCall = leading && !timeoutId;
                } else {
                  if (!maxTimeoutId && !leading) {
                    lastCalled = stamp;
                  }
                  var remaining = maxWait - (stamp - lastCalled),
                      isCalled = remaining <= 0;
                  if (isCalled) {
                    if (maxTimeoutId) {
                      maxTimeoutId = clearTimeout(maxTimeoutId);
                    }
                    lastCalled = stamp;
                    result = func.apply(thisArg, args);
                  } else if (!maxTimeoutId) {
                    maxTimeoutId = setTimeout(maxDelayed, remaining);
                  }
                }
                if (isCalled && timeoutId) {
                  timeoutId = clearTimeout(timeoutId);
                } else if (!timeoutId && wait !== maxWait) {
                  timeoutId = setTimeout(delayed, wait);
                }
                if (leadingCall) {
                  isCalled = true;
                  result = func.apply(thisArg, args);
                }
                if (isCalled && !timeoutId && !maxTimeoutId) {
                  args = thisArg = null;
                }
                return result;
              };
            }
            function defer(func) {
              if (!isFunction(func)) {
                throw new TypeError;
              }
              var args = slice(arguments, 1);
              return setTimeout(function() {
                func.apply(undefined, args);
              }, 1);
            }
            function delay(func, wait) {
              if (!isFunction(func)) {
                throw new TypeError;
              }
              var args = slice(arguments, 2);
              return setTimeout(function() {
                func.apply(undefined, args);
              }, wait);
            }
            function memoize(func, resolver) {
              if (!isFunction(func)) {
                throw new TypeError;
              }
              var memoized = function() {
                var cache = memoized.cache,
                    key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];
                return hasOwnProperty.call(cache, key) ? cache[key] : (cache[key] = func.apply(this, arguments));
              };
              memoized.cache = {};
              return memoized;
            }
            function once(func) {
              var ran,
                  result;
              if (!isFunction(func)) {
                throw new TypeError;
              }
              return function() {
                if (ran) {
                  return result;
                }
                ran = true;
                result = func.apply(this, arguments);
                func = null;
                return result;
              };
            }
            function partial(func) {
              return createWrapper(func, 16, slice(arguments, 1));
            }
            function partialRight(func) {
              return createWrapper(func, 32, null, slice(arguments, 1));
            }
            function throttle(func, wait, options) {
              var leading = true,
                  trailing = true;
              if (!isFunction(func)) {
                throw new TypeError;
              }
              if (options === false) {
                leading = false;
              } else if (isObject(options)) {
                leading = 'leading' in options ? options.leading : leading;
                trailing = 'trailing' in options ? options.trailing : trailing;
              }
              debounceOptions.leading = leading;
              debounceOptions.maxWait = wait;
              debounceOptions.trailing = trailing;
              return debounce(func, wait, debounceOptions);
            }
            function wrap(value, wrapper) {
              return createWrapper(wrapper, 16, [value]);
            }
            function constant(value) {
              return function() {
                return value;
              };
            }
            function createCallback(func, thisArg, argCount) {
              var type = typeof func;
              if (func == null || type == 'function') {
                return baseCreateCallback(func, thisArg, argCount);
              }
              if (type != 'object') {
                return property(func);
              }
              var props = keys(func),
                  key = props[0],
                  a = func[key];
              if (props.length == 1 && a === a && !isObject(a)) {
                return function(object) {
                  var b = object[key];
                  return a === b && (a !== 0 || (1 / a == 1 / b));
                };
              }
              return function(object) {
                var length = props.length,
                    result = false;
                while (length--) {
                  if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
                    break;
                  }
                }
                return result;
              };
            }
            function escape(string) {
              return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
            }
            function identity(value) {
              return value;
            }
            function mixin(object, source, options) {
              var chain = true,
                  methodNames = source && functions(source);
              if (!source || (!options && !methodNames.length)) {
                if (options == null) {
                  options = source;
                }
                ctor = lodashWrapper;
                source = object;
                object = lodash;
                methodNames = functions(source);
              }
              if (options === false) {
                chain = false;
              } else if (isObject(options) && 'chain' in options) {
                chain = options.chain;
              }
              var ctor = object,
                  isFunc = isFunction(ctor);
              forEach(methodNames, function(methodName) {
                var func = object[methodName] = source[methodName];
                if (isFunc) {
                  ctor.prototype[methodName] = function() {
                    var chainAll = this.__chain__,
                        value = this.__wrapped__,
                        args = [value];
                    push.apply(args, arguments);
                    var result = func.apply(object, args);
                    if (chain || chainAll) {
                      if (value === result && isObject(result)) {
                        return this;
                      }
                      result = new ctor(result);
                      result.__chain__ = chainAll;
                    }
                    return result;
                  };
                }
              });
            }
            function noConflict() {
              context._ = oldDash;
              return this;
            }
            function noop() {}
            var now = isNative(now = Date.now) && now || function() {
              return new Date().getTime();
            };
            var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
              return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
            };
            function property(key) {
              return function(object) {
                return object[key];
              };
            }
            function random(min, max, floating) {
              var noMin = min == null,
                  noMax = max == null;
              if (floating == null) {
                if (typeof min == 'boolean' && noMax) {
                  floating = min;
                  min = 1;
                } else if (!noMax && typeof max == 'boolean') {
                  floating = max;
                  noMax = true;
                }
              }
              if (noMin && noMax) {
                max = 1;
              }
              min = +min || 0;
              if (noMax) {
                max = min;
                min = 0;
              } else {
                max = +max || 0;
              }
              if (floating || min % 1 || max % 1) {
                var rand = nativeRandom();
                return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);
              }
              return baseRandom(min, max);
            }
            function result(object, key) {
              if (object) {
                var value = object[key];
                return isFunction(value) ? object[key]() : value;
              }
            }
            function template(text, data, options) {
              var settings = lodash.templateSettings;
              text = String(text || '');
              options = defaults({}, options, settings);
              var imports = defaults({}, options.imports, settings.imports),
                  importsKeys = keys(imports),
                  importsValues = values(imports);
              var isEvaluating,
                  index = 0,
                  interpolate = options.interpolate || reNoMatch,
                  source = "__p += '";
              var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
              text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                interpolateValue || (interpolateValue = esTemplateValue);
                source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                if (escapeValue) {
                  source += "' +\n__e(" + escapeValue + ") +\n'";
                }
                if (evaluateValue) {
                  isEvaluating = true;
                  source += "';\n" + evaluateValue + ";\n__p += '";
                }
                if (interpolateValue) {
                  source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                }
                index = offset + match.length;
                return match;
              });
              source += "';\n";
              var variable = options.variable,
                  hasVariable = variable;
              if (!hasVariable) {
                variable = 'obj';
                source = 'with (' + variable + ') {\n' + source + '\n}\n';
              }
              source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
              source = 'function(' + variable + ') {\n' + (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') + "var __t, __p = '', __e = _.escape" + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
              var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';
              try {
                var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
              } catch (e) {
                e.source = source;
                throw e;
              }
              if (data) {
                return result(data);
              }
              result.source = source;
              return result;
            }
            function times(n, callback, thisArg) {
              n = (n = +n) > -1 ? n : 0;
              var index = -1,
                  result = Array(n);
              callback = baseCreateCallback(callback, thisArg, 1);
              while (++index < n) {
                result[index] = callback(index);
              }
              return result;
            }
            function unescape(string) {
              return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
            }
            function uniqueId(prefix) {
              var id = ++idCounter;
              return String(prefix == null ? '' : prefix) + id;
            }
            function chain(value) {
              value = new lodashWrapper(value);
              value.__chain__ = true;
              return value;
            }
            function tap(value, interceptor) {
              interceptor(value);
              return value;
            }
            function wrapperChain() {
              this.__chain__ = true;
              return this;
            }
            function wrapperToString() {
              return String(this.__wrapped__);
            }
            function wrapperValueOf() {
              return this.__wrapped__;
            }
            lodash.after = after;
            lodash.assign = assign;
            lodash.at = at;
            lodash.bind = bind;
            lodash.bindAll = bindAll;
            lodash.bindKey = bindKey;
            lodash.chain = chain;
            lodash.compact = compact;
            lodash.compose = compose;
            lodash.constant = constant;
            lodash.countBy = countBy;
            lodash.create = create;
            lodash.createCallback = createCallback;
            lodash.curry = curry;
            lodash.debounce = debounce;
            lodash.defaults = defaults;
            lodash.defer = defer;
            lodash.delay = delay;
            lodash.difference = difference;
            lodash.filter = filter;
            lodash.flatten = flatten;
            lodash.forEach = forEach;
            lodash.forEachRight = forEachRight;
            lodash.forIn = forIn;
            lodash.forInRight = forInRight;
            lodash.forOwn = forOwn;
            lodash.forOwnRight = forOwnRight;
            lodash.functions = functions;
            lodash.groupBy = groupBy;
            lodash.indexBy = indexBy;
            lodash.initial = initial;
            lodash.intersection = intersection;
            lodash.invert = invert;
            lodash.invoke = invoke;
            lodash.keys = keys;
            lodash.map = map;
            lodash.mapValues = mapValues;
            lodash.max = max;
            lodash.memoize = memoize;
            lodash.merge = merge;
            lodash.min = min;
            lodash.omit = omit;
            lodash.once = once;
            lodash.pairs = pairs;
            lodash.partial = partial;
            lodash.partialRight = partialRight;
            lodash.pick = pick;
            lodash.pluck = pluck;
            lodash.property = property;
            lodash.pull = pull;
            lodash.range = range;
            lodash.reject = reject;
            lodash.remove = remove;
            lodash.rest = rest;
            lodash.shuffle = shuffle;
            lodash.sortBy = sortBy;
            lodash.tap = tap;
            lodash.throttle = throttle;
            lodash.times = times;
            lodash.toArray = toArray;
            lodash.transform = transform;
            lodash.union = union;
            lodash.uniq = uniq;
            lodash.values = values;
            lodash.where = where;
            lodash.without = without;
            lodash.wrap = wrap;
            lodash.xor = xor;
            lodash.zip = zip;
            lodash.zipObject = zipObject;
            lodash.collect = map;
            lodash.drop = rest;
            lodash.each = forEach;
            lodash.eachRight = forEachRight;
            lodash.extend = assign;
            lodash.methods = functions;
            lodash.object = zipObject;
            lodash.select = filter;
            lodash.tail = rest;
            lodash.unique = uniq;
            lodash.unzip = zip;
            mixin(lodash);
            lodash.clone = clone;
            lodash.cloneDeep = cloneDeep;
            lodash.contains = contains;
            lodash.escape = escape;
            lodash.every = every;
            lodash.find = find;
            lodash.findIndex = findIndex;
            lodash.findKey = findKey;
            lodash.findLast = findLast;
            lodash.findLastIndex = findLastIndex;
            lodash.findLastKey = findLastKey;
            lodash.has = has;
            lodash.identity = identity;
            lodash.indexOf = indexOf;
            lodash.isArguments = isArguments;
            lodash.isArray = isArray;
            lodash.isBoolean = isBoolean;
            lodash.isDate = isDate;
            lodash.isElement = isElement;
            lodash.isEmpty = isEmpty;
            lodash.isEqual = isEqual;
            lodash.isFinite = isFinite;
            lodash.isFunction = isFunction;
            lodash.isNaN = isNaN;
            lodash.isNull = isNull;
            lodash.isNumber = isNumber;
            lodash.isObject = isObject;
            lodash.isPlainObject = isPlainObject;
            lodash.isRegExp = isRegExp;
            lodash.isString = isString;
            lodash.isUndefined = isUndefined;
            lodash.lastIndexOf = lastIndexOf;
            lodash.mixin = mixin;
            lodash.noConflict = noConflict;
            lodash.noop = noop;
            lodash.now = now;
            lodash.parseInt = parseInt;
            lodash.random = random;
            lodash.reduce = reduce;
            lodash.reduceRight = reduceRight;
            lodash.result = result;
            lodash.runInContext = runInContext;
            lodash.size = size;
            lodash.some = some;
            lodash.sortedIndex = sortedIndex;
            lodash.template = template;
            lodash.unescape = unescape;
            lodash.uniqueId = uniqueId;
            lodash.all = every;
            lodash.any = some;
            lodash.detect = find;
            lodash.findWhere = find;
            lodash.foldl = reduce;
            lodash.foldr = reduceRight;
            lodash.include = contains;
            lodash.inject = reduce;
            mixin(function() {
              var source = {};
              forOwn(lodash, function(func, methodName) {
                if (!lodash.prototype[methodName]) {
                  source[methodName] = func;
                }
              });
              return source;
            }(), false);
            lodash.first = first;
            lodash.last = last;
            lodash.sample = sample;
            lodash.take = first;
            lodash.head = first;
            forOwn(lodash, function(func, methodName) {
              var callbackable = methodName !== 'sample';
              if (!lodash.prototype[methodName]) {
                lodash.prototype[methodName] = function(n, guard) {
                  var chainAll = this.__chain__,
                      result = func(this.__wrapped__, n, guard);
                  return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function'))) ? result : new lodashWrapper(result, chainAll);
                };
              }
            });
            lodash.VERSION = '2.4.1';
            lodash.prototype.chain = wrapperChain;
            lodash.prototype.toString = wrapperToString;
            lodash.prototype.value = wrapperValueOf;
            lodash.prototype.valueOf = wrapperValueOf;
            forEach(['join', 'pop', 'shift'], function(methodName) {
              var func = arrayRef[methodName];
              lodash.prototype[methodName] = function() {
                var chainAll = this.__chain__,
                    result = func.apply(this.__wrapped__, arguments);
                return chainAll ? new lodashWrapper(result, chainAll) : result;
              };
            });
            forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
              var func = arrayRef[methodName];
              lodash.prototype[methodName] = function() {
                func.apply(this.__wrapped__, arguments);
                return this;
              };
            });
            forEach(['concat', 'slice', 'splice'], function(methodName) {
              var func = arrayRef[methodName];
              lodash.prototype[methodName] = function() {
                return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
              };
            });
            return lodash;
          }
          var _ = runInContext();
          if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
            root._ = _;
            define(function() {
              return _;
            });
          } else if (freeExports && freeModule) {
            if (moduleExports) {
              (freeModule.exports = _)._ = _;
            } else {
              freeExports._ = _;
            }
          } else {
            root._ = _;
          }
        }.call(this));
      }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
    }, {}],
    144: [function(require, module, exports) {
      (function(Buffer) {
        (function(nacl) {
          'use strict';
          var gf = function(init) {
            var i,
                r = new Float64Array(16);
            if (init)
              for (i = 0; i < init.length; i++)
                r[i] = init[i];
            return r;
          };
          var randombytes = function() {
            throw new Error('no PRNG');
          };
          var _0 = new Uint8Array(16);
          var _9 = new Uint8Array(32);
          _9[0] = 9;
          var gf0 = gf(),
              gf1 = gf([1]),
              _121665 = gf([0xdb41, 1]),
              D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
              D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
              X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
              Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
              I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);
          function ts64(x, i, h, l) {
            x[i] = (h >> 24) & 0xff;
            x[i + 1] = (h >> 16) & 0xff;
            x[i + 2] = (h >> 8) & 0xff;
            x[i + 3] = h & 0xff;
            x[i + 4] = (l >> 24) & 0xff;
            x[i + 5] = (l >> 16) & 0xff;
            x[i + 6] = (l >> 8) & 0xff;
            x[i + 7] = l & 0xff;
          }
          function vn(x, xi, y, yi, n) {
            var i,
                d = 0;
            for (i = 0; i < n; i++)
              d |= x[xi + i] ^ y[yi + i];
            return (1 & ((d - 1) >>> 8)) - 1;
          }
          function crypto_verify_16(x, xi, y, yi) {
            return vn(x, xi, y, yi, 16);
          }
          function crypto_verify_32(x, xi, y, yi) {
            return vn(x, xi, y, yi, 32);
          }
          function core_salsa20(o, p, k, c) {
            var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24,
                j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24,
                j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24,
                j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,
                j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,
                j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24,
                j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24,
                j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24,
                j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,
                j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,
                j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,
                j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,
                j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,
                j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,
                j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,
                j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;
            var x0 = j0,
                x1 = j1,
                x2 = j2,
                x3 = j3,
                x4 = j4,
                x5 = j5,
                x6 = j6,
                x7 = j7,
                x8 = j8,
                x9 = j9,
                x10 = j10,
                x11 = j11,
                x12 = j12,
                x13 = j13,
                x14 = j14,
                x15 = j15,
                u;
            for (var i = 0; i < 20; i += 2) {
              u = x0 + x12 | 0;
              x4 ^= u << 7 | u >>> (32 - 7);
              u = x4 + x0 | 0;
              x8 ^= u << 9 | u >>> (32 - 9);
              u = x8 + x4 | 0;
              x12 ^= u << 13 | u >>> (32 - 13);
              u = x12 + x8 | 0;
              x0 ^= u << 18 | u >>> (32 - 18);
              u = x5 + x1 | 0;
              x9 ^= u << 7 | u >>> (32 - 7);
              u = x9 + x5 | 0;
              x13 ^= u << 9 | u >>> (32 - 9);
              u = x13 + x9 | 0;
              x1 ^= u << 13 | u >>> (32 - 13);
              u = x1 + x13 | 0;
              x5 ^= u << 18 | u >>> (32 - 18);
              u = x10 + x6 | 0;
              x14 ^= u << 7 | u >>> (32 - 7);
              u = x14 + x10 | 0;
              x2 ^= u << 9 | u >>> (32 - 9);
              u = x2 + x14 | 0;
              x6 ^= u << 13 | u >>> (32 - 13);
              u = x6 + x2 | 0;
              x10 ^= u << 18 | u >>> (32 - 18);
              u = x15 + x11 | 0;
              x3 ^= u << 7 | u >>> (32 - 7);
              u = x3 + x15 | 0;
              x7 ^= u << 9 | u >>> (32 - 9);
              u = x7 + x3 | 0;
              x11 ^= u << 13 | u >>> (32 - 13);
              u = x11 + x7 | 0;
              x15 ^= u << 18 | u >>> (32 - 18);
              u = x0 + x3 | 0;
              x1 ^= u << 7 | u >>> (32 - 7);
              u = x1 + x0 | 0;
              x2 ^= u << 9 | u >>> (32 - 9);
              u = x2 + x1 | 0;
              x3 ^= u << 13 | u >>> (32 - 13);
              u = x3 + x2 | 0;
              x0 ^= u << 18 | u >>> (32 - 18);
              u = x5 + x4 | 0;
              x6 ^= u << 7 | u >>> (32 - 7);
              u = x6 + x5 | 0;
              x7 ^= u << 9 | u >>> (32 - 9);
              u = x7 + x6 | 0;
              x4 ^= u << 13 | u >>> (32 - 13);
              u = x4 + x7 | 0;
              x5 ^= u << 18 | u >>> (32 - 18);
              u = x10 + x9 | 0;
              x11 ^= u << 7 | u >>> (32 - 7);
              u = x11 + x10 | 0;
              x8 ^= u << 9 | u >>> (32 - 9);
              u = x8 + x11 | 0;
              x9 ^= u << 13 | u >>> (32 - 13);
              u = x9 + x8 | 0;
              x10 ^= u << 18 | u >>> (32 - 18);
              u = x15 + x14 | 0;
              x12 ^= u << 7 | u >>> (32 - 7);
              u = x12 + x15 | 0;
              x13 ^= u << 9 | u >>> (32 - 9);
              u = x13 + x12 | 0;
              x14 ^= u << 13 | u >>> (32 - 13);
              u = x14 + x13 | 0;
              x15 ^= u << 18 | u >>> (32 - 18);
            }
            x0 = x0 + j0 | 0;
            x1 = x1 + j1 | 0;
            x2 = x2 + j2 | 0;
            x3 = x3 + j3 | 0;
            x4 = x4 + j4 | 0;
            x5 = x5 + j5 | 0;
            x6 = x6 + j6 | 0;
            x7 = x7 + j7 | 0;
            x8 = x8 + j8 | 0;
            x9 = x9 + j9 | 0;
            x10 = x10 + j10 | 0;
            x11 = x11 + j11 | 0;
            x12 = x12 + j12 | 0;
            x13 = x13 + j13 | 0;
            x14 = x14 + j14 | 0;
            x15 = x15 + j15 | 0;
            o[0] = x0 >>> 0 & 0xff;
            o[1] = x0 >>> 8 & 0xff;
            o[2] = x0 >>> 16 & 0xff;
            o[3] = x0 >>> 24 & 0xff;
            o[4] = x1 >>> 0 & 0xff;
            o[5] = x1 >>> 8 & 0xff;
            o[6] = x1 >>> 16 & 0xff;
            o[7] = x1 >>> 24 & 0xff;
            o[8] = x2 >>> 0 & 0xff;
            o[9] = x2 >>> 8 & 0xff;
            o[10] = x2 >>> 16 & 0xff;
            o[11] = x2 >>> 24 & 0xff;
            o[12] = x3 >>> 0 & 0xff;
            o[13] = x3 >>> 8 & 0xff;
            o[14] = x3 >>> 16 & 0xff;
            o[15] = x3 >>> 24 & 0xff;
            o[16] = x4 >>> 0 & 0xff;
            o[17] = x4 >>> 8 & 0xff;
            o[18] = x4 >>> 16 & 0xff;
            o[19] = x4 >>> 24 & 0xff;
            o[20] = x5 >>> 0 & 0xff;
            o[21] = x5 >>> 8 & 0xff;
            o[22] = x5 >>> 16 & 0xff;
            o[23] = x5 >>> 24 & 0xff;
            o[24] = x6 >>> 0 & 0xff;
            o[25] = x6 >>> 8 & 0xff;
            o[26] = x6 >>> 16 & 0xff;
            o[27] = x6 >>> 24 & 0xff;
            o[28] = x7 >>> 0 & 0xff;
            o[29] = x7 >>> 8 & 0xff;
            o[30] = x7 >>> 16 & 0xff;
            o[31] = x7 >>> 24 & 0xff;
            o[32] = x8 >>> 0 & 0xff;
            o[33] = x8 >>> 8 & 0xff;
            o[34] = x8 >>> 16 & 0xff;
            o[35] = x8 >>> 24 & 0xff;
            o[36] = x9 >>> 0 & 0xff;
            o[37] = x9 >>> 8 & 0xff;
            o[38] = x9 >>> 16 & 0xff;
            o[39] = x9 >>> 24 & 0xff;
            o[40] = x10 >>> 0 & 0xff;
            o[41] = x10 >>> 8 & 0xff;
            o[42] = x10 >>> 16 & 0xff;
            o[43] = x10 >>> 24 & 0xff;
            o[44] = x11 >>> 0 & 0xff;
            o[45] = x11 >>> 8 & 0xff;
            o[46] = x11 >>> 16 & 0xff;
            o[47] = x11 >>> 24 & 0xff;
            o[48] = x12 >>> 0 & 0xff;
            o[49] = x12 >>> 8 & 0xff;
            o[50] = x12 >>> 16 & 0xff;
            o[51] = x12 >>> 24 & 0xff;
            o[52] = x13 >>> 0 & 0xff;
            o[53] = x13 >>> 8 & 0xff;
            o[54] = x13 >>> 16 & 0xff;
            o[55] = x13 >>> 24 & 0xff;
            o[56] = x14 >>> 0 & 0xff;
            o[57] = x14 >>> 8 & 0xff;
            o[58] = x14 >>> 16 & 0xff;
            o[59] = x14 >>> 24 & 0xff;
            o[60] = x15 >>> 0 & 0xff;
            o[61] = x15 >>> 8 & 0xff;
            o[62] = x15 >>> 16 & 0xff;
            o[63] = x15 >>> 24 & 0xff;
          }
          function core_hsalsa20(o, p, k, c) {
            var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24,
                j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24,
                j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24,
                j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,
                j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,
                j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24,
                j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24,
                j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24,
                j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,
                j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,
                j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,
                j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,
                j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,
                j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,
                j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,
                j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;
            var x0 = j0,
                x1 = j1,
                x2 = j2,
                x3 = j3,
                x4 = j4,
                x5 = j5,
                x6 = j6,
                x7 = j7,
                x8 = j8,
                x9 = j9,
                x10 = j10,
                x11 = j11,
                x12 = j12,
                x13 = j13,
                x14 = j14,
                x15 = j15,
                u;
            for (var i = 0; i < 20; i += 2) {
              u = x0 + x12 | 0;
              x4 ^= u << 7 | u >>> (32 - 7);
              u = x4 + x0 | 0;
              x8 ^= u << 9 | u >>> (32 - 9);
              u = x8 + x4 | 0;
              x12 ^= u << 13 | u >>> (32 - 13);
              u = x12 + x8 | 0;
              x0 ^= u << 18 | u >>> (32 - 18);
              u = x5 + x1 | 0;
              x9 ^= u << 7 | u >>> (32 - 7);
              u = x9 + x5 | 0;
              x13 ^= u << 9 | u >>> (32 - 9);
              u = x13 + x9 | 0;
              x1 ^= u << 13 | u >>> (32 - 13);
              u = x1 + x13 | 0;
              x5 ^= u << 18 | u >>> (32 - 18);
              u = x10 + x6 | 0;
              x14 ^= u << 7 | u >>> (32 - 7);
              u = x14 + x10 | 0;
              x2 ^= u << 9 | u >>> (32 - 9);
              u = x2 + x14 | 0;
              x6 ^= u << 13 | u >>> (32 - 13);
              u = x6 + x2 | 0;
              x10 ^= u << 18 | u >>> (32 - 18);
              u = x15 + x11 | 0;
              x3 ^= u << 7 | u >>> (32 - 7);
              u = x3 + x15 | 0;
              x7 ^= u << 9 | u >>> (32 - 9);
              u = x7 + x3 | 0;
              x11 ^= u << 13 | u >>> (32 - 13);
              u = x11 + x7 | 0;
              x15 ^= u << 18 | u >>> (32 - 18);
              u = x0 + x3 | 0;
              x1 ^= u << 7 | u >>> (32 - 7);
              u = x1 + x0 | 0;
              x2 ^= u << 9 | u >>> (32 - 9);
              u = x2 + x1 | 0;
              x3 ^= u << 13 | u >>> (32 - 13);
              u = x3 + x2 | 0;
              x0 ^= u << 18 | u >>> (32 - 18);
              u = x5 + x4 | 0;
              x6 ^= u << 7 | u >>> (32 - 7);
              u = x6 + x5 | 0;
              x7 ^= u << 9 | u >>> (32 - 9);
              u = x7 + x6 | 0;
              x4 ^= u << 13 | u >>> (32 - 13);
              u = x4 + x7 | 0;
              x5 ^= u << 18 | u >>> (32 - 18);
              u = x10 + x9 | 0;
              x11 ^= u << 7 | u >>> (32 - 7);
              u = x11 + x10 | 0;
              x8 ^= u << 9 | u >>> (32 - 9);
              u = x8 + x11 | 0;
              x9 ^= u << 13 | u >>> (32 - 13);
              u = x9 + x8 | 0;
              x10 ^= u << 18 | u >>> (32 - 18);
              u = x15 + x14 | 0;
              x12 ^= u << 7 | u >>> (32 - 7);
              u = x12 + x15 | 0;
              x13 ^= u << 9 | u >>> (32 - 9);
              u = x13 + x12 | 0;
              x14 ^= u << 13 | u >>> (32 - 13);
              u = x14 + x13 | 0;
              x15 ^= u << 18 | u >>> (32 - 18);
            }
            o[0] = x0 >>> 0 & 0xff;
            o[1] = x0 >>> 8 & 0xff;
            o[2] = x0 >>> 16 & 0xff;
            o[3] = x0 >>> 24 & 0xff;
            o[4] = x5 >>> 0 & 0xff;
            o[5] = x5 >>> 8 & 0xff;
            o[6] = x5 >>> 16 & 0xff;
            o[7] = x5 >>> 24 & 0xff;
            o[8] = x10 >>> 0 & 0xff;
            o[9] = x10 >>> 8 & 0xff;
            o[10] = x10 >>> 16 & 0xff;
            o[11] = x10 >>> 24 & 0xff;
            o[12] = x15 >>> 0 & 0xff;
            o[13] = x15 >>> 8 & 0xff;
            o[14] = x15 >>> 16 & 0xff;
            o[15] = x15 >>> 24 & 0xff;
            o[16] = x6 >>> 0 & 0xff;
            o[17] = x6 >>> 8 & 0xff;
            o[18] = x6 >>> 16 & 0xff;
            o[19] = x6 >>> 24 & 0xff;
            o[20] = x7 >>> 0 & 0xff;
            o[21] = x7 >>> 8 & 0xff;
            o[22] = x7 >>> 16 & 0xff;
            o[23] = x7 >>> 24 & 0xff;
            o[24] = x8 >>> 0 & 0xff;
            o[25] = x8 >>> 8 & 0xff;
            o[26] = x8 >>> 16 & 0xff;
            o[27] = x8 >>> 24 & 0xff;
            o[28] = x9 >>> 0 & 0xff;
            o[29] = x9 >>> 8 & 0xff;
            o[30] = x9 >>> 16 & 0xff;
            o[31] = x9 >>> 24 & 0xff;
          }
          function crypto_core_salsa20(out, inp, k, c) {
            core_salsa20(out, inp, k, c);
          }
          function crypto_core_hsalsa20(out, inp, k, c) {
            core_hsalsa20(out, inp, k, c);
          }
          var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
          function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {
            var z = new Uint8Array(16),
                x = new Uint8Array(64);
            var u,
                i;
            for (i = 0; i < 16; i++)
              z[i] = 0;
            for (i = 0; i < 8; i++)
              z[i] = n[i];
            while (b >= 64) {
              crypto_core_salsa20(x, z, k, sigma);
              for (i = 0; i < 64; i++)
                c[cpos + i] = m[mpos + i] ^ x[i];
              u = 1;
              for (i = 8; i < 16; i++) {
                u = u + (z[i] & 0xff) | 0;
                z[i] = u & 0xff;
                u >>>= 8;
              }
              b -= 64;
              cpos += 64;
              mpos += 64;
            }
            if (b > 0) {
              crypto_core_salsa20(x, z, k, sigma);
              for (i = 0; i < b; i++)
                c[cpos + i] = m[mpos + i] ^ x[i];
            }
            return 0;
          }
          function crypto_stream_salsa20(c, cpos, b, n, k) {
            var z = new Uint8Array(16),
                x = new Uint8Array(64);
            var u,
                i;
            for (i = 0; i < 16; i++)
              z[i] = 0;
            for (i = 0; i < 8; i++)
              z[i] = n[i];
            while (b >= 64) {
              crypto_core_salsa20(x, z, k, sigma);
              for (i = 0; i < 64; i++)
                c[cpos + i] = x[i];
              u = 1;
              for (i = 8; i < 16; i++) {
                u = u + (z[i] & 0xff) | 0;
                z[i] = u & 0xff;
                u >>>= 8;
              }
              b -= 64;
              cpos += 64;
            }
            if (b > 0) {
              crypto_core_salsa20(x, z, k, sigma);
              for (i = 0; i < b; i++)
                c[cpos + i] = x[i];
            }
            return 0;
          }
          function crypto_stream(c, cpos, d, n, k) {
            var s = new Uint8Array(32);
            crypto_core_hsalsa20(s, n, k, sigma);
            var sn = new Uint8Array(8);
            for (var i = 0; i < 8; i++)
              sn[i] = n[i + 16];
            return crypto_stream_salsa20(c, cpos, d, sn, s);
          }
          function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {
            var s = new Uint8Array(32);
            crypto_core_hsalsa20(s, n, k, sigma);
            var sn = new Uint8Array(8);
            for (var i = 0; i < 8; i++)
              sn[i] = n[i + 16];
            return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);
          }
          var poly1305 = function(key) {
            this.buffer = new Uint8Array(16);
            this.r = new Uint16Array(10);
            this.h = new Uint16Array(10);
            this.pad = new Uint16Array(8);
            this.leftover = 0;
            this.fin = 0;
            var t0,
                t1,
                t2,
                t3,
                t4,
                t5,
                t6,
                t7;
            t0 = key[0] & 0xff | (key[1] & 0xff) << 8;
            this.r[0] = (t0) & 0x1fff;
            t1 = key[2] & 0xff | (key[3] & 0xff) << 8;
            this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;
            t2 = key[4] & 0xff | (key[5] & 0xff) << 8;
            this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;
            t3 = key[6] & 0xff | (key[7] & 0xff) << 8;
            this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;
            t4 = key[8] & 0xff | (key[9] & 0xff) << 8;
            this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;
            this.r[5] = ((t4 >>> 1)) & 0x1ffe;
            t5 = key[10] & 0xff | (key[11] & 0xff) << 8;
            this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;
            t6 = key[12] & 0xff | (key[13] & 0xff) << 8;
            this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;
            t7 = key[14] & 0xff | (key[15] & 0xff) << 8;
            this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;
            this.r[9] = ((t7 >>> 5)) & 0x007f;
            this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
            this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
            this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
            this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
            this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
            this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
            this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
            this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
          };
          poly1305.prototype.blocks = function(m, mpos, bytes) {
            var hibit = this.fin ? 0 : (1 << 11);
            var t0,
                t1,
                t2,
                t3,
                t4,
                t5,
                t6,
                t7,
                c;
            var d0,
                d1,
                d2,
                d3,
                d4,
                d5,
                d6,
                d7,
                d8,
                d9;
            var h0 = this.h[0],
                h1 = this.h[1],
                h2 = this.h[2],
                h3 = this.h[3],
                h4 = this.h[4],
                h5 = this.h[5],
                h6 = this.h[6],
                h7 = this.h[7],
                h8 = this.h[8],
                h9 = this.h[9];
            var r0 = this.r[0],
                r1 = this.r[1],
                r2 = this.r[2],
                r3 = this.r[3],
                r4 = this.r[4],
                r5 = this.r[5],
                r6 = this.r[6],
                r7 = this.r[7],
                r8 = this.r[8],
                r9 = this.r[9];
            while (bytes >= 16) {
              t0 = m[mpos + 0] & 0xff | (m[mpos + 1] & 0xff) << 8;
              h0 += (t0) & 0x1fff;
              t1 = m[mpos + 2] & 0xff | (m[mpos + 3] & 0xff) << 8;
              h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;
              t2 = m[mpos + 4] & 0xff | (m[mpos + 5] & 0xff) << 8;
              h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;
              t3 = m[mpos + 6] & 0xff | (m[mpos + 7] & 0xff) << 8;
              h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;
              t4 = m[mpos + 8] & 0xff | (m[mpos + 9] & 0xff) << 8;
              h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;
              h5 += ((t4 >>> 1)) & 0x1fff;
              t5 = m[mpos + 10] & 0xff | (m[mpos + 11] & 0xff) << 8;
              h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;
              t6 = m[mpos + 12] & 0xff | (m[mpos + 13] & 0xff) << 8;
              h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;
              t7 = m[mpos + 14] & 0xff | (m[mpos + 15] & 0xff) << 8;
              h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;
              h9 += ((t7 >>> 5)) | hibit;
              c = 0;
              d0 = c;
              d0 += h0 * r0;
              d0 += h1 * (5 * r9);
              d0 += h2 * (5 * r8);
              d0 += h3 * (5 * r7);
              d0 += h4 * (5 * r6);
              c = (d0 >>> 13);
              d0 &= 0x1fff;
              d0 += h5 * (5 * r5);
              d0 += h6 * (5 * r4);
              d0 += h7 * (5 * r3);
              d0 += h8 * (5 * r2);
              d0 += h9 * (5 * r1);
              c += (d0 >>> 13);
              d0 &= 0x1fff;
              d1 = c;
              d1 += h0 * r1;
              d1 += h1 * r0;
              d1 += h2 * (5 * r9);
              d1 += h3 * (5 * r8);
              d1 += h4 * (5 * r7);
              c = (d1 >>> 13);
              d1 &= 0x1fff;
              d1 += h5 * (5 * r6);
              d1 += h6 * (5 * r5);
              d1 += h7 * (5 * r4);
              d1 += h8 * (5 * r3);
              d1 += h9 * (5 * r2);
              c += (d1 >>> 13);
              d1 &= 0x1fff;
              d2 = c;
              d2 += h0 * r2;
              d2 += h1 * r1;
              d2 += h2 * r0;
              d2 += h3 * (5 * r9);
              d2 += h4 * (5 * r8);
              c = (d2 >>> 13);
              d2 &= 0x1fff;
              d2 += h5 * (5 * r7);
              d2 += h6 * (5 * r6);
              d2 += h7 * (5 * r5);
              d2 += h8 * (5 * r4);
              d2 += h9 * (5 * r3);
              c += (d2 >>> 13);
              d2 &= 0x1fff;
              d3 = c;
              d3 += h0 * r3;
              d3 += h1 * r2;
              d3 += h2 * r1;
              d3 += h3 * r0;
              d3 += h4 * (5 * r9);
              c = (d3 >>> 13);
              d3 &= 0x1fff;
              d3 += h5 * (5 * r8);
              d3 += h6 * (5 * r7);
              d3 += h7 * (5 * r6);
              d3 += h8 * (5 * r5);
              d3 += h9 * (5 * r4);
              c += (d3 >>> 13);
              d3 &= 0x1fff;
              d4 = c;
              d4 += h0 * r4;
              d4 += h1 * r3;
              d4 += h2 * r2;
              d4 += h3 * r1;
              d4 += h4 * r0;
              c = (d4 >>> 13);
              d4 &= 0x1fff;
              d4 += h5 * (5 * r9);
              d4 += h6 * (5 * r8);
              d4 += h7 * (5 * r7);
              d4 += h8 * (5 * r6);
              d4 += h9 * (5 * r5);
              c += (d4 >>> 13);
              d4 &= 0x1fff;
              d5 = c;
              d5 += h0 * r5;
              d5 += h1 * r4;
              d5 += h2 * r3;
              d5 += h3 * r2;
              d5 += h4 * r1;
              c = (d5 >>> 13);
              d5 &= 0x1fff;
              d5 += h5 * r0;
              d5 += h6 * (5 * r9);
              d5 += h7 * (5 * r8);
              d5 += h8 * (5 * r7);
              d5 += h9 * (5 * r6);
              c += (d5 >>> 13);
              d5 &= 0x1fff;
              d6 = c;
              d6 += h0 * r6;
              d6 += h1 * r5;
              d6 += h2 * r4;
              d6 += h3 * r3;
              d6 += h4 * r2;
              c = (d6 >>> 13);
              d6 &= 0x1fff;
              d6 += h5 * r1;
              d6 += h6 * r0;
              d6 += h7 * (5 * r9);
              d6 += h8 * (5 * r8);
              d6 += h9 * (5 * r7);
              c += (d6 >>> 13);
              d6 &= 0x1fff;
              d7 = c;
              d7 += h0 * r7;
              d7 += h1 * r6;
              d7 += h2 * r5;
              d7 += h3 * r4;
              d7 += h4 * r3;
              c = (d7 >>> 13);
              d7 &= 0x1fff;
              d7 += h5 * r2;
              d7 += h6 * r1;
              d7 += h7 * r0;
              d7 += h8 * (5 * r9);
              d7 += h9 * (5 * r8);
              c += (d7 >>> 13);
              d7 &= 0x1fff;
              d8 = c;
              d8 += h0 * r8;
              d8 += h1 * r7;
              d8 += h2 * r6;
              d8 += h3 * r5;
              d8 += h4 * r4;
              c = (d8 >>> 13);
              d8 &= 0x1fff;
              d8 += h5 * r3;
              d8 += h6 * r2;
              d8 += h7 * r1;
              d8 += h8 * r0;
              d8 += h9 * (5 * r9);
              c += (d8 >>> 13);
              d8 &= 0x1fff;
              d9 = c;
              d9 += h0 * r9;
              d9 += h1 * r8;
              d9 += h2 * r7;
              d9 += h3 * r6;
              d9 += h4 * r5;
              c = (d9 >>> 13);
              d9 &= 0x1fff;
              d9 += h5 * r4;
              d9 += h6 * r3;
              d9 += h7 * r2;
              d9 += h8 * r1;
              d9 += h9 * r0;
              c += (d9 >>> 13);
              d9 &= 0x1fff;
              c = (((c << 2) + c)) | 0;
              c = (c + d0) | 0;
              d0 = c & 0x1fff;
              c = (c >>> 13);
              d1 += c;
              h0 = d0;
              h1 = d1;
              h2 = d2;
              h3 = d3;
              h4 = d4;
              h5 = d5;
              h6 = d6;
              h7 = d7;
              h8 = d8;
              h9 = d9;
              mpos += 16;
              bytes -= 16;
            }
            this.h[0] = h0;
            this.h[1] = h1;
            this.h[2] = h2;
            this.h[3] = h3;
            this.h[4] = h4;
            this.h[5] = h5;
            this.h[6] = h6;
            this.h[7] = h7;
            this.h[8] = h8;
            this.h[9] = h9;
          };
          poly1305.prototype.finish = function(mac, macpos) {
            var g = new Uint16Array(10);
            var c,
                mask,
                f,
                i;
            if (this.leftover) {
              i = this.leftover;
              this.buffer[i++] = 1;
              for (; i < 16; i++)
                this.buffer[i] = 0;
              this.fin = 1;
              this.blocks(this.buffer, 0, 16);
            }
            c = this.h[1] >>> 13;
            this.h[1] &= 0x1fff;
            for (i = 2; i < 10; i++) {
              this.h[i] += c;
              c = this.h[i] >>> 13;
              this.h[i] &= 0x1fff;
            }
            this.h[0] += (c * 5);
            c = this.h[0] >>> 13;
            this.h[0] &= 0x1fff;
            this.h[1] += c;
            c = this.h[1] >>> 13;
            this.h[1] &= 0x1fff;
            this.h[2] += c;
            g[0] = this.h[0] + 5;
            c = g[0] >>> 13;
            g[0] &= 0x1fff;
            for (i = 1; i < 10; i++) {
              g[i] = this.h[i] + c;
              c = g[i] >>> 13;
              g[i] &= 0x1fff;
            }
            g[9] -= (1 << 13);
            mask = (g[9] >>> ((2 * 8) - 1)) - 1;
            for (i = 0; i < 10; i++)
              g[i] &= mask;
            mask = ~mask;
            for (i = 0; i < 10; i++)
              this.h[i] = (this.h[i] & mask) | g[i];
            this.h[0] = ((this.h[0]) | (this.h[1] << 13)) & 0xffff;
            this.h[1] = ((this.h[1] >>> 3) | (this.h[2] << 10)) & 0xffff;
            this.h[2] = ((this.h[2] >>> 6) | (this.h[3] << 7)) & 0xffff;
            this.h[3] = ((this.h[3] >>> 9) | (this.h[4] << 4)) & 0xffff;
            this.h[4] = ((this.h[4] >>> 12) | (this.h[5] << 1) | (this.h[6] << 14)) & 0xffff;
            this.h[5] = ((this.h[6] >>> 2) | (this.h[7] << 11)) & 0xffff;
            this.h[6] = ((this.h[7] >>> 5) | (this.h[8] << 8)) & 0xffff;
            this.h[7] = ((this.h[8] >>> 8) | (this.h[9] << 5)) & 0xffff;
            f = this.h[0] + this.pad[0];
            this.h[0] = f & 0xffff;
            for (i = 1; i < 8; i++) {
              f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
              this.h[i] = f & 0xffff;
            }
            mac[macpos + 0] = (this.h[0] >>> 0) & 0xff;
            mac[macpos + 1] = (this.h[0] >>> 8) & 0xff;
            mac[macpos + 2] = (this.h[1] >>> 0) & 0xff;
            mac[macpos + 3] = (this.h[1] >>> 8) & 0xff;
            mac[macpos + 4] = (this.h[2] >>> 0) & 0xff;
            mac[macpos + 5] = (this.h[2] >>> 8) & 0xff;
            mac[macpos + 6] = (this.h[3] >>> 0) & 0xff;
            mac[macpos + 7] = (this.h[3] >>> 8) & 0xff;
            mac[macpos + 8] = (this.h[4] >>> 0) & 0xff;
            mac[macpos + 9] = (this.h[4] >>> 8) & 0xff;
            mac[macpos + 10] = (this.h[5] >>> 0) & 0xff;
            mac[macpos + 11] = (this.h[5] >>> 8) & 0xff;
            mac[macpos + 12] = (this.h[6] >>> 0) & 0xff;
            mac[macpos + 13] = (this.h[6] >>> 8) & 0xff;
            mac[macpos + 14] = (this.h[7] >>> 0) & 0xff;
            mac[macpos + 15] = (this.h[7] >>> 8) & 0xff;
          };
          poly1305.prototype.update = function(m, mpos, bytes) {
            var i,
                want;
            if (this.leftover) {
              want = (16 - this.leftover);
              if (want > bytes)
                want = bytes;
              for (i = 0; i < want; i++)
                this.buffer[this.leftover + i] = m[mpos + i];
              bytes -= want;
              mpos += want;
              this.leftover += want;
              if (this.leftover < 16)
                return;
              this.blocks(buffer, 0, 16);
              this.leftover = 0;
            }
            if (bytes >= 16) {
              want = bytes - (bytes % 16);
              this.blocks(m, mpos, want);
              mpos += want;
              bytes -= want;
            }
            if (bytes) {
              for (i = 0; i < bytes; i++)
                this.buffer[this.leftover + i] = m[mpos + i];
              this.leftover += bytes;
            }
          };
          function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
            var s = new poly1305(k);
            s.update(m, mpos, n);
            s.finish(out, outpos);
            return 0;
          }
          function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
            var x = new Uint8Array(16);
            crypto_onetimeauth(x, 0, m, mpos, n, k);
            return crypto_verify_16(h, hpos, x, 0);
          }
          function crypto_secretbox(c, m, d, n, k) {
            var i;
            if (d < 32)
              return -1;
            crypto_stream_xor(c, 0, m, 0, d, n, k);
            crypto_onetimeauth(c, 16, c, 32, d - 32, c);
            for (i = 0; i < 16; i++)
              c[i] = 0;
            return 0;
          }
          function crypto_secretbox_open(m, c, d, n, k) {
            var i;
            var x = new Uint8Array(32);
            if (d < 32)
              return -1;
            crypto_stream(x, 0, 32, n, k);
            if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0)
              return -1;
            crypto_stream_xor(m, 0, c, 0, d, n, k);
            for (i = 0; i < 32; i++)
              m[i] = 0;
            return 0;
          }
          function set25519(r, a) {
            var i;
            for (i = 0; i < 16; i++)
              r[i] = a[i] | 0;
          }
          function car25519(o) {
            var i,
                v,
                c = 1;
            for (i = 0; i < 16; i++) {
              v = o[i] + c + 65535;
              c = Math.floor(v / 65536);
              o[i] = v - c * 65536;
            }
            o[0] += c - 1 + 37 * (c - 1);
          }
          function sel25519(p, q, b) {
            var t,
                c = ~(b - 1);
            for (var i = 0; i < 16; i++) {
              t = c & (p[i] ^ q[i]);
              p[i] ^= t;
              q[i] ^= t;
            }
          }
          function pack25519(o, n) {
            var i,
                j,
                b;
            var m = gf(),
                t = gf();
            for (i = 0; i < 16; i++)
              t[i] = n[i];
            car25519(t);
            car25519(t);
            car25519(t);
            for (j = 0; j < 2; j++) {
              m[0] = t[0] - 0xffed;
              for (i = 1; i < 15; i++) {
                m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);
                m[i - 1] &= 0xffff;
              }
              m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);
              b = (m[15] >> 16) & 1;
              m[14] &= 0xffff;
              sel25519(t, m, 1 - b);
            }
            for (i = 0; i < 16; i++) {
              o[2 * i] = t[i] & 0xff;
              o[2 * i + 1] = t[i] >> 8;
            }
          }
          function neq25519(a, b) {
            var c = new Uint8Array(32),
                d = new Uint8Array(32);
            pack25519(c, a);
            pack25519(d, b);
            return crypto_verify_32(c, 0, d, 0);
          }
          function par25519(a) {
            var d = new Uint8Array(32);
            pack25519(d, a);
            return d[0] & 1;
          }
          function unpack25519(o, n) {
            var i;
            for (i = 0; i < 16; i++)
              o[i] = n[2 * i] + (n[2 * i + 1] << 8);
            o[15] &= 0x7fff;
          }
          function A(o, a, b) {
            for (var i = 0; i < 16; i++)
              o[i] = a[i] + b[i];
          }
          function Z(o, a, b) {
            for (var i = 0; i < 16; i++)
              o[i] = a[i] - b[i];
          }
          function M(o, a, b) {
            var v,
                c,
                t0 = 0,
                t1 = 0,
                t2 = 0,
                t3 = 0,
                t4 = 0,
                t5 = 0,
                t6 = 0,
                t7 = 0,
                t8 = 0,
                t9 = 0,
                t10 = 0,
                t11 = 0,
                t12 = 0,
                t13 = 0,
                t14 = 0,
                t15 = 0,
                t16 = 0,
                t17 = 0,
                t18 = 0,
                t19 = 0,
                t20 = 0,
                t21 = 0,
                t22 = 0,
                t23 = 0,
                t24 = 0,
                t25 = 0,
                t26 = 0,
                t27 = 0,
                t28 = 0,
                t29 = 0,
                t30 = 0,
                b0 = b[0],
                b1 = b[1],
                b2 = b[2],
                b3 = b[3],
                b4 = b[4],
                b5 = b[5],
                b6 = b[6],
                b7 = b[7],
                b8 = b[8],
                b9 = b[9],
                b10 = b[10],
                b11 = b[11],
                b12 = b[12],
                b13 = b[13],
                b14 = b[14],
                b15 = b[15];
            v = a[0];
            t0 += v * b0;
            t1 += v * b1;
            t2 += v * b2;
            t3 += v * b3;
            t4 += v * b4;
            t5 += v * b5;
            t6 += v * b6;
            t7 += v * b7;
            t8 += v * b8;
            t9 += v * b9;
            t10 += v * b10;
            t11 += v * b11;
            t12 += v * b12;
            t13 += v * b13;
            t14 += v * b14;
            t15 += v * b15;
            v = a[1];
            t1 += v * b0;
            t2 += v * b1;
            t3 += v * b2;
            t4 += v * b3;
            t5 += v * b4;
            t6 += v * b5;
            t7 += v * b6;
            t8 += v * b7;
            t9 += v * b8;
            t10 += v * b9;
            t11 += v * b10;
            t12 += v * b11;
            t13 += v * b12;
            t14 += v * b13;
            t15 += v * b14;
            t16 += v * b15;
            v = a[2];
            t2 += v * b0;
            t3 += v * b1;
            t4 += v * b2;
            t5 += v * b3;
            t6 += v * b4;
            t7 += v * b5;
            t8 += v * b6;
            t9 += v * b7;
            t10 += v * b8;
            t11 += v * b9;
            t12 += v * b10;
            t13 += v * b11;
            t14 += v * b12;
            t15 += v * b13;
            t16 += v * b14;
            t17 += v * b15;
            v = a[3];
            t3 += v * b0;
            t4 += v * b1;
            t5 += v * b2;
            t6 += v * b3;
            t7 += v * b4;
            t8 += v * b5;
            t9 += v * b6;
            t10 += v * b7;
            t11 += v * b8;
            t12 += v * b9;
            t13 += v * b10;
            t14 += v * b11;
            t15 += v * b12;
            t16 += v * b13;
            t17 += v * b14;
            t18 += v * b15;
            v = a[4];
            t4 += v * b0;
            t5 += v * b1;
            t6 += v * b2;
            t7 += v * b3;
            t8 += v * b4;
            t9 += v * b5;
            t10 += v * b6;
            t11 += v * b7;
            t12 += v * b8;
            t13 += v * b9;
            t14 += v * b10;
            t15 += v * b11;
            t16 += v * b12;
            t17 += v * b13;
            t18 += v * b14;
            t19 += v * b15;
            v = a[5];
            t5 += v * b0;
            t6 += v * b1;
            t7 += v * b2;
            t8 += v * b3;
            t9 += v * b4;
            t10 += v * b5;
            t11 += v * b6;
            t12 += v * b7;
            t13 += v * b8;
            t14 += v * b9;
            t15 += v * b10;
            t16 += v * b11;
            t17 += v * b12;
            t18 += v * b13;
            t19 += v * b14;
            t20 += v * b15;
            v = a[6];
            t6 += v * b0;
            t7 += v * b1;
            t8 += v * b2;
            t9 += v * b3;
            t10 += v * b4;
            t11 += v * b5;
            t12 += v * b6;
            t13 += v * b7;
            t14 += v * b8;
            t15 += v * b9;
            t16 += v * b10;
            t17 += v * b11;
            t18 += v * b12;
            t19 += v * b13;
            t20 += v * b14;
            t21 += v * b15;
            v = a[7];
            t7 += v * b0;
            t8 += v * b1;
            t9 += v * b2;
            t10 += v * b3;
            t11 += v * b4;
            t12 += v * b5;
            t13 += v * b6;
            t14 += v * b7;
            t15 += v * b8;
            t16 += v * b9;
            t17 += v * b10;
            t18 += v * b11;
            t19 += v * b12;
            t20 += v * b13;
            t21 += v * b14;
            t22 += v * b15;
            v = a[8];
            t8 += v * b0;
            t9 += v * b1;
            t10 += v * b2;
            t11 += v * b3;
            t12 += v * b4;
            t13 += v * b5;
            t14 += v * b6;
            t15 += v * b7;
            t16 += v * b8;
            t17 += v * b9;
            t18 += v * b10;
            t19 += v * b11;
            t20 += v * b12;
            t21 += v * b13;
            t22 += v * b14;
            t23 += v * b15;
            v = a[9];
            t9 += v * b0;
            t10 += v * b1;
            t11 += v * b2;
            t12 += v * b3;
            t13 += v * b4;
            t14 += v * b5;
            t15 += v * b6;
            t16 += v * b7;
            t17 += v * b8;
            t18 += v * b9;
            t19 += v * b10;
            t20 += v * b11;
            t21 += v * b12;
            t22 += v * b13;
            t23 += v * b14;
            t24 += v * b15;
            v = a[10];
            t10 += v * b0;
            t11 += v * b1;
            t12 += v * b2;
            t13 += v * b3;
            t14 += v * b4;
            t15 += v * b5;
            t16 += v * b6;
            t17 += v * b7;
            t18 += v * b8;
            t19 += v * b9;
            t20 += v * b10;
            t21 += v * b11;
            t22 += v * b12;
            t23 += v * b13;
            t24 += v * b14;
            t25 += v * b15;
            v = a[11];
            t11 += v * b0;
            t12 += v * b1;
            t13 += v * b2;
            t14 += v * b3;
            t15 += v * b4;
            t16 += v * b5;
            t17 += v * b6;
            t18 += v * b7;
            t19 += v * b8;
            t20 += v * b9;
            t21 += v * b10;
            t22 += v * b11;
            t23 += v * b12;
            t24 += v * b13;
            t25 += v * b14;
            t26 += v * b15;
            v = a[12];
            t12 += v * b0;
            t13 += v * b1;
            t14 += v * b2;
            t15 += v * b3;
            t16 += v * b4;
            t17 += v * b5;
            t18 += v * b6;
            t19 += v * b7;
            t20 += v * b8;
            t21 += v * b9;
            t22 += v * b10;
            t23 += v * b11;
            t24 += v * b12;
            t25 += v * b13;
            t26 += v * b14;
            t27 += v * b15;
            v = a[13];
            t13 += v * b0;
            t14 += v * b1;
            t15 += v * b2;
            t16 += v * b3;
            t17 += v * b4;
            t18 += v * b5;
            t19 += v * b6;
            t20 += v * b7;
            t21 += v * b8;
            t22 += v * b9;
            t23 += v * b10;
            t24 += v * b11;
            t25 += v * b12;
            t26 += v * b13;
            t27 += v * b14;
            t28 += v * b15;
            v = a[14];
            t14 += v * b0;
            t15 += v * b1;
            t16 += v * b2;
            t17 += v * b3;
            t18 += v * b4;
            t19 += v * b5;
            t20 += v * b6;
            t21 += v * b7;
            t22 += v * b8;
            t23 += v * b9;
            t24 += v * b10;
            t25 += v * b11;
            t26 += v * b12;
            t27 += v * b13;
            t28 += v * b14;
            t29 += v * b15;
            v = a[15];
            t15 += v * b0;
            t16 += v * b1;
            t17 += v * b2;
            t18 += v * b3;
            t19 += v * b4;
            t20 += v * b5;
            t21 += v * b6;
            t22 += v * b7;
            t23 += v * b8;
            t24 += v * b9;
            t25 += v * b10;
            t26 += v * b11;
            t27 += v * b12;
            t28 += v * b13;
            t29 += v * b14;
            t30 += v * b15;
            t0 += 38 * t16;
            t1 += 38 * t17;
            t2 += 38 * t18;
            t3 += 38 * t19;
            t4 += 38 * t20;
            t5 += 38 * t21;
            t6 += 38 * t22;
            t7 += 38 * t23;
            t8 += 38 * t24;
            t9 += 38 * t25;
            t10 += 38 * t26;
            t11 += 38 * t27;
            t12 += 38 * t28;
            t13 += 38 * t29;
            t14 += 38 * t30;
            c = 1;
            v = t0 + c + 65535;
            c = Math.floor(v / 65536);
            t0 = v - c * 65536;
            v = t1 + c + 65535;
            c = Math.floor(v / 65536);
            t1 = v - c * 65536;
            v = t2 + c + 65535;
            c = Math.floor(v / 65536);
            t2 = v - c * 65536;
            v = t3 + c + 65535;
            c = Math.floor(v / 65536);
            t3 = v - c * 65536;
            v = t4 + c + 65535;
            c = Math.floor(v / 65536);
            t4 = v - c * 65536;
            v = t5 + c + 65535;
            c = Math.floor(v / 65536);
            t5 = v - c * 65536;
            v = t6 + c + 65535;
            c = Math.floor(v / 65536);
            t6 = v - c * 65536;
            v = t7 + c + 65535;
            c = Math.floor(v / 65536);
            t7 = v - c * 65536;
            v = t8 + c + 65535;
            c = Math.floor(v / 65536);
            t8 = v - c * 65536;
            v = t9 + c + 65535;
            c = Math.floor(v / 65536);
            t9 = v - c * 65536;
            v = t10 + c + 65535;
            c = Math.floor(v / 65536);
            t10 = v - c * 65536;
            v = t11 + c + 65535;
            c = Math.floor(v / 65536);
            t11 = v - c * 65536;
            v = t12 + c + 65535;
            c = Math.floor(v / 65536);
            t12 = v - c * 65536;
            v = t13 + c + 65535;
            c = Math.floor(v / 65536);
            t13 = v - c * 65536;
            v = t14 + c + 65535;
            c = Math.floor(v / 65536);
            t14 = v - c * 65536;
            v = t15 + c + 65535;
            c = Math.floor(v / 65536);
            t15 = v - c * 65536;
            t0 += c - 1 + 37 * (c - 1);
            c = 1;
            v = t0 + c + 65535;
            c = Math.floor(v / 65536);
            t0 = v - c * 65536;
            v = t1 + c + 65535;
            c = Math.floor(v / 65536);
            t1 = v - c * 65536;
            v = t2 + c + 65535;
            c = Math.floor(v / 65536);
            t2 = v - c * 65536;
            v = t3 + c + 65535;
            c = Math.floor(v / 65536);
            t3 = v - c * 65536;
            v = t4 + c + 65535;
            c = Math.floor(v / 65536);
            t4 = v - c * 65536;
            v = t5 + c + 65535;
            c = Math.floor(v / 65536);
            t5 = v - c * 65536;
            v = t6 + c + 65535;
            c = Math.floor(v / 65536);
            t6 = v - c * 65536;
            v = t7 + c + 65535;
            c = Math.floor(v / 65536);
            t7 = v - c * 65536;
            v = t8 + c + 65535;
            c = Math.floor(v / 65536);
            t8 = v - c * 65536;
            v = t9 + c + 65535;
            c = Math.floor(v / 65536);
            t9 = v - c * 65536;
            v = t10 + c + 65535;
            c = Math.floor(v / 65536);
            t10 = v - c * 65536;
            v = t11 + c + 65535;
            c = Math.floor(v / 65536);
            t11 = v - c * 65536;
            v = t12 + c + 65535;
            c = Math.floor(v / 65536);
            t12 = v - c * 65536;
            v = t13 + c + 65535;
            c = Math.floor(v / 65536);
            t13 = v - c * 65536;
            v = t14 + c + 65535;
            c = Math.floor(v / 65536);
            t14 = v - c * 65536;
            v = t15 + c + 65535;
            c = Math.floor(v / 65536);
            t15 = v - c * 65536;
            t0 += c - 1 + 37 * (c - 1);
            o[0] = t0;
            o[1] = t1;
            o[2] = t2;
            o[3] = t3;
            o[4] = t4;
            o[5] = t5;
            o[6] = t6;
            o[7] = t7;
            o[8] = t8;
            o[9] = t9;
            o[10] = t10;
            o[11] = t11;
            o[12] = t12;
            o[13] = t13;
            o[14] = t14;
            o[15] = t15;
          }
          function S(o, a) {
            M(o, a, a);
          }
          function inv25519(o, i) {
            var c = gf();
            var a;
            for (a = 0; a < 16; a++)
              c[a] = i[a];
            for (a = 253; a >= 0; a--) {
              S(c, c);
              if (a !== 2 && a !== 4)
                M(c, c, i);
            }
            for (a = 0; a < 16; a++)
              o[a] = c[a];
          }
          function pow2523(o, i) {
            var c = gf();
            var a;
            for (a = 0; a < 16; a++)
              c[a] = i[a];
            for (a = 250; a >= 0; a--) {
              S(c, c);
              if (a !== 1)
                M(c, c, i);
            }
            for (a = 0; a < 16; a++)
              o[a] = c[a];
          }
          function crypto_scalarmult(q, n, p) {
            var z = new Uint8Array(32);
            var x = new Float64Array(80),
                r,
                i;
            var a = gf(),
                b = gf(),
                c = gf(),
                d = gf(),
                e = gf(),
                f = gf();
            for (i = 0; i < 31; i++)
              z[i] = n[i];
            z[31] = (n[31] & 127) | 64;
            z[0] &= 248;
            unpack25519(x, p);
            for (i = 0; i < 16; i++) {
              b[i] = x[i];
              d[i] = a[i] = c[i] = 0;
            }
            a[0] = d[0] = 1;
            for (i = 254; i >= 0; --i) {
              r = (z[i >>> 3] >>> (i & 7)) & 1;
              sel25519(a, b, r);
              sel25519(c, d, r);
              A(e, a, c);
              Z(a, a, c);
              A(c, b, d);
              Z(b, b, d);
              S(d, e);
              S(f, a);
              M(a, c, a);
              M(c, b, e);
              A(e, a, c);
              Z(a, a, c);
              S(b, a);
              Z(c, d, f);
              M(a, c, _121665);
              A(a, a, d);
              M(c, c, a);
              M(a, d, f);
              M(d, b, x);
              S(b, e);
              sel25519(a, b, r);
              sel25519(c, d, r);
            }
            for (i = 0; i < 16; i++) {
              x[i + 16] = a[i];
              x[i + 32] = c[i];
              x[i + 48] = b[i];
              x[i + 64] = d[i];
            }
            var x32 = x.subarray(32);
            var x16 = x.subarray(16);
            inv25519(x32, x32);
            M(x16, x16, x32);
            pack25519(q, x16);
            return 0;
          }
          function crypto_scalarmult_base(q, n) {
            return crypto_scalarmult(q, n, _9);
          }
          function crypto_box_keypair(y, x) {
            randombytes(x, 32);
            return crypto_scalarmult_base(y, x);
          }
          function crypto_box_beforenm(k, y, x) {
            var s = new Uint8Array(32);
            crypto_scalarmult(s, x, y);
            return crypto_core_hsalsa20(k, _0, s, sigma);
          }
          var crypto_box_afternm = crypto_secretbox;
          var crypto_box_open_afternm = crypto_secretbox_open;
          function crypto_box(c, m, d, n, y, x) {
            var k = new Uint8Array(32);
            crypto_box_beforenm(k, y, x);
            return crypto_box_afternm(c, m, d, n, k);
          }
          function crypto_box_open(m, c, d, n, y, x) {
            var k = new Uint8Array(32);
            crypto_box_beforenm(k, y, x);
            return crypto_box_open_afternm(m, c, d, n, k);
          }
          var K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];
          function crypto_hashblocks_hl(hh, hl, m, n) {
            var wh = new Int32Array(16),
                wl = new Int32Array(16),
                bh0,
                bh1,
                bh2,
                bh3,
                bh4,
                bh5,
                bh6,
                bh7,
                bl0,
                bl1,
                bl2,
                bl3,
                bl4,
                bl5,
                bl6,
                bl7,
                th,
                tl,
                i,
                j,
                h,
                l,
                a,
                b,
                c,
                d;
            var ah0 = hh[0],
                ah1 = hh[1],
                ah2 = hh[2],
                ah3 = hh[3],
                ah4 = hh[4],
                ah5 = hh[5],
                ah6 = hh[6],
                ah7 = hh[7],
                al0 = hl[0],
                al1 = hl[1],
                al2 = hl[2],
                al3 = hl[3],
                al4 = hl[4],
                al5 = hl[5],
                al6 = hl[6],
                al7 = hl[7];
            var pos = 0;
            while (n >= 128) {
              for (i = 0; i < 16; i++) {
                j = 8 * i + pos;
                wh[i] = (m[j + 0] << 24) | (m[j + 1] << 16) | (m[j + 2] << 8) | m[j + 3];
                wl[i] = (m[j + 4] << 24) | (m[j + 5] << 16) | (m[j + 6] << 8) | m[j + 7];
              }
              for (i = 0; i < 80; i++) {
                bh0 = ah0;
                bh1 = ah1;
                bh2 = ah2;
                bh3 = ah3;
                bh4 = ah4;
                bh5 = ah5;
                bh6 = ah6;
                bh7 = ah7;
                bl0 = al0;
                bl1 = al1;
                bl2 = al2;
                bl3 = al3;
                bl4 = al4;
                bl5 = al5;
                bl6 = al6;
                bl7 = al7;
                h = ah7;
                l = al7;
                a = l & 0xffff;
                b = l >>> 16;
                c = h & 0xffff;
                d = h >>> 16;
                h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) | (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));
                l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) | (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                h = (ah4 & ah5) ^ (~ah4 & ah6);
                l = (al4 & al5) ^ (~al4 & al6);
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                h = K[i * 2];
                l = K[i * 2 + 1];
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                h = wh[i % 16];
                l = wl[i % 16];
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                th = c & 0xffff | d << 16;
                tl = a & 0xffff | b << 16;
                h = th;
                l = tl;
                a = l & 0xffff;
                b = l >>> 16;
                c = h & 0xffff;
                d = h >>> 16;
                h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) | (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));
                l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) | (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
                l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                bh7 = (c & 0xffff) | (d << 16);
                bl7 = (a & 0xffff) | (b << 16);
                h = bh3;
                l = bl3;
                a = l & 0xffff;
                b = l >>> 16;
                c = h & 0xffff;
                d = h >>> 16;
                h = th;
                l = tl;
                a += l & 0xffff;
                b += l >>> 16;
                c += h & 0xffff;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                bh3 = (c & 0xffff) | (d << 16);
                bl3 = (a & 0xffff) | (b << 16);
                ah1 = bh0;
                ah2 = bh1;
                ah3 = bh2;
                ah4 = bh3;
                ah5 = bh4;
                ah6 = bh5;
                ah7 = bh6;
                ah0 = bh7;
                al1 = bl0;
                al2 = bl1;
                al3 = bl2;
                al4 = bl3;
                al5 = bl4;
                al6 = bl5;
                al7 = bl6;
                al0 = bl7;
                if (i % 16 === 15) {
                  for (j = 0; j < 16; j++) {
                    h = wh[j];
                    l = wl[j];
                    a = l & 0xffff;
                    b = l >>> 16;
                    c = h & 0xffff;
                    d = h >>> 16;
                    h = wh[(j + 9) % 16];
                    l = wl[(j + 9) % 16];
                    a += l & 0xffff;
                    b += l >>> 16;
                    c += h & 0xffff;
                    d += h >>> 16;
                    th = wh[(j + 1) % 16];
                    tl = wl[(j + 1) % 16];
                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) | (tl << (32 - 8))) ^ (th >>> 7);
                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) | (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));
                    a += l & 0xffff;
                    b += l >>> 16;
                    c += h & 0xffff;
                    d += h >>> 16;
                    th = wh[(j + 14) % 16];
                    tl = wl[(j + 14) % 16];
                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) | (th << (32 - (61 - 32)))) ^ (th >>> 6);
                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) | (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));
                    a += l & 0xffff;
                    b += l >>> 16;
                    c += h & 0xffff;
                    d += h >>> 16;
                    b += a >>> 16;
                    c += b >>> 16;
                    d += c >>> 16;
                    wh[j] = (c & 0xffff) | (d << 16);
                    wl[j] = (a & 0xffff) | (b << 16);
                  }
                }
              }
              h = ah0;
              l = al0;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[0];
              l = hl[0];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[0] = ah0 = (c & 0xffff) | (d << 16);
              hl[0] = al0 = (a & 0xffff) | (b << 16);
              h = ah1;
              l = al1;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[1];
              l = hl[1];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[1] = ah1 = (c & 0xffff) | (d << 16);
              hl[1] = al1 = (a & 0xffff) | (b << 16);
              h = ah2;
              l = al2;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[2];
              l = hl[2];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[2] = ah2 = (c & 0xffff) | (d << 16);
              hl[2] = al2 = (a & 0xffff) | (b << 16);
              h = ah3;
              l = al3;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[3];
              l = hl[3];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[3] = ah3 = (c & 0xffff) | (d << 16);
              hl[3] = al3 = (a & 0xffff) | (b << 16);
              h = ah4;
              l = al4;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[4];
              l = hl[4];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[4] = ah4 = (c & 0xffff) | (d << 16);
              hl[4] = al4 = (a & 0xffff) | (b << 16);
              h = ah5;
              l = al5;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[5];
              l = hl[5];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[5] = ah5 = (c & 0xffff) | (d << 16);
              hl[5] = al5 = (a & 0xffff) | (b << 16);
              h = ah6;
              l = al6;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[6];
              l = hl[6];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[6] = ah6 = (c & 0xffff) | (d << 16);
              hl[6] = al6 = (a & 0xffff) | (b << 16);
              h = ah7;
              l = al7;
              a = l & 0xffff;
              b = l >>> 16;
              c = h & 0xffff;
              d = h >>> 16;
              h = hh[7];
              l = hl[7];
              a += l & 0xffff;
              b += l >>> 16;
              c += h & 0xffff;
              d += h >>> 16;
              b += a >>> 16;
              c += b >>> 16;
              d += c >>> 16;
              hh[7] = ah7 = (c & 0xffff) | (d << 16);
              hl[7] = al7 = (a & 0xffff) | (b << 16);
              pos += 128;
              n -= 128;
            }
            return n;
          }
          function crypto_hash(out, m, n) {
            var hh = new Int32Array(8),
                hl = new Int32Array(8),
                x = new Uint8Array(256),
                i,
                b = n;
            hh[0] = 0x6a09e667;
            hh[1] = 0xbb67ae85;
            hh[2] = 0x3c6ef372;
            hh[3] = 0xa54ff53a;
            hh[4] = 0x510e527f;
            hh[5] = 0x9b05688c;
            hh[6] = 0x1f83d9ab;
            hh[7] = 0x5be0cd19;
            hl[0] = 0xf3bcc908;
            hl[1] = 0x84caa73b;
            hl[2] = 0xfe94f82b;
            hl[3] = 0x5f1d36f1;
            hl[4] = 0xade682d1;
            hl[5] = 0x2b3e6c1f;
            hl[6] = 0xfb41bd6b;
            hl[7] = 0x137e2179;
            crypto_hashblocks_hl(hh, hl, m, n);
            n %= 128;
            for (i = 0; i < n; i++)
              x[i] = m[b - n + i];
            x[n] = 128;
            n = 256 - 128 * (n < 112 ? 1 : 0);
            x[n - 9] = 0;
            ts64(x, n - 8, (b / 0x20000000) | 0, b << 3);
            crypto_hashblocks_hl(hh, hl, x, n);
            for (i = 0; i < 8; i++)
              ts64(out, 8 * i, hh[i], hl[i]);
            return 0;
          }
          function add(p, q) {
            var a = gf(),
                b = gf(),
                c = gf(),
                d = gf(),
                e = gf(),
                f = gf(),
                g = gf(),
                h = gf(),
                t = gf();
            Z(a, p[1], p[0]);
            Z(t, q[1], q[0]);
            M(a, a, t);
            A(b, p[0], p[1]);
            A(t, q[0], q[1]);
            M(b, b, t);
            M(c, p[3], q[3]);
            M(c, c, D2);
            M(d, p[2], q[2]);
            A(d, d, d);
            Z(e, b, a);
            Z(f, d, c);
            A(g, d, c);
            A(h, b, a);
            M(p[0], e, f);
            M(p[1], h, g);
            M(p[2], g, f);
            M(p[3], e, h);
          }
          function cswap(p, q, b) {
            var i;
            for (i = 0; i < 4; i++) {
              sel25519(p[i], q[i], b);
            }
          }
          function pack(r, p) {
            var tx = gf(),
                ty = gf(),
                zi = gf();
            inv25519(zi, p[2]);
            M(tx, p[0], zi);
            M(ty, p[1], zi);
            pack25519(r, ty);
            r[31] ^= par25519(tx) << 7;
          }
          function scalarmult(p, q, s) {
            var b,
                i;
            set25519(p[0], gf0);
            set25519(p[1], gf1);
            set25519(p[2], gf1);
            set25519(p[3], gf0);
            for (i = 255; i >= 0; --i) {
              b = (s[(i / 8) | 0] >> (i & 7)) & 1;
              cswap(p, q, b);
              add(q, p);
              add(p, p);
              cswap(p, q, b);
            }
          }
          function scalarbase(p, s) {
            var q = [gf(), gf(), gf(), gf()];
            set25519(q[0], X);
            set25519(q[1], Y);
            set25519(q[2], gf1);
            M(q[3], X, Y);
            scalarmult(p, q, s);
          }
          function crypto_sign_keypair(pk, sk, seeded) {
            var d = new Uint8Array(64);
            var p = [gf(), gf(), gf(), gf()];
            var i;
            if (!seeded)
              randombytes(sk, 32);
            crypto_hash(d, sk, 32);
            d[0] &= 248;
            d[31] &= 127;
            d[31] |= 64;
            scalarbase(p, d);
            pack(pk, p);
            for (i = 0; i < 32; i++)
              sk[i + 32] = pk[i];
            return 0;
          }
          var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);
          function modL(r, x) {
            var carry,
                i,
                j,
                k;
            for (i = 63; i >= 32; --i) {
              carry = 0;
              for (j = i - 32, k = i - 12; j < k; ++j) {
                x[j] += carry - 16 * x[i] * L[j - (i - 32)];
                carry = (x[j] + 128) >> 8;
                x[j] -= carry * 256;
              }
              x[j] += carry;
              x[i] = 0;
            }
            carry = 0;
            for (j = 0; j < 32; j++) {
              x[j] += carry - (x[31] >> 4) * L[j];
              carry = x[j] >> 8;
              x[j] &= 255;
            }
            for (j = 0; j < 32; j++)
              x[j] -= carry * L[j];
            for (i = 0; i < 32; i++) {
              x[i + 1] += x[i] >> 8;
              r[i] = x[i] & 255;
            }
          }
          function reduce(r) {
            var x = new Float64Array(64),
                i;
            for (i = 0; i < 64; i++)
              x[i] = r[i];
            for (i = 0; i < 64; i++)
              r[i] = 0;
            modL(r, x);
          }
          function crypto_sign(sm, m, n, sk) {
            var d = new Uint8Array(64),
                h = new Uint8Array(64),
                r = new Uint8Array(64);
            var i,
                j,
                x = new Float64Array(64);
            var p = [gf(), gf(), gf(), gf()];
            crypto_hash(d, sk, 32);
            d[0] &= 248;
            d[31] &= 127;
            d[31] |= 64;
            var smlen = n + 64;
            for (i = 0; i < n; i++)
              sm[64 + i] = m[i];
            for (i = 0; i < 32; i++)
              sm[32 + i] = d[32 + i];
            crypto_hash(r, sm.subarray(32), n + 32);
            reduce(r);
            scalarbase(p, r);
            pack(sm, p);
            for (i = 32; i < 64; i++)
              sm[i] = sk[i];
            crypto_hash(h, sm, n + 64);
            reduce(h);
            for (i = 0; i < 64; i++)
              x[i] = 0;
            for (i = 0; i < 32; i++)
              x[i] = r[i];
            for (i = 0; i < 32; i++) {
              for (j = 0; j < 32; j++) {
                x[i + j] += h[i] * d[j];
              }
            }
            modL(sm.subarray(32), x);
            return smlen;
          }
          function unpackneg(r, p) {
            var t = gf(),
                chk = gf(),
                num = gf(),
                den = gf(),
                den2 = gf(),
                den4 = gf(),
                den6 = gf();
            set25519(r[2], gf1);
            unpack25519(r[1], p);
            S(num, r[1]);
            M(den, num, D);
            Z(num, num, r[2]);
            A(den, r[2], den);
            S(den2, den);
            S(den4, den2);
            M(den6, den4, den2);
            M(t, den6, num);
            M(t, t, den);
            pow2523(t, t);
            M(t, t, num);
            M(t, t, den);
            M(t, t, den);
            M(r[0], t, den);
            S(chk, r[0]);
            M(chk, chk, den);
            if (neq25519(chk, num))
              M(r[0], r[0], I);
            S(chk, r[0]);
            M(chk, chk, den);
            if (neq25519(chk, num))
              return -1;
            if (par25519(r[0]) === (p[31] >> 7))
              Z(r[0], gf0, r[0]);
            M(r[3], r[0], r[1]);
            return 0;
          }
          function crypto_sign_open(m, sm, n, pk) {
            var i,
                mlen;
            var t = new Uint8Array(32),
                h = new Uint8Array(64);
            var p = [gf(), gf(), gf(), gf()],
                q = [gf(), gf(), gf(), gf()];
            mlen = -1;
            if (n < 64)
              return -1;
            if (unpackneg(q, pk))
              return -1;
            for (i = 0; i < n; i++)
              m[i] = sm[i];
            for (i = 0; i < 32; i++)
              m[i + 32] = pk[i];
            crypto_hash(h, m, n);
            reduce(h);
            scalarmult(p, q, h);
            scalarbase(q, sm.subarray(32));
            add(p, q);
            pack(t, p);
            n -= 64;
            if (crypto_verify_32(sm, 0, t, 0)) {
              for (i = 0; i < n; i++)
                m[i] = 0;
              return -1;
            }
            for (i = 0; i < n; i++)
              m[i] = sm[i + 64];
            mlen = n;
            return mlen;
          }
          var crypto_secretbox_KEYBYTES = 32,
              crypto_secretbox_NONCEBYTES = 24,
              crypto_secretbox_ZEROBYTES = 32,
              crypto_secretbox_BOXZEROBYTES = 16,
              crypto_scalarmult_BYTES = 32,
              crypto_scalarmult_SCALARBYTES = 32,
              crypto_box_PUBLICKEYBYTES = 32,
              crypto_box_SECRETKEYBYTES = 32,
              crypto_box_BEFORENMBYTES = 32,
              crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
              crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
              crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
              crypto_sign_BYTES = 64,
              crypto_sign_PUBLICKEYBYTES = 32,
              crypto_sign_SECRETKEYBYTES = 64,
              crypto_sign_SEEDBYTES = 32,
              crypto_hash_BYTES = 64;
          nacl.lowlevel = {
            crypto_core_hsalsa20: crypto_core_hsalsa20,
            crypto_stream_xor: crypto_stream_xor,
            crypto_stream: crypto_stream,
            crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
            crypto_stream_salsa20: crypto_stream_salsa20,
            crypto_onetimeauth: crypto_onetimeauth,
            crypto_onetimeauth_verify: crypto_onetimeauth_verify,
            crypto_verify_16: crypto_verify_16,
            crypto_verify_32: crypto_verify_32,
            crypto_secretbox: crypto_secretbox,
            crypto_secretbox_open: crypto_secretbox_open,
            crypto_scalarmult: crypto_scalarmult,
            crypto_scalarmult_base: crypto_scalarmult_base,
            crypto_box_beforenm: crypto_box_beforenm,
            crypto_box_afternm: crypto_box_afternm,
            crypto_box: crypto_box,
            crypto_box_open: crypto_box_open,
            crypto_box_keypair: crypto_box_keypair,
            crypto_hash: crypto_hash,
            crypto_sign: crypto_sign,
            crypto_sign_keypair: crypto_sign_keypair,
            crypto_sign_open: crypto_sign_open,
            crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
            crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
            crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
            crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
            crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
            crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
            crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
            crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
            crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
            crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
            crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
            crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
            crypto_sign_BYTES: crypto_sign_BYTES,
            crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
            crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
            crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
            crypto_hash_BYTES: crypto_hash_BYTES
          };
          function checkLengths(k, n) {
            if (k.length !== crypto_secretbox_KEYBYTES)
              throw new Error('bad key size');
            if (n.length !== crypto_secretbox_NONCEBYTES)
              throw new Error('bad nonce size');
          }
          function checkBoxLengths(pk, sk) {
            if (pk.length !== crypto_box_PUBLICKEYBYTES)
              throw new Error('bad public key size');
            if (sk.length !== crypto_box_SECRETKEYBYTES)
              throw new Error('bad secret key size');
          }
          function checkArrayTypes() {
            var t,
                i;
            for (i = 0; i < arguments.length; i++) {
              if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')
                throw new TypeError('unexpected type ' + t + ', use Uint8Array');
            }
          }
          function cleanup(arr) {
            for (var i = 0; i < arr.length; i++)
              arr[i] = 0;
          }
          nacl.util = {};
          nacl.util.decodeUTF8 = function(s) {
            var i,
                d = unescape(encodeURIComponent(s)),
                b = new Uint8Array(d.length);
            for (i = 0; i < d.length; i++)
              b[i] = d.charCodeAt(i);
            return b;
          };
          nacl.util.encodeUTF8 = function(arr) {
            var i,
                s = [];
            for (i = 0; i < arr.length; i++)
              s.push(String.fromCharCode(arr[i]));
            return decodeURIComponent(escape(s.join('')));
          };
          nacl.util.encodeBase64 = function(arr) {
            if (typeof btoa === 'undefined') {
              return (new Buffer(arr)).toString('base64');
            } else {
              var i,
                  s = [],
                  len = arr.length;
              for (i = 0; i < len; i++)
                s.push(String.fromCharCode(arr[i]));
              return btoa(s.join(''));
            }
          };
          nacl.util.decodeBase64 = function(s) {
            if (typeof atob === 'undefined') {
              return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));
            } else {
              var i,
                  d = atob(s),
                  b = new Uint8Array(d.length);
              for (i = 0; i < d.length; i++)
                b[i] = d.charCodeAt(i);
              return b;
            }
          };
          nacl.randomBytes = function(n) {
            var b = new Uint8Array(n);
            randombytes(b, n);
            return b;
          };
          nacl.secretbox = function(msg, nonce, key) {
            checkArrayTypes(msg, nonce, key);
            checkLengths(key, nonce);
            var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
            var c = new Uint8Array(m.length);
            for (var i = 0; i < msg.length; i++)
              m[i + crypto_secretbox_ZEROBYTES] = msg[i];
            crypto_secretbox(c, m, m.length, nonce, key);
            return c.subarray(crypto_secretbox_BOXZEROBYTES);
          };
          nacl.secretbox.open = function(box, nonce, key) {
            checkArrayTypes(box, nonce, key);
            checkLengths(key, nonce);
            var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
            var m = new Uint8Array(c.length);
            for (var i = 0; i < box.length; i++)
              c[i + crypto_secretbox_BOXZEROBYTES] = box[i];
            if (c.length < 32)
              return false;
            if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0)
              return false;
            return m.subarray(crypto_secretbox_ZEROBYTES);
          };
          nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
          nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
          nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;
          nacl.scalarMult = function(n, p) {
            checkArrayTypes(n, p);
            if (n.length !== crypto_scalarmult_SCALARBYTES)
              throw new Error('bad n size');
            if (p.length !== crypto_scalarmult_BYTES)
              throw new Error('bad p size');
            var q = new Uint8Array(crypto_scalarmult_BYTES);
            crypto_scalarmult(q, n, p);
            return q;
          };
          nacl.scalarMult.base = function(n) {
            checkArrayTypes(n);
            if (n.length !== crypto_scalarmult_SCALARBYTES)
              throw new Error('bad n size');
            var q = new Uint8Array(crypto_scalarmult_BYTES);
            crypto_scalarmult_base(q, n);
            return q;
          };
          nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
          nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;
          nacl.box = function(msg, nonce, publicKey, secretKey) {
            var k = nacl.box.before(publicKey, secretKey);
            return nacl.secretbox(msg, nonce, k);
          };
          nacl.box.before = function(publicKey, secretKey) {
            checkArrayTypes(publicKey, secretKey);
            checkBoxLengths(publicKey, secretKey);
            var k = new Uint8Array(crypto_box_BEFORENMBYTES);
            crypto_box_beforenm(k, publicKey, secretKey);
            return k;
          };
          nacl.box.after = nacl.secretbox;
          nacl.box.open = function(msg, nonce, publicKey, secretKey) {
            var k = nacl.box.before(publicKey, secretKey);
            return nacl.secretbox.open(msg, nonce, k);
          };
          nacl.box.open.after = nacl.secretbox.open;
          nacl.box.keyPair = function() {
            var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
            var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
            crypto_box_keypair(pk, sk);
            return {
              publicKey: pk,
              secretKey: sk
            };
          };
          nacl.box.keyPair.fromSecretKey = function(secretKey) {
            checkArrayTypes(secretKey);
            if (secretKey.length !== crypto_box_SECRETKEYBYTES)
              throw new Error('bad secret key size');
            var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
            crypto_scalarmult_base(pk, secretKey);
            return {
              publicKey: pk,
              secretKey: new Uint8Array(secretKey)
            };
          };
          nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
          nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
          nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
          nacl.box.nonceLength = crypto_box_NONCEBYTES;
          nacl.box.overheadLength = nacl.secretbox.overheadLength;
          nacl.sign = function(msg, secretKey) {
            checkArrayTypes(msg, secretKey);
            if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
              throw new Error('bad secret key size');
            var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);
            crypto_sign(signedMsg, msg, msg.length, secretKey);
            return signedMsg;
          };
          nacl.sign.open = function(signedMsg, publicKey) {
            if (arguments.length !== 2)
              throw new Error('nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?');
            checkArrayTypes(signedMsg, publicKey);
            if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
              throw new Error('bad public key size');
            var tmp = new Uint8Array(signedMsg.length);
            var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
            if (mlen < 0)
              return null;
            var m = new Uint8Array(mlen);
            for (var i = 0; i < m.length; i++)
              m[i] = tmp[i];
            return m;
          };
          nacl.sign.detached = function(msg, secretKey) {
            var signedMsg = nacl.sign(msg, secretKey);
            var sig = new Uint8Array(crypto_sign_BYTES);
            for (var i = 0; i < sig.length; i++)
              sig[i] = signedMsg[i];
            return sig;
          };
          nacl.sign.detached.verify = function(msg, sig, publicKey) {
            checkArrayTypes(msg, sig, publicKey);
            if (sig.length !== crypto_sign_BYTES)
              throw new Error('bad signature size');
            if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
              throw new Error('bad public key size');
            var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
            var m = new Uint8Array(crypto_sign_BYTES + msg.length);
            var i;
            for (i = 0; i < crypto_sign_BYTES; i++)
              sm[i] = sig[i];
            for (i = 0; i < msg.length; i++)
              sm[i + crypto_sign_BYTES] = msg[i];
            return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
          };
          nacl.sign.keyPair = function() {
            var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
            var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
            crypto_sign_keypair(pk, sk);
            return {
              publicKey: pk,
              secretKey: sk
            };
          };
          nacl.sign.keyPair.fromSecretKey = function(secretKey) {
            checkArrayTypes(secretKey);
            if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
              throw new Error('bad secret key size');
            var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
            for (var i = 0; i < pk.length; i++)
              pk[i] = secretKey[32 + i];
            return {
              publicKey: pk,
              secretKey: new Uint8Array(secretKey)
            };
          };
          nacl.sign.keyPair.fromSeed = function(seed) {
            checkArrayTypes(seed);
            if (seed.length !== crypto_sign_SEEDBYTES)
              throw new Error('bad seed size');
            var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
            var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
            for (var i = 0; i < 32; i++)
              sk[i] = seed[i];
            crypto_sign_keypair(pk, sk, true);
            return {
              publicKey: pk,
              secretKey: sk
            };
          };
          nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
          nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
          nacl.sign.seedLength = crypto_sign_SEEDBYTES;
          nacl.sign.signatureLength = crypto_sign_BYTES;
          nacl.hash = function(msg) {
            checkArrayTypes(msg);
            var h = new Uint8Array(crypto_hash_BYTES);
            crypto_hash(h, msg, msg.length);
            return h;
          };
          nacl.hash.hashLength = crypto_hash_BYTES;
          nacl.verify = function(x, y) {
            checkArrayTypes(x, y);
            if (x.length === 0 || y.length === 0)
              return false;
            if (x.length !== y.length)
              return false;
            return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
          };
          nacl.setPRNG = function(fn) {
            randombytes = fn;
          };
          (function() {
            var crypto;
            if (typeof window !== 'undefined') {
              if (window.crypto && window.crypto.getRandomValues) {
                crypto = window.crypto;
              } else if (window.msCrypto && window.msCrypto.getRandomValues) {
                crypto = window.msCrypto;
              }
              if (crypto) {
                nacl.setPRNG(function(x, n) {
                  var i,
                      v = new Uint8Array(n);
                  crypto.getRandomValues(v);
                  for (i = 0; i < n; i++)
                    x[i] = v[i];
                  cleanup(v);
                });
              }
            } else if (typeof require !== 'undefined') {
              crypto = require('crypto');
              if (crypto) {
                nacl.setPRNG(function(x, n) {
                  var i,
                      v = crypto.randomBytes(n);
                  for (i = 0; i < n; i++)
                    x[i] = v[i];
                  cleanup(v);
                });
              }
            }
          })();
        })(typeof module !== 'undefined' && module.exports ? module.exports : (window.nacl = window.nacl || {}));
      }).call(this, require("buffer").Buffer);
    }, {
      "buffer": 45,
      "crypto": 53
    }],
    145: [function(require, module, exports) {
      (function(Buffer) {
        var io = require('../../assets/lib/andaman/io/event-pipe-b');
        var Event = require('../../assets/lib/andaman/def/evt').Event;
        var API = require('../../assets/lib/andaman/andaman-api');
        var srv_pub_p = '5Jz3NhPHKUYP2JfU2n+xsT8Q5xC57yhhWa2Mdprva0A=';
        var clt_pub_p = 'r4dHh2mSrijGSOK76k1DssBNcrjyGrV4LA9abowFTAk=';
        var clt_priv_p = 'Uih8sq+XRSbQO4ySOs0a0WovV8YDdw28efPf+NPt9M4=';
        var opts = {
          host: 'qakeys.safe.cash',
          proto: 'ws',
          port: 80,
          server_publicKey: '5Jz3NhPHKUYP2JfU2n+xsT8Q5xC57yhhWa2Mdprva0A='
        };
        var readyPromise = null;
        var isReady = false;
        var andamanApi = new API();
        var eventPipe;
        module.exports = {ready: function() {
            if (isReady)
              return Promise.resolve({
                andaman: andamanApi,
                pipe: eventPipe
              });
            if (readyPromise)
              return readyPromise;
            readyPromise = new Promise(function(resolve) {
              var buffer = new Buffer(1024);
              eventPipe = io({
                host: opts.host,
                port: opts.port,
                proto: opts.proto,
                buf: buffer,
                server_publicKey: srv_pub_p,
                publicKey: clt_pub_p,
                secretKey: clt_priv_p
              });
              eventPipe.on('connect', function() {
                console.log(eventPipe.id, 'connected with the server');
                readyPromise = null;
                isReady = true;
                resolve({
                  andaman: andamanApi,
                  pipe: eventPipe
                });
              });
            });
            return readyPromise;
          }};
      }).call(this, require("buffer").Buffer);
    }, {
      "../../assets/lib/andaman/andaman-api": 135,
      "../../assets/lib/andaman/def/evt": 136,
      "../../assets/lib/andaman/io/event-pipe-b": 139,
      "buffer": 45
    }]
  }, {}, [145])(145);
});

})();
$__System.registerDynamic('4', ['5', '6', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var getKeys = $__require('5'),
      toIObject = $__require('6');
  module.exports = function (object, el) {
    var O = toIObject(object),
        keys = getKeys(O),
        length = keys.length,
        index = 0,
        key;
    while (length > index) if (O[key = keys[index++]] === el) return key;
  };
  return module.exports;
});
$__System.registerDynamic('8', ['5', '9', 'a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // all enumerable object keys, includes symbols
  var getKeys = $__require('5'),
      gOPS = $__require('9'),
      pIE = $__require('a');
  module.exports = function (it) {
    var result = getKeys(it),
        getSymbols = gOPS.f;
    if (getSymbols) {
      var symbols = getSymbols(it),
          isEnum = pIE.f,
          i = 0,
          key;
      while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }return result;
  };
  return module.exports;
});
$__System.registerDynamic('b', ['c', 'd', 'e', 'f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '4', '8', '19', '1a', '6', '1b', '1c', '1d', '1e', '1f', '20', '5', '21', 'a', '9', '22', '23', '7'], true, function ($__require, exports, module) {
  'use strict';
  // ECMAScript 6 symbols shim

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      has = $__require('d'),
      DESCRIPTORS = $__require('e'),
      $export = $__require('f'),
      redefine = $__require('10'),
      META = $__require('11').KEY,
      $fails = $__require('12'),
      shared = $__require('13'),
      setToStringTag = $__require('14'),
      uid = $__require('15'),
      wks = $__require('16'),
      wksExt = $__require('17'),
      wksDefine = $__require('18'),
      keyOf = $__require('4'),
      enumKeys = $__require('8'),
      isArray = $__require('19'),
      anObject = $__require('1a'),
      toIObject = $__require('6'),
      toPrimitive = $__require('1b'),
      createDesc = $__require('1c'),
      _create = $__require('1d'),
      gOPNExt = $__require('1e'),
      $GOPD = $__require('1f'),
      $DP = $__require('20'),
      $keys = $__require('5'),
      gOPD = $GOPD.f,
      dP = $DP.f,
      gOPN = gOPNExt.f,
      $Symbol = global.Symbol,
      $JSON = global.JSON,
      _stringify = $JSON && $JSON.stringify,
      PROTOTYPE = 'prototype',
      HIDDEN = wks('_hidden'),
      TO_PRIMITIVE = wks('toPrimitive'),
      isEnum = {}.propertyIsEnumerable,
      SymbolRegistry = shared('symbol-registry'),
      AllSymbols = shared('symbols'),
      OPSymbols = shared('op-symbols'),
      ObjectProto = Object[PROTOTYPE],
      USE_NATIVE = typeof $Symbol == 'function',
      QObject = global.QObject;
  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDesc = DESCRIPTORS && $fails(function () {
    return _create(dP({}, 'a', {
      get: function () {
        return dP(this, 'a', { value: 7 }).a;
      }
    })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = gOPD(ObjectProto, key);
    if (protoDesc) delete ObjectProto[key];
    dP(it, key, D);
    if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function (tag) {
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if (has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _create(D, { enumerable: createDesc(0, false) });
      }return setSymbolDesc(it, key, D);
    }return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P)),
        i = 0,
        l = keys.length,
        key;
    while (l > i) $defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = toIObject(it);
    key = toPrimitive(key, true);
    if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
    var D = gOPD(it, key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN(toIObject(it)),
        result = [],
        i = 0,
        key;
    while (names.length > i) {
      if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
    }return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto,
        names = gOPN(IS_OP ? OPSymbols : toIObject(it)),
        result = [],
        i = 0,
        key;
    while (names.length > i) {
      if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
    }return result;
  };

  // 19.4.1.1 Symbol([description])
  if (!USE_NATIVE) {
    $Symbol = function Symbol() {
      if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function (value) {
        if (this === ObjectProto) $set.call(OPSymbols, value);
        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString() {
      return this._k;
    });

    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f = $defineProperty;
    $__require('21').f = gOPNExt.f = $getOwnPropertyNames;
    $__require('a').f = $propertyIsEnumerable;
    $__require('9').f = $getOwnPropertySymbols;

    if (DESCRIPTORS && !$__require('22')) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function (name) {
      return wrap(wks(name));
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

  for (var symbols =
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), i = 0; symbols.length > i;) wks(symbols[i++]);

  for (var symbols = $keys(wks.store), i = 0; symbols.length > i;) wksDefine(symbols[i++]);

  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function (key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(key) {
      if (isSymbol(key)) return keyOf(SymbolRegistry, key);
      throw TypeError(key + ' is not a symbol!');
    },
    useSetter: function () {
      setter = true;
    },
    useSimple: function () {
      setter = false;
    }
  });

  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

  // 24.3.2 JSON.stringify(value [, replacer [, space]])
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
    var S = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols
    return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it) {
      if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      var args = [it],
          i = 1,
          replacer,
          $replacer;
      while (arguments.length > i) args.push(arguments[i++]);
      replacer = args[1];
      if (typeof replacer == 'function') $replacer = replacer;
      if ($replacer || !isArray(replacer)) replacer = function (key, value) {
        if ($replacer) value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });

  // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || $__require('23')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  // 19.4.3.5 Symbol.prototype[@@toStringTag]
  setToStringTag($Symbol, 'Symbol');
  // 20.2.1.9 Math[@@toStringTag]
  setToStringTag(Math, 'Math', true);
  // 24.3.3 JSON[@@toStringTag]
  setToStringTag(global.JSON, 'JSON', true);
  return module.exports;
});
$__System.registerDynamic('24', ['f', '1d', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f');
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  $export($export.S, 'Object', { create: $__require('1d') });
  return module.exports;
});
$__System.registerDynamic('25', ['f', 'e', '20', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f');
  // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
  $export($export.S + $export.F * !$__require('e'), 'Object', { defineProperty: $__require('20').f });
  return module.exports;
});
$__System.registerDynamic('26', ['f', 'e', '27', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f');
  // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
  $export($export.S + $export.F * !$__require('e'), 'Object', { defineProperties: $__require('27') });
  return module.exports;
});
$__System.registerDynamic('28', ['6', '1f', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  var toIObject = $__require('6'),
      $getOwnPropertyDescriptor = $__require('1f').f;

  $__require('29')('getOwnPropertyDescriptor', function () {
    return function getOwnPropertyDescriptor(it, key) {
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });
  return module.exports;
});
$__System.registerDynamic('2a', ['2b', '2c', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.9 Object.getPrototypeOf(O)
  var toObject = $__require('2b'),
      $getPrototypeOf = $__require('2c');

  $__require('29')('getPrototypeOf', function () {
    return function getPrototypeOf(it) {
      return $getPrototypeOf(toObject(it));
    };
  });
  return module.exports;
});
$__System.registerDynamic('2d', ['2b', '5', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.14 Object.keys(O)
  var toObject = $__require('2b'),
      $keys = $__require('5');

  $__require('29')('keys', function () {
    return function keys(it) {
      return $keys(toObject(it));
    };
  });
  return module.exports;
});
$__System.registerDynamic('1e', ['6', '21', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  var toIObject = $__require('6'),
      gOPN = $__require('21').f,
      toString = {}.toString;

  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function (it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };
  return module.exports;
});
$__System.registerDynamic('2e', ['29', '1e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  $__require('29')('getOwnPropertyNames', function () {
    return $__require('1e').f;
  });
  return module.exports;
});
$__System.registerDynamic('2f', ['30', '11', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.5 Object.freeze(O)
  var isObject = $__require('30'),
      meta = $__require('11').onFreeze;

  $__require('29')('freeze', function ($freeze) {
    return function freeze(it) {
      return $freeze && isObject(it) ? $freeze(meta(it)) : it;
    };
  });
  return module.exports;
});
$__System.registerDynamic('31', ['30', '11', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.17 Object.seal(O)
  var isObject = $__require('30'),
      meta = $__require('11').onFreeze;

  $__require('29')('seal', function ($seal) {
    return function seal(it) {
      return $seal && isObject(it) ? $seal(meta(it)) : it;
    };
  });
  return module.exports;
});
$__System.registerDynamic('32', ['30', '11', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.15 Object.preventExtensions(O)
  var isObject = $__require('30'),
      meta = $__require('11').onFreeze;

  $__require('29')('preventExtensions', function ($preventExtensions) {
    return function preventExtensions(it) {
      return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
    };
  });
  return module.exports;
});
$__System.registerDynamic('33', ['30', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.12 Object.isFrozen(O)
  var isObject = $__require('30');

  $__require('29')('isFrozen', function ($isFrozen) {
    return function isFrozen(it) {
      return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
    };
  });
  return module.exports;
});
$__System.registerDynamic('34', ['30', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.13 Object.isSealed(O)
  var isObject = $__require('30');

  $__require('29')('isSealed', function ($isSealed) {
    return function isSealed(it) {
      return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
    };
  });
  return module.exports;
});
$__System.registerDynamic('29', ['f', '35', '12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // most Object methods by ES6 should accept primitives
  var $export = $__require('f'),
      core = $__require('35'),
      fails = $__require('12');
  module.exports = function (KEY, exec) {
    var fn = (core.Object || {})[KEY] || Object[KEY],
        exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function () {
      fn(1);
    }), 'Object', exp);
  };
  return module.exports;
});
$__System.registerDynamic('36', ['30', '29', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.11 Object.isExtensible(O)
  var isObject = $__require('30');

  $__require('29')('isExtensible', function ($isExtensible) {
    return function isExtensible(it) {
      return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
    };
  });
  return module.exports;
});
$__System.registerDynamic('37', ['f', '38', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.3.1 Object.assign(target, source)
  var $export = $__require('f');

  $export($export.S + $export.F, 'Object', { assign: $__require('38') });
  return module.exports;
});
$__System.registerDynamic('39', ['f', '3a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.3.10 Object.is(value1, value2)
  var $export = $__require('f');
  $export($export.S, 'Object', { is: $__require('3a') });
  return module.exports;
});
$__System.registerDynamic('3b', ['f', '3c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.3.19 Object.setPrototypeOf(O, proto)
  var $export = $__require('f');
  $export($export.S, 'Object', { setPrototypeOf: $__require('3c').set });
  return module.exports;
});
$__System.registerDynamic('3d', ['3e', '16', '10', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 19.1.3.6 Object.prototype.toString()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var classof = $__require('3e'),
      test = {};
  test[$__require('16')('toStringTag')] = 'z';
  if (test + '' != '[object z]') {
    $__require('10')(Object.prototype, 'toString', function toString() {
      return '[object ' + classof(this) + ']';
    }, true);
  }
  return module.exports;
});
$__System.registerDynamic('3f', ['f', '40', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
  var $export = $__require('f');

  $export($export.P, 'Function', { bind: $__require('40') });
  return module.exports;
});
$__System.registerDynamic('41', ['20', '1c', 'd', 'e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var dP = $__require('20').f,
      createDesc = $__require('1c'),
      has = $__require('d'),
      FProto = Function.prototype,
      nameRE = /^\s*function ([^ (]*)/,
      NAME = 'name';

  var isExtensible = Object.isExtensible || function () {
    return true;
  };

  // 19.2.4.2 name
  NAME in FProto || $__require('e') && dP(FProto, NAME, {
    configurable: true,
    get: function () {
      try {
        var that = this,
            name = ('' + that).match(nameRE)[1];
        has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
        return name;
      } catch (e) {
        return '';
      }
    }
  });
  return module.exports;
});
$__System.registerDynamic('42', ['30', '2c', '16', '20', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var isObject = $__require('30'),
      getPrototypeOf = $__require('2c'),
      HAS_INSTANCE = $__require('16')('hasInstance'),
      FunctionProto = Function.prototype;
  // 19.2.3.6 Function.prototype[@@hasInstance](V)
  if (!(HAS_INSTANCE in FunctionProto)) $__require('20').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
      if (typeof this != 'function' || !isObject(O)) return false;
      if (!isObject(this.prototype)) return O instanceof this;
      // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
      while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
      return false;
    } });
  return module.exports;
});
$__System.registerDynamic('43', ['f', '44', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $parseInt = $__require('44');
  // 18.2.5 parseInt(string, radix)
  $export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });
  return module.exports;
});
$__System.registerDynamic('45', ['f', '46', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $parseFloat = $__require('46');
  // 18.2.4 parseFloat(string)
  $export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });
  return module.exports;
});
$__System.registerDynamic('47', ['c', 'd', '48', '49', '1b', '12', '21', '1f', '20', '4a', '1d', 'e', '10', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      has = $__require('d'),
      cof = $__require('48'),
      inheritIfRequired = $__require('49'),
      toPrimitive = $__require('1b'),
      fails = $__require('12'),
      gOPN = $__require('21').f,
      gOPD = $__require('1f').f,
      dP = $__require('20').f,
      $trim = $__require('4a').trim,
      NUMBER = 'Number',
      $Number = global[NUMBER],
      Base = $Number,
      proto = $Number.prototype
  // Opera ~12 has broken Object#toString
  ,
      BROKEN_COF = cof($__require('1d')(proto)) == NUMBER,
      TRIM = 'trim' in String.prototype;

  // 7.1.3 ToNumber(argument)
  var toNumber = function (argument) {
    var it = toPrimitive(argument, false);
    if (typeof it == 'string' && it.length > 2) {
      it = TRIM ? it.trim() : $trim(it, 3);
      var first = it.charCodeAt(0),
          third,
          radix,
          maxCode;
      if (first === 43 || first === 45) {
        third = it.charCodeAt(2);
        if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
      } else if (first === 48) {
        switch (it.charCodeAt(1)) {
          case 66:case 98:
            radix = 2;maxCode = 49;break; // fast equal /^0b[01]+$/i
          case 79:case 111:
            radix = 8;maxCode = 55;break; // fast equal /^0o[0-7]+$/i
          default:
            return +it;
        }
        for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
          code = digits.charCodeAt(i);
          // parseInt parses a string to a first unavailable symbol
          // but ToNumber should return NaN if a string contains unavailable symbols
          if (code < 48 || code > maxCode) return NaN;
        }return parseInt(digits, radix);
      }
    }return +it;
  };

  if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
    $Number = function Number(value) {
      var it = arguments.length < 1 ? 0 : value,
          that = this;
      return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () {
        proto.valueOf.call(that);
      }) : cof(that) != NUMBER) ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
    };
    for (var keys = $__require('e') ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), j = 0, key; keys.length > j; j++) {
      if (has(Base, key = keys[j]) && !has($Number, key)) {
        dP($Number, key, gOPD(Base, key));
      }
    }
    $Number.prototype = proto;
    proto.constructor = $Number;
    $__require('10')(global, NUMBER, $Number);
  }
  return module.exports;
});
$__System.registerDynamic('4b', ['f', '4c', '4d', '4e', '12', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toInteger = $__require('4c'),
      aNumberValue = $__require('4d'),
      repeat = $__require('4e'),
      $toFixed = 1..toFixed,
      floor = Math.floor,
      data = [0, 0, 0, 0, 0, 0],
      ERROR = 'Number.toFixed: incorrect invocation!',
      ZERO = '0';

  var multiply = function (n, c) {
    var i = -1,
        c2 = c;
    while (++i < 6) {
      c2 += n * data[i];
      data[i] = c2 % 1e7;
      c2 = floor(c2 / 1e7);
    }
  };
  var divide = function (n) {
    var i = 6,
        c = 0;
    while (--i >= 0) {
      c += data[i];
      data[i] = floor(c / n);
      c = c % n * 1e7;
    }
  };
  var numToString = function () {
    var i = 6,
        s = '';
    while (--i >= 0) {
      if (s !== '' || i === 0 || data[i] !== 0) {
        var t = String(data[i]);
        s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
      }
    }return s;
  };
  var pow = function (x, n, acc) {
    return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
  };
  var log = function (x) {
    var n = 0,
        x2 = x;
    while (x2 >= 4096) {
      n += 12;
      x2 /= 4096;
    }
    while (x2 >= 2) {
      n += 1;
      x2 /= 2;
    }return n;
  };

  $export($export.P + $export.F * (!!$toFixed && (0.00008.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 1000000000000000128..toFixed(0) !== '1000000000000000128') || !$__require('12')(function () {
    // V8 ~ Android 4.3-
    $toFixed.call({});
  })), 'Number', {
    toFixed: function toFixed(fractionDigits) {
      var x = aNumberValue(this, ERROR),
          f = toInteger(fractionDigits),
          s = '',
          m = ZERO,
          e,
          z,
          j,
          k;
      if (f < 0 || f > 20) throw RangeError(ERROR);
      if (x != x) return 'NaN';
      if (x <= -1e21 || x >= 1e21) return String(x);
      if (x < 0) {
        s = '-';
        x = -x;
      }
      if (x > 1e-21) {
        e = log(x * pow(2, 69, 1)) - 69;
        z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
        z *= 0x10000000000000;
        e = 52 - e;
        if (e > 0) {
          multiply(0, z);
          j = f;
          while (j >= 7) {
            multiply(1e7, 0);
            j -= 7;
          }
          multiply(pow(10, j, 1), 0);
          j = e - 1;
          while (j >= 23) {
            divide(1 << 23);
            j -= 23;
          }
          divide(1 << j);
          multiply(1, 1);
          divide(2);
          m = numToString();
        } else {
          multiply(0, z);
          multiply(1 << -e, 0);
          m = numToString() + repeat.call(ZERO, f);
        }
      }
      if (f > 0) {
        k = m.length;
        m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
      } else {
        m = s + m;
      }return m;
    }
  });
  return module.exports;
});
$__System.registerDynamic('4d', ['48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var cof = $__require('48');
  module.exports = function (it, msg) {
    if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
    return +it;
  };
  return module.exports;
});
$__System.registerDynamic('4f', ['f', '12', '4d', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $fails = $__require('12'),
      aNumberValue = $__require('4d'),
      $toPrecision = 1..toPrecision;

  $export($export.P + $export.F * ($fails(function () {
    // IE7-
    return $toPrecision.call(1, undefined) !== '1';
  }) || !$fails(function () {
    // V8 ~ Android 4.3-
    $toPrecision.call({});
  })), 'Number', {
    toPrecision: function toPrecision(precision) {
      var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
      return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
    }
  });
  return module.exports;
});
$__System.registerDynamic('50', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.1 Number.EPSILON
  var $export = $__require('f');

  $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });
  return module.exports;
});
$__System.registerDynamic('51', ['f', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.2 Number.isFinite(number)
  var $export = $__require('f'),
      _isFinite = $__require('c').isFinite;

  $export($export.S, 'Number', {
    isFinite: function isFinite(it) {
      return typeof it == 'number' && _isFinite(it);
    }
  });
  return module.exports;
});
$__System.registerDynamic('52', ['f', '53', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.3 Number.isInteger(number)
  var $export = $__require('f');

  $export($export.S, 'Number', { isInteger: $__require('53') });
  return module.exports;
});
$__System.registerDynamic('54', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.4 Number.isNaN(number)
  var $export = $__require('f');

  $export($export.S, 'Number', {
    isNaN: function isNaN(number) {
      return number != number;
    }
  });
  return module.exports;
});
$__System.registerDynamic('53', ['30', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.3 Number.isInteger(number)
  var isObject = $__require('30'),
      floor = Math.floor;
  module.exports = function isInteger(it) {
    return !isObject(it) && isFinite(it) && floor(it) === it;
  };
  return module.exports;
});
$__System.registerDynamic('55', ['f', '53', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.5 Number.isSafeInteger(number)
  var $export = $__require('f'),
      isInteger = $__require('53'),
      abs = Math.abs;

  $export($export.S, 'Number', {
    isSafeInteger: function isSafeInteger(number) {
      return isInteger(number) && abs(number) <= 0x1fffffffffffff;
    }
  });
  return module.exports;
});
$__System.registerDynamic('56', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.6 Number.MAX_SAFE_INTEGER
  var $export = $__require('f');

  $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
  return module.exports;
});
$__System.registerDynamic('57', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.1.2.10 Number.MIN_SAFE_INTEGER
  var $export = $__require('f');

  $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });
  return module.exports;
});
$__System.registerDynamic('46', ['c', '4a', '58', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $parseFloat = $__require('c').parseFloat,
      $trim = $__require('4a').trim;

  module.exports = 1 / $parseFloat($__require('58') + '-0') !== -Infinity ? function parseFloat(str) {
    var string = $trim(String(str), 3),
        result = $parseFloat(string);
    return result === 0 && string.charAt(0) == '-' ? -0 : result;
  } : $parseFloat;
  return module.exports;
});
$__System.registerDynamic('59', ['f', '46', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $parseFloat = $__require('46');
  // 20.1.2.12 Number.parseFloat(string)
  $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });
  return module.exports;
});
$__System.registerDynamic('44', ['c', '4a', '58', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $parseInt = $__require('c').parseInt,
      $trim = $__require('4a').trim,
      ws = $__require('58'),
      hex = /^[\-+]?0[xX]/;

  module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
    var string = $trim(String(str), 3);
    return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));
  } : $parseInt;
  return module.exports;
});
$__System.registerDynamic('5a', ['f', '44', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $parseInt = $__require('44');
  // 20.1.2.13 Number.parseInt(string, radix)
  $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });
  return module.exports;
});
$__System.registerDynamic('5b', ['f', '5c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.3 Math.acosh(x)
  var $export = $__require('f'),
      log1p = $__require('5c'),
      sqrt = Math.sqrt,
      $acosh = Math.acosh;

  $export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
  && $acosh(Infinity) == Infinity), 'Math', {
    acosh: function acosh(x) {
      return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? Math.log(x) + Math.LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
    }
  });
  return module.exports;
});
$__System.registerDynamic('5d', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.5 Math.asinh(x)
  var $export = $__require('f'),
      $asinh = Math.asinh;

  function asinh(x) {
    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
  }

  // Tor Browser bug: Math.asinh(0) -> -0 
  $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });
  return module.exports;
});
$__System.registerDynamic('5e', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.7 Math.atanh(x)
  var $export = $__require('f'),
      $atanh = Math.atanh;

  // Tor Browser bug: Math.atanh(-0) -> 0 
  $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
    atanh: function atanh(x) {
      return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
    }
  });
  return module.exports;
});
$__System.registerDynamic('5f', ['f', '60', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.9 Math.cbrt(x)
  var $export = $__require('f'),
      sign = $__require('60');

  $export($export.S, 'Math', {
    cbrt: function cbrt(x) {
      return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
    }
  });
  return module.exports;
});
$__System.registerDynamic('61', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.11 Math.clz32(x)
  var $export = $__require('f');

  $export($export.S, 'Math', {
    clz32: function clz32(x) {
      return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
    }
  });
  return module.exports;
});
$__System.registerDynamic('62', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.12 Math.cosh(x)
  var $export = $__require('f'),
      exp = Math.exp;

  $export($export.S, 'Math', {
    cosh: function cosh(x) {
      return (exp(x = +x) + exp(-x)) / 2;
    }
  });
  return module.exports;
});
$__System.registerDynamic('63', ['f', '64', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.14 Math.expm1(x)
  var $export = $__require('f'),
      $expm1 = $__require('64');

  $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });
  return module.exports;
});
$__System.registerDynamic('65', ['f', '60', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.16 Math.fround(x)
  var $export = $__require('f'),
      sign = $__require('60'),
      pow = Math.pow,
      EPSILON = pow(2, -52),
      EPSILON32 = pow(2, -23),
      MAX32 = pow(2, 127) * (2 - EPSILON32),
      MIN32 = pow(2, -126);

  var roundTiesToEven = function (n) {
    return n + 1 / EPSILON - 1 / EPSILON;
  };

  $export($export.S, 'Math', {
    fround: function fround(x) {
      var $abs = Math.abs(x),
          $sign = sign(x),
          a,
          result;
      if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
      a = (1 + EPSILON32 / EPSILON) * $abs;
      result = a - (a - $abs);
      if (result > MAX32 || result != result) return $sign * Infinity;
      return $sign * result;
    }
  });
  return module.exports;
});
$__System.registerDynamic('66', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
  var $export = $__require('f'),
      abs = Math.abs;

  $export($export.S, 'Math', {
    hypot: function hypot(value1, value2) {
      // eslint-disable-line no-unused-vars
      var sum = 0,
          i = 0,
          aLen = arguments.length,
          larg = 0,
          arg,
          div;
      while (i < aLen) {
        arg = abs(arguments[i++]);
        if (larg < arg) {
          div = larg / arg;
          sum = sum * div * div + 1;
          larg = arg;
        } else if (arg > 0) {
          div = arg / larg;
          sum += div * div;
        } else sum += arg;
      }
      return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
    }
  });
  return module.exports;
});
$__System.registerDynamic('67', ['f', '12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.18 Math.imul(x, y)
  var $export = $__require('f'),
      $imul = Math.imul;

  // some WebKit versions fails with big numbers, some has wrong arity
  $export($export.S + $export.F * $__require('12')(function () {
    return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
  }), 'Math', {
    imul: function imul(x, y) {
      var UINT16 = 0xffff,
          xn = +x,
          yn = +y,
          xl = UINT16 & xn,
          yl = UINT16 & yn;
      return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
    }
  });
  return module.exports;
});
$__System.registerDynamic('68', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.21 Math.log10(x)
  var $export = $__require('f');

  $export($export.S, 'Math', {
    log10: function log10(x) {
      return Math.log(x) / Math.LN10;
    }
  });
  return module.exports;
});
$__System.registerDynamic("5c", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.20 Math.log1p(x)
  module.exports = Math.log1p || function log1p(x) {
    return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
  };
  return module.exports;
});
$__System.registerDynamic('69', ['f', '5c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.20 Math.log1p(x)
  var $export = $__require('f');

  $export($export.S, 'Math', { log1p: $__require('5c') });
  return module.exports;
});
$__System.registerDynamic('6a', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.22 Math.log2(x)
  var $export = $__require('f');

  $export($export.S, 'Math', {
    log2: function log2(x) {
      return Math.log(x) / Math.LN2;
    }
  });
  return module.exports;
});
$__System.registerDynamic("60", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.28 Math.sign(x)
  module.exports = Math.sign || function sign(x) {
    return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
  };
  return module.exports;
});
$__System.registerDynamic('6b', ['f', '60', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.28 Math.sign(x)
  var $export = $__require('f');

  $export($export.S, 'Math', { sign: $__require('60') });
  return module.exports;
});
$__System.registerDynamic('6c', ['f', '64', '12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.30 Math.sinh(x)
  var $export = $__require('f'),
      expm1 = $__require('64'),
      exp = Math.exp;

  // V8 near Chromium 38 has a problem with very small numbers
  $export($export.S + $export.F * $__require('12')(function () {
    return !Math.sinh(-2e-17) != -2e-17;
  }), 'Math', {
    sinh: function sinh(x) {
      return Math.abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
    }
  });
  return module.exports;
});
$__System.registerDynamic("64", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.14 Math.expm1(x)
  var $expm1 = Math.expm1;
  module.exports = !$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17 ? function expm1(x) {
    return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
  } : $expm1;
  return module.exports;
});
$__System.registerDynamic('6d', ['f', '64', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.33 Math.tanh(x)
  var $export = $__require('f'),
      expm1 = $__require('64'),
      exp = Math.exp;

  $export($export.S, 'Math', {
    tanh: function tanh(x) {
      var a = expm1(x = +x),
          b = expm1(-x);
      return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
    }
  });
  return module.exports;
});
$__System.registerDynamic('6e', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.2.2.34 Math.trunc(x)
  var $export = $__require('f');

  $export($export.S, 'Math', {
    trunc: function trunc(it) {
      return (it > 0 ? Math.floor : Math.ceil)(it);
    }
  });
  return module.exports;
});
$__System.registerDynamic('6f', ['f', '70', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toIndex = $__require('70'),
      fromCharCode = String.fromCharCode,
      $fromCodePoint = String.fromCodePoint;

  // length should be 1, old FF problem
  $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
    // 21.1.2.2 String.fromCodePoint(...codePoints)
    fromCodePoint: function fromCodePoint(x) {
      // eslint-disable-line no-unused-vars
      var res = [],
          aLen = arguments.length,
          i = 0,
          code;
      while (aLen > i) {
        code = +arguments[i++];
        if (toIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
        res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
      }return res.join('');
    }
  });
  return module.exports;
});
$__System.registerDynamic('71', ['f', '6', '72', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toIObject = $__require('6'),
      toLength = $__require('72');

  $export($export.S, 'String', {
    // 21.1.2.4 String.raw(callSite, ...substitutions)
    raw: function raw(callSite) {
      var tpl = toIObject(callSite.raw),
          len = toLength(tpl.length),
          aLen = arguments.length,
          res = [],
          i = 0;
      while (len > i) {
        res.push(String(tpl[i++]));
        if (i < aLen) res.push(String(arguments[i]));
      }return res.join('');
    }
  });
  return module.exports;
});
$__System.registerDynamic('73', ['4a', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 21.1.3.25 String.prototype.trim()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('4a')('trim', function ($trim) {
    return function trim() {
      return $trim(this, 3);
    };
  });
  return module.exports;
});
$__System.registerDynamic('74', ['75', '76', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $at = $__require('75')(true);

  // 21.1.3.27 String.prototype[@@iterator]()
  $__require('76')(String, 'String', function (iterated) {
    this._t = String(iterated); // target
    this._i = 0; // next index
    // 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function () {
    var O = this._t,
        index = this._i,
        point;
    if (index >= O.length) return { value: undefined, done: true };
    point = $at(O, index);
    this._i += point.length;
    return { value: point, done: false };
  });
  return module.exports;
});
$__System.registerDynamic('77', ['f', '75', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $at = $__require('75')(false);
  $export($export.P, 'String', {
    // 21.1.3.3 String.prototype.codePointAt(pos)
    codePointAt: function codePointAt(pos) {
      return $at(this, pos);
    }
  });
  return module.exports;
});
$__System.registerDynamic('78', ['f', '72', '79', '7a', '7'], true, function ($__require, exports, module) {
  // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toLength = $__require('72'),
      context = $__require('79'),
      ENDS_WITH = 'endsWith',
      $endsWith = ''[ENDS_WITH];

  $export($export.P + $export.F * $__require('7a')(ENDS_WITH), 'String', {
    endsWith: function endsWith(searchString /*, endPosition = @length */) {
      var that = context(this, searchString, ENDS_WITH),
          endPosition = arguments.length > 1 ? arguments[1] : undefined,
          len = toLength(that.length),
          end = endPosition === undefined ? len : Math.min(toLength(endPosition), len),
          search = String(searchString);
      return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
    }
  });
  return module.exports;
});
$__System.registerDynamic('7b', ['f', '79', '7a', '7'], true, function ($__require, exports, module) {
  // 21.1.3.7 String.prototype.includes(searchString, position = 0)
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      context = $__require('79'),
      INCLUDES = 'includes';

  $export($export.P + $export.F * $__require('7a')(INCLUDES), 'String', {
    includes: function includes(searchString /*, position = 0 */) {
      return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  return module.exports;
});
$__System.registerDynamic('7c', ['f', '4e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f');

  $export($export.P, 'String', {
    // 21.1.3.13 String.prototype.repeat(count)
    repeat: $__require('4e')
  });
  return module.exports;
});
$__System.registerDynamic('79', ['7d', '7e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // helper for String#{startsWith, endsWith, includes}
  var isRegExp = $__require('7d'),
      defined = $__require('7e');

  module.exports = function (that, searchString, NAME) {
    if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
    return String(defined(that));
  };
  return module.exports;
});
$__System.registerDynamic('7a', ['16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var MATCH = $__require('16')('match');
  module.exports = function (KEY) {
    var re = /./;
    try {
      '/./'[KEY](re);
    } catch (e) {
      try {
        re[MATCH] = false;
        return !'/./'[KEY](re);
      } catch (f) {/* empty */}
    }return true;
  };
  return module.exports;
});
$__System.registerDynamic('7f', ['f', '72', '79', '7a', '7'], true, function ($__require, exports, module) {
  // 21.1.3.18 String.prototype.startsWith(searchString [, position ])
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toLength = $__require('72'),
      context = $__require('79'),
      STARTS_WITH = 'startsWith',
      $startsWith = ''[STARTS_WITH];

  $export($export.P + $export.F * $__require('7a')(STARTS_WITH), 'String', {
    startsWith: function startsWith(searchString /*, position = 0 */) {
      var that = context(this, searchString, STARTS_WITH),
          index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length)),
          search = String(searchString);
      return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
    }
  });
  return module.exports;
});
$__System.registerDynamic('80', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.2 String.prototype.anchor(name)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('anchor', function (createHTML) {
    return function anchor(name) {
      return createHTML(this, 'a', 'name', name);
    };
  });
  return module.exports;
});
$__System.registerDynamic('82', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.3 String.prototype.big()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('big', function (createHTML) {
    return function big() {
      return createHTML(this, 'big', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('83', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.4 String.prototype.blink()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('blink', function (createHTML) {
    return function blink() {
      return createHTML(this, 'blink', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('84', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.5 String.prototype.bold()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('bold', function (createHTML) {
    return function bold() {
      return createHTML(this, 'b', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('85', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.6 String.prototype.fixed()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('fixed', function (createHTML) {
    return function fixed() {
      return createHTML(this, 'tt', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('86', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.7 String.prototype.fontcolor(color)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('fontcolor', function (createHTML) {
    return function fontcolor(color) {
      return createHTML(this, 'font', 'color', color);
    };
  });
  return module.exports;
});
$__System.registerDynamic('87', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.8 String.prototype.fontsize(size)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('fontsize', function (createHTML) {
    return function fontsize(size) {
      return createHTML(this, 'font', 'size', size);
    };
  });
  return module.exports;
});
$__System.registerDynamic('88', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.9 String.prototype.italics()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('italics', function (createHTML) {
    return function italics() {
      return createHTML(this, 'i', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('89', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.10 String.prototype.link(url)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('link', function (createHTML) {
    return function link(url) {
      return createHTML(this, 'a', 'href', url);
    };
  });
  return module.exports;
});
$__System.registerDynamic('8a', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.11 String.prototype.small()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('small', function (createHTML) {
    return function small() {
      return createHTML(this, 'small', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('8b', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.12 String.prototype.strike()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('strike', function (createHTML) {
    return function strike() {
      return createHTML(this, 'strike', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('8c', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.13 String.prototype.sub()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('sub', function (createHTML) {
    return function sub() {
      return createHTML(this, 'sub', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('81', ['f', '12', '7e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      fails = $__require('12'),
      defined = $__require('7e'),
      quot = /"/g;
  // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
  var createHTML = function (string, tag, attribute, value) {
    var S = String(defined(string)),
        p1 = '<' + tag;
    if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
    return p1 + '>' + S + '</' + tag + '>';
  };
  module.exports = function (NAME, exec) {
    var O = {};
    O[NAME] = exec(createHTML);
    $export($export.P + $export.F * fails(function () {
      var test = ''[NAME]('"');
      return test !== test.toLowerCase() || test.split('"').length > 3;
    }), 'String', O);
  };
  return module.exports;
});
$__System.registerDynamic('8d', ['81', '7'], true, function ($__require, exports, module) {
  'use strict';
  // B.2.3.14 String.prototype.sup()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('81')('sup', function (createHTML) {
    return function sup() {
      return createHTML(this, 'sup', '', '');
    };
  });
  return module.exports;
});
$__System.registerDynamic('8e', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 20.3.3.1 / 15.9.4.4 Date.now()
  var $export = $__require('f');

  $export($export.S, 'Date', { now: function () {
      return new Date().getTime();
    } });
  return module.exports;
});
$__System.registerDynamic('8f', ['f', '2b', '1b', '12', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toObject = $__require('2b'),
      toPrimitive = $__require('1b');

  $export($export.P + $export.F * $__require('12')(function () {
    return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({ toISOString: function () {
        return 1;
      } }) !== 1;
  }), 'Date', {
    toJSON: function toJSON(key) {
      var O = toObject(this),
          pv = toPrimitive(O);
      return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
    }
  });
  return module.exports;
});
$__System.registerDynamic('90', ['f', '12', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      fails = $__require('12'),
      getTime = Date.prototype.getTime;

  var lz = function (num) {
    return num > 9 ? num : '0' + num;
  };

  // PhantomJS / old WebKit has a broken implementations
  $export($export.P + $export.F * (fails(function () {
    return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
  }) || !fails(function () {
    new Date(NaN).toISOString();
  })), 'Date', {
    toISOString: function toISOString() {
      if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
      var d = this,
          y = d.getUTCFullYear(),
          m = d.getUTCMilliseconds(),
          s = y < 0 ? '-' : y > 9999 ? '+' : '';
      return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) + '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) + 'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) + ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
    }
  });
  return module.exports;
});
$__System.registerDynamic('91', ['10', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var DateProto = Date.prototype,
      INVALID_DATE = 'Invalid Date',
      TO_STRING = 'toString',
      $toString = DateProto[TO_STRING],
      getTime = DateProto.getTime;
  if (new Date(NaN) + '' != INVALID_DATE) {
    $__require('10')(DateProto, TO_STRING, function toString() {
      var value = getTime.call(this);
      return value === value ? $toString.call(this) : INVALID_DATE;
    });
  }
  return module.exports;
});
$__System.registerDynamic('92', ['1a', '1b', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var anObject = $__require('1a'),
      toPrimitive = $__require('1b'),
      NUMBER = 'number';

  module.exports = function (hint) {
    if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
    return toPrimitive(anObject(this), hint != NUMBER);
  };
  return module.exports;
});
$__System.registerDynamic('93', ['16', '23', '92', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var TO_PRIMITIVE = $__require('16')('toPrimitive'),
      proto = Date.prototype;

  if (!(TO_PRIMITIVE in proto)) $__require('23')(proto, TO_PRIMITIVE, $__require('92'));
  return module.exports;
});
$__System.registerDynamic('94', ['f', '19', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
  var $export = $__require('f');

  $export($export.S, 'Array', { isArray: $__require('19') });
  return module.exports;
});
$__System.registerDynamic('95', ['96', 'f', '2b', '97', '98', '72', '99', '9a', '9b', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var ctx = $__require('96'),
      $export = $__require('f'),
      toObject = $__require('2b'),
      call = $__require('97'),
      isArrayIter = $__require('98'),
      toLength = $__require('72'),
      createProperty = $__require('99'),
      getIterFn = $__require('9a');

  $export($export.S + $export.F * !$__require('9b')(function (iter) {
    Array.from(iter);
  }), 'Array', {
    // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
    from: function from(arrayLike /*, mapfn = undefined, thisArg = undefined*/) {
      var O = toObject(arrayLike),
          C = typeof this == 'function' ? this : Array,
          aLen = arguments.length,
          mapfn = aLen > 1 ? arguments[1] : undefined,
          mapping = mapfn !== undefined,
          index = 0,
          iterFn = getIterFn(O),
          length,
          result,
          step,
          iterator;
      if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
      // if object isn't iterable or it's array with default iterator - use simple case
      if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
        for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
          createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
        }
      } else {
        length = toLength(O.length);
        for (result = new C(length); length > index; index++) {
          createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
        }
      }
      result.length = index;
      return result;
    }
  });
  return module.exports;
});
$__System.registerDynamic('9c', ['f', '99', '12', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      createProperty = $__require('99');

  // WebKit Array.of isn't generic
  $export($export.S + $export.F * $__require('12')(function () {
    function F() {}
    return !(Array.of.call(F) instanceof F);
  }), 'Array', {
    // 22.1.2.3 Array.of( ...items)
    of: function of() /* ...args */{
      var index = 0,
          aLen = arguments.length,
          result = new (typeof this == 'function' ? this : Array)(aLen);
      while (aLen > index) createProperty(result, index, arguments[index++]);
      result.length = aLen;
      return result;
    }
  });
  return module.exports;
});
$__System.registerDynamic('9d', ['f', '6', '9e', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 22.1.3.13 Array.prototype.join(separator)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toIObject = $__require('6'),
      arrayJoin = [].join;

  // fallback for not array-like strings
  $export($export.P + $export.F * ($__require('9e') != Object || !$__require('9f')(arrayJoin)), 'Array', {
    join: function join(separator) {
      return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
    }
  });
  return module.exports;
});
$__System.registerDynamic('a0', ['f', 'a1', '48', '70', '72', '12', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      html = $__require('a1'),
      cof = $__require('48'),
      toIndex = $__require('70'),
      toLength = $__require('72'),
      arraySlice = [].slice;

  // fallback for not array-like ES3 strings and DOM objects
  $export($export.P + $export.F * $__require('12')(function () {
    if (html) arraySlice.call(html);
  }), 'Array', {
    slice: function slice(begin, end) {
      var len = toLength(this.length),
          klass = cof(this);
      end = end === undefined ? len : end;
      if (klass == 'Array') return arraySlice.call(this, begin, end);
      var start = toIndex(begin, len),
          upTo = toIndex(end, len),
          size = toLength(upTo - start),
          cloned = Array(size),
          i = 0;
      for (; i < size; i++) cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];
      return cloned;
    }
  });
  return module.exports;
});
$__System.registerDynamic('a2', ['f', 'a3', '2b', '12', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      aFunction = $__require('a3'),
      toObject = $__require('2b'),
      fails = $__require('12'),
      $sort = [].sort,
      test = [1, 2, 3];

  $export($export.P + $export.F * (fails(function () {
    // IE8-
    test.sort(undefined);
  }) || !fails(function () {
    // V8 bug
    test.sort(null);
    // Old WebKit
  }) || !$__require('9f')($sort)), 'Array', {
    // 22.1.3.25 Array.prototype.sort(comparefn)
    sort: function sort(comparefn) {
      return comparefn === undefined ? $sort.call(toObject(this)) : $sort.call(toObject(this), aFunction(comparefn));
    }
  });
  return module.exports;
});
$__System.registerDynamic('a4', ['f', 'a5', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $forEach = $__require('a5')(0),
      STRICT = $__require('9f')([].forEach, true);

  $export($export.P + $export.F * !STRICT, 'Array', {
    // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
    forEach: function forEach(callbackfn /* , thisArg */) {
      return $forEach(this, callbackfn, arguments[1]);
    }
  });
  return module.exports;
});
$__System.registerDynamic('a6', ['f', 'a5', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $map = $__require('a5')(1);

  $export($export.P + $export.F * !$__require('9f')([].map, true), 'Array', {
    // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
    map: function map(callbackfn /* , thisArg */) {
      return $map(this, callbackfn, arguments[1]);
    }
  });
  return module.exports;
});
$__System.registerDynamic('a7', ['f', 'a5', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $filter = $__require('a5')(2);

  $export($export.P + $export.F * !$__require('9f')([].filter, true), 'Array', {
    // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
    filter: function filter(callbackfn /* , thisArg */) {
      return $filter(this, callbackfn, arguments[1]);
    }
  });
  return module.exports;
});
$__System.registerDynamic('a8', ['f', 'a5', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $some = $__require('a5')(3);

  $export($export.P + $export.F * !$__require('9f')([].some, true), 'Array', {
    // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
    some: function some(callbackfn /* , thisArg */) {
      return $some(this, callbackfn, arguments[1]);
    }
  });
  return module.exports;
});
$__System.registerDynamic('a9', ['f', 'a5', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $every = $__require('a5')(4);

  $export($export.P + $export.F * !$__require('9f')([].every, true), 'Array', {
    // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
    every: function every(callbackfn /* , thisArg */) {
      return $every(this, callbackfn, arguments[1]);
    }
  });
  return module.exports;
});
$__System.registerDynamic('aa', ['f', 'ab', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $reduce = $__require('ab');

  $export($export.P + $export.F * !$__require('9f')([].reduce, true), 'Array', {
    // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
    reduce: function reduce(callbackfn /* , initialValue */) {
      return $reduce(this, callbackfn, arguments.length, arguments[1], false);
    }
  });
  return module.exports;
});
$__System.registerDynamic('ab', ['a3', '2b', '9e', '72', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var aFunction = $__require('a3'),
      toObject = $__require('2b'),
      IObject = $__require('9e'),
      toLength = $__require('72');

  module.exports = function (that, callbackfn, aLen, memo, isRight) {
    aFunction(callbackfn);
    var O = toObject(that),
        self = IObject(O),
        length = toLength(O.length),
        index = isRight ? length - 1 : 0,
        i = isRight ? -1 : 1;
    if (aLen < 2) for (;;) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (isRight ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for (; isRight ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
  return module.exports;
});
$__System.registerDynamic('ac', ['f', 'ab', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $reduce = $__require('ab');

  $export($export.P + $export.F * !$__require('9f')([].reduceRight, true), 'Array', {
    // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
    reduceRight: function reduceRight(callbackfn /* , initialValue */) {
      return $reduce(this, callbackfn, arguments.length, arguments[1], true);
    }
  });
  return module.exports;
});
$__System.registerDynamic('ad', ['f', 'ae', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $indexOf = $__require('ae')(false),
      $native = [].indexOf,
      NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

  $export($export.P + $export.F * (NEGATIVE_ZERO || !$__require('9f')($native)), 'Array', {
    // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
    indexOf: function indexOf(searchElement /*, fromIndex = 0 */) {
      return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0 : $indexOf(this, searchElement, arguments[1]);
    }
  });
  return module.exports;
});
$__System.registerDynamic('9f', ['12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var fails = $__require('12');

  module.exports = function (method, arg) {
    return !!method && fails(function () {
      arg ? method.call(null, function () {}, 1) : method.call(null);
    });
  };
  return module.exports;
});
$__System.registerDynamic('af', ['f', '6', '4c', '72', '9f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toIObject = $__require('6'),
      toInteger = $__require('4c'),
      toLength = $__require('72'),
      $native = [].lastIndexOf,
      NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

  $export($export.P + $export.F * (NEGATIVE_ZERO || !$__require('9f')($native)), 'Array', {
    // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */) {
      // convert -0 to +0
      if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
      var O = toIObject(this),
          length = toLength(O.length),
          index = length - 1;
      if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
      if (index < 0) index = length + index;
      for (; index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
      return -1;
    }
  });
  return module.exports;
});
$__System.registerDynamic('b0', ['f', 'b1', 'b2', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
  var $export = $__require('f');

  $export($export.P, 'Array', { copyWithin: $__require('b1') });

  $__require('b2')('copyWithin');
  return module.exports;
});
$__System.registerDynamic('b3', ['f', 'b4', 'b2', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
  var $export = $__require('f');

  $export($export.P, 'Array', { fill: $__require('b4') });

  $__require('b2')('fill');
  return module.exports;
});
$__System.registerDynamic('b5', ['f', 'a5', 'b2', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $find = $__require('a5')(5),
      KEY = 'find',
      forced = true;
  // Shouldn't skip holes
  if (KEY in []) Array(1)[KEY](function () {
    forced = false;
  });
  $export($export.P + $export.F * forced, 'Array', {
    find: function find(callbackfn /*, that = undefined */) {
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  $__require('b2')(KEY);
  return module.exports;
});
$__System.registerDynamic('b6', ['f', 'a5', 'b2', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $find = $__require('a5')(6),
      KEY = 'findIndex',
      forced = true;
  // Shouldn't skip holes
  if (KEY in []) Array(1)[KEY](function () {
    forced = false;
  });
  $export($export.P + $export.F * forced, 'Array', {
    findIndex: function findIndex(callbackfn /*, that = undefined */) {
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  $__require('b2')(KEY);
  return module.exports;
});
$__System.registerDynamic('b7', ['b8', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('b8')('Array');
  return module.exports;
});
$__System.registerDynamic('b9', ['c', '49', '20', '21', '7d', 'ba', 'e', '12', '16', '10', 'b8', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      inheritIfRequired = $__require('49'),
      dP = $__require('20').f,
      gOPN = $__require('21').f,
      isRegExp = $__require('7d'),
      $flags = $__require('ba'),
      $RegExp = global.RegExp,
      Base = $RegExp,
      proto = $RegExp.prototype,
      re1 = /a/g,
      re2 = /a/g
  // "new" creates a new object, old webkit buggy here
  ,
      CORRECT_NEW = new $RegExp(re1) !== re1;

  if ($__require('e') && (!CORRECT_NEW || $__require('12')(function () {
    re2[$__require('16')('match')] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
  }))) {
    $RegExp = function RegExp(p, f) {
      var tiRE = this instanceof $RegExp,
          piRE = isRegExp(p),
          fiU = f === undefined;
      return !tiRE && piRE && p.constructor === $RegExp && fiU ? p : inheritIfRequired(CORRECT_NEW ? new Base(piRE && !fiU ? p.source : p, f) : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f), tiRE ? this : proto, $RegExp);
    };
    var proxy = function (key) {
      key in $RegExp || dP($RegExp, key, {
        configurable: true,
        get: function () {
          return Base[key];
        },
        set: function (it) {
          Base[key] = it;
        }
      });
    };
    for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
    proto.constructor = $RegExp;
    $RegExp.prototype = proto;
    $__require('10')(global, 'RegExp', $RegExp);
  }

  $__require('b8')('RegExp');
  return module.exports;
});
$__System.registerDynamic('bb', ['bc', '1a', 'ba', 'e', '10', '12', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('bc');
  var anObject = $__require('1a'),
      $flags = $__require('ba'),
      DESCRIPTORS = $__require('e'),
      TO_STRING = 'toString',
      $toString = /./[TO_STRING];

  var define = function (fn) {
    $__require('10')(RegExp.prototype, TO_STRING, fn, true);
  };

  // 21.2.5.14 RegExp.prototype.toString()
  if ($__require('12')(function () {
    return $toString.call({ source: 'a', flags: 'b' }) != '/a/b';
  })) {
    define(function toString() {
      var R = anObject(this);
      return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
    });
    // FF44- RegExp#toString has a wrong name
  } else if ($toString.name != TO_STRING) {
    define(function toString() {
      return $toString.call(this);
    });
  }
  return module.exports;
});
$__System.registerDynamic('bc', ['e', '20', 'ba', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 21.2.5.3 get RegExp.prototype.flags()
  if ($__require('e') && /./g.flags != 'g') $__require('20').f(RegExp.prototype, 'flags', {
    configurable: true,
    get: $__require('ba')
  });
  return module.exports;
});
$__System.registerDynamic('bd', ['be', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // @@match logic
  $__require('be')('match', 1, function (defined, MATCH, $match) {
    // 21.1.3.11 String.prototype.match(regexp)
    return [function match(regexp) {
      'use strict';

      var O = defined(this),
          fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    }, $match];
  });
  return module.exports;
});
$__System.registerDynamic('bf', ['be', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // @@replace logic
  $__require('be')('replace', 2, function (defined, REPLACE, $replace) {
    // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
    return [function replace(searchValue, replaceValue) {
      'use strict';

      var O = defined(this),
          fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);
    }, $replace];
  });
  return module.exports;
});
$__System.registerDynamic('c0', ['be', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // @@search logic
  $__require('be')('search', 1, function (defined, SEARCH, $search) {
    // 21.1.3.15 String.prototype.search(regexp)
    return [function search(regexp) {
      'use strict';

      var O = defined(this),
          fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    }, $search];
  });
  return module.exports;
});
$__System.registerDynamic('be', ['23', '10', '12', '7e', '16', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var hide = $__require('23'),
      redefine = $__require('10'),
      fails = $__require('12'),
      defined = $__require('7e'),
      wks = $__require('16');

  module.exports = function (KEY, length, exec) {
    var SYMBOL = wks(KEY),
        fns = exec(defined, SYMBOL, ''[KEY]),
        strfn = fns[0],
        rxfn = fns[1];
    if (fails(function () {
      var O = {};
      O[SYMBOL] = function () {
        return 7;
      };
      return ''[KEY](O) != 7;
    })) {
      redefine(String.prototype, KEY, strfn);
      hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) {
        return rxfn.call(string, this, arg);
      }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) {
        return rxfn.call(string, this);
      });
    }
  };
  return module.exports;
});
$__System.registerDynamic('c1', ['be', '7d', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // @@split logic
  $__require('be')('split', 2, function (defined, SPLIT, $split) {
    'use strict';

    var isRegExp = $__require('7d'),
        _split = $split,
        $push = [].push,
        $SPLIT = 'split',
        LENGTH = 'length',
        LAST_INDEX = 'lastIndex';
    if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {
      var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
      // based on es5-shim implementation, need to rework it
      $split = function (separator, limit) {
        var string = String(this);
        if (separator === undefined && limit === 0) return [];
        // If `separator` is not a regex, use native split
        if (!isRegExp(separator)) return _split.call(string, separator, limit);
        var output = [];
        var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');
        var lastLastIndex = 0;
        var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
        // Make `global` and avoid `lastIndex` issues by working with a copy
        var separatorCopy = new RegExp(separator.source, flags + 'g');
        var separator2, match, lastIndex, lastLength, i;
        // Doesn't need flags gy, but they don't hurt
        if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
        while (match = separatorCopy.exec(string)) {
          // `separatorCopy.lastIndex` is not reliable cross-browser
          lastIndex = match.index + match[0][LENGTH];
          if (lastIndex > lastLastIndex) {
            output.push(string.slice(lastLastIndex, match.index));
            // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
            if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
              for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
            });
            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
            lastLength = match[0][LENGTH];
            lastLastIndex = lastIndex;
            if (output[LENGTH] >= splitLimit) break;
          }
          if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
        }
        if (lastLastIndex === string[LENGTH]) {
          if (lastLength || !separatorCopy.test('')) output.push('');
        } else output.push(string.slice(lastLastIndex));
        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
      };
      // Chakra, V8
    } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
      $split = function (separator, limit) {
        return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
      };
    }
    // 21.1.3.17 String.prototype.split(separator, limit)
    return [function split(separator, limit) {
      var O = defined(this),
          fn = separator == undefined ? undefined : separator[SPLIT];
      return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
    }, $split];
  });
  return module.exports;
});
$__System.registerDynamic('c2', ['22', 'c', '96', '3e', 'f', '30', 'a3', 'c3', 'c4', 'c5', 'c6', 'c7', '16', 'c8', '14', 'b8', '35', '9b', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var LIBRARY = $__require('22'),
      global = $__require('c'),
      ctx = $__require('96'),
      classof = $__require('3e'),
      $export = $__require('f'),
      isObject = $__require('30'),
      aFunction = $__require('a3'),
      anInstance = $__require('c3'),
      forOf = $__require('c4'),
      speciesConstructor = $__require('c5'),
      task = $__require('c6').set,
      microtask = $__require('c7')(),
      PROMISE = 'Promise',
      TypeError = global.TypeError,
      process = global.process,
      $Promise = global[PROMISE],
      process = global.process,
      isNode = classof(process) == 'process',
      empty = function () {/* empty */},
      Internal,
      GenericPromiseCapability,
      Wrapper;

  var USE_NATIVE = !!function () {
    try {
      // correct subclassing with @@species support
      var promise = $Promise.resolve(1),
          FakePromise = (promise.constructor = {})[$__require('16')('species')] = function (exec) {
        exec(empty, empty);
      };
      // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
      return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
    } catch (e) {/* empty */}
  }();

  // helpers
  var sameConstructor = function (a, b) {
    // with library wrapper special case
    return a === b || a === $Promise && b === Wrapper;
  };
  var isThenable = function (it) {
    var then;
    return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
  };
  var newPromiseCapability = function (C) {
    return sameConstructor($Promise, C) ? new PromiseCapability(C) : new GenericPromiseCapability(C);
  };
  var PromiseCapability = GenericPromiseCapability = function (C) {
    var resolve, reject;
    this.promise = new C(function ($$resolve, $$reject) {
      if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject = $$reject;
    });
    this.resolve = aFunction(resolve);
    this.reject = aFunction(reject);
  };
  var perform = function (exec) {
    try {
      exec();
    } catch (e) {
      return { error: e };
    }
  };
  var notify = function (promise, isReject) {
    if (promise._n) return;
    promise._n = true;
    var chain = promise._c;
    microtask(function () {
      var value = promise._v,
          ok = promise._s == 1,
          i = 0;
      var run = function (reaction) {
        var handler = ok ? reaction.ok : reaction.fail,
            resolve = reaction.resolve,
            reject = reaction.reject,
            domain = reaction.domain,
            result,
            then;
        try {
          if (handler) {
            if (!ok) {
              if (promise._h == 2) onHandleUnhandled(promise);
              promise._h = 1;
            }
            if (handler === true) result = value;else {
              if (domain) domain.enter();
              result = handler(value);
              if (domain) domain.exit();
            }
            if (result === reaction.promise) {
              reject(TypeError('Promise-chain cycle'));
            } else if (then = isThenable(result)) {
              then.call(result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch (e) {
          reject(e);
        }
      };
      while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
      promise._c = [];
      promise._n = false;
      if (isReject && !promise._h) onUnhandled(promise);
    });
  };
  var onUnhandled = function (promise) {
    task.call(global, function () {
      var value = promise._v,
          abrupt,
          handler,
          console;
      if (isUnhandled(promise)) {
        abrupt = perform(function () {
          if (isNode) {
            process.emit('unhandledRejection', value, promise);
          } else if (handler = global.onunhandledrejection) {
            handler({ promise: promise, reason: value });
          } else if ((console = global.console) && console.error) {
            console.error('Unhandled promise rejection', value);
          }
        });
        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
        promise._h = isNode || isUnhandled(promise) ? 2 : 1;
      }promise._a = undefined;
      if (abrupt) throw abrupt.error;
    });
  };
  var isUnhandled = function (promise) {
    if (promise._h == 1) return false;
    var chain = promise._a || promise._c,
        i = 0,
        reaction;
    while (chain.length > i) {
      reaction = chain[i++];
      if (reaction.fail || !isUnhandled(reaction.promise)) return false;
    }return true;
  };
  var onHandleUnhandled = function (promise) {
    task.call(global, function () {
      var handler;
      if (isNode) {
        process.emit('rejectionHandled', promise);
      } else if (handler = global.onrejectionhandled) {
        handler({ promise: promise, reason: promise._v });
      }
    });
  };
  var $reject = function (value) {
    var promise = this;
    if (promise._d) return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    promise._v = value;
    promise._s = 2;
    if (!promise._a) promise._a = promise._c.slice();
    notify(promise, true);
  };
  var $resolve = function (value) {
    var promise = this,
        then;
    if (promise._d) return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    try {
      if (promise === value) throw TypeError("Promise can't be resolved itself");
      if (then = isThenable(value)) {
        microtask(function () {
          var wrapper = { _w: promise, _d: false }; // wrap
          try {
            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
          } catch (e) {
            $reject.call(wrapper, e);
          }
        });
      } else {
        promise._v = value;
        promise._s = 1;
        notify(promise, false);
      }
    } catch (e) {
      $reject.call({ _w: promise, _d: false }, e); // wrap
    }
  };

  // constructor polyfill
  if (!USE_NATIVE) {
    // 25.4.3.1 Promise(executor)
    $Promise = function Promise(executor) {
      anInstance(this, $Promise, PROMISE, '_h');
      aFunction(executor);
      Internal.call(this);
      try {
        executor(ctx($resolve, this, 1), ctx($reject, this, 1));
      } catch (err) {
        $reject.call(this, err);
      }
    };
    Internal = function Promise(executor) {
      this._c = []; // <- awaiting reactions
      this._a = undefined; // <- checked in isUnhandled reactions
      this._s = 0; // <- state
      this._d = false; // <- done
      this._v = undefined; // <- value
      this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
      this._n = false; // <- notify
    };
    Internal.prototype = $__require('c8')($Promise.prototype, {
      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
      then: function then(onFulfilled, onRejected) {
        var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
        reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
        reaction.fail = typeof onRejected == 'function' && onRejected;
        reaction.domain = isNode ? process.domain : undefined;
        this._c.push(reaction);
        if (this._a) this._a.push(reaction);
        if (this._s) notify(this, false);
        return reaction.promise;
      },
      // 25.4.5.1 Promise.prototype.catch(onRejected)
      'catch': function (onRejected) {
        return this.then(undefined, onRejected);
      }
    });
    PromiseCapability = function () {
      var promise = new Internal();
      this.promise = promise;
      this.resolve = ctx($resolve, promise, 1);
      this.reject = ctx($reject, promise, 1);
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
  $__require('14')($Promise, PROMISE);
  $__require('b8')(PROMISE);
  Wrapper = $__require('35')[PROMISE];

  // statics
  $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
    // 25.4.4.5 Promise.reject(r)
    reject: function reject(r) {
      var capability = newPromiseCapability(this),
          $$reject = capability.reject;
      $$reject(r);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
    // 25.4.4.6 Promise.resolve(x)
    resolve: function resolve(x) {
      // instanceof instead of internal slot check because we should fix it without replacement native Promise core
      if (x instanceof $Promise && sameConstructor(x.constructor, this)) return x;
      var capability = newPromiseCapability(this),
          $$resolve = capability.resolve;
      $$resolve(x);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * !(USE_NATIVE && $__require('9b')(function (iter) {
    $Promise.all(iter)['catch'](empty);
  })), PROMISE, {
    // 25.4.4.1 Promise.all(iterable)
    all: function all(iterable) {
      var C = this,
          capability = newPromiseCapability(C),
          resolve = capability.resolve,
          reject = capability.reject;
      var abrupt = perform(function () {
        var values = [],
            index = 0,
            remaining = 1;
        forOf(iterable, false, function (promise) {
          var $index = index++,
              alreadyCalled = false;
          values.push(undefined);
          remaining++;
          C.resolve(promise).then(function (value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values[$index] = value;
            --remaining || resolve(values);
          }, reject);
        });
        --remaining || resolve(values);
      });
      if (abrupt) reject(abrupt.error);
      return capability.promise;
    },
    // 25.4.4.4 Promise.race(iterable)
    race: function race(iterable) {
      var C = this,
          capability = newPromiseCapability(C),
          reject = capability.reject;
      var abrupt = perform(function () {
        forOf(iterable, false, function (promise) {
          C.resolve(promise).then(capability.resolve, reject);
        });
      });
      if (abrupt) reject(abrupt.error);
      return capability.promise;
    }
  });
  return module.exports;
});
$__System.registerDynamic('c9', ['ca', 'cb', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var weak = $__require('ca');

  // 23.4 WeakSet Objects
  $__require('cb')('WeakSet', function (get) {
    return function WeakSet() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, {
    // 23.4.3.1 WeakSet.prototype.add(value)
    add: function add(value) {
      return weak.def(this, value, true);
    }
  }, weak, false, true);
  return module.exports;
});
$__System.registerDynamic('cc', ['f', 'cd', 'ce', '1a', '70', '72', '30', 'c', 'c5', '12', 'b8', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $typed = $__require('cd'),
      buffer = $__require('ce'),
      anObject = $__require('1a'),
      toIndex = $__require('70'),
      toLength = $__require('72'),
      isObject = $__require('30'),
      ArrayBuffer = $__require('c').ArrayBuffer,
      speciesConstructor = $__require('c5'),
      $ArrayBuffer = buffer.ArrayBuffer,
      $DataView = buffer.DataView,
      $isView = $typed.ABV && ArrayBuffer.isView,
      $slice = $ArrayBuffer.prototype.slice,
      VIEW = $typed.VIEW,
      ARRAY_BUFFER = 'ArrayBuffer';

  $export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

  $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
    // 24.1.3.1 ArrayBuffer.isView(arg)
    isView: function isView(it) {
      return $isView && $isView(it) || isObject(it) && VIEW in it;
    }
  });

  $export($export.P + $export.U + $export.F * $__require('12')(function () {
    return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
  }), ARRAY_BUFFER, {
    // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
    slice: function slice(start, end) {
      if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
      var len = anObject(this).byteLength,
          first = toIndex(start, len),
          final = toIndex(end === undefined ? len : end, len),
          result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first)),
          viewS = new $DataView(this),
          viewT = new $DataView(result),
          index = 0;
      while (first < final) {
        viewT.setUint8(index++, viewS.getUint8(first++));
      }return result;
    }
  });

  $__require('b8')(ARRAY_BUFFER);
  return module.exports;
});
$__System.registerDynamic('cf', ['f', 'cd', 'ce', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f');
  $export($export.G + $export.W + $export.F * !$__require('cd').ABV, {
    DataView: $__require('ce').DataView
  });
  return module.exports;
});
$__System.registerDynamic('d0', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Int8', 1, function (init) {
    return function Int8Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('d2', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Uint8', 1, function (init) {
    return function Uint8Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('d3', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Uint8', 1, function (init) {
    return function Uint8ClampedArray(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  }, true);
  return module.exports;
});
$__System.registerDynamic('d4', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Int16', 2, function (init) {
    return function Int16Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('d5', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Uint16', 2, function (init) {
    return function Uint16Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('d6', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Int32', 4, function (init) {
    return function Int32Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('d7', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Uint32', 4, function (init) {
    return function Uint32Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('d8', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Float32', 4, function (init) {
    return function Float32Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('cd', ['c', '23', '15', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      hide = $__require('23'),
      uid = $__require('15'),
      TYPED = uid('typed_array'),
      VIEW = uid('view'),
      ABV = !!(global.ArrayBuffer && global.DataView),
      CONSTR = ABV,
      i = 0,
      l = 9,
      Typed;

  var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');

  while (i < l) {
    if (Typed = global[TypedArrayConstructors[i++]]) {
      hide(Typed.prototype, TYPED, true);
      hide(Typed.prototype, VIEW, true);
    } else CONSTR = false;
  }

  module.exports = {
    ABV: ABV,
    CONSTR: CONSTR,
    TYPED: TYPED,
    VIEW: VIEW
  };
  return module.exports;
});
$__System.registerDynamic('ce', ['c', 'e', '22', 'cd', '23', 'c8', '12', 'c3', '4c', '72', '21', '20', 'b4', '14', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      DESCRIPTORS = $__require('e'),
      LIBRARY = $__require('22'),
      $typed = $__require('cd'),
      hide = $__require('23'),
      redefineAll = $__require('c8'),
      fails = $__require('12'),
      anInstance = $__require('c3'),
      toInteger = $__require('4c'),
      toLength = $__require('72'),
      gOPN = $__require('21').f,
      dP = $__require('20').f,
      arrayFill = $__require('b4'),
      setToStringTag = $__require('14'),
      ARRAY_BUFFER = 'ArrayBuffer',
      DATA_VIEW = 'DataView',
      PROTOTYPE = 'prototype',
      WRONG_LENGTH = 'Wrong length!',
      WRONG_INDEX = 'Wrong index!',
      $ArrayBuffer = global[ARRAY_BUFFER],
      $DataView = global[DATA_VIEW],
      Math = global.Math,
      RangeError = global.RangeError,
      Infinity = global.Infinity,
      BaseBuffer = $ArrayBuffer,
      abs = Math.abs,
      pow = Math.pow,
      floor = Math.floor,
      log = Math.log,
      LN2 = Math.LN2,
      BUFFER = 'buffer',
      BYTE_LENGTH = 'byteLength',
      BYTE_OFFSET = 'byteOffset',
      $BUFFER = DESCRIPTORS ? '_b' : BUFFER,
      $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH,
      $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

  // IEEE754 conversions based on https://github.com/feross/ieee754
  var packIEEE754 = function (value, mLen, nBytes) {
    var buffer = Array(nBytes),
        eLen = nBytes * 8 - mLen - 1,
        eMax = (1 << eLen) - 1,
        eBias = eMax >> 1,
        rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0,
        i = 0,
        s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0,
        e,
        m,
        c;
    value = abs(value);
    if (value != value || value === Infinity) {
      m = value != value ? 1 : 0;
      e = eMax;
    } else {
      e = floor(log(value) / LN2);
      if (value * (c = pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }
      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * pow(2, eBias - 1) * pow(2, mLen);
        e = 0;
      }
    }
    for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
    buffer[--i] |= s * 128;
    return buffer;
  };
  var unpackIEEE754 = function (buffer, mLen, nBytes) {
    var eLen = nBytes * 8 - mLen - 1,
        eMax = (1 << eLen) - 1,
        eBias = eMax >> 1,
        nBits = eLen - 7,
        i = nBytes - 1,
        s = buffer[i--],
        e = s & 127,
        m;
    s >>= 7;
    for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : s ? -Infinity : Infinity;
    } else {
      m = m + pow(2, mLen);
      e = e - eBias;
    }return (s ? -1 : 1) * m * pow(2, e - mLen);
  };

  var unpackI32 = function (bytes) {
    return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
  };
  var packI8 = function (it) {
    return [it & 0xff];
  };
  var packI16 = function (it) {
    return [it & 0xff, it >> 8 & 0xff];
  };
  var packI32 = function (it) {
    return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
  };
  var packF64 = function (it) {
    return packIEEE754(it, 52, 8);
  };
  var packF32 = function (it) {
    return packIEEE754(it, 23, 4);
  };

  var addGetter = function (C, key, internal) {
    dP(C[PROTOTYPE], key, { get: function () {
        return this[internal];
      } });
  };

  var get = function (view, bytes, index, isLittleEndian) {
    var numIndex = +index,
        intIndex = toInteger(numIndex);
    if (numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
    var store = view[$BUFFER]._b,
        start = intIndex + view[$OFFSET],
        pack = store.slice(start, start + bytes);
    return isLittleEndian ? pack : pack.reverse();
  };
  var set = function (view, bytes, index, conversion, value, isLittleEndian) {
    var numIndex = +index,
        intIndex = toInteger(numIndex);
    if (numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
    var store = view[$BUFFER]._b,
        start = intIndex + view[$OFFSET],
        pack = conversion(+value);
    for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
  };

  var validateArrayBufferArguments = function (that, length) {
    anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
    var numberLength = +length,
        byteLength = toLength(numberLength);
    if (numberLength != byteLength) throw RangeError(WRONG_LENGTH);
    return byteLength;
  };

  if (!$typed.ABV) {
    $ArrayBuffer = function ArrayBuffer(length) {
      var byteLength = validateArrayBufferArguments(this, length);
      this._b = arrayFill.call(Array(byteLength), 0);
      this[$LENGTH] = byteLength;
    };

    $DataView = function DataView(buffer, byteOffset, byteLength) {
      anInstance(this, $DataView, DATA_VIEW);
      anInstance(buffer, $ArrayBuffer, DATA_VIEW);
      var bufferLength = buffer[$LENGTH],
          offset = toInteger(byteOffset);
      if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
      byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
      if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
      this[$BUFFER] = buffer;
      this[$OFFSET] = offset;
      this[$LENGTH] = byteLength;
    };

    if (DESCRIPTORS) {
      addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
      addGetter($DataView, BUFFER, '_b');
      addGetter($DataView, BYTE_LENGTH, '_l');
      addGetter($DataView, BYTE_OFFSET, '_o');
    }

    redefineAll($DataView[PROTOTYPE], {
      getInt8: function getInt8(byteOffset) {
        return get(this, 1, byteOffset)[0] << 24 >> 24;
      },
      getUint8: function getUint8(byteOffset) {
        return get(this, 1, byteOffset)[0];
      },
      getInt16: function getInt16(byteOffset /*, littleEndian */) {
        var bytes = get(this, 2, byteOffset, arguments[1]);
        return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
      },
      getUint16: function getUint16(byteOffset /*, littleEndian */) {
        var bytes = get(this, 2, byteOffset, arguments[1]);
        return bytes[1] << 8 | bytes[0];
      },
      getInt32: function getInt32(byteOffset /*, littleEndian */) {
        return unpackI32(get(this, 4, byteOffset, arguments[1]));
      },
      getUint32: function getUint32(byteOffset /*, littleEndian */) {
        return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
      },
      getFloat32: function getFloat32(byteOffset /*, littleEndian */) {
        return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
      },
      getFloat64: function getFloat64(byteOffset /*, littleEndian */) {
        return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
      },
      setInt8: function setInt8(byteOffset, value) {
        set(this, 1, byteOffset, packI8, value);
      },
      setUint8: function setUint8(byteOffset, value) {
        set(this, 1, byteOffset, packI8, value);
      },
      setInt16: function setInt16(byteOffset, value /*, littleEndian */) {
        set(this, 2, byteOffset, packI16, value, arguments[2]);
      },
      setUint16: function setUint16(byteOffset, value /*, littleEndian */) {
        set(this, 2, byteOffset, packI16, value, arguments[2]);
      },
      setInt32: function setInt32(byteOffset, value /*, littleEndian */) {
        set(this, 4, byteOffset, packI32, value, arguments[2]);
      },
      setUint32: function setUint32(byteOffset, value /*, littleEndian */) {
        set(this, 4, byteOffset, packI32, value, arguments[2]);
      },
      setFloat32: function setFloat32(byteOffset, value /*, littleEndian */) {
        set(this, 4, byteOffset, packF32, value, arguments[2]);
      },
      setFloat64: function setFloat64(byteOffset, value /*, littleEndian */) {
        set(this, 8, byteOffset, packF64, value, arguments[2]);
      }
    });
  } else {
    if (!fails(function () {
      new $ArrayBuffer(); // eslint-disable-line no-new
    }) || !fails(function () {
      new $ArrayBuffer(.5); // eslint-disable-line no-new
    })) {
      $ArrayBuffer = function ArrayBuffer(length) {
        return new BaseBuffer(validateArrayBufferArguments(this, length));
      };
      var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
      for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
        if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
      };
      if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
    }
    // iOS Safari 7.x bug
    var view = new $DataView(new $ArrayBuffer(2)),
        $setInt8 = $DataView[PROTOTYPE].setInt8;
    view.setInt8(0, 2147483648);
    view.setInt8(1, 2147483649);
    if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
      setInt8: function setInt8(byteOffset, value) {
        $setInt8.call(this, byteOffset, value << 24 >> 24);
      },
      setUint8: function setUint8(byteOffset, value) {
        $setInt8.call(this, byteOffset, value << 24 >> 24);
      }
    }, true);
  }
  setToStringTag($ArrayBuffer, ARRAY_BUFFER);
  setToStringTag($DataView, DATA_VIEW);
  hide($DataView[PROTOTYPE], $typed.VIEW, true);
  exports[ARRAY_BUFFER] = $ArrayBuffer;
  exports[DATA_VIEW] = $DataView;
  return module.exports;
});
$__System.registerDynamic("3a", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.2.9 SameValue(x, y)
  module.exports = Object.is || function is(x, y) {
    return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
  };
  return module.exports;
});
$__System.registerDynamic('c5', ['1a', 'a3', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.3.20 SpeciesConstructor(O, defaultConstructor)
  var anObject = $__require('1a'),
      aFunction = $__require('a3'),
      SPECIES = $__require('16')('species');
  module.exports = function (O, D) {
    var C = anObject(O).constructor,
        S;
    return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
  };
  return module.exports;
});
$__System.registerDynamic('b4', ['2b', '70', '72', '7'], true, function ($__require, exports, module) {
  // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var toObject = $__require('2b'),
      toIndex = $__require('70'),
      toLength = $__require('72');
  module.exports = function fill(value /*, start = 0, end = @length */) {
    var O = toObject(this),
        length = toLength(O.length),
        aLen = arguments.length,
        index = toIndex(aLen > 1 ? arguments[1] : undefined, length),
        end = aLen > 2 ? arguments[2] : undefined,
        endPos = end === undefined ? length : toIndex(end, length);
    while (endPos > index) O[index++] = value;
    return O;
  };
  return module.exports;
});
$__System.registerDynamic('b1', ['2b', '70', '72', '7'], true, function ($__require, exports, module) {
  // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var toObject = $__require('2b'),
      toIndex = $__require('70'),
      toLength = $__require('72');

  module.exports = [].copyWithin || function copyWithin(target /*= 0*/, start /*= 0, end = @length*/) {
    var O = toObject(this),
        len = toLength(O.length),
        to = toIndex(target, len),
        from = toIndex(start, len),
        end = arguments.length > 2 ? arguments[2] : undefined,
        count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to),
        inc = 1;
    if (from < to && to < from + count) {
      inc = -1;
      from += count - 1;
      to += count - 1;
    }
    while (count-- > 0) {
      if (from in O) O[to] = O[from];else delete O[to];
      to += inc;
      from += inc;
    }return O;
  };
  return module.exports;
});
$__System.registerDynamic('d1', ['e', '22', 'c', '12', 'f', 'cd', 'ce', '96', 'c3', '1c', '23', 'c8', '4c', '72', '70', '1b', 'd', '3a', '3e', '30', '2b', '98', '1d', '2c', '21', '9a', '15', '16', 'a5', 'ae', 'c5', 'd9', 'da', '9b', 'b8', 'b4', 'b1', '20', '1f', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  if ($__require('e')) {
    var LIBRARY = $__require('22'),
        global = $__require('c'),
        fails = $__require('12'),
        $export = $__require('f'),
        $typed = $__require('cd'),
        $buffer = $__require('ce'),
        ctx = $__require('96'),
        anInstance = $__require('c3'),
        propertyDesc = $__require('1c'),
        hide = $__require('23'),
        redefineAll = $__require('c8'),
        toInteger = $__require('4c'),
        toLength = $__require('72'),
        toIndex = $__require('70'),
        toPrimitive = $__require('1b'),
        has = $__require('d'),
        same = $__require('3a'),
        classof = $__require('3e'),
        isObject = $__require('30'),
        toObject = $__require('2b'),
        isArrayIter = $__require('98'),
        create = $__require('1d'),
        getPrototypeOf = $__require('2c'),
        gOPN = $__require('21').f,
        getIterFn = $__require('9a'),
        uid = $__require('15'),
        wks = $__require('16'),
        createArrayMethod = $__require('a5'),
        createArrayIncludes = $__require('ae'),
        speciesConstructor = $__require('c5'),
        ArrayIterators = $__require('d9'),
        Iterators = $__require('da'),
        $iterDetect = $__require('9b'),
        setSpecies = $__require('b8'),
        arrayFill = $__require('b4'),
        arrayCopyWithin = $__require('b1'),
        $DP = $__require('20'),
        $GOPD = $__require('1f'),
        dP = $DP.f,
        gOPD = $GOPD.f,
        RangeError = global.RangeError,
        TypeError = global.TypeError,
        Uint8Array = global.Uint8Array,
        ARRAY_BUFFER = 'ArrayBuffer',
        SHARED_BUFFER = 'Shared' + ARRAY_BUFFER,
        BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT',
        PROTOTYPE = 'prototype',
        ArrayProto = Array[PROTOTYPE],
        $ArrayBuffer = $buffer.ArrayBuffer,
        $DataView = $buffer.DataView,
        arrayForEach = createArrayMethod(0),
        arrayFilter = createArrayMethod(2),
        arraySome = createArrayMethod(3),
        arrayEvery = createArrayMethod(4),
        arrayFind = createArrayMethod(5),
        arrayFindIndex = createArrayMethod(6),
        arrayIncludes = createArrayIncludes(true),
        arrayIndexOf = createArrayIncludes(false),
        arrayValues = ArrayIterators.values,
        arrayKeys = ArrayIterators.keys,
        arrayEntries = ArrayIterators.entries,
        arrayLastIndexOf = ArrayProto.lastIndexOf,
        arrayReduce = ArrayProto.reduce,
        arrayReduceRight = ArrayProto.reduceRight,
        arrayJoin = ArrayProto.join,
        arraySort = ArrayProto.sort,
        arraySlice = ArrayProto.slice,
        arrayToString = ArrayProto.toString,
        arrayToLocaleString = ArrayProto.toLocaleString,
        ITERATOR = wks('iterator'),
        TAG = wks('toStringTag'),
        TYPED_CONSTRUCTOR = uid('typed_constructor'),
        DEF_CONSTRUCTOR = uid('def_constructor'),
        ALL_CONSTRUCTORS = $typed.CONSTR,
        TYPED_ARRAY = $typed.TYPED,
        VIEW = $typed.VIEW,
        WRONG_LENGTH = 'Wrong length!';

    var $map = createArrayMethod(1, function (O, length) {
      return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
    });

    var LITTLE_ENDIAN = fails(function () {
      return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
    });

    var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
      new Uint8Array(1).set({});
    });

    var strictToLength = function (it, SAME) {
      if (it === undefined) throw TypeError(WRONG_LENGTH);
      var number = +it,
          length = toLength(it);
      if (SAME && !same(number, length)) throw RangeError(WRONG_LENGTH);
      return length;
    };

    var toOffset = function (it, BYTES) {
      var offset = toInteger(it);
      if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
      return offset;
    };

    var validate = function (it) {
      if (isObject(it) && TYPED_ARRAY in it) return it;
      throw TypeError(it + ' is not a typed array!');
    };

    var allocate = function (C, length) {
      if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
        throw TypeError('It is not a typed array constructor!');
      }return new C(length);
    };

    var speciesFromList = function (O, list) {
      return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
    };

    var fromList = function (C, list) {
      var index = 0,
          length = list.length,
          result = allocate(C, length);
      while (length > index) result[index] = list[index++];
      return result;
    };

    var addGetter = function (it, key, internal) {
      dP(it, key, { get: function () {
          return this._d[internal];
        } });
    };

    var $from = function from(source /*, mapfn, thisArg */) {
      var O = toObject(source),
          aLen = arguments.length,
          mapfn = aLen > 1 ? arguments[1] : undefined,
          mapping = mapfn !== undefined,
          iterFn = getIterFn(O),
          i,
          length,
          values,
          result,
          step,
          iterator;
      if (iterFn != undefined && !isArrayIter(iterFn)) {
        for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
          values.push(step.value);
        }O = values;
      }
      if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
      for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
        result[i] = mapping ? mapfn(O[i], i) : O[i];
      }
      return result;
    };

    var $of = function of() /*...items*/{
      var index = 0,
          length = arguments.length,
          result = allocate(this, length);
      while (length > index) result[index] = arguments[index++];
      return result;
    };

    // iOS Safari 6.x fails here
    var TO_LOCALE_BUG = !!Uint8Array && fails(function () {
      arrayToLocaleString.call(new Uint8Array(1));
    });

    var $toLocaleString = function toLocaleString() {
      return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
    };

    var proto = {
      copyWithin: function copyWithin(target, start /*, end */) {
        return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
      },
      every: function every(callbackfn /*, thisArg */) {
        return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      fill: function fill(value /*, start, end */) {
        // eslint-disable-line no-unused-vars
        return arrayFill.apply(validate(this), arguments);
      },
      filter: function filter(callbackfn /*, thisArg */) {
        return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));
      },
      find: function find(predicate /*, thisArg */) {
        return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
      },
      findIndex: function findIndex(predicate /*, thisArg */) {
        return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
      },
      forEach: function forEach(callbackfn /*, thisArg */) {
        arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      indexOf: function indexOf(searchElement /*, fromIndex */) {
        return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
      },
      includes: function includes(searchElement /*, fromIndex */) {
        return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
      },
      join: function join(separator) {
        // eslint-disable-line no-unused-vars
        return arrayJoin.apply(validate(this), arguments);
      },
      lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */) {
        // eslint-disable-line no-unused-vars
        return arrayLastIndexOf.apply(validate(this), arguments);
      },
      map: function map(mapfn /*, thisArg */) {
        return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      reduce: function reduce(callbackfn /*, initialValue */) {
        // eslint-disable-line no-unused-vars
        return arrayReduce.apply(validate(this), arguments);
      },
      reduceRight: function reduceRight(callbackfn /*, initialValue */) {
        // eslint-disable-line no-unused-vars
        return arrayReduceRight.apply(validate(this), arguments);
      },
      reverse: function reverse() {
        var that = this,
            length = validate(that).length,
            middle = Math.floor(length / 2),
            index = 0,
            value;
        while (index < middle) {
          value = that[index];
          that[index++] = that[--length];
          that[length] = value;
        }return that;
      },
      some: function some(callbackfn /*, thisArg */) {
        return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      sort: function sort(comparefn) {
        return arraySort.call(validate(this), comparefn);
      },
      subarray: function subarray(begin, end) {
        var O = validate(this),
            length = O.length,
            $begin = toIndex(begin, length);
        return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toIndex(end, length)) - $begin));
      }
    };

    var $slice = function slice(start, end) {
      return speciesFromList(this, arraySlice.call(validate(this), start, end));
    };

    var $set = function set(arrayLike /*, offset */) {
      validate(this);
      var offset = toOffset(arguments[1], 1),
          length = this.length,
          src = toObject(arrayLike),
          len = toLength(src.length),
          index = 0;
      if (len + offset > length) throw RangeError(WRONG_LENGTH);
      while (index < len) this[offset + index] = src[index++];
    };

    var $iterators = {
      entries: function entries() {
        return arrayEntries.call(validate(this));
      },
      keys: function keys() {
        return arrayKeys.call(validate(this));
      },
      values: function values() {
        return arrayValues.call(validate(this));
      }
    };

    var isTAIndex = function (target, key) {
      return isObject(target) && target[TYPED_ARRAY] && typeof key != 'symbol' && key in target && String(+key) == String(key);
    };
    var $getDesc = function getOwnPropertyDescriptor(target, key) {
      return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);
    };
    var $setDesc = function defineProperty(target, key, desc) {
      if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {
        target[key] = desc.value;
        return target;
      } else return dP(target, key, desc);
    };

    if (!ALL_CONSTRUCTORS) {
      $GOPD.f = $getDesc;
      $DP.f = $setDesc;
    }

    $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
      getOwnPropertyDescriptor: $getDesc,
      defineProperty: $setDesc
    });

    if (fails(function () {
      arrayToString.call({});
    })) {
      arrayToString = arrayToLocaleString = function toString() {
        return arrayJoin.call(this);
      };
    }

    var $TypedArrayPrototype$ = redefineAll({}, proto);
    redefineAll($TypedArrayPrototype$, $iterators);
    hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
    redefineAll($TypedArrayPrototype$, {
      slice: $slice,
      set: $set,
      constructor: function () {/* noop */},
      toString: arrayToString,
      toLocaleString: $toLocaleString
    });
    addGetter($TypedArrayPrototype$, 'buffer', 'b');
    addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
    addGetter($TypedArrayPrototype$, 'byteLength', 'l');
    addGetter($TypedArrayPrototype$, 'length', 'e');
    dP($TypedArrayPrototype$, TAG, {
      get: function () {
        return this[TYPED_ARRAY];
      }
    });

    module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
      CLAMPED = !!CLAMPED;
      var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array',
          ISNT_UINT8 = NAME != 'Uint8Array',
          GETTER = 'get' + KEY,
          SETTER = 'set' + KEY,
          TypedArray = global[NAME],
          Base = TypedArray || {},
          TAC = TypedArray && getPrototypeOf(TypedArray),
          FORCED = !TypedArray || !$typed.ABV,
          O = {},
          TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
      var getter = function (that, index) {
        var data = that._d;
        return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
      };
      var setter = function (that, index, value) {
        var data = that._d;
        if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
        data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
      };
      var addElement = function (that, index) {
        dP(that, index, {
          get: function () {
            return getter(this, index);
          },
          set: function (value) {
            return setter(this, index, value);
          },
          enumerable: true
        });
      };
      if (FORCED) {
        TypedArray = wrapper(function (that, data, $offset, $length) {
          anInstance(that, TypedArray, NAME, '_d');
          var index = 0,
              offset = 0,
              buffer,
              byteLength,
              length,
              klass;
          if (!isObject(data)) {
            length = strictToLength(data, true);
            byteLength = length * BYTES;
            buffer = new $ArrayBuffer(byteLength);
          } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
            buffer = data;
            offset = toOffset($offset, BYTES);
            var $len = data.byteLength;
            if ($length === undefined) {
              if ($len % BYTES) throw RangeError(WRONG_LENGTH);
              byteLength = $len - offset;
              if (byteLength < 0) throw RangeError(WRONG_LENGTH);
            } else {
              byteLength = toLength($length) * BYTES;
              if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
            }
            length = byteLength / BYTES;
          } else if (TYPED_ARRAY in data) {
            return fromList(TypedArray, data);
          } else {
            return $from.call(TypedArray, data);
          }
          hide(that, '_d', {
            b: buffer,
            o: offset,
            l: byteLength,
            e: length,
            v: new $DataView(buffer)
          });
          while (index < length) addElement(that, index++);
        });
        TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
        hide(TypedArrayPrototype, 'constructor', TypedArray);
      } else if (!$iterDetect(function (iter) {
        // V8 works with iterators, but fails in many other cases
        // https://code.google.com/p/v8/issues/detail?id=4552
        new TypedArray(null); // eslint-disable-line no-new
        new TypedArray(iter); // eslint-disable-line no-new
      }, true)) {
        TypedArray = wrapper(function (that, data, $offset, $length) {
          anInstance(that, TypedArray, NAME);
          var klass;
          // `ws` module bug, temporarily remove validation length for Uint8Array
          // https://github.com/websockets/ws/pull/645
          if (!isObject(data)) return new Base(strictToLength(data, ISNT_UINT8));
          if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
            return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);
          }
          if (TYPED_ARRAY in data) return fromList(TypedArray, data);
          return $from.call(TypedArray, data);
        });
        arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
          if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
        });
        TypedArray[PROTOTYPE] = TypedArrayPrototype;
        if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
      }
      var $nativeIterator = TypedArrayPrototype[ITERATOR],
          CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined),
          $iterator = $iterators.values;
      hide(TypedArray, TYPED_CONSTRUCTOR, true);
      hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
      hide(TypedArrayPrototype, VIEW, true);
      hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

      if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
        dP(TypedArrayPrototype, TAG, {
          get: function () {
            return NAME;
          }
        });
      }

      O[NAME] = TypedArray;

      $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

      $export($export.S, NAME, {
        BYTES_PER_ELEMENT: BYTES,
        from: $from,
        of: $of
      });

      if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

      $export($export.P, NAME, proto);

      setSpecies(NAME);

      $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

      $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

      $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, { toString: arrayToString });

      $export($export.P + $export.F * fails(function () {
        new TypedArray(1).slice();
      }), NAME, { slice: $slice });

      $export($export.P + $export.F * (fails(function () {
        return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
      }) || !fails(function () {
        TypedArrayPrototype.toLocaleString.call([1, 2]);
      })), NAME, { toLocaleString: $toLocaleString });

      Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
      if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
    };
  } else module.exports = function () {/* empty */};
  return module.exports;
});
$__System.registerDynamic('db', ['d1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('d1')('Float64', 8, function (init) {
    return function Float64Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });
  return module.exports;
});
$__System.registerDynamic('dc', ['f', 'a3', '1a', 'c', '12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
  var $export = $__require('f'),
      aFunction = $__require('a3'),
      anObject = $__require('1a'),
      rApply = ($__require('c').Reflect || {}).apply,
      fApply = Function.apply;
  // MS Edge argumentsList argument is optional
  $export($export.S + $export.F * !$__require('12')(function () {
    rApply(function () {});
  }), 'Reflect', {
    apply: function apply(target, thisArgument, argumentsList) {
      var T = aFunction(target),
          L = anObject(argumentsList);
      return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
    }
  });
  return module.exports;
});
$__System.registerDynamic('40', ['a3', '30', 'dd', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var aFunction = $__require('a3'),
      isObject = $__require('30'),
      invoke = $__require('dd'),
      arraySlice = [].slice,
      factories = {};

  var construct = function (F, len, args) {
    if (!(len in factories)) {
      for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
      factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
    }return factories[len](F, args);
  };

  module.exports = Function.bind || function bind(that /*, args... */) {
    var fn = aFunction(this),
        partArgs = arraySlice.call(arguments, 1);
    var bound = function () /* args... */{
      var args = partArgs.concat(arraySlice.call(arguments));
      return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
    };
    if (isObject(fn.prototype)) bound.prototype = fn.prototype;
    return bound;
  };
  return module.exports;
});
$__System.registerDynamic('de', ['f', '1d', 'a3', '1a', '30', '12', '40', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
  var $export = $__require('f'),
      create = $__require('1d'),
      aFunction = $__require('a3'),
      anObject = $__require('1a'),
      isObject = $__require('30'),
      fails = $__require('12'),
      bind = $__require('40'),
      rConstruct = ($__require('c').Reflect || {}).construct;

  // MS Edge supports only 2 arguments and argumentsList argument is optional
  // FF Nightly sets third argument as `new.target`, but does not create `this` from it
  var NEW_TARGET_BUG = fails(function () {
    function F() {}
    return !(rConstruct(function () {}, [], F) instanceof F);
  });
  var ARGS_BUG = !fails(function () {
    rConstruct(function () {});
  });

  $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
    construct: function construct(Target, args /*, newTarget*/) {
      aFunction(Target);
      anObject(args);
      var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
      if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
      if (Target == newTarget) {
        // w/o altered newTarget, optimization for 0-4 arguments
        switch (args.length) {
          case 0:
            return new Target();
          case 1:
            return new Target(args[0]);
          case 2:
            return new Target(args[0], args[1]);
          case 3:
            return new Target(args[0], args[1], args[2]);
          case 4:
            return new Target(args[0], args[1], args[2], args[3]);
        }
        // w/o altered newTarget, lot of arguments case
        var $args = [null];
        $args.push.apply($args, args);
        return new (bind.apply(Target, $args))();
      }
      // with altered newTarget, not support built-in constructors
      var proto = newTarget.prototype,
          instance = create(isObject(proto) ? proto : Object.prototype),
          result = Function.apply.call(Target, instance, args);
      return isObject(result) ? result : instance;
    }
  });
  return module.exports;
});
$__System.registerDynamic('df', ['20', 'f', '1a', '1b', '12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
  var dP = $__require('20'),
      $export = $__require('f'),
      anObject = $__require('1a'),
      toPrimitive = $__require('1b');

  // MS Edge has broken Reflect.defineProperty - throwing instead of returning false
  $export($export.S + $export.F * $__require('12')(function () {
    Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
  }), 'Reflect', {
    defineProperty: function defineProperty(target, propertyKey, attributes) {
      anObject(target);
      propertyKey = toPrimitive(propertyKey, true);
      anObject(attributes);
      try {
        dP.f(target, propertyKey, attributes);
        return true;
      } catch (e) {
        return false;
      }
    }
  });
  return module.exports;
});
$__System.registerDynamic('e0', ['f', '1f', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.4 Reflect.deleteProperty(target, propertyKey)
  var $export = $__require('f'),
      gOPD = $__require('1f').f,
      anObject = $__require('1a');

  $export($export.S, 'Reflect', {
    deleteProperty: function deleteProperty(target, propertyKey) {
      var desc = gOPD(anObject(target), propertyKey);
      return desc && !desc.configurable ? false : delete target[propertyKey];
    }
  });
  return module.exports;
});
$__System.registerDynamic('e1', ['f', '1a', 'e2', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 26.1.5 Reflect.enumerate(target)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      anObject = $__require('1a');
  var Enumerate = function (iterated) {
    this._t = anObject(iterated); // target
    this._i = 0; // next index
    var keys = this._k = [] // keys
    ,
        key;
    for (key in iterated) keys.push(key);
  };
  $__require('e2')(Enumerate, 'Object', function () {
    var that = this,
        keys = that._k,
        key;
    do {
      if (that._i >= keys.length) return { value: undefined, done: true };
    } while (!((key = keys[that._i++]) in that._t));
    return { value: key, done: false };
  });

  $export($export.S, 'Reflect', {
    enumerate: function enumerate(target) {
      return new Enumerate(target);
    }
  });
  return module.exports;
});
$__System.registerDynamic('e3', ['1f', '2c', 'd', 'f', '30', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.6 Reflect.get(target, propertyKey [, receiver])
  var gOPD = $__require('1f'),
      getPrototypeOf = $__require('2c'),
      has = $__require('d'),
      $export = $__require('f'),
      isObject = $__require('30'),
      anObject = $__require('1a');

  function get(target, propertyKey /*, receiver*/) {
    var receiver = arguments.length < 3 ? target : arguments[2],
        desc,
        proto;
    if (anObject(target) === receiver) return target[propertyKey];
    if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value') ? desc.value : desc.get !== undefined ? desc.get.call(receiver) : undefined;
    if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
  }

  $export($export.S, 'Reflect', { get: get });
  return module.exports;
});
$__System.registerDynamic('e4', ['1f', 'f', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
  var gOPD = $__require('1f'),
      $export = $__require('f'),
      anObject = $__require('1a');

  $export($export.S, 'Reflect', {
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
      return gOPD.f(anObject(target), propertyKey);
    }
  });
  return module.exports;
});
$__System.registerDynamic('e5', ['f', '2c', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.8 Reflect.getPrototypeOf(target)
  var $export = $__require('f'),
      getProto = $__require('2c'),
      anObject = $__require('1a');

  $export($export.S, 'Reflect', {
    getPrototypeOf: function getPrototypeOf(target) {
      return getProto(anObject(target));
    }
  });
  return module.exports;
});
$__System.registerDynamic('e6', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.9 Reflect.has(target, propertyKey)
  var $export = $__require('f');

  $export($export.S, 'Reflect', {
    has: function has(target, propertyKey) {
      return propertyKey in target;
    }
  });
  return module.exports;
});
$__System.registerDynamic('e7', ['f', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.10 Reflect.isExtensible(target)
  var $export = $__require('f'),
      anObject = $__require('1a'),
      $isExtensible = Object.isExtensible;

  $export($export.S, 'Reflect', {
    isExtensible: function isExtensible(target) {
      anObject(target);
      return $isExtensible ? $isExtensible(target) : true;
    }
  });
  return module.exports;
});
$__System.registerDynamic('e8', ['f', 'e9', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.11 Reflect.ownKeys(target)
  var $export = $__require('f');

  $export($export.S, 'Reflect', { ownKeys: $__require('e9') });
  return module.exports;
});
$__System.registerDynamic('ea', ['f', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.12 Reflect.preventExtensions(target)
  var $export = $__require('f'),
      anObject = $__require('1a'),
      $preventExtensions = Object.preventExtensions;

  $export($export.S, 'Reflect', {
    preventExtensions: function preventExtensions(target) {
      anObject(target);
      try {
        if ($preventExtensions) $preventExtensions(target);
        return true;
      } catch (e) {
        return false;
      }
    }
  });
  return module.exports;
});
$__System.registerDynamic('eb', ['20', '1f', '2c', 'd', 'f', '1c', '1a', '30', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
  var dP = $__require('20'),
      gOPD = $__require('1f'),
      getPrototypeOf = $__require('2c'),
      has = $__require('d'),
      $export = $__require('f'),
      createDesc = $__require('1c'),
      anObject = $__require('1a'),
      isObject = $__require('30');

  function set(target, propertyKey, V /*, receiver*/) {
    var receiver = arguments.length < 4 ? target : arguments[3],
        ownDesc = gOPD.f(anObject(target), propertyKey),
        existingDescriptor,
        proto;
    if (!ownDesc) {
      if (isObject(proto = getPrototypeOf(target))) {
        return set(proto, propertyKey, V, receiver);
      }
      ownDesc = createDesc(0);
    }
    if (has(ownDesc, 'value')) {
      if (ownDesc.writable === false || !isObject(receiver)) return false;
      existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
      return true;
    }
    return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
  }

  $export($export.S, 'Reflect', { set: set });
  return module.exports;
});
$__System.registerDynamic('ec', ['f', '3c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 26.1.14 Reflect.setPrototypeOf(target, proto)
  var $export = $__require('f'),
      setProto = $__require('3c');

  if (setProto) $export($export.S, 'Reflect', {
    setPrototypeOf: function setPrototypeOf(target, proto) {
      setProto.check(target, proto);
      try {
        setProto.set(target, proto);
        return true;
      } catch (e) {
        return false;
      }
    }
  });
  return module.exports;
});
$__System.registerDynamic('ed', ['f', 'ae', 'b2', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/tc39/Array.prototype.includes

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $includes = $__require('ae')(true);

  $export($export.P, 'Array', {
    includes: function includes(el /*, fromIndex = 0 */) {
      return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  $__require('b2')('includes');
  return module.exports;
});
$__System.registerDynamic('75', ['4c', '7e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var toInteger = $__require('4c'),
      defined = $__require('7e');
  // true  -> String#at
  // false -> String#codePointAt
  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that)),
          i = toInteger(pos),
          l = s.length,
          a,
          b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
  return module.exports;
});
$__System.registerDynamic('ee', ['f', '75', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/mathiasbynens/String.prototype.at

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $at = $__require('75')(true);

  $export($export.P, 'String', {
    at: function at(pos) {
      return $at(this, pos);
    }
  });
  return module.exports;
});
$__System.registerDynamic('ef', ['f', 'f0', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/tc39/proposal-string-pad-start-end

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $pad = $__require('f0');

  $export($export.P, 'String', {
    padStart: function padStart(maxLength /*, fillString = ' ' */) {
      return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
    }
  });
  return module.exports;
});
$__System.registerDynamic('4e', ['4c', '7e', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var toInteger = $__require('4c'),
      defined = $__require('7e');

  module.exports = function repeat(count) {
    var str = String(defined(this)),
        res = '',
        n = toInteger(count);
    if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
    for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
    return res;
  };
  return module.exports;
});
$__System.registerDynamic('f0', ['72', '4e', '7e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/tc39/proposal-string-pad-start-end
  var toLength = $__require('72'),
      repeat = $__require('4e'),
      defined = $__require('7e');

  module.exports = function (that, maxLength, fillString, left) {
    var S = String(defined(that)),
        stringLength = S.length,
        fillStr = fillString === undefined ? ' ' : String(fillString),
        intMaxLength = toLength(maxLength);
    if (intMaxLength <= stringLength || fillStr == '') return S;
    var fillLen = intMaxLength - stringLength,
        stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
    return left ? stringFiller + S : S + stringFiller;
  };
  return module.exports;
});
$__System.registerDynamic('f1', ['f', 'f0', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/tc39/proposal-string-pad-start-end

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $pad = $__require('f0');

  $export($export.P, 'String', {
    padEnd: function padEnd(maxLength /*, fillString = ' ' */) {
      return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
    }
  });
  return module.exports;
});
$__System.registerDynamic('f2', ['4a', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/sebmarkbage/ecmascript-string-left-right-trim

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('4a')('trimLeft', function ($trim) {
    return function trimLeft() {
      return $trim(this, 1);
    };
  }, 'trimStart');
  return module.exports;
});
$__System.registerDynamic('58', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
  return module.exports;
});
$__System.registerDynamic('4a', ['f', '7e', '12', '58', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      defined = $__require('7e'),
      fails = $__require('12'),
      spaces = $__require('58'),
      space = '[' + spaces + ']',
      non = '\u200b\u0085',
      ltrim = RegExp('^' + space + space + '*'),
      rtrim = RegExp(space + space + '*$');

  var exporter = function (KEY, exec, ALIAS) {
    var exp = {};
    var FORCE = fails(function () {
      return !!spaces[KEY]() || non[KEY]() != non;
    });
    var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
    if (ALIAS) exp[ALIAS] = fn;
    $export($export.P + $export.F * FORCE, 'String', exp);
  };

  // 1 -> String#trimLeft
  // 2 -> String#trimRight
  // 3 -> String#trim
  var trim = exporter.trim = function (string, TYPE) {
    string = String(defined(string));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };

  module.exports = exporter;
  return module.exports;
});
$__System.registerDynamic('f3', ['4a', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/sebmarkbage/ecmascript-string-left-right-trim

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('4a')('trimRight', function ($trim) {
    return function trimRight() {
      return $trim(this, 2);
    };
  }, 'trimEnd');
  return module.exports;
});
$__System.registerDynamic('7d', ['30', '48', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.2.8 IsRegExp(argument)
  var isObject = $__require('30'),
      cof = $__require('48'),
      MATCH = $__require('16')('match');
  module.exports = function (it) {
    var isRegExp;
    return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
  };
  return module.exports;
});
$__System.registerDynamic('ba', ['1a', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 21.2.5.3 get RegExp.prototype.flags

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var anObject = $__require('1a');
  module.exports = function () {
    var that = anObject(this),
        result = '';
    if (that.global) result += 'g';
    if (that.ignoreCase) result += 'i';
    if (that.multiline) result += 'm';
    if (that.unicode) result += 'u';
    if (that.sticky) result += 'y';
    return result;
  };
  return module.exports;
});
$__System.registerDynamic('f4', ['f', '7e', '72', '7d', 'ba', 'e2', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://tc39.github.io/String.prototype.matchAll/

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      defined = $__require('7e'),
      toLength = $__require('72'),
      isRegExp = $__require('7d'),
      getFlags = $__require('ba'),
      RegExpProto = RegExp.prototype;

  var $RegExpStringIterator = function (regexp, string) {
    this._r = regexp;
    this._s = string;
  };

  $__require('e2')($RegExpStringIterator, 'RegExp String', function next() {
    var match = this._r.exec(this._s);
    return { value: match, done: match === null };
  });

  $export($export.P, 'String', {
    matchAll: function matchAll(regexp) {
      defined(this);
      if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
      var S = String(this),
          flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp),
          rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
      rx.lastIndex = toLength(regexp.lastIndex);
      return new $RegExpStringIterator(rx, S);
    }
  });
  return module.exports;
});
$__System.registerDynamic('f5', ['18', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('18')('asyncIterator');
  return module.exports;
});
$__System.registerDynamic('17', ['16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.f = $__require('16');
  return module.exports;
});
$__System.registerDynamic('18', ['c', '35', '22', '17', '20', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      core = $__require('35'),
      LIBRARY = $__require('22'),
      wksExt = $__require('17'),
      defineProperty = $__require('20').f;
  module.exports = function (name) {
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
  };
  return module.exports;
});
$__System.registerDynamic('f6', ['18', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('18')('observable');
  return module.exports;
});
$__System.registerDynamic('21', ['f7', 'f8', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
  var $keys = $__require('f7'),
      hiddenKeys = $__require('f8').concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $keys(O, hiddenKeys);
  };
  return module.exports;
});
$__System.registerDynamic('e9', ['21', '9', '1a', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // all object keys, includes non-enumerable and symbols
  var gOPN = $__require('21'),
      gOPS = $__require('9'),
      anObject = $__require('1a'),
      Reflect = $__require('c').Reflect;
  module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
    var keys = gOPN.f(anObject(it)),
        getSymbols = gOPS.f;
    return getSymbols ? keys.concat(getSymbols(it)) : keys;
  };
  return module.exports;
});
$__System.registerDynamic('99', ['20', '1c', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $defineProperty = $__require('20'),
      createDesc = $__require('1c');

  module.exports = function (object, index, value) {
    if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
  };
  return module.exports;
});
$__System.registerDynamic('f9', ['f', 'e9', '6', '1f', '99', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/tc39/proposal-object-getownpropertydescriptors
  var $export = $__require('f'),
      ownKeys = $__require('e9'),
      toIObject = $__require('6'),
      gOPD = $__require('1f'),
      createProperty = $__require('99');

  $export($export.S, 'Object', {
    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
      var O = toIObject(object),
          getDesc = gOPD.f,
          keys = ownKeys(O),
          result = {},
          i = 0,
          key;
      while (keys.length > i) createProperty(result, key = keys[i++], getDesc(O, key));
      return result;
    }
  });
  return module.exports;
});
$__System.registerDynamic('fa', ['f', 'fb', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/tc39/proposal-object-values-entries
  var $export = $__require('f'),
      $values = $__require('fb')(false);

  $export($export.S, 'Object', {
    values: function values(it) {
      return $values(it);
    }
  });
  return module.exports;
});
$__System.registerDynamic('fb', ['5', '6', 'a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var getKeys = $__require('5'),
      toIObject = $__require('6'),
      isEnum = $__require('a').f;
  module.exports = function (isEntries) {
    return function (it) {
      var O = toIObject(it),
          keys = getKeys(O),
          length = keys.length,
          i = 0,
          result = [],
          key;
      while (length > i) if (isEnum.call(O, key = keys[i++])) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }return result;
    };
  };
  return module.exports;
});
$__System.registerDynamic('fc', ['f', 'fb', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/tc39/proposal-object-values-entries
  var $export = $__require('f'),
      $entries = $__require('fb')(true);

  $export($export.S, 'Object', {
    entries: function entries(it) {
      return $entries(it);
    }
  });
  return module.exports;
});
$__System.registerDynamic('fd', ['f', '2b', 'a3', '20', 'e', 'fe', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toObject = $__require('2b'),
      aFunction = $__require('a3'),
      $defineProperty = $__require('20');

  // B.2.2.2 Object.prototype.__defineGetter__(P, getter)
  $__require('e') && $export($export.P + $__require('fe'), 'Object', {
    __defineGetter__: function __defineGetter__(P, getter) {
      $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
    }
  });
  return module.exports;
});
$__System.registerDynamic('ff', ['f', '2b', 'a3', '20', 'e', 'fe', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toObject = $__require('2b'),
      aFunction = $__require('a3'),
      $defineProperty = $__require('20');

  // B.2.2.3 Object.prototype.__defineSetter__(P, setter)
  $__require('e') && $export($export.P + $__require('fe'), 'Object', {
    __defineSetter__: function __defineSetter__(P, setter) {
      $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
    }
  });
  return module.exports;
});
$__System.registerDynamic('100', ['f', '2b', '1b', '2c', '1f', 'e', 'fe', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toObject = $__require('2b'),
      toPrimitive = $__require('1b'),
      getPrototypeOf = $__require('2c'),
      getOwnPropertyDescriptor = $__require('1f').f;

  // B.2.2.4 Object.prototype.__lookupGetter__(P)
  $__require('e') && $export($export.P + $__require('fe'), 'Object', {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject(this),
          K = toPrimitive(P, true),
          D;
      do {
        if (D = getOwnPropertyDescriptor(O, K)) return D.get;
      } while (O = getPrototypeOf(O));
    }
  });
  return module.exports;
});
$__System.registerDynamic('fe', ['22', '12', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // Forced replacement prototype accessors methods
  module.exports = $__require('22') || !$__require('12')(function () {
    var K = Math.random();
    // In FF throws only define methods
    __defineSetter__.call(null, K, function () {/* empty */});
    delete $__require('c')[K];
  });
  return module.exports;
});
$__System.registerDynamic('101', ['f', '2b', '1b', '2c', '1f', 'e', 'fe', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      toObject = $__require('2b'),
      toPrimitive = $__require('1b'),
      getPrototypeOf = $__require('2c'),
      getOwnPropertyDescriptor = $__require('1f').f;

  // B.2.2.5 Object.prototype.__lookupSetter__(P)
  $__require('e') && $export($export.P + $__require('fe'), 'Object', {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject(this),
          K = toPrimitive(P, true),
          D;
      do {
        if (D = getOwnPropertyDescriptor(O, K)) return D.set;
      } while (O = getPrototypeOf(O));
    }
  });
  return module.exports;
});
$__System.registerDynamic('102', ['f', '103', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export = $__require('f');

  $export($export.P + $export.R, 'Map', { toJSON: $__require('103')('Map') });
  return module.exports;
});
$__System.registerDynamic('103', ['3e', '104', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var classof = $__require('3e'),
      from = $__require('104');
  module.exports = function (NAME) {
    return function toJSON() {
      if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
      return from(this);
    };
  };
  return module.exports;
});
$__System.registerDynamic('105', ['f', '103', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export = $__require('f');

  $export($export.P + $export.R, 'Set', { toJSON: $__require('103')('Set') });
  return module.exports;
});
$__System.registerDynamic('106', ['f', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/ljharb/proposal-global
  var $export = $__require('f');

  $export($export.S, 'System', { global: $__require('c') });
  return module.exports;
});
$__System.registerDynamic('107', ['f', '48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/ljharb/proposal-is-error
  var $export = $__require('f'),
      cof = $__require('48');

  $export($export.S, 'Error', {
    isError: function isError(it) {
      return cof(it) === 'Error';
    }
  });
  return module.exports;
});
$__System.registerDynamic('108', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = $__require('f');

  $export($export.S, 'Math', {
    iaddh: function iaddh(x0, x1, y0, y1) {
      var $x0 = x0 >>> 0,
          $x1 = x1 >>> 0,
          $y0 = y0 >>> 0;
      return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
    }
  });
  return module.exports;
});
$__System.registerDynamic('109', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = $__require('f');

  $export($export.S, 'Math', {
    isubh: function isubh(x0, x1, y0, y1) {
      var $x0 = x0 >>> 0,
          $x1 = x1 >>> 0,
          $y0 = y0 >>> 0;
      return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
    }
  });
  return module.exports;
});
$__System.registerDynamic('10a', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = $__require('f');

  $export($export.S, 'Math', {
    imulh: function imulh(u, v) {
      var UINT16 = 0xffff,
          $u = +u,
          $v = +v,
          u0 = $u & UINT16,
          v0 = $v & UINT16,
          u1 = $u >> 16,
          v1 = $v >> 16,
          t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
      return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
    }
  });
  return module.exports;
});
$__System.registerDynamic('10b', ['f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = $__require('f');

  $export($export.S, 'Math', {
    umulh: function umulh(u, v) {
      var UINT16 = 0xffff,
          $u = +u,
          $v = +v,
          u0 = $u & UINT16,
          v0 = $v & UINT16,
          u1 = $u >>> 16,
          v1 = $v >>> 16,
          t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
      return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
    }
  });
  return module.exports;
});
$__System.registerDynamic('10c', ['10d', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      toMetaKey = metadata.key,
      ordinaryDefineOwnMetadata = metadata.set;

  metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
      ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
    } });
  return module.exports;
});
$__System.registerDynamic('10e', ['10d', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      toMetaKey = metadata.key,
      getOrCreateMetadataMap = metadata.map,
      store = metadata.store;

  metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */) {
      var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]),
          metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
      if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
      if (metadataMap.size) return true;
      var targetMetadata = store.get(target);
      targetMetadata['delete'](targetKey);
      return !!targetMetadata.size || store['delete'](target);
    } });
  return module.exports;
});
$__System.registerDynamic('10f', ['10d', '1a', '2c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      getPrototypeOf = $__require('2c'),
      ordinaryHasOwnMetadata = metadata.has,
      ordinaryGetOwnMetadata = metadata.get,
      toMetaKey = metadata.key;

  var ordinaryGetMetadata = function (MetadataKey, O, P) {
    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
    var parent = getPrototypeOf(O);
    return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
  };

  metadata.exp({ getMetadata: function getMetadata(metadataKey, target /*, targetKey */) {
      return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
    } });
  return module.exports;
});
$__System.registerDynamic('110', ['111', 'cb', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var strong = $__require('111');

  // 23.2 Set Objects
  module.exports = $__require('cb')('Set', function (get) {
    return function Set() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, {
    // 23.2.3.1 Set.prototype.add(value)
    add: function add(value) {
      return strong.def(this, value = value === 0 ? 0 : value, value);
    }
  }, strong);
  return module.exports;
});
$__System.registerDynamic('104', ['c4', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var forOf = $__require('c4');

  module.exports = function (iter, ITERATOR) {
    var result = [];
    forOf(iter, false, result.push, result, ITERATOR);
    return result;
  };
  return module.exports;
});
$__System.registerDynamic('112', ['110', '104', '10d', '1a', '2c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var Set = $__require('110'),
      from = $__require('104'),
      metadata = $__require('10d'),
      anObject = $__require('1a'),
      getPrototypeOf = $__require('2c'),
      ordinaryOwnMetadataKeys = metadata.keys,
      toMetaKey = metadata.key;

  var ordinaryMetadataKeys = function (O, P) {
    var oKeys = ordinaryOwnMetadataKeys(O, P),
        parent = getPrototypeOf(O);
    if (parent === null) return oKeys;
    var pKeys = ordinaryMetadataKeys(parent, P);
    return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
  };

  metadata.exp({ getMetadataKeys: function getMetadataKeys(target /*, targetKey */) {
      return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
    } });
  return module.exports;
});
$__System.registerDynamic('113', ['10d', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      ordinaryGetOwnMetadata = metadata.get,
      toMetaKey = metadata.key;

  metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */) {
      return ordinaryGetOwnMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
    } });
  return module.exports;
});
$__System.registerDynamic('114', ['10d', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      ordinaryOwnMetadataKeys = metadata.keys,
      toMetaKey = metadata.key;

  metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */) {
      return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
    } });
  return module.exports;
});
$__System.registerDynamic('115', ['10d', '1a', '2c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      getPrototypeOf = $__require('2c'),
      ordinaryHasOwnMetadata = metadata.has,
      toMetaKey = metadata.key;

  var ordinaryHasMetadata = function (MetadataKey, O, P) {
    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if (hasOwn) return true;
    var parent = getPrototypeOf(O);
    return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
  };

  metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */) {
      return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
    } });
  return module.exports;
});
$__System.registerDynamic('116', ['10d', '1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      ordinaryHasOwnMetadata = metadata.has,
      toMetaKey = metadata.key;

  metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */) {
      return ordinaryHasOwnMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
    } });
  return module.exports;
});
$__System.registerDynamic('111', ['20', '1d', 'c8', '96', 'c3', '7e', 'c4', '76', '117', 'b8', 'e', '11', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var dP = $__require('20').f,
      create = $__require('1d'),
      redefineAll = $__require('c8'),
      ctx = $__require('96'),
      anInstance = $__require('c3'),
      defined = $__require('7e'),
      forOf = $__require('c4'),
      $iterDefine = $__require('76'),
      step = $__require('117'),
      setSpecies = $__require('b8'),
      DESCRIPTORS = $__require('e'),
      fastKey = $__require('11').fastKey,
      SIZE = DESCRIPTORS ? '_s' : 'size';

  var getEntry = function (that, key) {
    // fast case
    var index = fastKey(key),
        entry;
    if (index !== 'F') return that._i[index];
    // frozen object case
    for (entry = that._f; entry; entry = entry.n) {
      if (entry.k == key) return entry;
    }
  };

  module.exports = {
    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function (that, iterable) {
        anInstance(that, C, NAME, '_i');
        that._i = create(null); // index
        that._f = undefined; // first entry
        that._l = undefined; // last entry
        that[SIZE] = 0; // size
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.1.3.1 Map.prototype.clear()
        // 23.2.3.2 Set.prototype.clear()
        clear: function clear() {
          for (var that = this, data = that._i, entry = that._f; entry; entry = entry.n) {
            entry.r = true;
            if (entry.p) entry.p = entry.p.n = undefined;
            delete data[entry.i];
          }
          that._f = that._l = undefined;
          that[SIZE] = 0;
        },
        // 23.1.3.3 Map.prototype.delete(key)
        // 23.2.3.4 Set.prototype.delete(value)
        'delete': function (key) {
          var that = this,
              entry = getEntry(that, key);
          if (entry) {
            var next = entry.n,
                prev = entry.p;
            delete that._i[entry.i];
            entry.r = true;
            if (prev) prev.n = next;
            if (next) next.p = prev;
            if (that._f == entry) that._f = next;
            if (that._l == entry) that._l = prev;
            that[SIZE]--;
          }return !!entry;
        },
        // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
        // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
        forEach: function forEach(callbackfn /*, that = undefined */) {
          anInstance(this, C, 'forEach');
          var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3),
              entry;
          while (entry = entry ? entry.n : this._f) {
            f(entry.v, entry.k, this);
            // revert to the last existing entry
            while (entry && entry.r) entry = entry.p;
          }
        },
        // 23.1.3.7 Map.prototype.has(key)
        // 23.2.3.7 Set.prototype.has(value)
        has: function has(key) {
          return !!getEntry(this, key);
        }
      });
      if (DESCRIPTORS) dP(C.prototype, 'size', {
        get: function () {
          return defined(this[SIZE]);
        }
      });
      return C;
    },
    def: function (that, key, value) {
      var entry = getEntry(that, key),
          prev,
          index;
      // change existing entry
      if (entry) {
        entry.v = value;
        // create new entry
      } else {
        that._l = entry = {
          i: index = fastKey(key, true), // <- index
          k: key, // <- key
          v: value, // <- value
          p: prev = that._l, // <- previous entry
          n: undefined, // <- next entry
          r: false // <- removed
        };
        if (!that._f) that._f = entry;
        if (prev) prev.n = entry;
        that[SIZE]++;
        // add to index
        if (index !== 'F') that._i[index] = entry;
      }return that;
    },
    getEntry: getEntry,
    setStrong: function (C, NAME, IS_MAP) {
      // add .keys, .values, .entries, [@@iterator]
      // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
      $iterDefine(C, NAME, function (iterated, kind) {
        this._t = iterated; // target
        this._k = kind; // kind
        this._l = undefined; // previous
      }, function () {
        var that = this,
            kind = that._k,
            entry = that._l;
        // revert to the last existing entry
        while (entry && entry.r) entry = entry.p;
        // get next entry
        if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
          // or finish the iteration
          that._t = undefined;
          return step(1);
        }
        // return step by kind
        if (kind == 'keys') return step(0, entry.k);
        if (kind == 'values') return step(0, entry.v);
        return step(0, [entry.k, entry.v]);
      }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

      // add [@@species], 23.1.2.2, 23.2.2.2
      setSpecies(NAME);
    }
  };
  return module.exports;
});
$__System.registerDynamic('118', ['111', 'cb', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var strong = $__require('111');

  // 23.1 Map Objects
  module.exports = $__require('cb')('Map', function (get) {
    return function Map() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, {
    // 23.1.3.6 Map.prototype.get(key)
    get: function get(key) {
      var entry = strong.getEntry(this, key);
      return entry && entry.v;
    },
    // 23.1.3.9 Map.prototype.set(key, value)
    set: function set(key, value) {
      return strong.def(this, key === 0 ? 0 : key, value);
    }
  }, strong, true);
  return module.exports;
});
$__System.registerDynamic("9", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  exports.f = Object.getOwnPropertySymbols;
  return module.exports;
});
$__System.registerDynamic('38', ['5', '9', 'a', '2b', '9e', '12', '7'], true, function ($__require, exports, module) {
  'use strict';
  // 19.1.2.1 Object.assign(target, source, ...)

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var getKeys = $__require('5'),
      gOPS = $__require('9'),
      pIE = $__require('a'),
      toObject = $__require('2b'),
      IObject = $__require('9e'),
      $assign = Object.assign;

  // should work with symbols and should have deterministic property order (V8 bug)
  module.exports = !$assign || $__require('12')(function () {
    var A = {},
        B = {},
        S = Symbol(),
        K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source) {
    // eslint-disable-line no-unused-vars
    var T = toObject(target),
        aLen = arguments.length,
        index = 1,
        getSymbols = gOPS.f,
        isEnum = pIE.f;
    while (aLen > index) {
      var S = IObject(arguments[index++]),
          keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
          length = keys.length,
          j = 0,
          key;
      while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }return T;
  } : $assign;
  return module.exports;
});
$__System.registerDynamic('19', ['48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.2.2 IsArray(argument)
  var cof = $__require('48');
  module.exports = Array.isArray || function isArray(arg) {
    return cof(arg) == 'Array';
  };
  return module.exports;
});
$__System.registerDynamic('119', ['30', '19', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var isObject = $__require('30'),
      isArray = $__require('19'),
      SPECIES = $__require('16')('species');

  module.exports = function (original) {
    var C;
    if (isArray(original)) {
      C = original.constructor;
      // cross-realm fallback
      if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
      if (isObject(C)) {
        C = C[SPECIES];
        if (C === null) C = undefined;
      }
    }return C === undefined ? Array : C;
  };
  return module.exports;
});
$__System.registerDynamic('11a', ['119', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
  var speciesConstructor = $__require('119');

  module.exports = function (original, length) {
    return new (speciesConstructor(original))(length);
  };
  return module.exports;
});
$__System.registerDynamic('a5', ['96', '9e', '2b', '72', '11a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 0 -> Array#forEach
  // 1 -> Array#map
  // 2 -> Array#filter
  // 3 -> Array#some
  // 4 -> Array#every
  // 5 -> Array#find
  // 6 -> Array#findIndex
  var ctx = $__require('96'),
      IObject = $__require('9e'),
      toObject = $__require('2b'),
      toLength = $__require('72'),
      asc = $__require('11a');
  module.exports = function (TYPE, $create) {
    var IS_MAP = TYPE == 1,
        IS_FILTER = TYPE == 2,
        IS_SOME = TYPE == 3,
        IS_EVERY = TYPE == 4,
        IS_FIND_INDEX = TYPE == 6,
        NO_HOLES = TYPE == 5 || IS_FIND_INDEX,
        create = $create || asc;
    return function ($this, callbackfn, that) {
      var O = toObject($this),
          self = IObject(O),
          f = ctx(callbackfn, that, 3),
          length = toLength(self.length),
          index = 0,
          result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined,
          val,
          res;
      for (; length > index; index++) if (NO_HOLES || index in self) {
        val = self[index];
        res = f(val, index, O);
        if (TYPE) {
          if (IS_MAP) result[index] = res; // map
          else if (res) switch (TYPE) {
              case 3:
                return true; // some
              case 5:
                return val; // find
              case 6:
                return index; // findIndex
              case 2:
                result.push(val); // filter
            } else if (IS_EVERY) return false; // every
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };
  return module.exports;
});
$__System.registerDynamic('ca', ['c8', '11', '1a', '30', 'c3', 'c4', 'a5', 'd', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var redefineAll = $__require('c8'),
      getWeak = $__require('11').getWeak,
      anObject = $__require('1a'),
      isObject = $__require('30'),
      anInstance = $__require('c3'),
      forOf = $__require('c4'),
      createArrayMethod = $__require('a5'),
      $has = $__require('d'),
      arrayFind = createArrayMethod(5),
      arrayFindIndex = createArrayMethod(6),
      id = 0;

  // fallback for uncaught frozen keys
  var uncaughtFrozenStore = function (that) {
    return that._l || (that._l = new UncaughtFrozenStore());
  };
  var UncaughtFrozenStore = function () {
    this.a = [];
  };
  var findUncaughtFrozen = function (store, key) {
    return arrayFind(store.a, function (it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore.prototype = {
    get: function (key) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) return entry[1];
    },
    has: function (key) {
      return !!findUncaughtFrozen(this, key);
    },
    set: function (key, value) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) entry[1] = value;else this.a.push([key, value]);
    },
    'delete': function (key) {
      var index = arrayFindIndex(this.a, function (it) {
        return it[0] === key;
      });
      if (~index) this.a.splice(index, 1);
      return !!~index;
    }
  };

  module.exports = {
    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function (that, iterable) {
        anInstance(that, C, NAME, '_i');
        that._i = id++; // collection id
        that._l = undefined; // leak store for uncaught frozen objects
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.3.3.2 WeakMap.prototype.delete(key)
        // 23.4.3.3 WeakSet.prototype.delete(value)
        'delete': function (key) {
          if (!isObject(key)) return false;
          var data = getWeak(key);
          if (data === true) return uncaughtFrozenStore(this)['delete'](key);
          return data && $has(data, this._i) && delete data[this._i];
        },
        // 23.3.3.4 WeakMap.prototype.has(key)
        // 23.4.3.4 WeakSet.prototype.has(value)
        has: function has(key) {
          if (!isObject(key)) return false;
          var data = getWeak(key);
          if (data === true) return uncaughtFrozenStore(this).has(key);
          return data && $has(data, this._i);
        }
      });
      return C;
    },
    def: function (that, key, value) {
      var data = getWeak(anObject(key), true);
      if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;
      return that;
    },
    ufstore: uncaughtFrozenStore
  };
  return module.exports;
});
$__System.registerDynamic('11', ['15', '30', 'd', '20', '12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var META = $__require('15')('meta'),
      isObject = $__require('30'),
      has = $__require('d'),
      setDesc = $__require('20').f,
      id = 0;
  var isExtensible = Object.isExtensible || function () {
    return true;
  };
  var FREEZE = !$__require('12')(function () {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function (it) {
    setDesc(it, META, { value: {
        i: 'O' + ++id, // object ID
        w: {} // weak collections IDs
      } });
  };
  var fastKey = function (it, create) {
    // return primitive with prefix
    if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!has(it, META)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return 'F';
      // not necessary to add metadata
      if (!create) return 'E';
      // add missing metadata
      setMeta(it);
      // return object ID
    }return it[META].i;
  };
  var getWeak = function (it, create) {
    if (!has(it, META)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return true;
      // not necessary to add metadata
      if (!create) return false;
      // add missing metadata
      setMeta(it);
      // return hash weak collections IDs
    }return it[META].w;
  };
  // add metadata on freeze-family methods calling
  var onFreeze = function (it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META,
    NEED: false,
    fastKey: fastKey,
    getWeak: getWeak,
    onFreeze: onFreeze
  };
  return module.exports;
});
$__System.registerDynamic('9b', ['16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var ITERATOR = $__require('16')('iterator'),
      SAFE_CLOSING = false;

  try {
    var riter = [7][ITERATOR]();
    riter['return'] = function () {
      SAFE_CLOSING = true;
    };
    Array.from(riter, function () {
      throw 2;
    });
  } catch (e) {/* empty */}

  module.exports = function (exec, skipClosing) {
    if (!skipClosing && !SAFE_CLOSING) return false;
    var safe = false;
    try {
      var arr = [7],
          iter = arr[ITERATOR]();
      iter.next = function () {
        return { done: safe = true };
      };
      arr[ITERATOR] = function () {
        return iter;
      };
      exec(arr);
    } catch (e) {/* empty */}
    return safe;
  };
  return module.exports;
});
$__System.registerDynamic("a", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  exports.f = {}.propertyIsEnumerable;
  return module.exports;
});
$__System.registerDynamic('1f', ['a', '1c', '6', '1b', 'd', '11b', 'e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var pIE = $__require('a'),
      createDesc = $__require('1c'),
      toIObject = $__require('6'),
      toPrimitive = $__require('1b'),
      has = $__require('d'),
      IE8_DOM_DEFINE = $__require('11b'),
      gOPD = Object.getOwnPropertyDescriptor;

  exports.f = $__require('e') ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = toIObject(O);
    P = toPrimitive(P, true);
    if (IE8_DOM_DEFINE) try {
      return gOPD(O, P);
    } catch (e) {/* empty */}
    if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
  };
  return module.exports;
});
$__System.registerDynamic('3c', ['30', '1a', '96', '1f', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // Works with __proto__ only. Old v8 can't work with null proto objects.
  /* eslint-disable no-proto */
  var isObject = $__require('30'),
      anObject = $__require('1a');
  var check = function (O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = $__require('96')(Function.call, $__require('1f').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
  return module.exports;
});
$__System.registerDynamic('49', ['30', '3c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var isObject = $__require('30'),
      setPrototypeOf = $__require('3c').set;
  module.exports = function (that, target, C) {
    var P,
        S = target.constructor;
    if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
      setPrototypeOf(that, P);
    }return that;
  };
  return module.exports;
});
$__System.registerDynamic('cb', ['c', 'f', '10', 'c8', '11', 'c4', 'c3', '30', '12', '9b', '14', '49', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      $export = $__require('f'),
      redefine = $__require('10'),
      redefineAll = $__require('c8'),
      meta = $__require('11'),
      forOf = $__require('c4'),
      anInstance = $__require('c3'),
      isObject = $__require('30'),
      fails = $__require('12'),
      $iterDetect = $__require('9b'),
      setToStringTag = $__require('14'),
      inheritIfRequired = $__require('49');

  module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
    var Base = global[NAME],
        C = Base,
        ADDER = IS_MAP ? 'set' : 'add',
        proto = C && C.prototype,
        O = {};
    var fixMethod = function (KEY) {
      var fn = proto[KEY];
      redefine(proto, KEY, KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) {
        fn.call(this, a === 0 ? 0 : a);return this;
      } : function set(a, b) {
        fn.call(this, a === 0 ? 0 : a, b);return this;
      });
    };
    if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
      new C().entries().next();
    }))) {
      // create collection constructor
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
      meta.NEED = true;
    } else {
      var instance = new C()
      // early implementations not supports chaining
      ,
          HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
      ,
          THROWS_ON_PRIMITIVES = fails(function () {
        instance.has(1);
      })
      // most early implementations doesn't supports iterables, most modern - not close it correctly
      ,
          ACCEPT_ITERABLES = $iterDetect(function (iter) {
        new C(iter);
      }) // eslint-disable-line no-new
      // for early implementations -0 and +0 not the same
      ,
          BUGGY_ZERO = !IS_WEAK && fails(function () {
        // V8 ~ Chromium 42- fails only with 5+ elements
        var $instance = new C(),
            index = 5;
        while (index--) $instance[ADDER](index, index);
        return !$instance.has(-0);
      });
      if (!ACCEPT_ITERABLES) {
        C = wrapper(function (target, iterable) {
          anInstance(target, C, NAME);
          var that = inheritIfRequired(new Base(), target, C);
          if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
          return that;
        });
        C.prototype = proto;
        proto.constructor = C;
      }
      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod('delete');
        fixMethod('has');
        IS_MAP && fixMethod('get');
      }
      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
      // weak collections should not contains .clear method
      if (IS_WEAK && proto.clear) delete proto.clear;
    }

    setToStringTag(C, NAME);

    O[NAME] = C;
    $export($export.G + $export.W + $export.F * (C != Base), O);

    if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

    return C;
  };
  return module.exports;
});
$__System.registerDynamic('11c', ['a5', '10', '11', '38', 'ca', '30', 'cb', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var each = $__require('a5')(0),
      redefine = $__require('10'),
      meta = $__require('11'),
      assign = $__require('38'),
      weak = $__require('ca'),
      isObject = $__require('30'),
      getWeak = meta.getWeak,
      isExtensible = Object.isExtensible,
      uncaughtFrozenStore = weak.ufstore,
      tmp = {},
      InternalMap;

  var wrapper = function (get) {
    return function WeakMap() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  };

  var methods = {
    // 23.3.3.3 WeakMap.prototype.get(key)
    get: function get(key) {
      if (isObject(key)) {
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(this).get(key);
        return data ? data[this._i] : undefined;
      }
    },
    // 23.3.3.5 WeakMap.prototype.set(key, value)
    set: function set(key, value) {
      return weak.def(this, key, value);
    }
  };

  // 23.3 WeakMap Objects
  var $WeakMap = module.exports = $__require('cb')('WeakMap', wrapper, methods, weak, true, true);

  // IE11 WeakMap frozen keys fix
  if (new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7) {
    InternalMap = weak.getConstructor(wrapper);
    assign(InternalMap.prototype, methods);
    meta.NEED = true;
    each(['delete', 'has', 'get', 'set'], function (key) {
      var proto = $WeakMap.prototype,
          method = proto[key];
      redefine(proto, key, function (a, b) {
        // store frozen objects on internal weakmap shim
        if (isObject(a) && !isExtensible(a)) {
          if (!this._f) this._f = new InternalMap();
          var result = this._f[key](a, b);
          return key == 'set' ? this : result;
          // store all the rest on native weakmap
        }return method.call(this, a, b);
      });
    });
  }
  return module.exports;
});
$__System.registerDynamic('10d', ['118', 'f', '13', '11c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var Map = $__require('118'),
      $export = $__require('f'),
      shared = $__require('13')('metadata'),
      store = shared.store || (shared.store = new ($__require('11c'))());

  var getOrCreateMetadataMap = function (target, targetKey, create) {
    var targetMetadata = store.get(target);
    if (!targetMetadata) {
      if (!create) return undefined;
      store.set(target, targetMetadata = new Map());
    }
    var keyMetadata = targetMetadata.get(targetKey);
    if (!keyMetadata) {
      if (!create) return undefined;
      targetMetadata.set(targetKey, keyMetadata = new Map());
    }return keyMetadata;
  };
  var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
    var metadataMap = getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
  };
  var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
    var metadataMap = getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
  };
  var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
    getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
  };
  var ordinaryOwnMetadataKeys = function (target, targetKey) {
    var metadataMap = getOrCreateMetadataMap(target, targetKey, false),
        keys = [];
    if (metadataMap) metadataMap.forEach(function (_, key) {
      keys.push(key);
    });
    return keys;
  };
  var toMetaKey = function (it) {
    return it === undefined || typeof it == 'symbol' ? it : String(it);
  };
  var exp = function (O) {
    $export($export.S, 'Reflect', O);
  };

  module.exports = {
    store: store,
    map: getOrCreateMetadataMap,
    has: ordinaryHasOwnMetadata,
    get: ordinaryGetOwnMetadata,
    set: ordinaryDefineOwnMetadata,
    keys: ordinaryOwnMetadataKeys,
    key: toMetaKey,
    exp: exp
  };
  return module.exports;
});
$__System.registerDynamic('11d', ['10d', '1a', 'a3', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var metadata = $__require('10d'),
      anObject = $__require('1a'),
      aFunction = $__require('a3'),
      toMetaKey = metadata.key,
      ordinaryDefineOwnMetadata = metadata.set;

  metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
      return function decorator(target, targetKey) {
        ordinaryDefineOwnMetadata(metadataKey, metadataValue, (targetKey !== undefined ? anObject : aFunction)(target), toMetaKey(targetKey));
      };
    } });
  return module.exports;
});
$__System.registerDynamic('11e', ['f', 'c7', 'c', '48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
  var $export = $__require('f'),
      microtask = $__require('c7')(),
      process = $__require('c').process,
      isNode = $__require('48')(process) == 'process';

  $export($export.G, {
    asap: function asap(fn) {
      var domain = isNode && process.domain;
      microtask(domain ? domain.bind(fn) : fn);
    }
  });
  return module.exports;
});
$__System.registerDynamic('c7', ['c', 'c6', '48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      macrotask = $__require('c6').set,
      Observer = global.MutationObserver || global.WebKitMutationObserver,
      process = global.process,
      Promise = global.Promise,
      isNode = $__require('48')(process) == 'process';

  module.exports = function () {
    var head, last, notify;

    var flush = function () {
      var parent, fn;
      if (isNode && (parent = process.domain)) parent.exit();
      while (head) {
        fn = head.fn;
        head = head.next;
        try {
          fn();
        } catch (e) {
          if (head) notify();else last = undefined;
          throw e;
        }
      }last = undefined;
      if (parent) parent.enter();
    };

    // Node.js
    if (isNode) {
      notify = function () {
        process.nextTick(flush);
      };
      // browsers with MutationObserver
    } else if (Observer) {
      var toggle = true,
          node = document.createTextNode('');
      new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
      notify = function () {
        node.data = toggle = !toggle;
      };
      // environments with maybe non-completely correct, but existent Promise
    } else if (Promise && Promise.resolve) {
      var promise = Promise.resolve();
      notify = function () {
        promise.then(flush);
      };
      // for other environments - macrotask based on:
      // - setImmediate
      // - MessageChannel
      // - window.postMessag
      // - onreadystatechange
      // - setTimeout
    } else {
      notify = function () {
        // strange IE + webpack dev server bug - use .call(global)
        macrotask.call(global, flush);
      };
    }

    return function (fn) {
      var task = { fn: fn, next: undefined };
      if (last) last.next = task;
      if (!head) {
        head = task;
        notify();
      }last = task;
    };
  };
  return module.exports;
});
$__System.registerDynamic('c3', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function (it, Constructor, name, forbiddenField) {
    if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
      throw TypeError(name + ': incorrect invocation!');
    }return it;
  };
  return module.exports;
});
$__System.registerDynamic('c8', ['10', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var redefine = $__require('10');
  module.exports = function (target, src, safe) {
    for (var key in src) redefine(target, key, src[key], safe);
    return target;
  };
  return module.exports;
});
$__System.registerDynamic('97', ['1a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // call something on iterator step with safe closing on error
  var anObject = $__require('1a');
  module.exports = function (iterator, fn, value, entries) {
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
      // 7.4.6 IteratorClose(iterator, completion)
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined) anObject(ret.call(iterator));
      throw e;
    }
  };
  return module.exports;
});
$__System.registerDynamic('98', ['da', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // check on default Array iterator
  var Iterators = $__require('da'),
      ITERATOR = $__require('16')('iterator'),
      ArrayProto = Array.prototype;

  module.exports = function (it) {
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };
  return module.exports;
});
$__System.registerDynamic('3e', ['48', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // getting tag from 19.1.3.6 Object.prototype.toString()
  var cof = $__require('48'),
      TAG = $__require('16')('toStringTag')
  // ES3 wrong here
  ,
      ARG = cof(function () {
    return arguments;
  }()) == 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function (it, key) {
    try {
      return it[key];
    } catch (e) {/* empty */}
  };

  module.exports = function (it) {
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };
  return module.exports;
});
$__System.registerDynamic('9a', ['3e', '16', 'da', '35', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var classof = $__require('3e'),
      ITERATOR = $__require('16')('iterator'),
      Iterators = $__require('da');
  module.exports = $__require('35').getIteratorMethod = function (it) {
    if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
  };
  return module.exports;
});
$__System.registerDynamic('c4', ['96', '97', '98', '1a', '72', '9a', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var ctx = $__require('96'),
      call = $__require('97'),
      isArrayIter = $__require('98'),
      anObject = $__require('1a'),
      toLength = $__require('72'),
      getIterFn = $__require('9a'),
      BREAK = {},
      RETURN = {};
  var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
    var iterFn = ITERATOR ? function () {
      return iterable;
    } : getIterFn(iterable),
        f = ctx(fn, that, entries ? 2 : 1),
        index = 0,
        length,
        step,
        iterator,
        result;
    if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
    // fast case for arrays with default iterator
    if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
      result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
      if (result === BREAK || result === RETURN) return result;
    } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
      result = call(iterator, f, step.value, entries);
      if (result === BREAK || result === RETURN) return result;
    }
  };
  exports.BREAK = BREAK;
  exports.RETURN = RETURN;
  return module.exports;
});
$__System.registerDynamic('b8', ['c', '20', 'e', '16', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      dP = $__require('20'),
      DESCRIPTORS = $__require('e'),
      SPECIES = $__require('16')('species');

  module.exports = function (KEY) {
    var C = global[KEY];
    if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
      configurable: true,
      get: function () {
        return this;
      }
    });
  };
  return module.exports;
});
$__System.registerDynamic('11f', ['f', 'c', '35', 'c7', '16', 'a3', '1a', 'c3', 'c8', '23', 'c4', 'b8', '7'], true, function ($__require, exports, module) {
  'use strict';
  // https://github.com/zenparsing/es-observable

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      global = $__require('c'),
      core = $__require('35'),
      microtask = $__require('c7')(),
      OBSERVABLE = $__require('16')('observable'),
      aFunction = $__require('a3'),
      anObject = $__require('1a'),
      anInstance = $__require('c3'),
      redefineAll = $__require('c8'),
      hide = $__require('23'),
      forOf = $__require('c4'),
      RETURN = forOf.RETURN;

  var getMethod = function (fn) {
    return fn == null ? undefined : aFunction(fn);
  };

  var cleanupSubscription = function (subscription) {
    var cleanup = subscription._c;
    if (cleanup) {
      subscription._c = undefined;
      cleanup();
    }
  };

  var subscriptionClosed = function (subscription) {
    return subscription._o === undefined;
  };

  var closeSubscription = function (subscription) {
    if (!subscriptionClosed(subscription)) {
      subscription._o = undefined;
      cleanupSubscription(subscription);
    }
  };

  var Subscription = function (observer, subscriber) {
    anObject(observer);
    this._c = undefined;
    this._o = observer;
    observer = new SubscriptionObserver(this);
    try {
      var cleanup = subscriber(observer),
          subscription = cleanup;
      if (cleanup != null) {
        if (typeof cleanup.unsubscribe === 'function') cleanup = function () {
          subscription.unsubscribe();
        };else aFunction(cleanup);
        this._c = cleanup;
      }
    } catch (e) {
      observer.error(e);
      return;
    }if (subscriptionClosed(this)) cleanupSubscription(this);
  };

  Subscription.prototype = redefineAll({}, {
    unsubscribe: function unsubscribe() {
      closeSubscription(this);
    }
  });

  var SubscriptionObserver = function (subscription) {
    this._s = subscription;
  };

  SubscriptionObserver.prototype = redefineAll({}, {
    next: function next(value) {
      var subscription = this._s;
      if (!subscriptionClosed(subscription)) {
        var observer = subscription._o;
        try {
          var m = getMethod(observer.next);
          if (m) return m.call(observer, value);
        } catch (e) {
          try {
            closeSubscription(subscription);
          } finally {
            throw e;
          }
        }
      }
    },
    error: function error(value) {
      var subscription = this._s;
      if (subscriptionClosed(subscription)) throw value;
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.error);
        if (!m) throw value;
        value = m.call(observer, value);
      } catch (e) {
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      }cleanupSubscription(subscription);
      return value;
    },
    complete: function complete(value) {
      var subscription = this._s;
      if (!subscriptionClosed(subscription)) {
        var observer = subscription._o;
        subscription._o = undefined;
        try {
          var m = getMethod(observer.complete);
          value = m ? m.call(observer, value) : undefined;
        } catch (e) {
          try {
            cleanupSubscription(subscription);
          } finally {
            throw e;
          }
        }cleanupSubscription(subscription);
        return value;
      }
    }
  });

  var $Observable = function Observable(subscriber) {
    anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
  };

  redefineAll($Observable.prototype, {
    subscribe: function subscribe(observer) {
      return new Subscription(observer, this._f);
    },
    forEach: function forEach(fn) {
      var that = this;
      return new (core.Promise || global.Promise)(function (resolve, reject) {
        aFunction(fn);
        var subscription = that.subscribe({
          next: function (value) {
            try {
              return fn(value);
            } catch (e) {
              reject(e);
              subscription.unsubscribe();
            }
          },
          error: reject,
          complete: resolve
        });
      });
    }
  });

  redefineAll($Observable, {
    from: function from(x) {
      var C = typeof this === 'function' ? this : $Observable;
      var method = getMethod(anObject(x)[OBSERVABLE]);
      if (method) {
        var observable = anObject(method.call(x));
        return observable.constructor === C ? observable : new C(function (observer) {
          return observable.subscribe(observer);
        });
      }
      return new C(function (observer) {
        var done = false;
        microtask(function () {
          if (!done) {
            try {
              if (forOf(x, false, function (it) {
                observer.next(it);
                if (done) return RETURN;
              }) === RETURN) return;
            } catch (e) {
              if (done) throw e;
              observer.error(e);
              return;
            }observer.complete();
          }
        });
        return function () {
          done = true;
        };
      });
    },
    of: function of() {
      for (var i = 0, l = arguments.length, items = Array(l); i < l;) items[i] = arguments[i++];
      return new (typeof this === 'function' ? this : $Observable)(function (observer) {
        var done = false;
        microtask(function () {
          if (!done) {
            for (var i = 0; i < items.length; ++i) {
              observer.next(items[i]);
              if (done) return;
            }observer.complete();
          }
        });
        return function () {
          done = true;
        };
      });
    }
  });

  hide($Observable.prototype, OBSERVABLE, function () {
    return this;
  });

  $export($export.G, { Observable: $Observable });

  $__require('b8')('Observable');
  return module.exports;
});
$__System.registerDynamic('120', ['c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('c');
  return module.exports;
});
$__System.registerDynamic('121', ['120', 'dd', 'a3', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var path = $__require('120'),
      invoke = $__require('dd'),
      aFunction = $__require('a3');
  module.exports = function () /* ...pargs */{
    var fn = aFunction(this),
        length = arguments.length,
        pargs = Array(length),
        i = 0,
        _ = path._,
        holder = false;
    while (length > i) if ((pargs[i] = arguments[i++]) === _) holder = true;
    return function () /* ...args */{
      var that = this,
          aLen = arguments.length,
          j = 0,
          k = 0,
          args;
      if (!holder && !aLen) return invoke(fn, pargs, that);
      args = pargs.slice();
      if (holder) for (; length > j; j++) if (args[j] === _) args[j] = arguments[k++];
      while (aLen > k) args.push(arguments[k++]);
      return invoke(fn, args, that);
    };
  };
  return module.exports;
});
$__System.registerDynamic('122', ['c', 'f', 'dd', '121', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // ie9- setTimeout & setInterval additional parameters fix
  var global = $__require('c'),
      $export = $__require('f'),
      invoke = $__require('dd'),
      partial = $__require('121'),
      navigator = global.navigator,
      MSIE = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
  var wrap = function (set) {
    return MSIE ? function (fn, time /*, ...args */) {
      return set(invoke(partial, [].slice.call(arguments, 2), typeof fn == 'function' ? fn : Function(fn)), time);
    } : set;
  };
  $export($export.G + $export.B + $export.F * MSIE, {
    setTimeout: wrap(global.setTimeout),
    setInterval: wrap(global.setInterval)
  });
  return module.exports;
});
$__System.registerDynamic("dd", ["7"], true, function ($__require, exports, module) {
                  var process = $__require("7");
                  var define,
                      global = this || self,
                      GLOBAL = global;
                  // fast apply, http://jsperf.lnkit.com/fast-apply/5
                  module.exports = function (fn, args, that) {
                                    var un = that === undefined;
                                    switch (args.length) {
                                                      case 0:
                                                                        return un ? fn() : fn.call(that);
                                                      case 1:
                                                                        return un ? fn(args[0]) : fn.call(that, args[0]);
                                                      case 2:
                                                                        return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
                                                      case 3:
                                                                        return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
                                                      case 4:
                                                                        return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
                                    }return fn.apply(that, args);
                  };
                  return module.exports;
});
$__System.registerDynamic('c6', ['96', 'dd', 'a1', '123', 'c', '48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var ctx = $__require('96'),
      invoke = $__require('dd'),
      html = $__require('a1'),
      cel = $__require('123'),
      global = $__require('c'),
      process = global.process,
      setTask = global.setImmediate,
      clearTask = global.clearImmediate,
      MessageChannel = global.MessageChannel,
      counter = 0,
      queue = {},
      ONREADYSTATECHANGE = 'onreadystatechange',
      defer,
      channel,
      port;
  var run = function () {
    var id = +this;
    if (queue.hasOwnProperty(id)) {
      var fn = queue[id];
      delete queue[id];
      fn();
    }
  };
  var listener = function (event) {
    run.call(event.data);
  };
  // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
  if (!setTask || !clearTask) {
    setTask = function setImmediate(fn) {
      var args = [],
          i = 1;
      while (arguments.length > i) args.push(arguments[i++]);
      queue[++counter] = function () {
        invoke(typeof fn == 'function' ? fn : Function(fn), args);
      };
      defer(counter);
      return counter;
    };
    clearTask = function clearImmediate(id) {
      delete queue[id];
    };
    // Node.js 0.8-
    if ($__require('48')(process) == 'process') {
      defer = function (id) {
        process.nextTick(ctx(run, id, 1));
      };
      // Browsers with MessageChannel, includes WebWorkers
    } else if (MessageChannel) {
      channel = new MessageChannel();
      port = channel.port2;
      channel.port1.onmessage = listener;
      defer = ctx(port.postMessage, port, 1);
      // Browsers with postMessage, skip WebWorkers
      // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
      defer = function (id) {
        global.postMessage(id + '', '*');
      };
      global.addEventListener('message', listener, false);
      // IE8-
    } else if (ONREADYSTATECHANGE in cel('script')) {
      defer = function (id) {
        html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
          html.removeChild(this);
          run.call(id);
        };
      };
      // Rest old browsers
    } else {
      defer = function (id) {
        setTimeout(ctx(run, id, 1), 0);
      };
    }
  }
  module.exports = {
    set: setTask,
    clear: clearTask
  };
  return module.exports;
});
$__System.registerDynamic('124', ['f', 'c6', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $export = $__require('f'),
      $task = $__require('c6');
  $export($export.G + $export.B, {
    setImmediate: $task.set,
    clearImmediate: $task.clear
  });
  return module.exports;
});
$__System.registerDynamic('b2', ['16', '23', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 22.1.3.31 Array.prototype[@@unscopables]
  var UNSCOPABLES = $__require('16')('unscopables'),
      ArrayProto = Array.prototype;
  if (ArrayProto[UNSCOPABLES] == undefined) $__require('23')(ArrayProto, UNSCOPABLES, {});
  module.exports = function (key) {
    ArrayProto[UNSCOPABLES][key] = true;
  };
  return module.exports;
});
$__System.registerDynamic("117", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function (done, value) {
    return { value: value, done: !!done };
  };
  return module.exports;
});
$__System.registerDynamic("22", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = false;
  return module.exports;
});
$__System.registerDynamic('a3', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };
  return module.exports;
});
$__System.registerDynamic('96', ['a3', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // optional / simple context binding
  var aFunction = $__require('a3');
  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };
      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function () /* ...args */{
      return fn.apply(that, arguments);
    };
  };
  return module.exports;
});
$__System.registerDynamic('f', ['c', '35', '23', '10', '96', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      core = $__require('35'),
      hide = $__require('23'),
      redefine = $__require('10'),
      ctx = $__require('96'),
      PROTOTYPE = 'prototype';

  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F,
        IS_GLOBAL = type & $export.G,
        IS_STATIC = type & $export.S,
        IS_PROTO = type & $export.P,
        IS_BIND = type & $export.B,
        target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE],
        exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
        expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {}),
        key,
        own,
        out,
        exp;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      // export native or passed
      out = (own ? target : source)[key];
      // bind timers to global for call from export context
      exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      // extend global
      if (target) redefine(target, key, out, type & $export.U);
      // export
      if (exports[key] != out) hide(exports, key, exp);
      if (IS_PROTO && expProto[key] != out) expProto[key] = out;
    }
  };
  global.core = core;
  // type bitmap
  $export.F = 1; // forced
  $export.G = 2; // global
  $export.S = 4; // static
  $export.P = 8; // proto
  $export.B = 16; // bind
  $export.W = 32; // wrap
  $export.U = 64; // safe
  $export.R = 128; // real proto method for `library` 
  module.exports = $export;
  return module.exports;
});
$__System.registerDynamic("48", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };
  return module.exports;
});
$__System.registerDynamic('9e', ['48', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var cof = $__require('48');
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
  return module.exports;
});
$__System.registerDynamic('6', ['9e', '7e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // to indexed object, toObject with fallback for non-array-like ES3 strings
  var IObject = $__require('9e'),
      defined = $__require('7e');
  module.exports = function (it) {
    return IObject(defined(it));
  };
  return module.exports;
});
$__System.registerDynamic('72', ['4c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.1.15 ToLength
  var toInteger = $__require('4c'),
      min = Math.min;
  module.exports = function (it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };
  return module.exports;
});
$__System.registerDynamic("4c", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.1.4 ToInteger
  var ceil = Math.ceil,
      floor = Math.floor;
  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
  return module.exports;
});
$__System.registerDynamic('70', ['4c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var toInteger = $__require('4c'),
      max = Math.max,
      min = Math.min;
  module.exports = function (index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
  return module.exports;
});
$__System.registerDynamic('ae', ['6', '72', '70', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // false -> Array#indexOf
  // true  -> Array#includes
  var toIObject = $__require('6'),
      toLength = $__require('72'),
      toIndex = $__require('70');
  module.exports = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIObject($this),
          length = toLength(O.length),
          index = toIndex(fromIndex, length),
          value;
      // Array#includes uses SameValueZero equality algorithm
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        if (value != value) return true;
        // Array#toIndex ignores holes, Array#includes - not
      } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      }return !IS_INCLUDES && -1;
    };
  };
  return module.exports;
});
$__System.registerDynamic('f7', ['d', '6', 'ae', '125', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var has = $__require('d'),
      toIObject = $__require('6'),
      arrayIndexOf = $__require('ae')(false),
      IE_PROTO = $__require('125')('IE_PROTO');

  module.exports = function (object, names) {
    var O = toIObject(object),
        i = 0,
        result = [],
        key;
    for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while (names.length > i) if (has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };
  return module.exports;
});
$__System.registerDynamic('5', ['f7', 'f8', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.14 / 15.2.3.14 Object.keys(O)
  var $keys = $__require('f7'),
      enumBugKeys = $__require('f8');

  module.exports = Object.keys || function keys(O) {
    return $keys(O, enumBugKeys);
  };
  return module.exports;
});
$__System.registerDynamic('27', ['20', '1a', '5', 'e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var dP = $__require('20'),
      anObject = $__require('1a'),
      getKeys = $__require('5');

  module.exports = $__require('e') ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys = getKeys(Properties),
        length = keys.length,
        i = 0,
        P;
    while (length > i) dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };
  return module.exports;
});
$__System.registerDynamic('f8', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // IE 8- don't enum bug keys
  module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
  return module.exports;
});
$__System.registerDynamic('a1', ['c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('c').document && document.documentElement;
  return module.exports;
});
$__System.registerDynamic('1d', ['1a', '27', 'f8', '125', '123', 'a1', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  var anObject = $__require('1a'),
      dPs = $__require('27'),
      enumBugKeys = $__require('f8'),
      IE_PROTO = $__require('125')('IE_PROTO'),
      Empty = function () {/* empty */},
      PROTOTYPE = 'prototype';

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var createDict = function () {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = $__require('123')('iframe'),
        i = enumBugKeys.length,
        lt = '<',
        gt = '>',
        iframeDocument;
    iframe.style.display = 'none';
    $__require('a1').appendChild(iframe);
    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };

  module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty();
      Empty[PROTOTYPE] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO] = O;
    } else result = createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };
  return module.exports;
});
$__System.registerDynamic('e2', ['1d', '1c', '14', '23', '16', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var create = $__require('1d'),
      descriptor = $__require('1c'),
      setToStringTag = $__require('14'),
      IteratorPrototype = {};

  // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
  $__require('23')(IteratorPrototype, $__require('16')('iterator'), function () {
    return this;
  });

  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
    setToStringTag(Constructor, NAME + ' Iterator');
  };
  return module.exports;
});
$__System.registerDynamic('14', ['20', 'd', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var def = $__require('20').f,
      has = $__require('d'),
      TAG = $__require('16')('toStringTag');

  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
  };
  return module.exports;
});
$__System.registerDynamic("7e", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };
  return module.exports;
});
$__System.registerDynamic('2b', ['7e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.1.13 ToObject(argument)
  var defined = $__require('7e');
  module.exports = function (it) {
    return Object(defined(it));
  };
  return module.exports;
});
$__System.registerDynamic('125', ['13', '15', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var shared = $__require('13')('keys'),
      uid = $__require('15');
  module.exports = function (key) {
    return shared[key] || (shared[key] = uid(key));
  };
  return module.exports;
});
$__System.registerDynamic('2c', ['d', '2b', '125', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
  var has = $__require('d'),
      toObject = $__require('2b'),
      IE_PROTO = $__require('125')('IE_PROTO'),
      ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function (O) {
    O = toObject(O);
    if (has(O, IE_PROTO)) return O[IE_PROTO];
    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }return O instanceof Object ? ObjectProto : null;
  };
  return module.exports;
});
$__System.registerDynamic('76', ['22', 'f', '10', '23', 'd', 'da', 'e2', '14', '2c', '16', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var LIBRARY = $__require('22'),
      $export = $__require('f'),
      redefine = $__require('10'),
      hide = $__require('23'),
      has = $__require('d'),
      Iterators = $__require('da'),
      $iterCreate = $__require('e2'),
      setToStringTag = $__require('14'),
      getPrototypeOf = $__require('2c'),
      ITERATOR = $__require('16')('iterator'),
      BUGGY = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  ,
      FF_ITERATOR = '@@iterator',
      KEYS = 'keys',
      VALUES = 'values';

  var returnThis = function () {
    return this;
  };

  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function (kind) {
      if (!BUGGY && kind in proto) return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator',
        DEF_VALUES = DEFAULT == VALUES,
        VALUES_BUG = false,
        proto = Base.prototype,
        $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
        $default = $native || getMethod(DEFAULT),
        $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,
        $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
        methods,
        key,
        IteratorPrototype;
    // Fix native
    if ($anyNative) {
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
      if (IteratorPrototype !== Object.prototype) {
        // Set @@toStringTag to native iterators
        setToStringTag(IteratorPrototype, TAG, true);
        // fix for some old engines
        if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;
      $default = function values() {
        return $native.call(this);
      };
    }
    // Define iterator
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    // Plug for library
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
  return module.exports;
});
$__System.registerDynamic('d9', ['b2', '117', 'da', '6', '76', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var addToUnscopables = $__require('b2'),
      step = $__require('117'),
      Iterators = $__require('da'),
      toIObject = $__require('6');

  // 22.1.3.4 Array.prototype.entries()
  // 22.1.3.13 Array.prototype.keys()
  // 22.1.3.29 Array.prototype.values()
  // 22.1.3.30 Array.prototype[@@iterator]()
  module.exports = $__require('76')(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated); // target
    this._i = 0; // next index
    this._k = kind; // kind
    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function () {
    var O = this._t,
        kind = this._k,
        index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
  Iterators.Arguments = Iterators.Array;

  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
  return module.exports;
});
$__System.registerDynamic("d", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };
  return module.exports;
});
$__System.registerDynamic('10', ['c', '23', 'd', '15', '35', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      hide = $__require('23'),
      has = $__require('d'),
      SRC = $__require('15')('src'),
      TO_STRING = 'toString',
      $toString = Function[TO_STRING],
      TPL = ('' + $toString).split(TO_STRING);

  $__require('35').inspectSource = function (it) {
    return $toString.call(it);
  };

  (module.exports = function (O, key, val, safe) {
    var isFunction = typeof val == 'function';
    if (isFunction) has(val, 'name') || hide(val, 'name', key);
    if (O[key] === val) return;
    if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
    if (O === global) {
      O[key] = val;
    } else {
      if (!safe) {
        delete O[key];
        hide(O, key, val);
      } else {
        if (O[key]) O[key] = val;else hide(O, key, val);
      }
    }
    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
  })(Function.prototype, TO_STRING, function toString() {
    return typeof this == 'function' && this[SRC] || $toString.call(this);
  });
  return module.exports;
});
$__System.registerDynamic('1a', ['30', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var isObject = $__require('30');
  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };
  return module.exports;
});
$__System.registerDynamic('123', ['30', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var isObject = $__require('30'),
      document = $__require('c').document
  // in old IE typeof document.createElement is 'object'
  ,
      is = isObject(document) && isObject(document.createElement);
  module.exports = function (it) {
    return is ? document.createElement(it) : {};
  };
  return module.exports;
});
$__System.registerDynamic('11b', ['e', '12', '123', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = !$__require('e') && !$__require('12')(function () {
    return Object.defineProperty($__require('123')('div'), 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
  return module.exports;
});
$__System.registerDynamic('30', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
  return module.exports;
});
$__System.registerDynamic('1b', ['30', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // 7.1.1 ToPrimitive(input [, PreferredType])
  var isObject = $__require('30');
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string
  module.exports = function (it, S) {
    if (!isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };
  return module.exports;
});
$__System.registerDynamic('20', ['1a', '11b', '1b', 'e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var anObject = $__require('1a'),
      IE8_DOM_DEFINE = $__require('11b'),
      toPrimitive = $__require('1b'),
      dP = Object.defineProperty;

  exports.f = $__require('e') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (IE8_DOM_DEFINE) try {
      return dP(O, P, Attributes);
    } catch (e) {/* empty */}
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
  return module.exports;
});
$__System.registerDynamic("1c", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
  return module.exports;
});
$__System.registerDynamic("12", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
  return module.exports;
});
$__System.registerDynamic('e', ['12', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // Thank's IE8 for his funny defineProperty
  module.exports = !$__require('12')(function () {
    return Object.defineProperty({}, 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
  return module.exports;
});
$__System.registerDynamic('23', ['20', '1c', 'e', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var dP = $__require('20'),
      createDesc = $__require('1c');
  module.exports = $__require('e') ? function (object, key, value) {
    return dP.f(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
  return module.exports;
});
$__System.registerDynamic("da", ["7"], true, function ($__require, exports, module) {
  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = {};
  return module.exports;
});
$__System.registerDynamic('13', ['c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var global = $__require('c'),
      SHARED = '__core-js_shared__',
      store = global[SHARED] || (global[SHARED] = {});
  module.exports = function (key) {
    return store[key] || (store[key] = {});
  };
  return module.exports;
});
$__System.registerDynamic('15', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var id = 0,
      px = Math.random();
  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
  return module.exports;
});
$__System.registerDynamic('c', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

  return module.exports;
});
$__System.registerDynamic('16', ['13', '15', 'c', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var store = $__require('13')('wks'),
      uid = $__require('15'),
      Symbol = $__require('c').Symbol,
      USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function (name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };

  $exports.store = store;
  return module.exports;
});
$__System.registerDynamic('126', ['d9', '10', 'c', '23', 'da', '16', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var $iterators = $__require('d9'),
      redefine = $__require('10'),
      global = $__require('c'),
      hide = $__require('23'),
      Iterators = $__require('da'),
      wks = $__require('16'),
      ITERATOR = wks('iterator'),
      TO_STRING_TAG = wks('toStringTag'),
      ArrayValues = Iterators.Array;

  for (var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++) {
    var NAME = collections[i],
        Collection = global[NAME],
        proto = Collection && Collection.prototype,
        key;
    if (proto) {
      if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
      if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
      Iterators[NAME] = ArrayValues;
      for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
    }
  }
  return module.exports;
});
$__System.registerDynamic('35', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  var core = module.exports = { version: '2.4.0' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

  return module.exports;
});
$__System.registerDynamic('127', ['b', '24', '25', '26', '28', '2a', '2d', '2e', '2f', '31', '32', '33', '34', '36', '37', '39', '3b', '3d', '3f', '41', '42', '43', '45', '47', '4b', '4f', '50', '51', '52', '54', '55', '56', '57', '59', '5a', '5b', '5d', '5e', '5f', '61', '62', '63', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '71', '73', '74', '77', '78', '7b', '7c', '7f', '80', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '93', '94', '95', '9c', '9d', 'a0', 'a2', 'a4', 'a6', 'a7', 'a8', 'a9', 'aa', 'ac', 'ad', 'af', 'b0', 'b3', 'b5', 'b6', 'b7', 'd9', 'b9', 'bb', 'bc', 'bd', 'bf', 'c0', 'c1', 'c2', '118', '110', '11c', 'c9', 'cc', 'cf', 'd0', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'db', 'dc', 'de', 'df', 'e0', 'e1', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f9', 'fa', 'fc', 'fd', 'ff', '100', '101', '102', '105', '106', '107', '108', '109', '10a', '10b', '10c', '10e', '10f', '112', '113', '114', '115', '116', '11d', '11e', '11f', '122', '124', '126', '35', '7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('b');
  $__require('24');
  $__require('25');
  $__require('26');
  $__require('28');
  $__require('2a');
  $__require('2d');
  $__require('2e');
  $__require('2f');
  $__require('31');
  $__require('32');
  $__require('33');
  $__require('34');
  $__require('36');
  $__require('37');
  $__require('39');
  $__require('3b');
  $__require('3d');
  $__require('3f');
  $__require('41');
  $__require('42');
  $__require('43');
  $__require('45');
  $__require('47');
  $__require('4b');
  $__require('4f');
  $__require('50');
  $__require('51');
  $__require('52');
  $__require('54');
  $__require('55');
  $__require('56');
  $__require('57');
  $__require('59');
  $__require('5a');
  $__require('5b');
  $__require('5d');
  $__require('5e');
  $__require('5f');
  $__require('61');
  $__require('62');
  $__require('63');
  $__require('65');
  $__require('66');
  $__require('67');
  $__require('68');
  $__require('69');
  $__require('6a');
  $__require('6b');
  $__require('6c');
  $__require('6d');
  $__require('6e');
  $__require('6f');
  $__require('71');
  $__require('73');
  $__require('74');
  $__require('77');
  $__require('78');
  $__require('7b');
  $__require('7c');
  $__require('7f');
  $__require('80');
  $__require('82');
  $__require('83');
  $__require('84');
  $__require('85');
  $__require('86');
  $__require('87');
  $__require('88');
  $__require('89');
  $__require('8a');
  $__require('8b');
  $__require('8c');
  $__require('8d');
  $__require('8e');
  $__require('8f');
  $__require('90');
  $__require('91');
  $__require('93');
  $__require('94');
  $__require('95');
  $__require('9c');
  $__require('9d');
  $__require('a0');
  $__require('a2');
  $__require('a4');
  $__require('a6');
  $__require('a7');
  $__require('a8');
  $__require('a9');
  $__require('aa');
  $__require('ac');
  $__require('ad');
  $__require('af');
  $__require('b0');
  $__require('b3');
  $__require('b5');
  $__require('b6');
  $__require('b7');
  $__require('d9');
  $__require('b9');
  $__require('bb');
  $__require('bc');
  $__require('bd');
  $__require('bf');
  $__require('c0');
  $__require('c1');
  $__require('c2');
  $__require('118');
  $__require('110');
  $__require('11c');
  $__require('c9');
  $__require('cc');
  $__require('cf');
  $__require('d0');
  $__require('d2');
  $__require('d3');
  $__require('d4');
  $__require('d5');
  $__require('d6');
  $__require('d7');
  $__require('d8');
  $__require('db');
  $__require('dc');
  $__require('de');
  $__require('df');
  $__require('e0');
  $__require('e1');
  $__require('e3');
  $__require('e4');
  $__require('e5');
  $__require('e6');
  $__require('e7');
  $__require('e8');
  $__require('ea');
  $__require('eb');
  $__require('ec');
  $__require('ed');
  $__require('ee');
  $__require('ef');
  $__require('f1');
  $__require('f2');
  $__require('f3');
  $__require('f4');
  $__require('f5');
  $__require('f6');
  $__require('f9');
  $__require('fa');
  $__require('fc');
  $__require('fd');
  $__require('ff');
  $__require('100');
  $__require('101');
  $__require('102');
  $__require('105');
  $__require('106');
  $__require('107');
  $__require('108');
  $__require('109');
  $__require('10a');
  $__require('10b');
  $__require('10c');
  $__require('10e');
  $__require('10f');
  $__require('112');
  $__require('113');
  $__require('114');
  $__require('115');
  $__require('116');
  $__require('11d');
  $__require('11e');
  $__require('11f');
  $__require('122');
  $__require('124');
  $__require('126');
  module.exports = $__require('35');
  return module.exports;
});
(function() {
var define = $__System.amdDefine;
!function(t) {
  if ("function" == typeof define && define.amd && define("128", [], function() {
    var i = window.UIkit || t(window, window.jQuery, window.document);
    return i.load = function(t, e, n, o) {
      var s,
          a = t.split(","),
          r = [],
          l = (o.config && o.config.uikit && o.config.uikit.base ? o.config.uikit.base : "").replace(/\/+$/g, "");
      if (!l)
        throw new Error("Please define base path to UIkit in the requirejs config.");
      for (s = 0; s < a.length; s += 1) {
        var c = a[s].replace(/\./g, "/");
        r.push(l + "/components/" + c);
      }
      e(r, function() {
        n(i);
      });
    }, i;
  }) && define("uikit", ["128"], function(m) {
    return m;
  }), !window.jQuery)
    throw new Error("UIkit requires jQuery");
  window && window.jQuery && t(window, window.jQuery, window.document);
}(function(t, i, e) {
  "use strict";
  var n = {},
      o = t.UIkit ? Object.create(t.UIkit) : void 0;
  if (n.version = "2.26.3", n.noConflict = function() {
    return o && (t.UIkit = o, i.UIkit = o, i.fn.uk = o.fn), n;
  }, n.prefix = function(t) {
    return t;
  }, n.$ = i, n.$doc = n.$(document), n.$win = n.$(window), n.$html = n.$("html"), n.support = {}, n.support.transition = function() {
    var t = function() {
      var t,
          i = e.body || e.documentElement,
          n = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
          };
      for (t in n)
        if (void 0 !== i.style[t])
          return n[t];
    }();
    return t && {end: t};
  }(), n.support.animation = function() {
    var t = function() {
      var t,
          i = e.body || e.documentElement,
          n = {
            WebkitAnimation: "webkitAnimationEnd",
            MozAnimation: "animationend",
            OAnimation: "oAnimationEnd oanimationend",
            animation: "animationend"
          };
      for (t in n)
        if (void 0 !== i.style[t])
          return n[t];
    }();
    return t && {end: t};
  }(), function() {
    Date.now = Date.now || function() {
      return (new Date).getTime();
    };
    for (var t = ["webkit", "moz"],
        i = 0; i < t.length && !window.requestAnimationFrame; ++i) {
      var e = t[i];
      window.requestAnimationFrame = window[e + "RequestAnimationFrame"], window.cancelAnimationFrame = window[e + "CancelAnimationFrame"] || window[e + "CancelRequestAnimationFrame"];
    }
    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {
      var n = 0;
      window.requestAnimationFrame = function(t) {
        var i = Date.now(),
            e = Math.max(n + 16, i);
        return setTimeout(function() {
          t(n = e);
        }, e - i);
      }, window.cancelAnimationFrame = clearTimeout;
    }
  }(), n.support.touch = "ontouchstart" in document || t.DocumentTouch && document instanceof t.DocumentTouch || t.navigator.msPointerEnabled && t.navigator.msMaxTouchPoints > 0 || t.navigator.pointerEnabled && t.navigator.maxTouchPoints > 0 || !1, n.support.mutationobserver = t.MutationObserver || t.WebKitMutationObserver || null, n.Utils = {}, n.Utils.isFullscreen = function() {
    return document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.fullscreenElement || !1;
  }, n.Utils.str2json = function(t, i) {
    try {
      return i ? JSON.parse(t.replace(/([\$\w]+)\s*:/g, function(t, i) {
        return '"' + i + '":';
      }).replace(/'([^']+)'/g, function(t, i) {
        return '"' + i + '"';
      })) : new Function("", "var json = " + t + "; return JSON.parse(JSON.stringify(json));")();
    } catch (e) {
      return !1;
    }
  }, n.Utils.debounce = function(t, i, e) {
    var n;
    return function() {
      var o = this,
          s = arguments,
          a = function() {
            n = null, e || t.apply(o, s);
          },
          r = e && !n;
      clearTimeout(n), n = setTimeout(a, i), r && t.apply(o, s);
    };
  }, n.Utils.throttle = function(t, i) {
    var e = !1;
    return function() {
      e || (t.call(), e = !0, setTimeout(function() {
        e = !1;
      }, i));
    };
  }, n.Utils.removeCssRules = function(t) {
    var i,
        e,
        n,
        o,
        s,
        a,
        r,
        l,
        c,
        u;
    t && setTimeout(function() {
      try {
        for (u = document.styleSheets, o = 0, r = u.length; r > o; o++) {
          for (n = u[o], e = [], n.cssRules = n.cssRules, i = s = 0, l = n.cssRules.length; l > s; i = ++s)
            n.cssRules[i].type === CSSRule.STYLE_RULE && t.test(n.cssRules[i].selectorText) && e.unshift(i);
          for (a = 0, c = e.length; c > a; a++)
            n.deleteRule(e[a]);
        }
      } catch (h) {}
    }, 0);
  }, n.Utils.isInView = function(t, e) {
    var o = i(t);
    if (!o.is(":visible"))
      return !1;
    var s = n.$win.scrollLeft(),
        a = n.$win.scrollTop(),
        r = o.offset(),
        l = r.left,
        c = r.top;
    return e = i.extend({
      topoffset: 0,
      leftoffset: 0
    }, e), c + o.height() >= a && c - e.topoffset <= a + n.$win.height() && l + o.width() >= s && l - e.leftoffset <= s + n.$win.width() ? !0 : !1;
  }, n.Utils.checkDisplay = function(t, e) {
    var o = n.$("[data-uk-margin], [data-uk-grid-match], [data-uk-grid-margin], [data-uk-check-display]", t || document);
    return t && !o.length && (o = i(t)), o.trigger("display.uk.check"), e && ("string" != typeof e && (e = '[class*="uk-animation-"]'), o.find(e).each(function() {
      var t = n.$(this),
          i = t.attr("class"),
          e = i.match(/uk\-animation\-(.+)/);
      t.removeClass(e[0]).width(), t.addClass(e[0]);
    })), o;
  }, n.Utils.options = function(t) {
    if ("string" != i.type(t))
      return t;
    -1 != t.indexOf(":") && "}" != t.trim().substr(-1) && (t = "{" + t + "}");
    var e = t ? t.indexOf("{") : -1,
        o = {};
    if (-1 != e)
      try {
        o = n.Utils.str2json(t.substr(e));
      } catch (s) {}
    return o;
  }, n.Utils.animate = function(t, e) {
    var o = i.Deferred();
    return t = n.$(t), t.css("display", "none").addClass(e).one(n.support.animation.end, function() {
      t.removeClass(e), o.resolve();
    }), t.css("display", ""), o.promise();
  }, n.Utils.uid = function(t) {
    return (t || "id") + (new Date).getTime() + "RAND" + Math.ceil(1e5 * Math.random());
  }, n.Utils.template = function(t, i) {
    for (var e,
        n,
        o,
        s,
        a = t.replace(/\n/g, "\\n").replace(/\{\{\{\s*(.+?)\s*\}\}\}/g, "{{!$1}}").split(/(\{\{\s*(.+?)\s*\}\})/g),
        r = 0,
        l = [],
        c = 0; r < a.length; ) {
      if (e = a[r], e.match(/\{\{\s*(.+?)\s*\}\}/))
        switch (r += 1, e = a[r], n = e[0], o = e.substring(e.match(/^(\^|\#|\!|\~|\:)/) ? 1 : 0), n) {
          case "~":
            l.push("for(var $i=0;$i<" + o + ".length;$i++) { var $item = " + o + "[$i];"), c++;
            break;
          case ":":
            l.push("for(var $key in " + o + ") { var $val = " + o + "[$key];"), c++;
            break;
          case "#":
            l.push("if(" + o + ") {"), c++;
            break;
          case "^":
            l.push("if(!" + o + ") {"), c++;
            break;
          case "/":
            l.push("}"), c--;
            break;
          case "!":
            l.push("__ret.push(" + o + ");");
            break;
          default:
            l.push("__ret.push(escape(" + o + "));");
        }
      else
        l.push("__ret.push('" + e.replace(/\'/g, "\\'") + "');");
      r += 1;
    }
    return s = new Function("$data", ["var __ret = [];", "try {", "with($data){", c ? '__ret = ["Not all blocks are closed correctly."]' : l.join(""), "};", "}catch(e){__ret = [e.message];}", 'return __ret.join("").replace(/\\n\\n/g, "\\n");', "function escape(html) { return String(html).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');}"].join("\n")), i ? s(i) : s;
  }, n.Utils.events = {}, n.Utils.events.click = n.support.touch ? "tap" : "click", t.UIkit = n, n.fn = function(t, e) {
    var o = arguments,
        s = t.match(/^([a-z\-]+)(?:\.([a-z]+))?/i),
        a = s[1],
        r = s[2];
    return n[a] ? this.each(function() {
      var t = i(this),
          s = t.data(a);
      s || t.data(a, s = n[a](this, r ? void 0 : e)), r && s[r].apply(s, Array.prototype.slice.call(o, 1));
    }) : (i.error("UIkit component [" + a + "] does not exist."), this);
  }, i.UIkit = n, i.fn.uk = n.fn, n.langdirection = "rtl" == n.$html.attr("dir") ? "right" : "left", n.components = {}, n.component = function(t, e) {
    var o = function(e, s) {
      var a = this;
      return this.UIkit = n, this.element = e ? n.$(e) : null, this.options = i.extend(!0, {}, this.defaults, s), this.plugins = {}, this.element && this.element.data(t, this), this.init(), (this.options.plugins.length ? this.options.plugins : Object.keys(o.plugins)).forEach(function(t) {
        o.plugins[t].init && (o.plugins[t].init(a), a.plugins[t] = !0);
      }), this.trigger("init.uk.component", [t, this]), this;
    };
    return o.plugins = {}, i.extend(!0, o.prototype, {
      defaults: {plugins: []},
      boot: function() {},
      init: function() {},
      on: function(t, i, e) {
        return n.$(this.element || this).on(t, i, e);
      },
      one: function(t, i, e) {
        return n.$(this.element || this).one(t, i, e);
      },
      off: function(t) {
        return n.$(this.element || this).off(t);
      },
      trigger: function(t, i) {
        return n.$(this.element || this).trigger(t, i);
      },
      find: function(t) {
        return n.$(this.element ? this.element : []).find(t);
      },
      proxy: function(t, i) {
        var e = this;
        i.split(" ").forEach(function(i) {
          e[i] || (e[i] = function() {
            return t[i].apply(t, arguments);
          });
        });
      },
      mixin: function(t, i) {
        var e = this;
        i.split(" ").forEach(function(i) {
          e[i] || (e[i] = t[i].bind(e));
        });
      },
      option: function() {
        return 1 == arguments.length ? this.options[arguments[0]] || void 0 : (2 == arguments.length && (this.options[arguments[0]] = arguments[1]), void 0);
      }
    }, e), this.components[t] = o, this[t] = function() {
      var e,
          o;
      if (arguments.length)
        switch (arguments.length) {
          case 1:
            "string" == typeof arguments[0] || arguments[0].nodeType || arguments[0] instanceof jQuery ? e = i(arguments[0]) : o = arguments[0];
            break;
          case 2:
            e = i(arguments[0]), o = arguments[1];
        }
      return e && e.data(t) ? e.data(t) : new n.components[t](e, o);
    }, n.domready && n.component.boot(t), o;
  }, n.plugin = function(t, i, e) {
    this.components[t].plugins[i] = e;
  }, n.component.boot = function(t) {
    n.components[t].prototype && n.components[t].prototype.boot && !n.components[t].booted && (n.components[t].prototype.boot.apply(n, []), n.components[t].booted = !0);
  }, n.component.bootComponents = function() {
    for (var t in n.components)
      n.component.boot(t);
  }, n.domObservers = [], n.domready = !1, n.ready = function(t) {
    n.domObservers.push(t), n.domready && t(document);
  }, n.on = function(t, i, e) {
    return t && t.indexOf("ready.uk.dom") > -1 && n.domready && i.apply(n.$doc), n.$doc.on(t, i, e);
  }, n.one = function(t, i, e) {
    return t && t.indexOf("ready.uk.dom") > -1 && n.domready ? (i.apply(n.$doc), n.$doc) : n.$doc.one(t, i, e);
  }, n.trigger = function(t, i) {
    return n.$doc.trigger(t, i);
  }, n.domObserve = function(t, i) {
    n.support.mutationobserver && (i = i || function() {}, n.$(t).each(function() {
      var t = this,
          e = n.$(t);
      if (!e.data("observer"))
        try {
          var o = new n.support.mutationobserver(n.Utils.debounce(function() {
            i.apply(t, []), e.trigger("changed.uk.dom");
          }, 50), {
            childList: !0,
            subtree: !0
          });
          o.observe(t, {
            childList: !0,
            subtree: !0
          }), e.data("observer", o);
        } catch (s) {}
    }));
  }, n.init = function(t) {
    t = t || document, n.domObservers.forEach(function(i) {
      i(t);
    });
  }, n.on("domready.uk.dom", function() {
    n.init(), n.domready && n.Utils.checkDisplay();
  }), document.addEventListener("DOMContentLoaded", function() {
    var t = function() {
      if (n.$body = n.$("body"), n.trigger("beforeready.uk.dom"), n.component.bootComponents(), requestAnimationFrame(function() {
        var t = {
          dir: {
            x: 0,
            y: 0
          },
          x: window.pageXOffset,
          y: window.pageYOffset
        },
            i = function() {
              var e = window.pageXOffset,
                  o = window.pageYOffset;
              (t.x != e || t.y != o) && (t.dir.x = e != t.x ? e > t.x ? 1 : -1 : 0, t.dir.y = o != t.y ? o > t.y ? 1 : -1 : 0, t.x = e, t.y = o, n.$doc.trigger("scrolling.uk.document", [{
                dir: {
                  x: t.dir.x,
                  y: t.dir.y
                },
                x: e,
                y: o
              }])), requestAnimationFrame(i);
            };
        return n.support.touch && n.$html.on("touchmove touchend MSPointerMove MSPointerUp pointermove pointerup", i), (t.x || t.y) && i(), i;
      }()), n.trigger("domready.uk.dom"), n.support.touch && navigator.userAgent.match(/(iPad|iPhone|iPod)/g) && n.$win.on("load orientationchange resize", n.Utils.debounce(function() {
        var t = function() {
          return i(".uk-height-viewport").css("height", window.innerHeight), t;
        };
        return t();
      }(), 100)), n.trigger("afterready.uk.dom"), n.domready = !0, n.support.mutationobserver) {
        var t = n.Utils.debounce(function() {
          requestAnimationFrame(function() {
            n.init(document.body);
          });
        }, 10);
        new n.support.mutationobserver(function(i) {
          var e = !1;
          i.every(function(t) {
            if ("childList" != t.type)
              return !0;
            for (var i,
                n = 0; n < t.addedNodes.length; ++n)
              if (i = t.addedNodes[n], i.outerHTML && -1 !== i.outerHTML.indexOf("data-uk-"))
                return (e = !0) && !1;
            return !0;
          }), e && t();
        }).observe(document.body, {
          childList: !0,
          subtree: !0
        });
      }
    };
    return ("complete" == document.readyState || "interactive" == document.readyState) && setTimeout(t), t;
  }()), n.$html.addClass(n.support.touch ? "uk-touch" : "uk-notouch"), n.support.touch) {
    var s,
        a = !1,
        r = "uk-hover",
        l = ".uk-overlay, .uk-overlay-hover, .uk-overlay-toggle, .uk-animation-hover, .uk-has-hover";
    n.$html.on("mouseenter touchstart MSPointerDown pointerdown", l, function() {
      a && i("." + r).removeClass(r), a = i(this).addClass(r);
    }).on("mouseleave touchend MSPointerUp pointerup", function(t) {
      s = i(t.target).parents(l), a && a.not(s).removeClass(r);
    });
  }
  return n;
}), function(t) {
  function i(t, i, e, n) {
    return Math.abs(t - i) >= Math.abs(e - n) ? t - i > 0 ? "Left" : "Right" : e - n > 0 ? "Up" : "Down";
  }
  function e() {
    c = null, h.last && (void 0 !== h.el && h.el.trigger("longTap"), h = {});
  }
  function n() {
    c && clearTimeout(c), c = null;
  }
  function o() {
    a && clearTimeout(a), r && clearTimeout(r), l && clearTimeout(l), c && clearTimeout(c), a = r = l = c = null, h = {};
  }
  function s(t) {
    return t.pointerType == t.MSPOINTER_TYPE_TOUCH && t.isPrimary;
  }
  if (!t.fn.swipeLeft) {
    var a,
        r,
        l,
        c,
        u,
        h = {},
        d = 750;
    t(function() {
      var p,
          f,
          m,
          g = 0,
          v = 0;
      "MSGesture" in window && (u = new MSGesture, u.target = document.body), t(document).on("MSGestureEnd gestureend", function(t) {
        var i = t.originalEvent.velocityX > 1 ? "Right" : t.originalEvent.velocityX < -1 ? "Left" : t.originalEvent.velocityY > 1 ? "Down" : t.originalEvent.velocityY < -1 ? "Up" : null;
        i && void 0 !== h.el && (h.el.trigger("swipe"), h.el.trigger("swipe" + i));
      }).on("touchstart MSPointerDown pointerdown", function(i) {
        ("MSPointerDown" != i.type || s(i.originalEvent)) && (m = "MSPointerDown" == i.type || "pointerdown" == i.type ? i : i.originalEvent.touches[0], p = Date.now(), f = p - (h.last || p), h.el = t("tagName" in m.target ? m.target : m.target.parentNode), a && clearTimeout(a), h.x1 = m.pageX, h.y1 = m.pageY, f > 0 && 250 >= f && (h.isDoubleTap = !0), h.last = p, c = setTimeout(e, d), !u || "MSPointerDown" != i.type && "pointerdown" != i.type && "touchstart" != i.type || u.addPointer(i.originalEvent.pointerId));
      }).on("touchmove MSPointerMove pointermove", function(t) {
        ("MSPointerMove" != t.type || s(t.originalEvent)) && (m = "MSPointerMove" == t.type || "pointermove" == t.type ? t : t.originalEvent.touches[0], n(), h.x2 = m.pageX, h.y2 = m.pageY, g += Math.abs(h.x1 - h.x2), v += Math.abs(h.y1 - h.y2));
      }).on("touchend MSPointerUp pointerup", function(e) {
        ("MSPointerUp" != e.type || s(e.originalEvent)) && (n(), h.x2 && Math.abs(h.x1 - h.x2) > 30 || h.y2 && Math.abs(h.y1 - h.y2) > 30 ? l = setTimeout(function() {
          void 0 !== h.el && (h.el.trigger("swipe"), h.el.trigger("swipe" + i(h.x1, h.x2, h.y1, h.y2))), h = {};
        }, 0) : "last" in h && (isNaN(g) || 30 > g && 30 > v ? r = setTimeout(function() {
          var i = t.Event("tap");
          i.cancelTouch = o, void 0 !== h.el && h.el.trigger(i), h.isDoubleTap ? (void 0 !== h.el && h.el.trigger("doubleTap"), h = {}) : a = setTimeout(function() {
            a = null, void 0 !== h.el && h.el.trigger("singleTap"), h = {};
          }, 250);
        }, 0) : h = {}, g = v = 0));
      }).on("touchcancel MSPointerCancel", o), t(window).on("scroll", o);
    }), ["swipe", "swipeLeft", "swipeRight", "swipeUp", "swipeDown", "doubleTap", "tap", "singleTap", "longTap"].forEach(function(i) {
      t.fn[i] = function(e) {
        return t(this).on(i, e);
      };
    });
  }
}(jQuery), function(t) {
  "use strict";
  var i = [];
  t.component("stackMargin", {
    defaults: {
      cls: "uk-margin-small-top",
      rowfirst: !1,
      observe: !1
    },
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-margin]", i).each(function() {
          var i = t.$(this);
          i.data("stackMargin") || t.stackMargin(i, t.Utils.options(i.attr("data-uk-margin")));
        });
      });
    },
    init: function() {
      var e = this;
      t.$win.on("resize orientationchange", function() {
        var i = function() {
          e.process();
        };
        return t.$(function() {
          i(), t.$win.on("load", i);
        }), t.Utils.debounce(i, 20);
      }()), this.on("display.uk.check", function() {
        this.element.is(":visible") && this.process();
      }.bind(this)), this.options.observe && t.domObserve(this.element, function() {
        e.element.is(":visible") && e.process();
      }), i.push(this);
    },
    process: function() {
      var i = this.element.children();
      if (t.Utils.stackMargin(i, this.options), !this.options.rowfirst || !i.length)
        return this;
      var e = {},
          n = !1;
      return i.removeClass(this.options.rowfirst).each(function(i, o) {
        o = t.$(this), "none" != this.style.display && (i = o.offset().left, ((e[i] = e[i] || []) && e[i]).push(this), n = n === !1 ? i : Math.min(n, i));
      }), t.$(e[n]).addClass(this.options.rowfirst), this;
    }
  }), function() {
    var i = [],
        e = function(t) {
          if (t.is(":visible")) {
            var i = t.parent().width(),
                e = t.data("width"),
                n = i / e,
                o = Math.floor(n * t.data("height"));
            t.css({height: e > i ? o : t.data("height")});
          }
        };
    t.component("responsiveElement", {
      defaults: {},
      boot: function() {
        t.ready(function(i) {
          t.$("iframe.uk-responsive-width, [data-uk-responsive]", i).each(function() {
            var i,
                e = t.$(this);
            e.data("responsiveElement") || (i = t.responsiveElement(e, {}));
          });
        });
      },
      init: function() {
        var t = this.element;
        t.attr("width") && t.attr("height") && (t.data({
          width: t.attr("width"),
          height: t.attr("height")
        }).on("display.uk.check", function() {
          e(t);
        }), e(t), i.push(t));
      }
    }), t.$win.on("resize load", t.Utils.debounce(function() {
      i.forEach(function(t) {
        e(t);
      });
    }, 15));
  }(), t.Utils.stackMargin = function(i, e) {
    e = t.$.extend({cls: "uk-margin-small-top"}, e), i = t.$(i).removeClass(e.cls);
    var n = !1;
    i.each(function(i, e, o, s) {
      s = t.$(this), "none" != s.css("display") && (i = s.offset(), e = s.outerHeight(), o = i.top + e, s.data({
        ukMarginPos: o,
        ukMarginTop: i.top
      }), (n === !1 || i.top < n.top) && (n = {
        top: i.top,
        left: i.left,
        pos: o
      }));
    }).each(function(i) {
      i = t.$(this), "none" != i.css("display") && i.data("ukMarginTop") > n.top && i.data("ukMarginPos") > n.pos && i.addClass(e.cls);
    });
  }, t.Utils.matchHeights = function(i, e) {
    i = t.$(i).css("min-height", ""), e = t.$.extend({row: !0}, e);
    var n = function(i) {
      if (!(i.length < 2)) {
        var e = 0;
        i.each(function() {
          e = Math.max(e, t.$(this).outerHeight());
        }).each(function() {
          var i = t.$(this),
              n = e - ("border-box" == i.css("box-sizing") ? 0 : i.outerHeight() - i.height());
          i.css("min-height", n + "px");
        });
      }
    };
    e.row ? (i.first().width(), setTimeout(function() {
      var e = !1,
          o = [];
      i.each(function() {
        var i = t.$(this),
            s = i.offset().top;
        s != e && o.length && (n(t.$(o)), o = [], s = i.offset().top), o.push(i), e = s;
      }), o.length && n(t.$(o));
    }, 0)) : n(i);
  }, function(i) {
    t.Utils.inlineSvg = function(e, n) {
      t.$(e || 'img[src$=".svg"]', n || document).each(function() {
        var e = t.$(this),
            n = e.attr("src");
        if (!i[n]) {
          var o = t.$.Deferred();
          t.$.get(n, {nc: Math.random()}, function(i) {
            o.resolve(t.$(i).find("svg"));
          }), i[n] = o.promise();
        }
        i[n].then(function(i) {
          var n = t.$(i).clone();
          e.attr("id") && n.attr("id", e.attr("id")), e.attr("class") && n.attr("class", e.attr("class")), e.attr("style") && n.attr("style", e.attr("style")), e.attr("width") && (n.attr("width", e.attr("width")), e.attr("height") || n.removeAttr("height")), e.attr("height") && (n.attr("height", e.attr("height")), e.attr("width") || n.removeAttr("width")), e.replaceWith(n);
        });
      });
    }, t.ready(function(i) {
      t.Utils.inlineSvg("[data-uk-svg]", i);
    });
  }({});
}(UIkit), function(t) {
  "use strict";
  function i(i, e) {
    e = t.$.extend({
      duration: 1e3,
      transition: "easeOutExpo",
      offset: 0,
      complete: function() {}
    }, e);
    var n = i.offset().top - e.offset,
        o = t.$doc.height(),
        s = window.innerHeight;
    n + s > o && (n = o - s), t.$("html,body").stop().animate({scrollTop: n}, e.duration, e.transition).promise().done(e.complete);
  }
  t.component("smoothScroll", {
    boot: function() {
      t.$html.on("click.smooth-scroll.uikit", "[data-uk-smooth-scroll]", function() {
        var i = t.$(this);
        if (!i.data("smoothScroll")) {
          {
            t.smoothScroll(i, t.Utils.options(i.attr("data-uk-smooth-scroll")));
          }
          i.trigger("click");
        }
        return !1;
      });
    },
    init: function() {
      var e = this;
      this.on("click", function(n) {
        n.preventDefault(), i(t.$(this.hash).length ? t.$(this.hash) : t.$("body"), e.options);
      });
    }
  }), t.Utils.scrollToElement = i, t.$.easing.easeOutExpo || (t.$.easing.easeOutExpo = function(t, i, e, n, o) {
    return i == o ? e + n : n * (-Math.pow(2, -10 * i / o) + 1) + e;
  });
}(UIkit), function(t) {
  "use strict";
  var i = t.$win,
      e = t.$doc,
      n = [],
      o = function() {
        for (var t = 0; t < n.length; t++)
          window.requestAnimationFrame.apply(window, [n[t].check]);
      };
  t.component("scrollspy", {
    defaults: {
      target: !1,
      cls: "uk-scrollspy-inview",
      initcls: "uk-scrollspy-init-inview",
      topoffset: 0,
      leftoffset: 0,
      repeat: !1,
      delay: 0
    },
    boot: function() {
      e.on("scrolling.uk.document", o), i.on("load resize orientationchange", t.Utils.debounce(o, 50)), t.ready(function(i) {
        t.$("[data-uk-scrollspy]", i).each(function() {
          var i = t.$(this);
          if (!i.data("scrollspy")) {
            t.scrollspy(i, t.Utils.options(i.attr("data-uk-scrollspy")));
          }
        });
      });
    },
    init: function() {
      var i,
          e = this,
          o = this.options.cls.split(/,/),
          s = function() {
            var n = e.options.target ? e.element.find(e.options.target) : e.element,
                s = 1 === n.length ? 1 : 0,
                a = 0;
            n.each(function() {
              var n = t.$(this),
                  r = n.data("inviewstate"),
                  l = t.Utils.isInView(n, e.options),
                  c = n.data("ukScrollspyCls") || o[a].trim();
              !l || r || n.data("scrollspy-idle") || (i || (n.addClass(e.options.initcls), e.offset = n.offset(), i = !0, n.trigger("init.uk.scrollspy")), n.data("scrollspy-idle", setTimeout(function() {
                n.addClass("uk-scrollspy-inview").toggleClass(c).width(), n.trigger("inview.uk.scrollspy"), n.data("scrollspy-idle", !1), n.data("inviewstate", !0);
              }, e.options.delay * s)), s++), !l && r && e.options.repeat && (n.data("scrollspy-idle") && (clearTimeout(n.data("scrollspy-idle")), n.data("scrollspy-idle", !1)), n.removeClass("uk-scrollspy-inview").toggleClass(c), n.data("inviewstate", !1), n.trigger("outview.uk.scrollspy")), a = o[a + 1] ? a + 1 : 0;
            });
          };
      s(), this.check = s, n.push(this);
    }
  });
  var s = [],
      a = function() {
        for (var t = 0; t < s.length; t++)
          window.requestAnimationFrame.apply(window, [s[t].check]);
      };
  t.component("scrollspynav", {
    defaults: {
      cls: "uk-active",
      closest: !1,
      topoffset: 0,
      leftoffset: 0,
      smoothscroll: !1
    },
    boot: function() {
      e.on("scrolling.uk.document", a), i.on("resize orientationchange", t.Utils.debounce(a, 50)), t.ready(function(i) {
        t.$("[data-uk-scrollspy-nav]", i).each(function() {
          var i = t.$(this);
          if (!i.data("scrollspynav")) {
            t.scrollspynav(i, t.Utils.options(i.attr("data-uk-scrollspy-nav")));
          }
        });
      });
    },
    init: function() {
      var e,
          n = [],
          o = this.find("a[href^='#']").each(function() {
            "#" !== this.getAttribute("href").trim() && n.push(this.getAttribute("href"));
          }),
          a = t.$(n.join(",")),
          r = this.options.cls,
          l = this.options.closest || this.options.closest,
          c = this,
          u = function() {
            e = [];
            for (var n = 0; n < a.length; n++)
              t.Utils.isInView(a.eq(n), c.options) && e.push(a.eq(n));
            if (e.length) {
              var s,
                  u = i.scrollTop(),
                  h = function() {
                    for (var t = 0; t < e.length; t++)
                      if (e[t].offset().top >= u)
                        return e[t];
                  }();
              if (!h)
                return;
              c.options.closest ? (o.blur().closest(l).removeClass(r), s = o.filter("a[href='#" + h.attr("id") + "']").closest(l).addClass(r)) : s = o.removeClass(r).filter("a[href='#" + h.attr("id") + "']").addClass(r), c.element.trigger("inview.uk.scrollspynav", [h, s]);
            }
          };
      this.options.smoothscroll && t.smoothScroll && o.each(function() {
        t.smoothScroll(this, c.options.smoothscroll);
      }), u(), this.element.data("scrollspynav", this), this.check = u, s.push(this);
    }
  });
}(UIkit), function(t) {
  "use strict";
  var i = [];
  t.component("toggle", {
    defaults: {
      target: !1,
      cls: "uk-hidden",
      animation: !1,
      duration: 200
    },
    boot: function() {
      t.ready(function(e) {
        t.$("[data-uk-toggle]", e).each(function() {
          var i = t.$(this);
          if (!i.data("toggle")) {
            t.toggle(i, t.Utils.options(i.attr("data-uk-toggle")));
          }
        }), setTimeout(function() {
          i.forEach(function(t) {
            t.getToggles();
          });
        }, 0);
      });
    },
    init: function() {
      var t = this;
      this.aria = -1 !== this.options.cls.indexOf("uk-hidden"), this.getToggles(), this.on("click", function(i) {
        t.element.is('a[href="#"]') && i.preventDefault(), t.toggle();
      }), i.push(this);
    },
    toggle: function() {
      if (this.totoggle.length) {
        if (this.options.animation && t.support.animation) {
          var i = this,
              e = this.options.animation.split(",");
          1 == e.length && (e[1] = e[0]), e[0] = e[0].trim(), e[1] = e[1].trim(), this.totoggle.css("animation-duration", this.options.duration + "ms"), this.totoggle.each(function() {
            var n = t.$(this);
            n.hasClass(i.options.cls) ? (n.toggleClass(i.options.cls), t.Utils.animate(n, e[0]).then(function() {
              n.css("animation-duration", ""), t.Utils.checkDisplay(n);
            })) : t.Utils.animate(this, e[1] + " uk-animation-reverse").then(function() {
              n.toggleClass(i.options.cls).css("animation-duration", ""), t.Utils.checkDisplay(n);
            });
          });
        } else
          this.totoggle.toggleClass(this.options.cls), t.Utils.checkDisplay(this.totoggle);
        this.updateAria();
      }
    },
    getToggles: function() {
      this.totoggle = this.options.target ? t.$(this.options.target) : [], this.updateAria();
    },
    updateAria: function() {
      this.aria && this.totoggle.length && this.totoggle.each(function() {
        t.$(this).attr("aria-hidden", t.$(this).hasClass("uk-hidden"));
      });
    }
  });
}(UIkit), function(t) {
  "use strict";
  t.component("alert", {
    defaults: {
      fade: !0,
      duration: 200,
      trigger: ".uk-alert-close"
    },
    boot: function() {
      t.$html.on("click.alert.uikit", "[data-uk-alert]", function(i) {
        var e = t.$(this);
        if (!e.data("alert")) {
          var n = t.alert(e, t.Utils.options(e.attr("data-uk-alert")));
          t.$(i.target).is(n.options.trigger) && (i.preventDefault(), n.close());
        }
      });
    },
    init: function() {
      var t = this;
      this.on("click", this.options.trigger, function(i) {
        i.preventDefault(), t.close();
      });
    },
    close: function() {
      var t = this.trigger("close.uk.alert"),
          i = function() {
            this.trigger("closed.uk.alert").remove();
          }.bind(this);
      this.options.fade ? t.css("overflow", "hidden").css("max-height", t.height()).animate({
        height: 0,
        opacity: 0,
        "padding-top": 0,
        "padding-bottom": 0,
        "margin-top": 0,
        "margin-bottom": 0
      }, this.options.duration, i) : i();
    }
  });
}(UIkit), function(t) {
  "use strict";
  t.component("buttonRadio", {
    defaults: {
      activeClass: "uk-active",
      target: ".uk-button"
    },
    boot: function() {
      t.$html.on("click.buttonradio.uikit", "[data-uk-button-radio]", function(i) {
        var e = t.$(this);
        if (!e.data("buttonRadio")) {
          var n = t.buttonRadio(e, t.Utils.options(e.attr("data-uk-button-radio"))),
              o = t.$(i.target);
          o.is(n.options.target) && o.trigger("click");
        }
      });
    },
    init: function() {
      var i = this;
      this.find(i.options.target).attr("aria-checked", "false").filter("." + i.options.activeClass).attr("aria-checked", "true"), this.on("click", this.options.target, function(e) {
        var n = t.$(this);
        n.is('a[href="#"]') && e.preventDefault(), i.find(i.options.target).not(n).removeClass(i.options.activeClass).blur(), n.addClass(i.options.activeClass), i.find(i.options.target).not(n).attr("aria-checked", "false"), n.attr("aria-checked", "true"), i.trigger("change.uk.button", [n]);
      });
    },
    getSelected: function() {
      return this.find("." + this.options.activeClass);
    }
  }), t.component("buttonCheckbox", {
    defaults: {
      activeClass: "uk-active",
      target: ".uk-button"
    },
    boot: function() {
      t.$html.on("click.buttoncheckbox.uikit", "[data-uk-button-checkbox]", function(i) {
        var e = t.$(this);
        if (!e.data("buttonCheckbox")) {
          var n = t.buttonCheckbox(e, t.Utils.options(e.attr("data-uk-button-checkbox"))),
              o = t.$(i.target);
          o.is(n.options.target) && o.trigger("click");
        }
      });
    },
    init: function() {
      var i = this;
      this.find(i.options.target).attr("aria-checked", "false").filter("." + i.options.activeClass).attr("aria-checked", "true"), this.on("click", this.options.target, function(e) {
        var n = t.$(this);
        n.is('a[href="#"]') && e.preventDefault(), n.toggleClass(i.options.activeClass).blur(), n.attr("aria-checked", n.hasClass(i.options.activeClass)), i.trigger("change.uk.button", [n]);
      });
    },
    getSelected: function() {
      return this.find("." + this.options.activeClass);
    }
  }), t.component("button", {
    defaults: {},
    boot: function() {
      t.$html.on("click.button.uikit", "[data-uk-button]", function() {
        var i = t.$(this);
        if (!i.data("button")) {
          {
            t.button(i, t.Utils.options(i.attr("data-uk-button")));
          }
          i.trigger("click");
        }
      });
    },
    init: function() {
      var t = this;
      this.element.attr("aria-pressed", this.element.hasClass("uk-active")), this.on("click", function(i) {
        t.element.is('a[href="#"]') && i.preventDefault(), t.toggle(), t.trigger("change.uk.button", [t.element.blur().hasClass("uk-active")]);
      });
    },
    toggle: function() {
      this.element.toggleClass("uk-active"), this.element.attr("aria-pressed", this.element.hasClass("uk-active"));
    }
  });
}(UIkit), function(t) {
  "use strict";
  function i(i, e, n, o) {
    if (i = t.$(i), e = t.$(e), n = n || window.innerWidth, o = o || i.offset(), e.length) {
      var s = e.outerWidth();
      if (i.css("min-width", s), "right" == t.langdirection) {
        var a = n - (e.offset().left + s),
            r = n - (i.offset().left + i.outerWidth());
        i.css("margin-right", a - r);
      } else
        i.css("margin-left", e.offset().left - o.left);
    }
  }
  var e,
      n = !1,
      o = {
        x: {
          "bottom-left": "bottom-right",
          "bottom-right": "bottom-left",
          "bottom-center": "bottom-center",
          "top-left": "top-right",
          "top-right": "top-left",
          "top-center": "top-center",
          "left-top": "right-top",
          "left-bottom": "right-bottom",
          "left-center": "right-center",
          "right-top": "left-top",
          "right-bottom": "left-bottom",
          "right-center": "left-center"
        },
        y: {
          "bottom-left": "top-left",
          "bottom-right": "top-right",
          "bottom-center": "top-center",
          "top-left": "bottom-left",
          "top-right": "bottom-right",
          "top-center": "bottom-center",
          "left-top": "left-bottom",
          "left-bottom": "left-top",
          "left-center": "left-center",
          "right-top": "right-bottom",
          "right-bottom": "right-top",
          "right-center": "right-center"
        },
        xy: {
          "bottom-left": "top-right",
          "bottom-right": "top-left",
          "bottom-center": "top-center",
          "top-left": "bottom-right",
          "top-right": "bottom-left",
          "top-center": "bottom-center",
          "left-top": "right-bottom",
          "left-bottom": "right-top",
          "left-center": "right-center",
          "right-top": "left-bottom",
          "right-bottom": "left-top",
          "right-center": "left-center"
        }
      };
  t.component("dropdown", {
    defaults: {
      mode: "hover",
      pos: "bottom-left",
      offset: 0,
      remaintime: 800,
      justify: !1,
      boundary: t.$win,
      delay: 0,
      dropdownSelector: ".uk-dropdown,.uk-dropdown-blank",
      hoverDelayIdle: 250,
      preventflip: !1
    },
    remainIdle: !1,
    boot: function() {
      var i = t.support.touch ? "click" : "mouseenter";
      t.$html.on(i + ".dropdown.uikit", "[data-uk-dropdown]", function(e) {
        var n = t.$(this);
        if (!n.data("dropdown")) {
          var o = t.dropdown(n, t.Utils.options(n.attr("data-uk-dropdown")));
          ("click" == i || "mouseenter" == i && "hover" == o.options.mode) && o.element.trigger(i), o.element.find(o.options.dropdownSelector).length && e.preventDefault();
        }
      });
    },
    init: function() {
      var i = this;
      this.dropdown = this.find(this.options.dropdownSelector), this.offsetParent = this.dropdown.parents().filter(function() {
        return -1 !== t.$.inArray(t.$(this).css("position"), ["relative", "fixed", "absolute"]);
      }).slice(0, 1), this.centered = this.dropdown.hasClass("uk-dropdown-center"), this.justified = this.options.justify ? t.$(this.options.justify) : !1, this.boundary = t.$(this.options.boundary), this.boundary.length || (this.boundary = t.$win), this.dropdown.hasClass("uk-dropdown-up") && (this.options.pos = "top-left"), this.dropdown.hasClass("uk-dropdown-flip") && (this.options.pos = this.options.pos.replace("left", "right")), this.dropdown.hasClass("uk-dropdown-center") && (this.options.pos = this.options.pos.replace(/(left|right)/, "center")), this.element.attr("aria-haspopup", "true"), this.element.attr("aria-expanded", this.element.hasClass("uk-open")), "click" == this.options.mode || t.support.touch ? this.on("click.uk.dropdown", function(e) {
        var n = t.$(e.target);
        n.parents(i.options.dropdownSelector).length || ((n.is("a[href='#']") || n.parent().is("a[href='#']") || i.dropdown.length && !i.dropdown.is(":visible")) && e.preventDefault(), n.blur()), i.element.hasClass("uk-open") ? (!i.dropdown.find(e.target).length || n.is(".uk-dropdown-close") || n.parents(".uk-dropdown-close").length) && i.hide() : i.show();
      }) : this.on("mouseenter", function() {
        i.trigger("pointerenter.uk.dropdown", [i]), i.remainIdle && clearTimeout(i.remainIdle), e && clearTimeout(e), n && n == i || (e = n && n != i ? setTimeout(function() {
          e = setTimeout(i.show.bind(i), i.options.delay);
        }, i.options.hoverDelayIdle) : setTimeout(i.show.bind(i), i.options.delay));
      }).on("mouseleave", function() {
        e && clearTimeout(e), i.remainIdle = setTimeout(function() {
          n && n == i && i.hide();
        }, i.options.remaintime), i.trigger("pointerleave.uk.dropdown", [i]);
      }).on("click", function(e) {
        var o = t.$(e.target);
        return i.remainIdle && clearTimeout(i.remainIdle), n && n == i ? ((!i.dropdown.find(e.target).length || o.is(".uk-dropdown-close") || o.parents(".uk-dropdown-close").length) && i.hide(), void 0) : ((o.is("a[href='#']") || o.parent().is("a[href='#']")) && e.preventDefault(), i.show(), void 0);
      });
    },
    show: function() {
      t.$html.off("click.outer.dropdown"), n && n != this && n.hide(!0), e && clearTimeout(e), this.trigger("beforeshow.uk.dropdown", [this]), this.checkDimensions(), this.element.addClass("uk-open"), this.element.attr("aria-expanded", "true"), this.trigger("show.uk.dropdown", [this]), t.Utils.checkDisplay(this.dropdown, !0), n = this, this.registerOuterClick();
    },
    hide: function(t) {
      this.trigger("beforehide.uk.dropdown", [this, t]), this.element.removeClass("uk-open"), this.remainIdle && clearTimeout(this.remainIdle), this.remainIdle = !1, this.element.attr("aria-expanded", "false"), this.trigger("hide.uk.dropdown", [this, t]), n == this && (n = !1);
    },
    registerOuterClick: function() {
      var i = this;
      t.$html.off("click.outer.dropdown"), setTimeout(function() {
        t.$html.on("click.outer.dropdown", function(o) {
          e && clearTimeout(e);
          t.$(o.target);
          n != i || i.element.find(o.target).length || (i.hide(!0), t.$html.off("click.outer.dropdown"));
        });
      }, 10);
    },
    checkDimensions: function() {
      if (this.dropdown.length) {
        this.dropdown.removeClass("uk-dropdown-top uk-dropdown-bottom uk-dropdown-left uk-dropdown-right uk-dropdown-stack").css({
          "top-left": "",
          left: "",
          "margin-left": "",
          "margin-right": ""
        }), this.justified && this.justified.length && this.dropdown.css("min-width", "");
        var e,
            n = t.$.extend({}, this.offsetParent.offset(), {
              width: this.offsetParent[0].offsetWidth,
              height: this.offsetParent[0].offsetHeight
            }),
            s = this.options.offset,
            a = this.dropdown,
            r = (a.show().offset() || {
              left: 0,
              top: 0
            }, a.outerWidth()),
            l = a.outerHeight(),
            c = this.boundary.width(),
            u = (this.boundary[0] !== window && this.boundary.offset() ? this.boundary.offset() : {
              top: 0,
              left: 0
            }, this.options.pos),
            h = {
              "bottom-left": {
                top: 0 + n.height + s,
                left: 0
              },
              "bottom-right": {
                top: 0 + n.height + s,
                left: 0 + n.width - r
              },
              "bottom-center": {
                top: 0 + n.height + s,
                left: 0 + n.width / 2 - r / 2
              },
              "top-left": {
                top: 0 - l - s,
                left: 0
              },
              "top-right": {
                top: 0 - l - s,
                left: 0 + n.width - r
              },
              "top-center": {
                top: 0 - l - s,
                left: 0 + n.width / 2 - r / 2
              },
              "left-top": {
                top: 0,
                left: 0 - r - s
              },
              "left-bottom": {
                top: 0 + n.height - l,
                left: 0 - r - s
              },
              "left-center": {
                top: 0 + n.height / 2 - l / 2,
                left: 0 - r - s
              },
              "right-top": {
                top: 0,
                left: 0 + n.width + s
              },
              "right-bottom": {
                top: 0 + n.height - l,
                left: 0 + n.width + s
              },
              "right-center": {
                top: 0 + n.height / 2 - l / 2,
                left: 0 + n.width + s
              }
            },
            d = {};
        if (e = u.split("-"), d = h[u] ? h[u] : h["bottom-left"], this.justified && this.justified.length)
          i(a.css({left: 0}), this.justified, c);
        else if (this.options.preventflip !== !0) {
          var p;
          switch (this.checkBoundary(n.left + d.left, n.top + d.top, r, l, c)) {
            case "x":
              "x" !== this.options.preventflip && (p = o.x[u] || "right-top");
              break;
            case "y":
              "y" !== this.options.preventflip && (p = o.y[u] || "top-left");
              break;
            case "xy":
              this.options.preventflip || (p = o.xy[u] || "right-bottom");
          }
          p && (e = p.split("-"), d = h[p] ? h[p] : h["bottom-left"], this.checkBoundary(n.left + d.left, n.top + d.top, r, l, c) && (e = u.split("-"), d = h[u] ? h[u] : h["bottom-left"]));
        }
        r > c && (a.addClass("uk-dropdown-stack"), this.trigger("stack.uk.dropdown", [this])), a.css(d).css("display", "").addClass("uk-dropdown-" + e[0]);
      }
    },
    checkBoundary: function(i, e, n, o, s) {
      var a = "";
      return (0 > i || i - t.$win.scrollLeft() + n > s) && (a += "x"), (e - t.$win.scrollTop() < 0 || e - t.$win.scrollTop() + o > window.innerHeight) && (a += "y"), a;
    }
  }), t.component("dropdownOverlay", {
    defaults: {
      justify: !1,
      cls: "",
      duration: 200
    },
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-dropdown-overlay]", i).each(function() {
          var i = t.$(this);
          i.data("dropdownOverlay") || t.dropdownOverlay(i, t.Utils.options(i.attr("data-uk-dropdown-overlay")));
        });
      });
    },
    init: function() {
      var e = this;
      this.justified = this.options.justify ? t.$(this.options.justify) : !1, this.overlay = this.element.find("uk-dropdown-overlay"), this.overlay.length || (this.overlay = t.$('<div class="uk-dropdown-overlay"></div>').appendTo(this.element)), this.overlay.addClass(this.options.cls), this.on({
        "beforeshow.uk.dropdown": function(t, n) {
          e.dropdown = n, e.justified && e.justified.length && i(e.overlay.css({
            display: "block",
            "margin-left": "",
            "margin-right": ""
          }), e.justified, e.justified.outerWidth());
        },
        "show.uk.dropdown": function() {
          var i = e.dropdown.dropdown.outerHeight(!0);
          e.dropdown.element.removeClass("uk-open"), e.overlay.stop().css("display", "block").animate({height: i}, e.options.duration, function() {
            e.dropdown.dropdown.css("visibility", ""), e.dropdown.element.addClass("uk-open"), t.Utils.checkDisplay(e.dropdown.dropdown, !0);
          }), e.pointerleave = !1;
        },
        "hide.uk.dropdown": function() {
          e.overlay.stop().animate({height: 0}, e.options.duration);
        },
        "pointerenter.uk.dropdown": function() {
          clearTimeout(e.remainIdle);
        },
        "pointerleave.uk.dropdown": function() {
          e.pointerleave = !0;
        }
      }), this.overlay.on({
        mouseenter: function() {
          e.remainIdle && (clearTimeout(e.dropdown.remainIdle), clearTimeout(e.remainIdle));
        },
        mouseleave: function() {
          e.pointerleave && n && (e.remainIdle = setTimeout(function() {
            n && n.hide();
          }, n.options.remaintime));
        }
      });
    }
  });
}(UIkit), function(t) {
  "use strict";
  var i = [];
  t.component("gridMatchHeight", {
    defaults: {
      target: !1,
      row: !0,
      ignorestacked: !1,
      observe: !1
    },
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-grid-match]", i).each(function() {
          var i,
              e = t.$(this);
          e.data("gridMatchHeight") || (i = t.gridMatchHeight(e, t.Utils.options(e.attr("data-uk-grid-match"))));
        });
      });
    },
    init: function() {
      var e = this;
      this.columns = this.element.children(), this.elements = this.options.target ? this.find(this.options.target) : this.columns, this.columns.length && (t.$win.on("load resize orientationchange", function() {
        var i = function() {
          e.element.is(":visible") && e.match();
        };
        return t.$(function() {
          i();
        }), t.Utils.debounce(i, 50);
      }()), this.options.observe && t.domObserve(this.element, function() {
        e.element.is(":visible") && e.match();
      }), this.on("display.uk.check", function() {
        this.element.is(":visible") && this.match();
      }.bind(this)), i.push(this));
    },
    match: function() {
      var i = this.columns.filter(":visible:first");
      if (i.length) {
        var e = Math.ceil(100 * parseFloat(i.css("width")) / parseFloat(i.parent().css("width"))) >= 100;
        return e && !this.options.ignorestacked ? this.revert() : t.Utils.matchHeights(this.elements, this.options), this;
      }
    },
    revert: function() {
      return this.elements.css("min-height", ""), this;
    }
  }), t.component("gridMargin", {
    defaults: {
      cls: "uk-grid-margin",
      rowfirst: "uk-row-first"
    },
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-grid-margin]", i).each(function() {
          var i,
              e = t.$(this);
          e.data("gridMargin") || (i = t.gridMargin(e, t.Utils.options(e.attr("data-uk-grid-margin"))));
        });
      });
    },
    init: function() {
      t.stackMargin(this.element, this.options);
    }
  });
}(UIkit), function(t) {
  "use strict";
  function i(i, e) {
    return e ? ("object" == typeof i ? (i = i instanceof jQuery ? i : t.$(i), i.parent().length && (e.persist = i, e.persist.data("modalPersistParent", i.parent()))) : i = "string" == typeof i || "number" == typeof i ? t.$("<div></div>").html(i) : t.$("<div></div>").html("UIkit.modal Error: Unsupported data type: " + typeof i), i.appendTo(e.element.find(".uk-modal-dialog")), e) : void 0;
  }
  var e,
      n = !1,
      o = 0,
      s = t.$html;
  t.$win.on("resize orientationchange", t.Utils.debounce(function() {
    t.$(".uk-modal.uk-open").each(function() {
      t.$(this).data("modal").resize();
    });
  }, 150)), t.component("modal", {
    defaults: {
      keyboard: !0,
      bgclose: !0,
      minScrollHeight: 150,
      center: !1,
      modal: !0
    },
    scrollable: !1,
    transition: !1,
    hasTransitioned: !0,
    init: function() {
      if (e || (e = t.$("body")), this.element.length) {
        var i = this;
        this.paddingdir = "padding-" + ("left" == t.langdirection ? "right" : "left"), this.dialog = this.find(".uk-modal-dialog"), this.active = !1, this.element.attr("aria-hidden", this.element.hasClass("uk-open")), this.on("click", ".uk-modal-close", function(t) {
          t.preventDefault(), i.hide();
        }).on("click", function(e) {
          var n = t.$(e.target);
          n[0] == i.element[0] && i.options.bgclose && i.hide();
        }), t.domObserve(this.element, function() {
          i.resize();
        });
      }
    },
    toggle: function() {
      return this[this.isActive() ? "hide" : "show"]();
    },
    show: function() {
      if (this.element.length) {
        var i = this;
        if (!this.isActive())
          return this.options.modal && n && n.hide(!0), this.element.removeClass("uk-open").show(), this.resize(!0), this.options.modal && (n = this), this.active = !0, o++, t.support.transition ? (this.hasTransitioned = !1, this.element.one(t.support.transition.end, function() {
            i.hasTransitioned = !0;
          }).addClass("uk-open")) : this.element.addClass("uk-open"), s.addClass("uk-modal-page").height(), this.element.attr("aria-hidden", "false"), this.element.trigger("show.uk.modal"), t.Utils.checkDisplay(this.dialog, !0), this;
      }
    },
    hide: function(i) {
      if (!i && t.support.transition && this.hasTransitioned) {
        var e = this;
        this.one(t.support.transition.end, function() {
          e._hide();
        }).removeClass("uk-open");
      } else
        this._hide();
      return this;
    },
    resize: function(t) {
      if (this.isActive() || t) {
        var i = e.width();
        if (this.scrollbarwidth = window.innerWidth - i, e.css(this.paddingdir, this.scrollbarwidth), this.element.css("overflow-y", this.scrollbarwidth ? "scroll" : "auto"), !this.updateScrollable() && this.options.center) {
          var n = this.dialog.outerHeight(),
              o = parseInt(this.dialog.css("margin-top"), 10) + parseInt(this.dialog.css("margin-bottom"), 10);
          n + o < window.innerHeight ? this.dialog.css({top: window.innerHeight / 2 - n / 2 - o}) : this.dialog.css({top: ""});
        }
      }
    },
    updateScrollable: function() {
      var t = this.dialog.find(".uk-overflow-container:visible:first");
      if (t.length) {
        t.css("height", 0);
        var i = Math.abs(parseInt(this.dialog.css("margin-top"), 10)),
            e = this.dialog.outerHeight(),
            n = window.innerHeight,
            o = n - 2 * (20 > i ? 20 : i) - e;
        return t.css({
          "max-height": o < this.options.minScrollHeight ? "" : o,
          height: ""
        }), !0;
      }
      return !1;
    },
    _hide: function() {
      this.active = !1, o > 0 ? o-- : o = 0, this.element.hide().removeClass("uk-open"), this.element.attr("aria-hidden", "true"), o || (s.removeClass("uk-modal-page"), e.css(this.paddingdir, "")), n === this && (n = !1), this.trigger("hide.uk.modal");
    },
    isActive: function() {
      return this.element.hasClass("uk-open");
    }
  }), t.component("modalTrigger", {
    boot: function() {
      t.$html.on("click.modal.uikit", "[data-uk-modal]", function(i) {
        var e = t.$(this);
        if (e.is("a") && i.preventDefault(), !e.data("modalTrigger")) {
          var n = t.modalTrigger(e, t.Utils.options(e.attr("data-uk-modal")));
          n.show();
        }
      }), t.$html.on("keydown.modal.uikit", function(t) {
        n && 27 === t.keyCode && n.options.keyboard && (t.preventDefault(), n.hide());
      });
    },
    init: function() {
      var i = this;
      this.options = t.$.extend({target: i.element.is("a") ? i.element.attr("href") : !1}, this.options), this.modal = t.modal(this.options.target, this.options), this.on("click", function(t) {
        t.preventDefault(), i.show();
      }), this.proxy(this.modal, "show hide isActive");
    }
  }), t.modal.dialog = function(e, n) {
    var o = t.modal(t.$(t.modal.dialog.template).appendTo("body"), n);
    return o.on("hide.uk.modal", function() {
      o.persist && (o.persist.appendTo(o.persist.data("modalPersistParent")), o.persist = !1), o.element.remove();
    }), i(e, o), o;
  }, t.modal.dialog.template = '<div class="uk-modal"><div class="uk-modal-dialog" style="min-height:0;"></div></div>', t.modal.alert = function(i, e) {
    e = t.$.extend(!0, {
      bgclose: !1,
      keyboard: !1,
      modal: !1,
      labels: t.modal.labels
    }, e);
    var n = t.modal.dialog(['<div class="uk-margin uk-modal-content">' + String(i) + "</div>", '<div class="uk-modal-footer uk-text-right"><button class="uk-button uk-button-primary uk-modal-close">' + e.labels.Ok + "</button></div>"].join(""), e);
    return n.on("show.uk.modal", function() {
      setTimeout(function() {
        n.element.find("button:first").focus();
      }, 50);
    }), n.show();
  }, t.modal.confirm = function(i, e, n) {
    var o = arguments.length > 1 && arguments[arguments.length - 1] ? arguments[arguments.length - 1] : {};
    e = t.$.isFunction(e) ? e : function() {}, n = t.$.isFunction(n) ? n : function() {}, o = t.$.extend(!0, {
      bgclose: !1,
      keyboard: !1,
      modal: !1,
      labels: t.modal.labels
    }, t.$.isFunction(o) ? {} : o);
    var s = t.modal.dialog(['<div class="uk-margin uk-modal-content">' + String(i) + "</div>", '<div class="uk-modal-footer uk-text-right"><button class="uk-button js-modal-confirm-cancel">' + o.labels.Cancel + '</button> <button class="uk-button uk-button-primary js-modal-confirm">' + o.labels.Ok + "</button></div>"].join(""), o);
    return s.element.find(".js-modal-confirm, .js-modal-confirm-cancel").on("click", function() {
      t.$(this).is(".js-modal-confirm") ? e() : n(), s.hide();
    }), s.on("show.uk.modal", function() {
      setTimeout(function() {
        s.element.find(".js-modal-confirm").focus();
      }, 50);
    }), s.show();
  }, t.modal.prompt = function(i, e, n, o) {
    n = t.$.isFunction(n) ? n : function() {}, o = t.$.extend(!0, {
      bgclose: !1,
      keyboard: !1,
      modal: !1,
      labels: t.modal.labels
    }, o);
    var s = t.modal.dialog([i ? '<div class="uk-modal-content uk-form">' + String(i) + "</div>" : "", '<div class="uk-margin-small-top uk-modal-content uk-form"><p><input type="text" class="uk-width-1-1"></p></div>', '<div class="uk-modal-footer uk-text-right"><button class="uk-button uk-modal-close">' + o.labels.Cancel + '</button> <button class="uk-button uk-button-primary js-modal-ok">' + o.labels.Ok + "</button></div>"].join(""), o),
        a = s.element.find("input[type='text']").val(e || "").on("keyup", function(t) {
          13 == t.keyCode && s.element.find(".js-modal-ok").trigger("click");
        });
    return s.element.find(".js-modal-ok").on("click", function() {
      n(a.val()) !== !1 && s.hide();
    }), s.on("show.uk.modal", function() {
      setTimeout(function() {
        a.focus();
      }, 50);
    }), s.show();
  }, t.modal.blockUI = function(i, e) {
    var n = t.modal.dialog(['<div class="uk-margin uk-modal-content">' + String(i || '<div class="uk-text-center">...</div>') + "</div>"].join(""), t.$.extend({
      bgclose: !1,
      keyboard: !1,
      modal: !1
    }, e));
    return n.content = n.element.find(".uk-modal-content:first"), n.show();
  }, t.modal.labels = {
    Ok: "Ok",
    Cancel: "Cancel"
  };
}(UIkit), function(t) {
  "use strict";
  function i(i) {
    var e = t.$(i),
        n = "auto";
    if (e.is(":visible"))
      n = e.outerHeight();
    else {
      var o = {
        position: e.css("position"),
        visibility: e.css("visibility"),
        display: e.css("display")
      };
      n = e.css({
        position: "absolute",
        visibility: "hidden",
        display: "block"
      }).outerHeight(), e.css(o);
    }
    return n;
  }
  t.component("nav", {
    defaults: {
      toggle: ">li.uk-parent > a[href='#']",
      lists: ">li.uk-parent > ul",
      multiple: !1
    },
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-nav]", i).each(function() {
          var i = t.$(this);
          if (!i.data("nav")) {
            t.nav(i, t.Utils.options(i.attr("data-uk-nav")));
          }
        });
      });
    },
    init: function() {
      var i = this;
      this.on("click.uk.nav", this.options.toggle, function(e) {
        e.preventDefault();
        var n = t.$(this);
        i.open(n.parent()[0] == i.element[0] ? n : n.parent("li"));
      }), this.find(this.options.lists).each(function() {
        var e = t.$(this),
            n = e.parent(),
            o = n.hasClass("uk-active");
        e.wrap('<div style="overflow:hidden;height:0;position:relative;"></div>'), n.data("list-container", e.parent()[o ? "removeClass" : "addClass"]("uk-hidden")), n.attr("aria-expanded", n.hasClass("uk-open")), o && i.open(n, !0);
      });
    },
    open: function(e, n) {
      var o = this,
          s = this.element,
          a = t.$(e),
          r = a.data("list-container");
      this.options.multiple || s.children(".uk-open").not(e).each(function() {
        var i = t.$(this);
        i.data("list-container") && i.data("list-container").stop().animate({height: 0}, function() {
          t.$(this).parent().removeClass("uk-open").end().addClass("uk-hidden");
        });
      }), a.toggleClass("uk-open"), a.attr("aria-expanded", a.hasClass("uk-open")), r && (a.hasClass("uk-open") && r.removeClass("uk-hidden"), n ? (r.stop().height(a.hasClass("uk-open") ? "auto" : 0), a.hasClass("uk-open") || r.addClass("uk-hidden"), this.trigger("display.uk.check")) : r.stop().animate({height: a.hasClass("uk-open") ? i(r.find("ul:first")) : 0}, function() {
        a.hasClass("uk-open") ? r.css("height", "") : r.addClass("uk-hidden"), o.trigger("display.uk.check");
      }));
    }
  });
}(UIkit), function(t) {
  "use strict";
  var i = {
    x: window.scrollX,
    y: window.scrollY
  },
      e = (t.$win, t.$doc, t.$html),
      n = {
        show: function(n) {
          if (n = t.$(n), n.length) {
            var o = t.$("body"),
                s = n.find(".uk-offcanvas-bar:first"),
                a = "right" == t.langdirection,
                r = s.hasClass("uk-offcanvas-bar-flip") ? -1 : 1,
                l = r * (a ? -1 : 1),
                c = window.innerWidth - o.width();
            i = {
              x: window.pageXOffset,
              y: window.pageYOffset
            }, n.addClass("uk-active"), o.css({
              width: window.innerWidth - c,
              height: window.innerHeight
            }).addClass("uk-offcanvas-page"), o.css(a ? "margin-right" : "margin-left", (a ? -1 : 1) * s.outerWidth() * l).width(), e.css("margin-top", -1 * i.y), s.addClass("uk-offcanvas-bar-show"), this._initElement(n), s.trigger("show.uk.offcanvas", [n, s]), n.attr("aria-hidden", "false");
          }
        },
        hide: function(n) {
          var o = t.$("body"),
              s = t.$(".uk-offcanvas.uk-active"),
              a = "right" == t.langdirection,
              r = s.find(".uk-offcanvas-bar:first"),
              l = function() {
                o.removeClass("uk-offcanvas-page").css({
                  width: "",
                  height: "",
                  "margin-left": "",
                  "margin-right": ""
                }), s.removeClass("uk-active"), r.removeClass("uk-offcanvas-bar-show"), e.css("margin-top", ""), window.scrollTo(i.x, i.y), r.trigger("hide.uk.offcanvas", [s, r]), s.attr("aria-hidden", "true");
              };
          s.length && (t.support.transition && !n ? (o.one(t.support.transition.end, function() {
            l();
          }).css(a ? "margin-right" : "margin-left", ""), setTimeout(function() {
            r.removeClass("uk-offcanvas-bar-show");
          }, 0)) : l());
        },
        _initElement: function(i) {
          i.data("OffcanvasInit") || (i.on("click.uk.offcanvas swipeRight.uk.offcanvas swipeLeft.uk.offcanvas", function(i) {
            var e = t.$(i.target);
            if (!i.type.match(/swipe/) && !e.hasClass("uk-offcanvas-close")) {
              if (e.hasClass("uk-offcanvas-bar"))
                return;
              if (e.parents(".uk-offcanvas-bar:first").length)
                return;
            }
            i.stopImmediatePropagation(), n.hide();
          }), i.on("click", "a[href*='#']", function() {
            var i = t.$(this),
                e = i.attr("href");
            "#" != e && (t.$doc.one("hide.uk.offcanvas", function() {
              var n;
              try {
                n = t.$(i[0].hash);
              } catch (o) {
                n = "";
              }
              n.length || (n = t.$('[name="' + i[0].hash.replace("#", "") + '"]')), n.length && t.Utils.scrollToElement ? t.Utils.scrollToElement(n, t.Utils.options(i.attr("data-uk-smooth-scroll") || "{}")) : window.location.href = e;
            }), n.hide());
          }), i.data("OffcanvasInit", !0));
        }
      };
  t.component("offcanvasTrigger", {
    boot: function() {
      e.on("click.offcanvas.uikit", "[data-uk-offcanvas]", function(i) {
        i.preventDefault();
        var e = t.$(this);
        if (!e.data("offcanvasTrigger")) {
          {
            t.offcanvasTrigger(e, t.Utils.options(e.attr("data-uk-offcanvas")));
          }
          e.trigger("click");
        }
      }), e.on("keydown.uk.offcanvas", function(t) {
        27 === t.keyCode && n.hide();
      });
    },
    init: function() {
      var i = this;
      this.options = t.$.extend({target: i.element.is("a") ? i.element.attr("href") : !1}, this.options), this.on("click", function(t) {
        t.preventDefault(), n.show(i.options.target);
      });
    }
  }), t.offcanvas = n;
}(UIkit), function(t) {
  "use strict";
  function i(i, e, n) {
    var o,
        s = t.$.Deferred(),
        a = i,
        r = i;
    return n[0] === e[0] ? (s.resolve(), s.promise()) : ("object" == typeof i && (a = i[0], r = i[1] || i[0]), t.$body.css("overflow-x", "hidden"), o = function() {
      e && e.hide().removeClass("uk-active " + r + " uk-animation-reverse"), n.addClass(a).one(t.support.animation.end, function() {
        n.removeClass("" + a).css({
          opacity: "",
          display: ""
        }), s.resolve(), t.$body.css("overflow-x", ""), e && e.css({
          opacity: "",
          display: ""
        });
      }.bind(this)).show();
    }, n.css("animation-duration", this.options.duration + "ms"), e && e.length ? (e.css("animation-duration", this.options.duration + "ms"), e.css("display", "none").addClass(r + " uk-animation-reverse").one(t.support.animation.end, function() {
      o();
    }.bind(this)).css("display", "")) : (n.addClass("uk-active"), o()), s.promise());
  }
  var e;
  t.component("switcher", {
    defaults: {
      connect: !1,
      toggle: ">*",
      active: 0,
      animation: !1,
      duration: 200,
      swiping: !0
    },
    animating: !1,
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-switcher]", i).each(function() {
          var i = t.$(this);
          if (!i.data("switcher")) {
            t.switcher(i, t.Utils.options(i.attr("data-uk-switcher")));
          }
        });
      });
    },
    init: function() {
      var i = this;
      if (this.on("click.uk.switcher", this.options.toggle, function(t) {
        t.preventDefault(), i.show(this);
      }), this.options.connect) {
        this.connect = t.$(this.options.connect), this.connect.children().removeClass("uk-active"), this.connect.length && (this.connect.children().attr("aria-hidden", "true"), this.connect.on("click", "[data-uk-switcher-item]", function(e) {
          e.preventDefault();
          var n = t.$(this).attr("data-uk-switcher-item");
          if (i.index != n)
            switch (n) {
              case "next":
              case "previous":
                i.show(i.index + ("next" == n ? 1 : -1));
                break;
              default:
                i.show(parseInt(n, 10));
            }
        }), this.options.swiping && this.connect.on("swipeRight swipeLeft", function(t) {
          t.preventDefault(), window.getSelection().toString() || i.show(i.index + ("swipeLeft" == t.type ? 1 : -1));
        }));
        var e = this.find(this.options.toggle),
            n = e.filter(".uk-active");
        if (n.length)
          this.show(n, !1);
        else {
          if (this.options.active === !1)
            return;
          n = e.eq(this.options.active), this.show(n.length ? n : e.eq(0), !1);
        }
        e.not(n).attr("aria-expanded", "false"), n.attr("aria-expanded", "true");
      }
    },
    show: function(n, o) {
      if (!this.animating) {
        if (isNaN(n))
          n = t.$(n);
        else {
          var s = this.find(this.options.toggle);
          n = 0 > n ? s.length - 1 : n, n = s.eq(s[n] ? n : 0);
        }
        var a = this,
            s = this.find(this.options.toggle),
            r = t.$(n),
            l = e[this.options.animation] || function(t, n) {
              if (!a.options.animation)
                return e.none.apply(a);
              var o = a.options.animation.split(",");
              return 1 == o.length && (o[1] = o[0]), o[0] = o[0].trim(), o[1] = o[1].trim(), i.apply(a, [o, t, n]);
            };
        o !== !1 && t.support.animation || (l = e.none), r.hasClass("uk-disabled") || (s.attr("aria-expanded", "false"), r.attr("aria-expanded", "true"), s.filter(".uk-active").removeClass("uk-active"), r.addClass("uk-active"), this.options.connect && this.connect.length && (this.index = this.find(this.options.toggle).index(r), -1 == this.index && (this.index = 0), this.connect.each(function() {
          var i = t.$(this),
              e = t.$(i.children()),
              n = t.$(e.filter(".uk-active")),
              o = t.$(e.eq(a.index));
          a.animating = !0, l.apply(a, [n, o]).then(function() {
            n.removeClass("uk-active"), o.addClass("uk-active"), n.attr("aria-hidden", "true"), o.attr("aria-hidden", "false"), t.Utils.checkDisplay(o, !0), a.animating = !1;
          });
        })), this.trigger("show.uk.switcher", [r]));
      }
    }
  }), e = {
    none: function() {
      var i = t.$.Deferred();
      return i.resolve(), i.promise();
    },
    fade: function(t, e) {
      return i.apply(this, ["uk-animation-fade", t, e]);
    },
    "slide-bottom": function(t, e) {
      return i.apply(this, ["uk-animation-slide-bottom", t, e]);
    },
    "slide-top": function(t, e) {
      return i.apply(this, ["uk-animation-slide-top", t, e]);
    },
    "slide-vertical": function(t, e) {
      var n = ["uk-animation-slide-top", "uk-animation-slide-bottom"];
      return t && t.index() > e.index() && n.reverse(), i.apply(this, [n, t, e]);
    },
    "slide-left": function(t, e) {
      return i.apply(this, ["uk-animation-slide-left", t, e]);
    },
    "slide-right": function(t, e) {
      return i.apply(this, ["uk-animation-slide-right", t, e]);
    },
    "slide-horizontal": function(t, e) {
      var n = ["uk-animation-slide-right", "uk-animation-slide-left"];
      return t && t.index() > e.index() && n.reverse(), i.apply(this, [n, t, e]);
    },
    scale: function(t, e) {
      return i.apply(this, ["uk-animation-scale-up", t, e]);
    }
  }, t.switcher.animations = e;
}(UIkit), function(t) {
  "use strict";
  t.component("tab", {
    defaults: {
      target: ">li:not(.uk-tab-responsive, .uk-disabled)",
      connect: !1,
      active: 0,
      animation: !1,
      duration: 200,
      swiping: !0
    },
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-tab]", i).each(function() {
          var i = t.$(this);
          if (!i.data("tab")) {
            t.tab(i, t.Utils.options(i.attr("data-uk-tab")));
          }
        });
      });
    },
    init: function() {
      var i = this;
      this.current = !1, this.on("click.uk.tab", this.options.target, function(e) {
        if (e.preventDefault(), !i.switcher || !i.switcher.animating) {
          var n = i.find(i.options.target).not(this);
          n.removeClass("uk-active").blur(), i.trigger("change.uk.tab", [t.$(this).addClass("uk-active"), i.current]), i.current = t.$(this), i.options.connect || (n.attr("aria-expanded", "false"), t.$(this).attr("aria-expanded", "true"));
        }
      }), this.options.connect && (this.connect = t.$(this.options.connect)), this.responsivetab = t.$('<li class="uk-tab-responsive uk-active"><a></a></li>').append('<div class="uk-dropdown uk-dropdown-small"><ul class="uk-nav uk-nav-dropdown"></ul><div>'), this.responsivetab.dropdown = this.responsivetab.find(".uk-dropdown"), this.responsivetab.lst = this.responsivetab.dropdown.find("ul"), this.responsivetab.caption = this.responsivetab.find("a:first"), this.element.hasClass("uk-tab-bottom") && this.responsivetab.dropdown.addClass("uk-dropdown-up"), this.responsivetab.lst.on("click.uk.tab", "a", function(e) {
        e.preventDefault(), e.stopPropagation();
        var n = t.$(this);
        i.element.children("li:not(.uk-tab-responsive)").eq(n.data("index")).trigger("click");
      }), this.on("show.uk.switcher change.uk.tab", function(t, e) {
        i.responsivetab.caption.html(e.text());
      }), this.element.append(this.responsivetab), this.options.connect && (this.switcher = t.switcher(this.element, {
        toggle: ">li:not(.uk-tab-responsive)",
        connect: this.options.connect,
        active: this.options.active,
        animation: this.options.animation,
        duration: this.options.duration,
        swiping: this.options.swiping
      })), t.dropdown(this.responsivetab, {
        mode: "click",
        preventflip: "y"
      }), i.trigger("change.uk.tab", [this.element.find(this.options.target).not(".uk-tab-responsive").filter(".uk-active")]), this.check(), t.$win.on("resize orientationchange", t.Utils.debounce(function() {
        i.element.is(":visible") && i.check();
      }, 100)), this.on("display.uk.check", function() {
        i.element.is(":visible") && i.check();
      });
    },
    check: function() {
      var i = this.element.children("li:not(.uk-tab-responsive)").removeClass("uk-hidden");
      if (!i.length)
        return this.responsivetab.addClass("uk-hidden"), void 0;
      var e,
          n,
          o,
          s = i.eq(0).offset().top + Math.ceil(i.eq(0).height() / 2),
          a = !1;
      if (this.responsivetab.lst.empty(), i.each(function() {
        t.$(this).offset().top > s && (a = !0);
      }), a)
        for (var r = 0; r < i.length; r++)
          e = t.$(i.eq(r)), n = e.find("a"), "none" == e.css("float") || e.attr("uk-dropdown") || (e.hasClass("uk-disabled") || (o = e[0].outerHTML.replace("<a ", '<a data-index="' + r + '" '), this.responsivetab.lst.append(o)), e.addClass("uk-hidden"));
      this.responsivetab[this.responsivetab.lst.children("li").length ? "removeClass" : "addClass"]("uk-hidden");
    }
  });
}(UIkit), function(t) {
  "use strict";
  t.component("cover", {
    defaults: {automute: !0},
    boot: function() {
      t.ready(function(i) {
        t.$("[data-uk-cover]", i).each(function() {
          var i = t.$(this);
          if (!i.data("cover")) {
            t.cover(i, t.Utils.options(i.attr("data-uk-cover")));
          }
        });
      });
    },
    init: function() {
      if (this.parent = this.element.parent(), t.$win.on("load resize orientationchange", t.Utils.debounce(function() {
        this.check();
      }.bind(this), 100)), this.on("display.uk.check", function() {
        this.element.is(":visible") && this.check();
      }.bind(this)), this.check(), this.element.is("iframe") && this.options.automute) {
        var i = this.element.attr("src");
        this.element.attr("src", "").on("load", function() {
          this.contentWindow.postMessage('{ "event": "command", "func": "mute", "method":"setVolume", "value":0}', "*");
        }).attr("src", [i, i.indexOf("?") > -1 ? "&" : "?", "enablejsapi=1&api=1"].join(""));
      }
    },
    check: function() {
      this.element.css({
        width: "",
        height: ""
      }), this.dimension = {
        w: this.element.width(),
        h: this.element.height()
      }, this.element.attr("width") && !isNaN(this.element.attr("width")) && (this.dimension.w = this.element.attr("width")), this.element.attr("height") && !isNaN(this.element.attr("height")) && (this.dimension.h = this.element.attr("height")), this.ratio = this.dimension.w / this.dimension.h;
      var t,
          i,
          e = this.parent.width(),
          n = this.parent.height();
      e / this.ratio < n ? (t = Math.ceil(n * this.ratio), i = n) : (t = e, i = Math.ceil(e / this.ratio)), this.element.css({
        width: t,
        height: i
      });
    }
  });
}(UIkit);

})();
$__System.register("129", [], function() { return { setters: [], execute: function() {} } });

$__System.registerDynamic('12a', ['2', '3', '127', '128', '129'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  $__require('2');
  AndamanService = $__require('3');

  //load and initialize some global objects
  $__require('127');

  $__require('128');
  $__require('129');

  // require('assets/lib/uikit/js/components/datepicker.min.js');
  // require('assets/lib/uikit/js/components/pagination.min.js');

  // require('assets/lib/uikit/css/components/datepicker.min.css!');

  return module.exports;
});
$__System.register("12b", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var utils;
    return {
        setters: [],
        execute: function () {
            utils = {
                getErrMsg: function (resp) {
                    var err = resp.error;
                    if (!err) return null;
                    switch (err.status) {
                        case "ACCOUNT_NOT_EXIST":
                            return 'Email or password is incorrect.';
                        default:
                            return err.reason;
                    }
                }
            };
            exports_1("default", utils);
        }
    };
});
$__System.register('12c', ['12d', '12e', '12f', '12b', '130', '131'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var riot_ts_1, store_1, types_1, utils_1, actions_1, templates;
    var LandingPage, LandingPageHeader, LandingPageFooter, LandingPageLoginForm;
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (store_1_1) {
            store_1 = store_1_1;
        }, function (types_1_1) {
            types_1 = types_1_1;
        }, function (utils_1_1) {
            utils_1 = utils_1_1;
        }, function (actions_1_1) {
            actions_1 = actions_1_1;
        }, function (templates_1) {
            templates = templates_1;
        }],
        execute: function () {
            LandingPage = function (_super) {
                __extends(LandingPage, _super);
                function LandingPage() {
                    _super.apply(this, arguments);
                }
                LandingPage = __decorate([riot_ts_1.template(templates.landingPage.LandingPageTemplate), __metadata('design:paramtypes', [])], LandingPage);
                return LandingPage;
            }(riot_ts_1.Element);
            exports_1("default", LandingPage);
            LandingPageHeader = function (_super) {
                __extends(LandingPageHeader, _super);
                function LandingPageHeader() {
                    _super.apply(this, arguments);
                }
                LandingPageHeader = __decorate([riot_ts_1.template(templates.landingPage.LaningPageHeaderTemplate), __metadata('design:paramtypes', [])], LandingPageHeader);
                return LandingPageHeader;
            }(riot_ts_1.Element);
            LandingPageFooter = function (_super) {
                __extends(LandingPageFooter, _super);
                function LandingPageFooter() {
                    _super.apply(this, arguments);
                }
                LandingPageFooter = __decorate([riot_ts_1.template(templates.landingPage.LaningPageFooterTemplate), __metadata('design:paramtypes', [])], LandingPageFooter);
                return LandingPageFooter;
            }(riot_ts_1.Element);
            LandingPageLoginForm = function (_super) {
                __extends(LandingPageLoginForm, _super);
                function LandingPageLoginForm() {
                    _super.apply(this, arguments);
                }
                LandingPageLoginForm.prototype.mounted = function () {
                    store_1.default.subscribe(this.onApplicationStateChange.bind(this));
                };
                LandingPageLoginForm.prototype.onApplicationStateChange = function () {
                    var state = store_1.default.getState();
                    if (state.lastAction.type == types_1.USERS.LOGIN_FAILED) {
                        UIkit.modal.alert(utils_1.default.getErrMsg(state.lastAction.data));
                    }
                };
                LandingPageLoginForm.prototype.onLoginButtonClick = function (e) {
                    var $email = $(this.root.querySelector('.login-form-email'));
                    var $password = $(this.root.querySelector('.login-form-password'));
                    store_1.default.dispatch(actions_1.default.login($email.val(), $password.val()));
                };
                LandingPageLoginForm = __decorate([riot_ts_1.template(templates.landingPage.LaningPageLoginFormTemplate), __metadata('design:paramtypes', [])], LandingPageLoginForm);
                return LandingPageLoginForm;
            }(riot_ts_1.Element);
        }
    };
});
$__System.register('132', ['12d', '12e', '130', '131'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var riot_ts_1, store_1, actions_1, templates;
    var HomePage, HomePageHeader, HomePageFooter, HomePageBody, HomePageSideBar;
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (store_1_1) {
            store_1 = store_1_1;
        }, function (actions_1_1) {
            actions_1 = actions_1_1;
        }, function (templates_1) {
            templates = templates_1;
        }],
        execute: function () {
            HomePage = function (_super) {
                __extends(HomePage, _super);
                function HomePage() {
                    _super.apply(this, arguments);
                }
                HomePage = __decorate([riot_ts_1.template(templates.homePage.HomePageTemplate), __metadata('design:paramtypes', [])], HomePage);
                return HomePage;
            }(riot_ts_1.Element);
            exports_1("default", HomePage);
            HomePageHeader = function (_super) {
                __extends(HomePageHeader, _super);
                function HomePageHeader() {
                    _super.apply(this, arguments);
                }
                HomePageHeader.prototype.onLogoutButtonClick = function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    store_1.default.dispatch(actions_1.default.logout());
                };
                HomePageHeader = __decorate([riot_ts_1.template(templates.homePage.HomePageHeaderTemplate), __metadata('design:paramtypes', [])], HomePageHeader);
                return HomePageHeader;
            }(riot_ts_1.Element);
            HomePageFooter = function (_super) {
                __extends(HomePageFooter, _super);
                function HomePageFooter() {
                    _super.apply(this, arguments);
                }
                HomePageFooter = __decorate([riot_ts_1.template(templates.homePage.HomePageFooterTemplate), __metadata('design:paramtypes', [])], HomePageFooter);
                return HomePageFooter;
            }(riot_ts_1.Element);
            HomePageBody = function (_super) {
                __extends(HomePageBody, _super);
                function HomePageBody() {
                    _super.apply(this, arguments);
                }
                HomePageBody = __decorate([riot_ts_1.template(templates.homePage.HomePageBodyTemplate), __metadata('design:paramtypes', [])], HomePageBody);
                return HomePageBody;
            }(riot_ts_1.Element);
            HomePageSideBar = function (_super) {
                __extends(HomePageSideBar, _super);
                function HomePageSideBar() {
                    _super.apply(this, arguments);
                }
                HomePageSideBar = __decorate([riot_ts_1.template(templates.homePage.HomePageSideBarTemplate), __metadata('design:paramtypes', [])], HomePageSideBar);
                return HomePageSideBar;
            }(riot_ts_1.Element);
        }
    };
});
$__System.register('133', ['12d', '131'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var riot_ts_1, templates;
    var DashboardView;
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (templates_1) {
            templates = templates_1;
        }],
        execute: function () {
            DashboardView = function (_super) {
                __extends(DashboardView, _super);
                function DashboardView() {
                    _super.apply(this, arguments);
                }
                DashboardView = __decorate([riot_ts_1.template(templates.homePage.views.DashboardViewTemplate), __metadata('design:paramtypes', [])], DashboardView);
                return DashboardView;
            }(riot_ts_1.Element);
            exports_1("DashboardView", DashboardView);
        }
    };
});
$__System.register('134', ['12d', '131'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var riot_ts_1, templates;
    var LoadingIndicator;
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (templates_1) {
            templates = templates_1;
        }],
        execute: function () {
            LoadingIndicator = function (_super) {
                __extends(LoadingIndicator, _super);
                function LoadingIndicator() {
                    _super.apply(this, arguments);
                }
                LoadingIndicator = __decorate([riot_ts_1.template(templates.LoadingIndicatorTemplate), __metadata('design:paramtypes', [])], LoadingIndicator);
                return LoadingIndicator;
            }(riot_ts_1.Element);
            exports_1("default", LoadingIndicator);
        }
    };
});
$__System.registerDynamic('135', ['7'], true, function ($__require, exports, module) {
  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  /* Riot v2.5.0, @license MIT */

  ;(function (window, undefined) {
    'use strict';

    var riot = { version: 'v2.5.0', settings: {} },

    // be aware, internal usage
    // ATTENTION: prefix the global dynamic variables with `__`

    // counter to give a unique id to all the Tag instances
    __uid = 0,

    // tags instances cache
    __virtualDom = [],

    // tags implementation cache
    __tagImpl = {},


    /**
     * Const
     */
    GLOBAL_MIXIN = '__global_mixin',


    // riot specific prefixes
    RIOT_PREFIX = 'riot-',
        RIOT_TAG = RIOT_PREFIX + 'tag',
        RIOT_TAG_IS = 'data-is',


    // for typeof == '' comparisons
    T_STRING = 'string',
        T_OBJECT = 'object',
        T_UNDEF = 'undefined',
        T_FUNCTION = 'function',

    // special native tags that cannot be treated like the others
    SPECIAL_TAGS_REGEX = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/,
        RESERVED_WORDS_BLACKLIST = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|parent|opts|trigger|o(?:n|ff|ne))$/,

    // SVG tags list https://www.w3.org/TR/SVG/attindex.html#PresentationAttributes
    SVG_TAGS_LIST = ['altGlyph', 'animate', 'animateColor', 'circle', 'clipPath', 'defs', 'ellipse', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feFlood', 'feGaussianBlur', 'feImage', 'feMerge', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence', 'filter', 'font', 'foreignObject', 'g', 'glyph', 'glyphRef', 'image', 'line', 'linearGradient', 'marker', 'mask', 'missing-glyph', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'switch', 'symbol', 'text', 'textPath', 'tref', 'tspan', 'use'],


    // version# for IE 8-11, 0 for others
    IE_VERSION = (window && window.document || {}).documentMode | 0,


    // detect firefox to fix #1374
    FIREFOX = window && !!window.InstallTrigger;
    /* istanbul ignore next */
    riot.observable = function (el) {

      /**
       * Extend the original object or create a new empty one
       * @type { Object }
       */

      el = el || {};

      /**
       * Private variables
       */
      var callbacks = {},
          slice = Array.prototype.slice;

      /**
       * Private Methods
       */

      /**
       * Helper function needed to get and loop all the events in a string
       * @param   { String }   e - event string
       * @param   {Function}   fn - callback
       */
      function onEachEvent(e, fn) {
        var es = e.split(' '),
            l = es.length,
            i = 0,
            name,
            indx;
        for (; i < l; i++) {
          name = es[i];
          indx = name.indexOf('.');
          if (name) fn(~indx ? name.substring(0, indx) : name, i, ~indx ? name.slice(indx + 1) : null);
        }
      }

      /**
       * Public Api
       */

      // extend the el object adding the observable methods
      Object.defineProperties(el, {
        /**
         * Listen to the given space separated list of `events` and
         * execute the `callback` each time an event is triggered.
         * @param  { String } events - events ids
         * @param  { Function } fn - callback function
         * @returns { Object } el
         */
        on: {
          value: function (events, fn) {
            if (typeof fn != 'function') return el;

            onEachEvent(events, function (name, pos, ns) {
              (callbacks[name] = callbacks[name] || []).push(fn);
              fn.typed = pos > 0;
              fn.ns = ns;
            });

            return el;
          },
          enumerable: false,
          writable: false,
          configurable: false
        },

        /**
         * Removes the given space separated list of `events` listeners
         * @param   { String } events - events ids
         * @param   { Function } fn - callback function
         * @returns { Object } el
         */
        off: {
          value: function (events, fn) {
            if (events == '*' && !fn) callbacks = {};else {
              onEachEvent(events, function (name, pos, ns) {
                if (fn || ns) {
                  var arr = callbacks[name];
                  for (var i = 0, cb; cb = arr && arr[i]; ++i) {
                    if (cb == fn || ns && cb.ns == ns) arr.splice(i--, 1);
                  }
                } else delete callbacks[name];
              });
            }
            return el;
          },
          enumerable: false,
          writable: false,
          configurable: false
        },

        /**
         * Listen to the given space separated list of `events` and
         * execute the `callback` at most once
         * @param   { String } events - events ids
         * @param   { Function } fn - callback function
         * @returns { Object } el
         */
        one: {
          value: function (events, fn) {
            function on() {
              el.off(events, on);
              fn.apply(el, arguments);
            }
            return el.on(events, on);
          },
          enumerable: false,
          writable: false,
          configurable: false
        },

        /**
         * Execute all callback functions that listen to
         * the given space separated list of `events`
         * @param   { String } events - events ids
         * @returns { Object } el
         */
        trigger: {
          value: function (events) {

            // getting the arguments
            var arglen = arguments.length - 1,
                args = new Array(arglen),
                fns;

            for (var i = 0; i < arglen; i++) {
              args[i] = arguments[i + 1]; // skip first argument
            }

            onEachEvent(events, function (name, pos, ns) {

              fns = slice.call(callbacks[name] || [], 0);

              for (var i = 0, fn; fn = fns[i]; ++i) {
                if (fn.busy) continue;
                fn.busy = 1;
                if (!ns || fn.ns == ns) fn.apply(el, fn.typed ? [name].concat(args) : args);
                if (fns[i] !== fn) {
                  i--;
                }
                fn.busy = 0;
              }

              if (callbacks['*'] && name != '*') el.trigger.apply(el, ['*', name].concat(args));
            });

            return el;
          },
          enumerable: false,
          writable: false,
          configurable: false
        }
      });

      return el;
    }
    /* istanbul ignore next */
    ;(function (riot) {

      /**
       * Simple client-side router
       * @module riot-route
       */

      var RE_ORIGIN = /^.+?\/\/+[^\/]+/,
          EVENT_LISTENER = 'EventListener',
          REMOVE_EVENT_LISTENER = 'remove' + EVENT_LISTENER,
          ADD_EVENT_LISTENER = 'add' + EVENT_LISTENER,
          HAS_ATTRIBUTE = 'hasAttribute',
          REPLACE = 'replace',
          POPSTATE = 'popstate',
          HASHCHANGE = 'hashchange',
          TRIGGER = 'trigger',
          MAX_EMIT_STACK_LEVEL = 3,
          win = typeof window != 'undefined' && window,
          doc = typeof document != 'undefined' && document,
          hist = win && history,
          loc = win && (hist.location || win.location),
          // see html5-history-api
      prot = Router.prototype,
          // to minify more
      clickEvent = doc && doc.ontouchstart ? 'touchstart' : 'click',
          started = false,
          central = riot.observable(),
          routeFound = false,
          debouncedEmit,
          base,
          current,
          parser,
          secondParser,
          emitStack = [],
          emitStackLevel = 0;

      /**
       * Default parser. You can replace it via router.parser method.
       * @param {string} path - current path (normalized)
       * @returns {array} array
       */
      function DEFAULT_PARSER(path) {
        return path.split(/[/?#]/);
      }

      /**
       * Default parser (second). You can replace it via router.parser method.
       * @param {string} path - current path (normalized)
       * @param {string} filter - filter string (normalized)
       * @returns {array} array
       */
      function DEFAULT_SECOND_PARSER(path, filter) {
        var re = new RegExp('^' + filter[REPLACE](/\*/g, '([^/?#]+?)')[REPLACE](/\.\./, '.*') + '$'),
            args = path.match(re);

        if (args) return args.slice(1);
      }

      /**
       * Simple/cheap debounce implementation
       * @param   {function} fn - callback
       * @param   {number} delay - delay in seconds
       * @returns {function} debounced function
       */
      function debounce(fn, delay) {
        var t;
        return function () {
          clearTimeout(t);
          t = setTimeout(fn, delay);
        };
      }

      /**
       * Set the window listeners to trigger the routes
       * @param {boolean} autoExec - see route.start
       */
      function start(autoExec) {
        debouncedEmit = debounce(emit, 1);
        win[ADD_EVENT_LISTENER](POPSTATE, debouncedEmit);
        win[ADD_EVENT_LISTENER](HASHCHANGE, debouncedEmit);
        doc[ADD_EVENT_LISTENER](clickEvent, click);
        if (autoExec) emit(true);
      }

      /**
       * Router class
       */
      function Router() {
        this.$ = [];
        riot.observable(this); // make it observable
        central.on('stop', this.s.bind(this));
        central.on('emit', this.e.bind(this));
      }

      function normalize(path) {
        return path[REPLACE](/^\/|\/$/, '');
      }

      function isString(str) {
        return typeof str == 'string';
      }

      /**
       * Get the part after domain name
       * @param {string} href - fullpath
       * @returns {string} path from root
       */
      function getPathFromRoot(href) {
        return (href || loc.href)[REPLACE](RE_ORIGIN, '');
      }

      /**
       * Get the part after base
       * @param {string} href - fullpath
       * @returns {string} path from base
       */
      function getPathFromBase(href) {
        return base[0] == '#' ? (href || loc.href || '').split(base)[1] || '' : (loc ? getPathFromRoot(href) : href || '')[REPLACE](base, '');
      }

      function emit(force) {
        // the stack is needed for redirections
        var isRoot = emitStackLevel == 0;
        if (MAX_EMIT_STACK_LEVEL <= emitStackLevel) return;

        emitStackLevel++;
        emitStack.push(function () {
          var path = getPathFromBase();
          if (force || path != current) {
            central[TRIGGER]('emit', path);
            current = path;
          }
        });
        if (isRoot) {
          while (emitStack.length) {
            emitStack[0]();
            emitStack.shift();
          }
          emitStackLevel = 0;
        }
      }

      function click(e) {
        if (e.which != 1 // not left click
        || e.metaKey || e.ctrlKey || e.shiftKey // or meta keys
        || e.defaultPrevented // or default prevented
        ) return;

        var el = e.target;
        while (el && el.nodeName != 'A') el = el.parentNode;

        if (!el || el.nodeName != 'A' // not A tag
        || el[HAS_ATTRIBUTE]('download') // has download attr
        || !el[HAS_ATTRIBUTE]('href') // has no href attr
        || el.target && el.target != '_self' // another window or frame
        || el.href.indexOf(loc.href.match(RE_ORIGIN)[0]) == -1 // cross origin
        ) return;

        if (el.href != loc.href) {
          if (el.href.split('#')[0] == loc.href.split('#')[0] // internal jump
          || base != '#' && getPathFromRoot(el.href).indexOf(base) !== 0 // outside of base
          || !go(getPathFromBase(el.href), el.title || doc.title) // route not found
          ) return;
        }

        e.preventDefault();
      }

      /**
       * Go to the path
       * @param {string} path - destination path
       * @param {string} title - page title
       * @param {boolean} shouldReplace - use replaceState or pushState
       * @returns {boolean} - route not found flag
       */
      function go(path, title, shouldReplace) {
        if (hist) {
          // if a browser
          path = base + normalize(path);
          title = title || doc.title;
          // browsers ignores the second parameter `title`
          shouldReplace ? hist.replaceState(null, title, path) : hist.pushState(null, title, path);
          // so we need to set it manually
          doc.title = title;
          routeFound = false;
          emit();
          return routeFound;
        }

        // Server-side usage: directly execute handlers for the path
        return central[TRIGGER]('emit', getPathFromBase(path));
      }

      /**
       * Go to path or set action
       * a single string:                go there
       * two strings:                    go there with setting a title
       * two strings and boolean:        replace history with setting a title
       * a single function:              set an action on the default route
       * a string/RegExp and a function: set an action on the route
       * @param {(string|function)} first - path / action / filter
       * @param {(string|RegExp|function)} second - title / action
       * @param {boolean} third - replace flag
       */
      prot.m = function (first, second, third) {
        if (isString(first) && (!second || isString(second))) go(first, second, third || false);else if (second) this.r(first, second);else this.r('@', first);
      };

      /**
       * Stop routing
       */
      prot.s = function () {
        this.off('*');
        this.$ = [];
      };

      /**
       * Emit
       * @param {string} path - path
       */
      prot.e = function (path) {
        this.$.concat('@').some(function (filter) {
          var args = (filter == '@' ? parser : secondParser)(normalize(path), normalize(filter));
          if (typeof args != 'undefined') {
            this[TRIGGER].apply(null, [filter].concat(args));
            return routeFound = true; // exit from loop
          }
        }, this);
      };

      /**
       * Register route
       * @param {string} filter - filter for matching to url
       * @param {function} action - action to register
       */
      prot.r = function (filter, action) {
        if (filter != '@') {
          filter = '/' + normalize(filter);
          this.$.push(filter);
        }
        this.on(filter, action);
      };

      var mainRouter = new Router();
      var route = mainRouter.m.bind(mainRouter);

      /**
       * Create a sub router
       * @returns {function} the method of a new Router object
       */
      route.create = function () {
        var newSubRouter = new Router();
        // assign sub-router's main method
        var router = newSubRouter.m.bind(newSubRouter);
        // stop only this sub-router
        router.stop = newSubRouter.s.bind(newSubRouter);
        return router;
      };

      /**
       * Set the base of url
       * @param {(str|RegExp)} arg - a new base or '#' or '#!'
       */
      route.base = function (arg) {
        base = arg || '#';
        current = getPathFromBase(); // recalculate current path
      };

      /** Exec routing right now **/
      route.exec = function () {
        emit(true);
      };

      /**
       * Replace the default router to yours
       * @param {function} fn - your parser function
       * @param {function} fn2 - your secondParser function
       */
      route.parser = function (fn, fn2) {
        if (!fn && !fn2) {
          // reset parser for testing...
          parser = DEFAULT_PARSER;
          secondParser = DEFAULT_SECOND_PARSER;
        }
        if (fn) parser = fn;
        if (fn2) secondParser = fn2;
      };

      /**
       * Helper function to get url query as an object
       * @returns {object} parsed query
       */
      route.query = function () {
        var q = {};
        var href = loc.href || current;
        href[REPLACE](/[?&](.+?)=([^&]*)/g, function (_, k, v) {
          q[k] = v;
        });
        return q;
      };

      /** Stop routing **/
      route.stop = function () {
        if (started) {
          if (win) {
            win[REMOVE_EVENT_LISTENER](POPSTATE, debouncedEmit);
            win[REMOVE_EVENT_LISTENER](HASHCHANGE, debouncedEmit);
            doc[REMOVE_EVENT_LISTENER](clickEvent, click);
          }
          central[TRIGGER]('stop');
          started = false;
        }
      };

      /**
       * Start routing
       * @param {boolean} autoExec - automatically exec after starting if true
       */
      route.start = function (autoExec) {
        if (!started) {
          if (win) {
            if (document.readyState == 'complete') start(autoExec);
            // the timeout is needed to solve
            // a weird safari bug https://github.com/riot/route/issues/33
            else win[ADD_EVENT_LISTENER]('load', function () {
                setTimeout(function () {
                  start(autoExec);
                }, 1);
              });
          }
          started = true;
        }
      };

      /** Prepare the router **/
      route.base();
      route.parser();

      riot.route = route;
    })(riot);
    /* istanbul ignore next */

    /**
     * The riot template engine
     * @version v2.4.0
     */
    /**
     * riot.util.brackets
     *
     * - `brackets    ` - Returns a string or regex based on its parameter
     * - `brackets.set` - Change the current riot brackets
     *
     * @module
     */

    var brackets = function (UNDEF) {

      var REGLOB = 'g',
          R_MLCOMMS = /\/\*[^*]*\*+(?:[^*\/][^*]*\*+)*\//g,
          R_STRINGS = /"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'/g,
          S_QBLOCKS = R_STRINGS.source + '|' + /(?:\breturn\s+|(?:[$\w\)\]]|\+\+|--)\s*(\/)(?![*\/]))/.source + '|' + /\/(?=[^*\/])[^[\/\\]*(?:(?:\[(?:\\.|[^\]\\]*)*\]|\\.)[^[\/\\]*)*?(\/)[gim]*/.source,
          FINDBRACES = {
        '(': RegExp('([()])|' + S_QBLOCKS, REGLOB),
        '[': RegExp('([[\\]])|' + S_QBLOCKS, REGLOB),
        '{': RegExp('([{}])|' + S_QBLOCKS, REGLOB)
      },
          DEFAULT = '{ }';

      var _pairs = ['{', '}', '{', '}', /{[^}]*}/, /\\([{}])/g, /\\({)|{/g, RegExp('\\\\(})|([[({])|(})|' + S_QBLOCKS, REGLOB), DEFAULT, /^\s*{\^?\s*([$\w]+)(?:\s*,\s*(\S+))?\s+in\s+(\S.*)\s*}/, /(^|[^\\]){=[\S\s]*?}/];

      var cachedBrackets = UNDEF,
          _regex,
          _cache = [],
          _settings;

      function _loopback(re) {
        return re;
      }

      function _rewrite(re, bp) {
        if (!bp) bp = _cache;
        return new RegExp(re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : '');
      }

      function _create(pair) {
        if (pair === DEFAULT) return _pairs;

        var arr = pair.split(' ');

        if (arr.length !== 2 || /[\x00-\x1F<>a-zA-Z0-9'",;\\]/.test(pair)) {
          // eslint-disable-line
          throw new Error('Unsupported brackets "' + pair + '"');
        }
        arr = arr.concat(pair.replace(/(?=[[\]()*+?.^$|])/g, '\\').split(' '));

        arr[4] = _rewrite(arr[1].length > 1 ? /{[\S\s]*?}/ : _pairs[4], arr);
        arr[5] = _rewrite(pair.length > 3 ? /\\({|})/g : _pairs[5], arr);
        arr[6] = _rewrite(_pairs[6], arr);
        arr[7] = RegExp('\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCKS, REGLOB);
        arr[8] = pair;
        return arr;
      }

      function _brackets(reOrIdx) {
        return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx];
      }

      _brackets.split = function split(str, tmpl, _bp) {
        // istanbul ignore next: _bp is for the compiler
        if (!_bp) _bp = _cache;

        var parts = [],
            match,
            isexpr,
            start,
            pos,
            re = _bp[6];

        isexpr = start = re.lastIndex = 0;

        while (match = re.exec(str)) {

          pos = match.index;

          if (isexpr) {

            if (match[2]) {
              re.lastIndex = skipBraces(str, match[2], re.lastIndex);
              continue;
            }
            if (!match[3]) {
              continue;
            }
          }

          if (!match[1]) {
            unescapeStr(str.slice(start, pos));
            start = re.lastIndex;
            re = _bp[6 + (isexpr ^= 1)];
            re.lastIndex = start;
          }
        }

        if (str && start < str.length) {
          unescapeStr(str.slice(start));
        }

        return parts;

        function unescapeStr(s) {
          if (tmpl || isexpr) {
            parts.push(s && s.replace(_bp[5], '$1'));
          } else {
            parts.push(s);
          }
        }

        function skipBraces(s, ch, ix) {
          var match,
              recch = FINDBRACES[ch];

          recch.lastIndex = ix;
          ix = 1;
          while (match = recch.exec(s)) {
            if (match[1] && !(match[1] === ch ? ++ix : --ix)) break;
          }
          return ix ? s.length : recch.lastIndex;
        }
      };

      _brackets.hasExpr = function hasExpr(str) {
        return _cache[4].test(str);
      };

      _brackets.loopKeys = function loopKeys(expr) {
        var m = expr.match(_cache[9]);

        return m ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] } : { val: expr.trim() };
      };

      _brackets.array = function array(pair) {
        return pair ? _create(pair) : _cache;
      };

      function _reset(pair) {
        if ((pair || (pair = DEFAULT)) !== _cache[8]) {
          _cache = _create(pair);
          _regex = pair === DEFAULT ? _loopback : _rewrite;
          _cache[9] = _regex(_pairs[9]);
        }
        cachedBrackets = pair;
      }

      function _setSettings(o) {
        var b;

        o = o || {};
        b = o.brackets;
        Object.defineProperty(o, 'brackets', {
          set: _reset,
          get: function () {
            return cachedBrackets;
          },
          enumerable: true
        });
        _settings = o;
        _reset(b);
      }

      Object.defineProperty(_brackets, 'settings', {
        set: _setSettings,
        get: function () {
          return _settings;
        }
      });

      /* istanbul ignore next: in the browser riot is always in the scope */
      _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};
      _brackets.set = _reset;

      _brackets.R_STRINGS = R_STRINGS;
      _brackets.R_MLCOMMS = R_MLCOMMS;
      _brackets.S_QBLOCKS = S_QBLOCKS;

      return _brackets;
    }();

    /**
     * @module tmpl
     *
     * tmpl          - Root function, returns the template value, render with data
     * tmpl.hasExpr  - Test the existence of a expression inside a string
     * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)
     */

    var tmpl = function () {

      var _cache = {};

      function _tmpl(str, data) {
        if (!str) return str;

        return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr);
      }

      _tmpl.haveRaw = brackets.hasRaw;

      _tmpl.hasExpr = brackets.hasExpr;

      _tmpl.loopKeys = brackets.loopKeys;

      _tmpl.errorHandler = null;

      function _logErr(err, ctx) {

        if (_tmpl.errorHandler) {

          err.riotData = {
            tagName: ctx && ctx.root && ctx.root.tagName,
            _riot_id: ctx && ctx._riot_id //eslint-disable-line camelcase
          };
          _tmpl.errorHandler(err);
        }
      }

      function _create(str) {
        var expr = _getTmpl(str);

        if (expr.slice(0, 11) !== 'try{return ') expr = 'return ' + expr;

        /* eslint-disable */

        return new Function('E', expr + ';');
        /* eslint-enable */
      }

      var CH_IDEXPR = '\u2057',
          RE_CSNAME = /^(?:(-?[_A-Za-z\xA0-\xFF][-\w\xA0-\xFF]*)|\u2057(\d+)~):/,
          RE_QBLOCK = RegExp(brackets.S_QBLOCKS, 'g'),
          RE_DQUOTE = /\u2057/g,
          RE_QBMARK = /\u2057(\d+)~/g;

      function _getTmpl(str) {
        var qstr = [],
            expr,
            parts = brackets.split(str.replace(RE_DQUOTE, '"'), 1);

        if (parts.length > 2 || parts[0]) {
          var i,
              j,
              list = [];

          for (i = j = 0; i < parts.length; ++i) {

            expr = parts[i];

            if (expr && (expr = i & 1 ? _parseExpr(expr, 1, qstr) : '"' + expr.replace(/\\/g, '\\\\').replace(/\r\n?|\n/g, '\\n').replace(/"/g, '\\"') + '"')) list[j++] = expr;
          }

          expr = j < 2 ? list[0] : '[' + list.join(',') + '].join("")';
        } else {

          expr = _parseExpr(parts[1], 0, qstr);
        }

        if (qstr[0]) {
          expr = expr.replace(RE_QBMARK, function (_, pos) {
            return qstr[pos].replace(/\r/g, '\\r').replace(/\n/g, '\\n');
          });
        }
        return expr;
      }

      var RE_BREND = {
        '(': /[()]/g,
        '[': /[[\]]/g,
        '{': /[{}]/g
      };

      function _parseExpr(expr, asText, qstr) {

        expr = expr.replace(RE_QBLOCK, function (s, div) {
          return s.length > 2 && !div ? CH_IDEXPR + (qstr.push(s) - 1) + '~' : s;
        }).replace(/\s+/g, ' ').trim().replace(/\ ?([[\({},?\.:])\ ?/g, '$1');

        if (expr) {
          var list = [],
              cnt = 0,
              match;

          while (expr && (match = expr.match(RE_CSNAME)) && !match.index) {
            var key,
                jsb,
                re = /,|([[{(])|$/g;

            expr = RegExp.rightContext;
            key = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\s+/g, ' ') : match[1];

            while (jsb = (match = re.exec(expr))[1]) skipBraces(jsb, re);

            jsb = expr.slice(0, match.index);
            expr = RegExp.rightContext;

            list[cnt++] = _wrapExpr(jsb, 1, key);
          }

          expr = !cnt ? _wrapExpr(expr, asText) : cnt > 1 ? '[' + list.join(',') + '].join(" ").trim()' : list[0];
        }
        return expr;

        function skipBraces(ch, re) {
          var mm,
              lv = 1,
              ir = RE_BREND[ch];

          ir.lastIndex = re.lastIndex;
          while (mm = ir.exec(expr)) {
            if (mm[0] === ch) ++lv;else if (! --lv) break;
          }
          re.lastIndex = lv ? expr.length : ir.lastIndex;
        }
      }

      // istanbul ignore next: not both
      var // eslint-disable-next-line max-len
      JS_CONTEXT = '"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',
          JS_VARNAME = /[,{][$\w]+:|(^ *|[^$\w\.])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\w]))([$_A-Za-z][$\w]*)/g,
          JS_NOPROPS = /^(?=(\.[$\w]+))\1(?:[^.[(]|$)/;

      function _wrapExpr(expr, asText, key) {
        var tb;

        expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {
          if (mvar) {
            pos = tb ? 0 : pos + match.length;

            if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {
              match = p + '("' + mvar + JS_CONTEXT + mvar;
              if (pos) tb = (s = s[pos]) === '.' || s === '(' || s === '[';
            } else if (pos) {
              tb = !JS_NOPROPS.test(s.slice(pos));
            }
          }
          return match;
        });

        if (tb) {
          expr = 'try{return ' + expr + '}catch(e){E(e,this)}';
        }

        if (key) {

          expr = (tb ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')') + '?"' + key + '":""';
        } else if (asText) {

          expr = 'function(v){' + (tb ? expr.replace('return ', 'v=') : 'v=(' + expr + ')') + ';return v||v===0?v:""}.call(this)';
        }

        return expr;
      }

      // istanbul ignore next: compatibility fix for beta versions
      _tmpl.parse = function (s) {
        return s;
      };

      _tmpl.version = brackets.version = 'v2.4.0';

      return _tmpl;
    }();

    /*
      lib/browser/tag/mkdom.js
    
      Includes hacks needed for the Internet Explorer version 9 and below
      See: http://kangax.github.io/compat-table/es5/#ie8
           http://codeplanet.io/dropping-ie8/
    */
    var mkdom = function _mkdom() {
      var reHasYield = /<yield\b/i,
          reYieldAll = /<yield\s*(?:\/>|>([\S\s]*?)<\/yield\s*>|>)/ig,
          reYieldSrc = /<yield\s+to=['"]([^'">]*)['"]\s*>([\S\s]*?)<\/yield\s*>/ig,
          reYieldDest = /<yield\s+from=['"]?([-\w]+)['"]?\s*(?:\/>|>([\S\s]*?)<\/yield\s*>)/ig;
      var rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' },
          tblTags = IE_VERSION && IE_VERSION < 10 ? SPECIAL_TAGS_REGEX : /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;

      /**
       * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be
       * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.
       *
       * @param   {string} templ  - The template coming from the custom tag definition
       * @param   {string} [html] - HTML content that comes from the DOM element where you
       *           will mount the tag, mostly the original tag in the page
       * @returns {HTMLElement} DOM element with _templ_ merged through `YIELD` with the _html_.
       */
      function _mkdom(templ, html) {
        var match = templ && templ.match(/^\s*<([-\w]+)/),
            tagName = match && match[1].toLowerCase(),
            el = mkEl('div', isSVGTag(tagName));

        // replace all the yield tags with the tag inner html
        templ = replaceYield(templ, html);

        /* istanbul ignore next */
        if (tblTags.test(tagName)) el = specialTags(el, templ, tagName);else setInnerHTML(el, templ);

        el.stub = true;

        return el;
      }

      /*
        Creates the root element for table or select child elements:
        tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup
      */
      function specialTags(el, templ, tagName) {
        var select = tagName[0] === 'o',
            parent = select ? 'select>' : 'table>';

        // trim() is important here, this ensures we don't have artifacts,
        // so we can check if we have only one element inside the parent
        el.innerHTML = '<' + parent + templ.trim() + '</' + parent;
        parent = el.firstChild;

        // returns the immediate parent if tr/th/td/col is the only element, if not
        // returns the whole tree, as this can include additional elements
        if (select) {
          parent.selectedIndex = -1; // for IE9, compatible w/current riot behavior
        } else {
          // avoids insertion of cointainer inside container (ex: tbody inside tbody)
          var tname = rootEls[tagName];
          if (tname && parent.childElementCount === 1) parent = $(tname, parent);
        }
        return parent;
      }

      /*
        Replace the yield tag from any tag template with the innerHTML of the
        original tag in the page
      */
      function replaceYield(templ, html) {
        // do nothing if no yield
        if (!reHasYield.test(templ)) return templ;

        // be careful with #1343 - string on the source having `$1`
        var src = {};

        html = html && html.replace(reYieldSrc, function (_, ref, text) {
          src[ref] = src[ref] || text; // preserve first definition
          return '';
        }).trim();

        return templ.replace(reYieldDest, function (_, ref, def) {
          // yield with from - to attrs
          return src[ref] || def || '';
        }).replace(reYieldAll, function (_, def) {
          // yield without any "from"
          return html || def || '';
        });
      }

      return _mkdom;
    }();

    /**
     * Convert the item looped into an object used to extend the child tag properties
     * @param   { Object } expr - object containing the keys used to extend the children tags
     * @param   { * } key - value to assign to the new object returned
     * @param   { * } val - value containing the position of the item in the array
     * @returns { Object } - new object containing the values of the original item
     *
     * The variables 'key' and 'val' are arbitrary.
     * They depend on the collection type looped (Array, Object)
     * and on the expression used on the each tag
     *
     */
    function mkitem(expr, key, val) {
      var item = {};
      item[expr.key] = key;
      if (expr.pos) item[expr.pos] = val;
      return item;
    }

    /**
     * Unmount the redundant tags
     * @param   { Array } items - array containing the current items to loop
     * @param   { Array } tags - array containing all the children tags
     */
    function unmountRedundant(items, tags) {

      var i = tags.length,
          j = items.length,
          t;

      while (i > j) {
        t = tags[--i];
        tags.splice(i, 1);
        t.unmount();
      }
    }

    /**
     * Move the nested custom tags in non custom loop tags
     * @param   { Object } child - non custom loop tag
     * @param   { Number } i - current position of the loop tag
     */
    function moveNestedTags(child, i) {
      Object.keys(child.tags).forEach(function (tagName) {
        var tag = child.tags[tagName];
        if (isArray(tag)) each(tag, function (t) {
          moveChildTag(t, tagName, i);
        });else moveChildTag(tag, tagName, i);
      });
    }

    /**
     * Adds the elements for a virtual tag
     * @param { Tag } tag - the tag whose root's children will be inserted or appended
     * @param { Node } src - the node that will do the inserting or appending
     * @param { Tag } target - only if inserting, insert before this tag's first child
     */
    function addVirtual(tag, src, target) {
      var el = tag._root,
          sib;
      tag._virts = [];
      while (el) {
        sib = el.nextSibling;
        if (target) src.insertBefore(el, target._root);else src.appendChild(el);

        tag._virts.push(el); // hold for unmounting
        el = sib;
      }
    }

    /**
     * Move virtual tag and all child nodes
     * @param { Tag } tag - first child reference used to start move
     * @param { Node } src  - the node that will do the inserting
     * @param { Tag } target - insert before this tag's first child
     * @param { Number } len - how many child nodes to move
     */
    function moveVirtual(tag, src, target, len) {
      var el = tag._root,
          sib,
          i = 0;
      for (; i < len; i++) {
        sib = el.nextSibling;
        src.insertBefore(el, target._root);
        el = sib;
      }
    }

    /**
     * Manage tags having the 'each'
     * @param   { Object } dom - DOM node we need to loop
     * @param   { Tag } parent - parent tag instance where the dom node is contained
     * @param   { String } expr - string contained in the 'each' attribute
     */
    function _each(dom, parent, expr) {

      // remove the each property from the original tag
      remAttr(dom, 'each');

      var mustReorder = typeof getAttr(dom, 'no-reorder') !== T_STRING || remAttr(dom, 'no-reorder'),
          tagName = getTagName(dom),
          impl = __tagImpl[tagName] || { tmpl: getOuterHTML(dom) },
          useRoot = SPECIAL_TAGS_REGEX.test(tagName),
          root = dom.parentNode,
          ref = document.createTextNode(''),
          child = getTag(dom),
          isOption = tagName.toLowerCase() === 'option',
          // the option tags must be treated differently
      tags = [],
          oldItems = [],
          hasKeys,
          isVirtual = dom.tagName == 'VIRTUAL';

      // parse the each expression
      expr = tmpl.loopKeys(expr);

      // insert a marked where the loop tags will be injected
      root.insertBefore(ref, dom);

      // clean template code
      parent.one('before-mount', function () {

        // remove the original DOM node
        dom.parentNode.removeChild(dom);
        if (root.stub) root = parent.root;
      }).on('update', function () {
        // get the new items collection
        var items = tmpl(expr.val, parent),

        // create a fragment to hold the new DOM nodes to inject in the parent tag
        frag = document.createDocumentFragment();

        // object loop. any changes cause full redraw
        if (!isArray(items)) {
          hasKeys = items || false;
          items = hasKeys ? Object.keys(items).map(function (key) {
            return mkitem(expr, key, items[key]);
          }) : [];
        }

        // loop all the new items
        var i = 0,
            itemsLength = items.length;

        for (; i < itemsLength; i++) {
          // reorder only if the items are objects
          var item = items[i],
              _mustReorder = mustReorder && typeof item == T_OBJECT && !hasKeys,
              oldPos = oldItems.indexOf(item),
              pos = ~oldPos && _mustReorder ? oldPos : i,

          // does a tag exist in this position?
          tag = tags[pos];

          item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;

          // new tag
          if (!_mustReorder && !tag // with no-reorder we just update the old tags
          || _mustReorder && !~oldPos || !tag // by default we always try to reorder the DOM elements
          ) {

              tag = new Tag(impl, {
                parent: parent,
                isLoop: true,
                hasImpl: !!__tagImpl[tagName],
                root: useRoot ? root : dom.cloneNode(),
                item: item
              }, dom.innerHTML);

              tag.mount();

              if (isVirtual) tag._root = tag.root.firstChild; // save reference for further moves or inserts
              // this tag must be appended
              if (i == tags.length || !tags[i]) {
                // fix 1581
                if (isVirtual) addVirtual(tag, frag);else frag.appendChild(tag.root);
              }
              // this tag must be insert
              else {
                  if (isVirtual) addVirtual(tag, root, tags[i]);else root.insertBefore(tag.root, tags[i].root); // #1374 some browsers reset selected here
                  oldItems.splice(i, 0, item);
                }

              tags.splice(i, 0, tag);
              pos = i; // handled here so no move
            } else tag.update(item, true);

          // reorder the tag if it's not located in its previous position
          if (pos !== i && _mustReorder && tags[i] // fix 1581 unable to reproduce it in a test!
          ) {
              // update the DOM
              if (isVirtual) moveVirtual(tag, root, tags[i], dom.childNodes.length);else root.insertBefore(tag.root, tags[i].root);
              // update the position attribute if it exists
              if (expr.pos) tag[expr.pos] = i;
              // move the old tag instance
              tags.splice(i, 0, tags.splice(pos, 1)[0]);
              // move the old item
              oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);
              // if the loop tags are not custom
              // we need to move all their custom tags into the right position
              if (!child && tag.tags) moveNestedTags(tag, i);
            }

          // cache the original item to use it in the events bound to this node
          // and its children
          tag._item = item;
          // cache the real parent tag internally
          defineProperty(tag, '_parent', parent);
        }

        // remove the redundant tags
        unmountRedundant(items, tags);

        // insert the new nodes
        root.insertBefore(frag, ref);
        if (isOption) {

          // #1374 FireFox bug in <option selected={expression}>
          if (FIREFOX && !root.multiple) {
            for (var n = 0; n < root.length; n++) {
              if (root[n].__riot1374) {
                root.selectedIndex = n; // clear other options
                delete root[n].__riot1374;
                break;
              }
            }
          }
        }

        // set the 'tags' property of the parent tag
        // if child is 'undefined' it means that we don't need to set this property
        // for example:
        // we don't need store the `myTag.tags['div']` property if we are looping a div tag
        // but we need to track the `myTag.tags['child']` property looping a custom child node named `child`
        if (child) parent.tags[tagName] = tags;

        // clone the items array
        oldItems = items.slice();
      });
    }
    /**
     * Object that will be used to inject and manage the css of every tag instance
     */
    var styleManager = function (_riot) {

      if (!window) return { // skip injection on the server
        add: function () {},
        inject: function () {}
      };

      var styleNode = function () {
        // create a new style element with the correct type
        var newNode = mkEl('style');
        setAttr(newNode, 'type', 'text/css');

        // replace any user node or insert the new one into the head
        var userNode = $('style[type=riot]');
        if (userNode) {
          if (userNode.id) newNode.id = userNode.id;
          userNode.parentNode.replaceChild(newNode, userNode);
        } else document.getElementsByTagName('head')[0].appendChild(newNode);

        return newNode;
      }();

      // Create cache and shortcut to the correct property
      var cssTextProp = styleNode.styleSheet,
          stylesToInject = '';

      // Expose the style node in a non-modificable property
      Object.defineProperty(_riot, 'styleNode', {
        value: styleNode,
        writable: true
      });

      /**
       * Public api
       */
      return {
        /**
         * Save a tag style to be later injected into DOM
         * @param   { String } css [description]
         */
        add: function (css) {
          stylesToInject += css;
        },
        /**
         * Inject all previously saved tag styles into DOM
         * innerHTML seems slow: http://jsperf.com/riot-insert-style
         */
        inject: function () {
          if (stylesToInject) {
            if (cssTextProp) cssTextProp.cssText += stylesToInject;else styleNode.innerHTML += stylesToInject;
            stylesToInject = '';
          }
        }
      };
    }(riot);

    function parseNamedElements(root, tag, childTags, forceParsingNamed) {

      walk(root, function (dom) {
        if (dom.nodeType == 1) {
          dom.isLoop = dom.isLoop || dom.parentNode && dom.parentNode.isLoop || getAttr(dom, 'each') ? 1 : 0;

          // custom child tag
          if (childTags) {
            var child = getTag(dom);

            if (child && !dom.isLoop) childTags.push(initChildTag(child, { root: dom, parent: tag }, dom.innerHTML, tag));
          }

          if (!dom.isLoop || forceParsingNamed) setNamed(dom, tag, []);
        }
      });
    }

    function parseExpressions(root, tag, expressions) {

      function addExpr(dom, val, extra) {
        if (tmpl.hasExpr(val)) {
          expressions.push(extend({ dom: dom, expr: val }, extra));
        }
      }

      walk(root, function (dom) {
        var type = dom.nodeType,
            attr;

        // text node
        if (type == 3 && dom.parentNode.tagName != 'STYLE') addExpr(dom, dom.nodeValue);
        if (type != 1) return;

        /* element */

        // loop
        attr = getAttr(dom, 'each');

        if (attr) {
          _each(dom, tag, attr);return false;
        }

        // attribute expressions
        each(dom.attributes, function (attr) {
          var name = attr.name,
              bool = name.split('__')[1];

          addExpr(dom, attr.value, { attr: bool || name, bool: bool });
          if (bool) {
            remAttr(dom, name);return false;
          }
        });

        // skip custom tags
        if (getTag(dom)) return false;
      });
    }
    function Tag(impl, conf, innerHTML) {

      var self = riot.observable(this),
          opts = inherit(conf.opts) || {},
          parent = conf.parent,
          isLoop = conf.isLoop,
          hasImpl = conf.hasImpl,
          item = cleanUpData(conf.item),
          expressions = [],
          childTags = [],
          root = conf.root,
          tagName = root.tagName.toLowerCase(),
          attr = {},
          propsInSyncWithParent = [],
          dom;

      // only call unmount if we have a valid __tagImpl (has name property)
      if (impl.name && root._tag) root._tag.unmount(true);

      // not yet mounted
      this.isMounted = false;
      root.isLoop = isLoop;

      // keep a reference to the tag just created
      // so we will be able to mount this tag multiple times
      root._tag = this;

      // create a unique id to this tag
      // it could be handy to use it also to improve the virtual dom rendering speed
      defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id

      extend(this, { parent: parent, root: root, opts: opts }, item);
      // protect the "tags" property from being overridden
      defineProperty(this, 'tags', {});

      // grab attributes
      each(root.attributes, function (el) {
        var val = el.value;
        // remember attributes with expressions only
        if (tmpl.hasExpr(val)) attr[el.name] = val;
      });

      dom = mkdom(impl.tmpl, innerHTML);

      // options
      function updateOpts() {
        var ctx = hasImpl && isLoop ? self : parent || self;

        // update opts from current DOM attributes
        each(root.attributes, function (el) {
          var val = el.value;
          opts[toCamel(el.name)] = tmpl.hasExpr(val) ? tmpl(val, ctx) : val;
        });
        // recover those with expressions
        each(Object.keys(attr), function (name) {
          opts[toCamel(name)] = tmpl(attr[name], ctx);
        });
      }

      function normalizeData(data) {
        for (var key in item) {
          if (typeof self[key] !== T_UNDEF && isWritable(self, key)) self[key] = data[key];
        }
      }

      function inheritFromParent() {
        if (!self.parent || !isLoop) return;
        each(Object.keys(self.parent), function (k) {
          // some properties must be always in sync with the parent tag
          var mustSync = !RESERVED_WORDS_BLACKLIST.test(k) && contains(propsInSyncWithParent, k);
          if (typeof self[k] === T_UNDEF || mustSync) {
            // track the property to keep in sync
            // so we can keep it updated
            if (!mustSync) propsInSyncWithParent.push(k);
            self[k] = self.parent[k];
          }
        });
      }

      /**
       * Update the tag expressions and options
       * @param   { * }  data - data we want to use to extend the tag properties
       * @param   { Boolean } isInherited - is this update coming from a parent tag?
       * @returns { self }
       */
      defineProperty(this, 'update', function (data, isInherited) {

        // make sure the data passed will not override
        // the component core methods
        data = cleanUpData(data);
        // inherit properties from the parent
        inheritFromParent();
        // normalize the tag properties in case an item object was initially passed
        if (data && isObject(item)) {
          normalizeData(data);
          item = data;
        }
        extend(self, data);
        updateOpts();
        self.trigger('update', data);
        update(expressions, self);

        // the updated event will be triggered
        // once the DOM will be ready and all the re-flows are completed
        // this is useful if you want to get the "real" root properties
        // 4 ex: root.offsetWidth ...
        if (isInherited && self.parent)
          // closes #1599
          self.parent.one('updated', function () {
            self.trigger('updated');
          });else rAF(function () {
          self.trigger('updated');
        });

        return this;
      });

      defineProperty(this, 'mixin', function () {
        each(arguments, function (mix) {
          var instance,
              props = [],
              obj;

          mix = typeof mix === T_STRING ? riot.mixin(mix) : mix;

          // check if the mixin is a function
          if (isFunction(mix)) {
            // create the new mixin instance
            instance = new mix();
          } else instance = mix;

          // build multilevel prototype inheritance chain property list
          do props = props.concat(Object.getOwnPropertyNames(obj || instance)); while (obj = Object.getPrototypeOf(obj || instance));

          // loop the keys in the function prototype or the all object keys
          each(props, function (key) {
            // bind methods to self
            if (key != 'init' && !self[key])
              // apply method only if it does not already exist on the instance
              self[key] = isFunction(instance[key]) ? instance[key].bind(self) : instance[key];
          });

          // init method will be called automatically
          if (instance.init) instance.init.bind(self)();
        });
        return this;
      });

      defineProperty(this, 'mount', function () {

        updateOpts();

        // add global mixins
        var globalMixin = riot.mixin(GLOBAL_MIXIN);
        if (globalMixin) for (var i in globalMixin) if (globalMixin.hasOwnProperty(i)) self.mixin(globalMixin[i]);

        // initialiation
        if (impl.fn) impl.fn.call(self, opts);

        // parse layout after init. fn may calculate args for nested custom tags
        parseExpressions(dom, self, expressions);

        // mount the child tags
        toggle(true);

        // update the root adding custom attributes coming from the compiler
        // it fixes also #1087
        if (impl.attrs) walkAttributes(impl.attrs, function (k, v) {
          setAttr(root, k, v);
        });
        if (impl.attrs || hasImpl) parseExpressions(self.root, self, expressions);

        if (!self.parent || isLoop) self.update(item);

        // internal use only, fixes #403
        self.trigger('before-mount');

        if (isLoop && !hasImpl) {
          // update the root attribute for the looped elements
          root = dom.firstChild;
        } else {
          while (dom.firstChild) root.appendChild(dom.firstChild);
          if (root.stub) root = parent.root;
        }

        defineProperty(self, 'root', root);

        // parse the named dom nodes in the looped child
        // adding them to the parent as well
        if (isLoop) parseNamedElements(self.root, self.parent, null, true);

        // if it's not a child tag we can trigger its mount event
        if (!self.parent || self.parent.isMounted) {
          self.isMounted = true;
          self.trigger('mount');
        }
        // otherwise we need to wait that the parent event gets triggered
        else self.parent.one('mount', function () {
            // avoid to trigger the `mount` event for the tags
            // not visible included in an if statement
            if (!isInStub(self.root)) {
              self.parent.isMounted = self.isMounted = true;
              self.trigger('mount');
            }
          });
      });

      defineProperty(this, 'unmount', function (keepRootTag) {
        var el = root,
            p = el.parentNode,
            ptag,
            tagIndex = __virtualDom.indexOf(self);

        self.trigger('before-unmount');

        // remove this tag instance from the global virtualDom variable
        if (~tagIndex) __virtualDom.splice(tagIndex, 1);

        if (p) {

          if (parent) {
            ptag = getImmediateCustomParentTag(parent);
            // remove this tag from the parent tags object
            // if there are multiple nested tags with same name..
            // remove this element form the array
            if (isArray(ptag.tags[tagName])) each(ptag.tags[tagName], function (tag, i) {
              if (tag._riot_id == self._riot_id) ptag.tags[tagName].splice(i, 1);
            });else
              // otherwise just delete the tag instance
              ptag.tags[tagName] = undefined;
          } else while (el.firstChild) el.removeChild(el.firstChild);

          if (!keepRootTag) p.removeChild(el);else {
            // the riot-tag and the data-is attributes aren't needed anymore, remove them
            remAttr(p, RIOT_TAG_IS);
            remAttr(p, RIOT_TAG); // this will be removed in riot 3.0.0
          }
        }

        if (this._virts) {
          each(this._virts, function (v) {
            if (v.parentNode) v.parentNode.removeChild(v);
          });
        }

        self.trigger('unmount');
        toggle();
        self.off('*');
        self.isMounted = false;
        delete root._tag;
      });

      // proxy function to bind updates
      // dispatched from a parent tag
      function onChildUpdate(data) {
        self.update(data, true);
      }

      function toggle(isMount) {

        // mount/unmount children
        each(childTags, function (child) {
          child[isMount ? 'mount' : 'unmount']();
        });

        // listen/unlisten parent (events flow one way from parent to children)
        if (!parent) return;
        var evt = isMount ? 'on' : 'off';

        // the loop tags will be always in sync with the parent automatically
        if (isLoop) parent[evt]('unmount', self.unmount);else {
          parent[evt]('update', onChildUpdate)[evt]('unmount', self.unmount);
        }
      }

      // named elements available for fn
      parseNamedElements(dom, this, childTags);
    }
    /**
     * Attach an event to a DOM node
     * @param { String } name - event name
     * @param { Function } handler - event callback
     * @param { Object } dom - dom node
     * @param { Tag } tag - tag instance
     */
    function setEventHandler(name, handler, dom, tag) {

      dom[name] = function (e) {

        var ptag = tag._parent,
            item = tag._item,
            el;

        if (!item) while (ptag && !item) {
          item = ptag._item;
          ptag = ptag._parent;
        }

        // cross browser event fix
        e = e || window.event;

        // override the event properties
        if (isWritable(e, 'currentTarget')) e.currentTarget = dom;
        if (isWritable(e, 'target')) e.target = e.srcElement;
        if (isWritable(e, 'which')) e.which = e.charCode || e.keyCode;

        e.item = item;

        // prevent default behaviour (by default)
        if (handler.call(tag, e) !== true && !/radio|check/.test(dom.type)) {
          if (e.preventDefault) e.preventDefault();
          e.returnValue = false;
        }

        if (!e.preventUpdate) {
          el = item ? getImmediateCustomParentTag(ptag) : tag;
          el.update();
        }
      };
    }

    /**
     * Insert a DOM node replacing another one (used by if- attribute)
     * @param   { Object } root - parent node
     * @param   { Object } node - node replaced
     * @param   { Object } before - node added
     */
    function insertTo(root, node, before) {
      if (!root) return;
      root.insertBefore(before, node);
      root.removeChild(node);
    }

    /**
     * Update the expressions in a Tag instance
     * @param   { Array } expressions - expression that must be re evaluated
     * @param   { Tag } tag - tag instance
     */
    function update(expressions, tag) {

      each(expressions, function (expr, i) {

        var dom = expr.dom,
            attrName = expr.attr,
            value = tmpl(expr.expr, tag),
            parent = expr.dom.parentNode;

        if (expr.bool) {
          value = !!value;
        } else if (value == null) {
          value = '';
        }

        // #1638: regression of #1612, update the dom only if the value of the
        // expression was changed
        if (expr.value === value) {
          return;
        }
        expr.value = value;

        // textarea and text nodes has no attribute name
        if (!attrName) {
          // about #815 w/o replace: the browser converts the value to a string,
          // the comparison by "==" does too, but not in the server
          value += '';
          // test for parent avoids error with invalid assignment to nodeValue
          if (parent) {
            if (parent.tagName === 'TEXTAREA') {
              parent.value = value; // #1113
              if (!IE_VERSION) dom.nodeValue = value; // #1625 IE throws here, nodeValue
            } // will be available on 'updated'
            else dom.nodeValue = value;
          }
          return;
        }

        // ~~#1612: look for changes in dom.value when updating the value~~
        if (attrName === 'value') {
          dom.value = value;
          return;
        }

        // remove original attribute
        remAttr(dom, attrName);

        // event handler
        if (isFunction(value)) {
          setEventHandler(attrName, value, dom, tag);

          // if- conditional
        } else if (attrName == 'if') {
          var stub = expr.stub,
              add = function () {
            insertTo(stub.parentNode, stub, dom);
          },
              remove = function () {
            insertTo(dom.parentNode, dom, stub);
          };

          // add to DOM
          if (value) {
            if (stub) {
              add();
              dom.inStub = false;
              // avoid to trigger the mount event if the tags is not visible yet
              // maybe we can optimize this avoiding to mount the tag at all
              if (!isInStub(dom)) {
                walk(dom, function (el) {
                  if (el._tag && !el._tag.isMounted) el._tag.isMounted = !!el._tag.trigger('mount');
                });
              }
            }
            // remove from DOM
          } else {
            stub = expr.stub = stub || document.createTextNode('');
            // if the parentNode is defined we can easily replace the tag
            if (dom.parentNode) remove();
            // otherwise we need to wait the updated event
            else (tag.parent || tag).one('updated', remove);

            dom.inStub = true;
          }
          // show / hide
        } else if (attrName === 'show') {
          dom.style.display = value ? '' : 'none';
        } else if (attrName === 'hide') {
          dom.style.display = value ? 'none' : '';
        } else if (expr.bool) {
          dom[attrName] = value;
          if (value) setAttr(dom, attrName, attrName);
          if (FIREFOX && attrName === 'selected' && dom.tagName === 'OPTION') {
            dom.__riot1374 = value; // #1374
          }
        } else if (value === 0 || value && typeof value !== T_OBJECT) {
          // <img src="{ expr }">
          if (startsWith(attrName, RIOT_PREFIX) && attrName != RIOT_TAG) {
            attrName = attrName.slice(RIOT_PREFIX.length);
          }
          setAttr(dom, attrName, value);
        }
      });
    }
    /**
     * Specialized function for looping an array-like collection with `each={}`
     * @param   { Array } els - collection of items
     * @param   {Function} fn - callback function
     * @returns { Array } the array looped
     */
    function each(els, fn) {
      var len = els ? els.length : 0;

      for (var i = 0, el; i < len; i++) {
        el = els[i];
        // return false -> current item was removed by fn during the loop
        if (el != null && fn(el, i) === false) i--;
      }
      return els;
    }

    /**
     * Detect if the argument passed is a function
     * @param   { * } v - whatever you want to pass to this function
     * @returns { Boolean } -
     */
    function isFunction(v) {
      return typeof v === T_FUNCTION || false; // avoid IE problems
    }

    /**
     * Get the outer html of any DOM node SVGs included
     * @param   { Object } el - DOM node to parse
     * @returns { String } el.outerHTML
     */
    function getOuterHTML(el) {
      if (el.outerHTML) return el.outerHTML;
      // some browsers do not support outerHTML on the SVGs tags
      else {
          var container = mkEl('div');
          container.appendChild(el.cloneNode(true));
          return container.innerHTML;
        }
    }

    /**
     * Set the inner html of any DOM node SVGs included
     * @param { Object } container - DOM node where we will inject the new html
     * @param { String } html - html to inject
     */
    function setInnerHTML(container, html) {
      if (typeof container.innerHTML != T_UNDEF) container.innerHTML = html;
      // some browsers do not support innerHTML on the SVGs tags
      else {
          var doc = new DOMParser().parseFromString(html, 'application/xml');
          container.appendChild(container.ownerDocument.importNode(doc.documentElement, true));
        }
    }

    /**
     * Checks wether a DOM node must be considered part of an svg document
     * @param   { String }  name - tag name
     * @returns { Boolean } -
     */
    function isSVGTag(name) {
      return ~SVG_TAGS_LIST.indexOf(name);
    }

    /**
     * Detect if the argument passed is an object, exclude null.
     * NOTE: Use isObject(x) && !isArray(x) to excludes arrays.
     * @param   { * } v - whatever you want to pass to this function
     * @returns { Boolean } -
     */
    function isObject(v) {
      return v && typeof v === T_OBJECT; // typeof null is 'object'
    }

    /**
     * Remove any DOM attribute from a node
     * @param   { Object } dom - DOM node we want to update
     * @param   { String } name - name of the property we want to remove
     */
    function remAttr(dom, name) {
      dom.removeAttribute(name);
    }

    /**
     * Convert a string containing dashes to camel case
     * @param   { String } string - input string
     * @returns { String } my-string -> myString
     */
    function toCamel(string) {
      return string.replace(/-(\w)/g, function (_, c) {
        return c.toUpperCase();
      });
    }

    /**
     * Get the value of any DOM attribute on a node
     * @param   { Object } dom - DOM node we want to parse
     * @param   { String } name - name of the attribute we want to get
     * @returns { String | undefined } name of the node attribute whether it exists
     */
    function getAttr(dom, name) {
      return dom.getAttribute(name);
    }

    /**
     * Set any DOM attribute
     * @param { Object } dom - DOM node we want to update
     * @param { String } name - name of the property we want to set
     * @param { String } val - value of the property we want to set
     */
    function setAttr(dom, name, val) {
      dom.setAttribute(name, val);
    }

    /**
     * Detect the tag implementation by a DOM node
     * @param   { Object } dom - DOM node we need to parse to get its tag implementation
     * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)
     */
    function getTag(dom) {
      return dom.tagName && __tagImpl[getAttr(dom, RIOT_TAG_IS) || getAttr(dom, RIOT_TAG) || dom.tagName.toLowerCase()];
    }
    /**
     * Add a child tag to its parent into the `tags` object
     * @param   { Object } tag - child tag instance
     * @param   { String } tagName - key where the new tag will be stored
     * @param   { Object } parent - tag instance where the new child tag will be included
     */
    function addChildTag(tag, tagName, parent) {
      var cachedTag = parent.tags[tagName];

      // if there are multiple children tags having the same name
      if (cachedTag) {
        // if the parent tags property is not yet an array
        // create it adding the first cached tag
        if (!isArray(cachedTag))
          // don't add the same tag twice
          if (cachedTag !== tag) parent.tags[tagName] = [cachedTag];
        // add the new nested tag to the array
        if (!contains(parent.tags[tagName], tag)) parent.tags[tagName].push(tag);
      } else {
        parent.tags[tagName] = tag;
      }
    }

    /**
     * Move the position of a custom tag in its parent tag
     * @param   { Object } tag - child tag instance
     * @param   { String } tagName - key where the tag was stored
     * @param   { Number } newPos - index where the new tag will be stored
     */
    function moveChildTag(tag, tagName, newPos) {
      var parent = tag.parent,
          tags;
      // no parent no move
      if (!parent) return;

      tags = parent.tags[tagName];

      if (isArray(tags)) tags.splice(newPos, 0, tags.splice(tags.indexOf(tag), 1)[0]);else addChildTag(tag, tagName, parent);
    }

    /**
     * Create a new child tag including it correctly into its parent
     * @param   { Object } child - child tag implementation
     * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted
     * @param   { String } innerHTML - inner html of the child node
     * @param   { Object } parent - instance of the parent tag including the child custom tag
     * @returns { Object } instance of the new child tag just created
     */
    function initChildTag(child, opts, innerHTML, parent) {
      var tag = new Tag(child, opts, innerHTML),
          tagName = getTagName(opts.root),
          ptag = getImmediateCustomParentTag(parent);
      // fix for the parent attribute in the looped elements
      tag.parent = ptag;
      // store the real parent tag
      // in some cases this could be different from the custom parent tag
      // for example in nested loops
      tag._parent = parent;

      // add this tag to the custom parent tag
      addChildTag(tag, tagName, ptag);
      // and also to the real parent tag
      if (ptag !== parent) addChildTag(tag, tagName, parent);
      // empty the child node once we got its template
      // to avoid that its children get compiled multiple times
      opts.root.innerHTML = '';

      return tag;
    }

    /**
     * Loop backward all the parents tree to detect the first custom parent tag
     * @param   { Object } tag - a Tag instance
     * @returns { Object } the instance of the first custom parent tag found
     */
    function getImmediateCustomParentTag(tag) {
      var ptag = tag;
      while (!getTag(ptag.root)) {
        if (!ptag.parent) break;
        ptag = ptag.parent;
      }
      return ptag;
    }

    /**
     * Helper function to set an immutable property
     * @param   { Object } el - object where the new property will be set
     * @param   { String } key - object key where the new property will be stored
     * @param   { * } value - value of the new property
    * @param   { Object } options - set the propery overriding the default options
     * @returns { Object } - the initial object
     */
    function defineProperty(el, key, value, options) {
      Object.defineProperty(el, key, extend({
        value: value,
        enumerable: false,
        writable: false,
        configurable: true
      }, options));
      return el;
    }

    /**
     * Get the tag name of any DOM node
     * @param   { Object } dom - DOM node we want to parse
     * @returns { String } name to identify this dom node in riot
     */
    function getTagName(dom) {
      var child = getTag(dom),
          namedTag = getAttr(dom, 'name'),
          tagName = namedTag && !tmpl.hasExpr(namedTag) ? namedTag : child ? child.name : dom.tagName.toLowerCase();

      return tagName;
    }

    /**
     * Extend any object with other properties
     * @param   { Object } src - source object
     * @returns { Object } the resulting extended object
     *
     * var obj = { foo: 'baz' }
     * extend(obj, {bar: 'bar', foo: 'bar'})
     * console.log(obj) => {bar: 'bar', foo: 'bar'}
     *
     */
    function extend(src) {
      var obj,
          args = arguments;
      for (var i = 1; i < args.length; ++i) {
        if (obj = args[i]) {
          for (var key in obj) {
            // check if this property of the source object could be overridden
            if (isWritable(src, key)) src[key] = obj[key];
          }
        }
      }
      return src;
    }

    /**
     * Check whether an array contains an item
     * @param   { Array } arr - target array
     * @param   { * } item - item to test
     * @returns { Boolean } Does 'arr' contain 'item'?
     */
    function contains(arr, item) {
      return ~arr.indexOf(item);
    }

    /**
     * Check whether an object is a kind of array
     * @param   { * } a - anything
     * @returns {Boolean} is 'a' an array?
     */
    function isArray(a) {
      return Array.isArray(a) || a instanceof Array;
    }

    /**
     * Detect whether a property of an object could be overridden
     * @param   { Object }  obj - source object
     * @param   { String }  key - object property
     * @returns { Boolean } is this property writable?
     */
    function isWritable(obj, key) {
      var props = Object.getOwnPropertyDescriptor(obj, key);
      return typeof obj[key] === T_UNDEF || props && props.writable;
    }

    /**
     * With this function we avoid that the internal Tag methods get overridden
     * @param   { Object } data - options we want to use to extend the tag instance
     * @returns { Object } clean object without containing the riot internal reserved words
     */
    function cleanUpData(data) {
      if (!(data instanceof Tag) && !(data && typeof data.trigger == T_FUNCTION)) return data;

      var o = {};
      for (var key in data) {
        if (!RESERVED_WORDS_BLACKLIST.test(key)) o[key] = data[key];
      }
      return o;
    }

    /**
     * Walk down recursively all the children tags starting dom node
     * @param   { Object }   dom - starting node where we will start the recursion
     * @param   { Function } fn - callback to transform the child node just found
     */
    function walk(dom, fn) {
      if (dom) {
        // stop the recursion
        if (fn(dom) === false) return;else {
          dom = dom.firstChild;

          while (dom) {
            walk(dom, fn);
            dom = dom.nextSibling;
          }
        }
      }
    }

    /**
     * Minimize risk: only zero or one _space_ between attr & value
     * @param   { String }   html - html string we want to parse
     * @param   { Function } fn - callback function to apply on any attribute found
     */
    function walkAttributes(html, fn) {
      var m,
          re = /([-\w]+) ?= ?(?:"([^"]*)|'([^']*)|({[^}]*}))/g;

      while (m = re.exec(html)) {
        fn(m[1].toLowerCase(), m[2] || m[3] || m[4]);
      }
    }

    /**
     * Check whether a DOM node is in stub mode, useful for the riot 'if' directive
     * @param   { Object }  dom - DOM node we want to parse
     * @returns { Boolean } -
     */
    function isInStub(dom) {
      while (dom) {
        if (dom.inStub) return true;
        dom = dom.parentNode;
      }
      return false;
    }

    /**
     * Create a generic DOM node
     * @param   { String } name - name of the DOM node we want to create
     * @param   { Boolean } isSvg - should we use a SVG as parent node?
     * @returns { Object } DOM node just created
     */
    function mkEl(name, isSvg) {
      return isSvg ? document.createElementNS('http://www.w3.org/2000/svg', 'svg') : document.createElement(name);
    }

    /**
     * Shorter and fast way to select multiple nodes in the DOM
     * @param   { String } selector - DOM selector
     * @param   { Object } ctx - DOM node where the targets of our search will is located
     * @returns { Object } dom nodes found
     */
    function $$(selector, ctx) {
      return (ctx || document).querySelectorAll(selector);
    }

    /**
     * Shorter and fast way to select a single node in the DOM
     * @param   { String } selector - unique dom selector
     * @param   { Object } ctx - DOM node where the target of our search will is located
     * @returns { Object } dom node found
     */
    function $(selector, ctx) {
      return (ctx || document).querySelector(selector);
    }

    /**
     * Simple object prototypal inheritance
     * @param   { Object } parent - parent object
     * @returns { Object } child instance
     */
    function inherit(parent) {
      function Child() {}
      Child.prototype = parent;
      return new Child();
    }

    /**
     * Get the name property needed to identify a DOM node in riot
     * @param   { Object } dom - DOM node we need to parse
     * @returns { String | undefined } give us back a string to identify this dom node
     */
    function getNamedKey(dom) {
      return getAttr(dom, 'id') || getAttr(dom, 'name');
    }

    /**
     * Set the named properties of a tag element
     * @param { Object } dom - DOM node we need to parse
     * @param { Object } parent - tag instance where the named dom element will be eventually added
     * @param { Array } keys - list of all the tag instance properties
     */
    function setNamed(dom, parent, keys) {
      // get the key value we want to add to the tag instance
      var key = getNamedKey(dom),
          isArr,

      // add the node detected to a tag instance using the named property
      add = function (value) {
        // avoid to override the tag properties already set
        if (contains(keys, key)) return;
        // check whether this value is an array
        isArr = isArray(value);
        // if the key was never set
        if (!value)
          // set it once on the tag instance
          parent[key] = dom;
          // if it was an array and not yet set
        else if (!isArr || isArr && !contains(value, dom)) {
            // add the dom node into the array
            if (isArr) value.push(dom);else parent[key] = [value, dom];
          }
      };

      // skip the elements with no named properties
      if (!key) return;

      // check whether this key has been already evaluated
      if (tmpl.hasExpr(key))
        // wait the first updated event only once
        parent.one('mount', function () {
          key = getNamedKey(dom);
          add(parent[key]);
        });else add(parent[key]);
    }

    /**
     * Faster String startsWith alternative
     * @param   { String } src - source string
     * @param   { String } str - test string
     * @returns { Boolean } -
     */
    function startsWith(src, str) {
      return src.slice(0, str.length) === str;
    }

    /**
     * requestAnimationFrame function
     * Adapted from https://gist.github.com/paulirish/1579671, license MIT
     */
    var rAF = function (w) {
      var raf = w.requestAnimationFrame || w.mozRequestAnimationFrame || w.webkitRequestAnimationFrame;

      if (!raf || /iP(ad|hone|od).*OS 6/.test(w.navigator.userAgent)) {
        // buggy iOS6
        var lastTime = 0;

        raf = function (cb) {
          var nowtime = Date.now(),
              timeout = Math.max(16 - (nowtime - lastTime), 0);
          setTimeout(function () {
            cb(lastTime = nowtime + timeout);
          }, timeout);
        };
      }
      return raf;
    }(window || {});

    /**
     * Mount a tag creating new Tag instance
     * @param   { Object } root - dom node where the tag will be mounted
     * @param   { String } tagName - name of the riot tag we want to mount
     * @param   { Object } opts - options to pass to the Tag instance
     * @returns { Tag } a new Tag instance
     */
    function mountTo(root, tagName, opts) {
      var tag = __tagImpl[tagName],

      // cache the inner HTML to fix #855
      innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;

      // clear the inner html
      root.innerHTML = '';

      if (tag && root) tag = new Tag(tag, { root: root, opts: opts }, innerHTML);

      if (tag && tag.mount) {
        tag.mount();
        // add this tag to the virtualDom variable
        if (!contains(__virtualDom, tag)) __virtualDom.push(tag);
      }

      return tag;
    }
    /**
     * Riot public api
     */

    // share methods for other riot parts, e.g. compiler
    riot.util = { brackets: brackets, tmpl: tmpl };

    /**
     * Create a mixin that could be globally shared across all the tags
     */
    riot.mixin = function () {
      var mixins = {},
          globals = mixins[GLOBAL_MIXIN] = {},
          _id = 0;

      /**
       * Create/Return a mixin by its name
       * @param   { String }  name - mixin name (global mixin if object)
       * @param   { Object }  mixin - mixin logic
       * @param   { Boolean } g - is global?
       * @returns { Object }  the mixin logic
       */
      return function (name, mixin, g) {
        // Unnamed global
        if (isObject(name)) {
          riot.mixin('__unnamed_' + _id++, name, true);
          return;
        }

        var store = g ? globals : mixins;

        // Getter
        if (!mixin) {
          if (typeof store[name] === T_UNDEF) {
            throw new Error('Unregistered mixin: ' + name);
          }
          return store[name];
        }
        // Setter
        if (isFunction(mixin)) {
          extend(mixin.prototype, store[name] || {});
          store[name] = mixin;
        } else {
          store[name] = extend(store[name] || {}, mixin);
        }
      };
    }();

    /**
     * Create a new riot tag implementation
     * @param   { String }   name - name/id of the new riot tag
     * @param   { String }   html - tag template
     * @param   { String }   css - custom tag css
     * @param   { String }   attrs - root tag attributes
     * @param   { Function } fn - user function
     * @returns { String } name/id of the tag just created
     */
    riot.tag = function (name, html, css, attrs, fn) {
      if (isFunction(attrs)) {
        fn = attrs;
        if (/^[\w\-]+\s?=/.test(css)) {
          attrs = css;
          css = '';
        } else attrs = '';
      }
      if (css) {
        if (isFunction(css)) fn = css;else styleManager.add(css);
      }
      name = name.toLowerCase();
      __tagImpl[name] = { name: name, tmpl: html, attrs: attrs, fn: fn };
      return name;
    };

    /**
     * Create a new riot tag implementation (for use by the compiler)
     * @param   { String }   name - name/id of the new riot tag
     * @param   { String }   html - tag template
     * @param   { String }   css - custom tag css
     * @param   { String }   attrs - root tag attributes
     * @param   { Function } fn - user function
     * @returns { String } name/id of the tag just created
     */
    riot.tag2 = function (name, html, css, attrs, fn) {
      if (css) styleManager.add(css);
      //if (bpair) riot.settings.brackets = bpair
      __tagImpl[name] = { name: name, tmpl: html, attrs: attrs, fn: fn };
      return name;
    };

    /**
     * Mount a tag using a specific tag implementation
     * @param   { String } selector - tag DOM selector
     * @param   { String } tagName - tag implementation name
     * @param   { Object } opts - tag logic
     * @returns { Array } new tags instances
     */
    riot.mount = function (selector, tagName, opts) {

      var els,
          allTags,
          tags = [];

      // helper functions

      function addRiotTags(arr) {
        var list = '';
        each(arr, function (e) {
          if (!/[^-\w]/.test(e)) {
            e = e.trim().toLowerCase();
            list += ',[' + RIOT_TAG_IS + '="' + e + '"],[' + RIOT_TAG + '="' + e + '"]';
          }
        });
        return list;
      }

      function selectAllTags() {
        var keys = Object.keys(__tagImpl);
        return keys + addRiotTags(keys);
      }

      function pushTags(root) {
        if (root.tagName) {
          var riotTag = getAttr(root, RIOT_TAG_IS) || getAttr(root, RIOT_TAG);

          // have tagName? force riot-tag to be the same
          if (tagName && riotTag !== tagName) {
            riotTag = tagName;
            setAttr(root, RIOT_TAG_IS, tagName);
            setAttr(root, RIOT_TAG, tagName); // this will be removed in riot 3.0.0
          }
          var tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);

          if (tag) tags.push(tag);
        } else if (root.length) {
          each(root, pushTags); // assume nodeList
        }
      }

      // ----- mount code -----

      // inject styles into DOM
      styleManager.inject();

      if (isObject(tagName)) {
        opts = tagName;
        tagName = 0;
      }

      // crawl the DOM to find the tag
      if (typeof selector === T_STRING) {
        if (selector === '*')
          // select all the tags registered
          // and also the tags found with the riot-tag attribute set
          selector = allTags = selectAllTags();else
          // or just the ones named like the selector
          selector += addRiotTags(selector.split(/, */));

        // make sure to pass always a selector
        // to the querySelectorAll function
        els = selector ? $$(selector) : [];
      } else
        // probably you have passed already a tag or a NodeList
        els = selector;

      // select all the registered and mount them inside their root elements
      if (tagName === '*') {
        // get all custom tags
        tagName = allTags || selectAllTags();
        // if the root els it's just a single tag
        if (els.tagName) els = $$(tagName, els);else {
          // select all the children for all the different root elements
          var nodeList = [];
          each(els, function (_el) {
            nodeList.push($$(tagName, _el));
          });
          els = nodeList;
        }
        // get rid of the tagName
        tagName = 0;
      }

      pushTags(els);

      return tags;
    };

    /**
     * Update all the tags instances created
     * @returns { Array } all the tags instances
     */
    riot.update = function () {
      return each(__virtualDom, function (tag) {
        tag.update();
      });
    };

    /**
     * Export the Virtual DOM
     */
    riot.vdom = __virtualDom;

    /**
     * Export the Tag constructor
     */
    riot.Tag = Tag;
    /* istanbul ignore next */

    // istanbul ignore next
    function safeRegex(re) {
      var src = re.source;
      var opt = re.global ? 'g' : '';

      if (re.ignoreCase) opt += 'i';
      if (re.multiline) opt += 'm';

      for (var i = 1; i < arguments.length; i++) {
        src = src.replace('@', '\\' + arguments[i]);
      }

      return new RegExp(src, opt);
    }

    /**
     * @module parsers
     */
    var parsers = function (win) {

      var _p = {};

      function _r(name) {
        var parser = win[name];

        if (parser) return parser;

        throw new Error('Parser "' + name + '" not loaded.');
      }

      function _req(name) {
        var parts = name.split('.');

        if (parts.length !== 2) throw new Error('Bad format for parsers._req');

        var parser = _p[parts[0]][parts[1]];
        if (parser) return parser;

        throw new Error('Parser "' + name + '" not found.');
      }

      function extend(obj, props) {
        if (props) {
          for (var prop in props) {
            /* istanbul ignore next */
            if (props.hasOwnProperty(prop)) {
              obj[prop] = props[prop];
            }
          }
        }
        return obj;
      }

      function renderPug(compilerName, html, opts, url) {
        opts = extend({
          pretty: true,
          filename: url,
          doctype: 'html'
        }, opts);
        return _r(compilerName).render(html, opts);
      }

      _p.html = {
        jade: function (html, opts, url) {
          /* eslint-disable */
          console.log('DEPRECATION WARNING: jade was renamed "pug" - The jade parser will be removed in riot@3.0.0!');
          /* eslint-enable */
          return renderPug('jade', html, opts, url);
        },
        pug: function (html, opts, url) {
          return renderPug('pug', html, opts, url);
        }
      };
      _p.css = {
        less: function (tag, css, opts, url) {
          var ret;

          opts = extend({
            sync: true,
            syncImport: true,
            filename: url
          }, opts);
          _r('less').render(css, opts, function (err, result) {
            // istanbul ignore next
            if (err) throw err;
            ret = result.css;
          });
          return ret;
        }
      };
      _p.js = {
        es6: function (js, opts) {
          opts = extend({
            blacklist: ['useStrict', 'strict', 'react'],
            sourceMaps: false,
            comments: false
          }, opts);
          return _r('babel').transform(js, opts).code;
        },
        babel: function (js, opts, url) {
          return _r('babel').transform(js, extend({ filename: url }, opts)).code;
        },
        coffee: function (js, opts) {
          return _r('CoffeeScript').compile(js, extend({ bare: true }, opts));
        },
        livescript: function (js, opts) {
          return _r('livescript').compile(js, extend({ bare: true, header: false }, opts));
        },
        typescript: function (js, opts) {
          return _r('typescript')(js, opts);
        },
        none: function (js) {
          return js;
        }
      };
      _p.js.javascript = _p.js.none;
      _p.js.coffeescript = _p.js.coffee;
      _p._req = _req;
      _p.utils = {
        extend: extend
      };

      return _p;
    }(window || global);

    riot.parsers = parsers;

    /**
     * Compiler for riot custom tags
     * @version v2.5.2
     */
    var compile = function () {

      var extend = parsers.utils.extend;
      /* eslint-enable */

      var S_LINESTR = /"[^"\n\\]*(?:\\[\S\s][^"\n\\]*)*"|'[^'\n\\]*(?:\\[\S\s][^'\n\\]*)*'/.source;

      var S_STRINGS = brackets.R_STRINGS.source;

      var HTML_ATTRS = / *([-\w:\xA0-\xFF]+) ?(?:= ?('[^']*'|"[^"]*"|\S+))?/g;

      var HTML_COMMS = RegExp(/<!--(?!>)[\S\s]*?-->/.source + '|' + S_LINESTR, 'g');

      var HTML_TAGS = /<(-?[A-Za-z][-\w\xA0-\xFF]*)(?:\s+([^"'\/>]*(?:(?:"[^"]*"|'[^']*'|\/[^>])[^'"\/>]*)*)|\s*)(\/?)>/g;

      var HTML_PACK = />[ \t]+<(-?[A-Za-z]|\/[-A-Za-z])/g;

      var BOOL_ATTRS = RegExp('^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|' + 'compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|' + 'multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|' + 'selected|sortable|truespeed|typemustmatch)$');

      var RIOT_ATTRS = ['style', 'src', 'd'];

      var VOID_TAGS = /^(?:input|img|br|wbr|hr|area|base|col|embed|keygen|link|meta|param|source|track)$/;

      var PRE_TAGS = /<pre(?:\s+(?:[^">]*|"[^"]*")*)?>([\S\s]+?)<\/pre\s*>/gi;

      var SPEC_TYPES = /^"(?:number|date(?:time)?|time|month|email|color)\b/i;

      var IMPORT_STATEMENT = /^(?: )*(?:import)(?:(?:.*))*$/gm;

      var TRIM_TRAIL = /[ \t]+$/gm;

      var RE_HASEXPR = safeRegex(/@#\d/, 'x01'),
          RE_REPEXPR = safeRegex(/@#(\d+)/g, 'x01'),
          CH_IDEXPR = '\x01#',
          CH_DQCODE = '\u2057',
          DQ = '"',
          SQ = "'";

      function cleanSource(src) {
        var mm,
            re = HTML_COMMS;

        if (~src.indexOf('\r')) {
          src = src.replace(/\r\n?/g, '\n');
        }

        re.lastIndex = 0;
        while (mm = re.exec(src)) {
          if (mm[0][0] === '<') {
            src = RegExp.leftContext + RegExp.rightContext;
            re.lastIndex = mm[3] + 1;
          }
        }
        return src;
      }

      function parseAttribs(str, pcex) {
        var list = [],
            match,
            type,
            vexp;

        HTML_ATTRS.lastIndex = 0;

        str = str.replace(/\s+/g, ' ');

        while (match = HTML_ATTRS.exec(str)) {
          var k = match[1].toLowerCase(),
              v = match[2];

          if (!v) {
            list.push(k);
          } else {

            if (v[0] !== DQ) {
              v = DQ + (v[0] === SQ ? v.slice(1, -1) : v) + DQ;
            }

            if (k === 'type' && SPEC_TYPES.test(v)) {
              type = v;
            } else {
              if (RE_HASEXPR.test(v)) {

                if (k === 'value') vexp = 1;else if (BOOL_ATTRS.test(k)) k = '__' + k;else if (~RIOT_ATTRS.indexOf(k)) k = 'riot-' + k;
              }

              list.push(k + '=' + v);
            }
          }
        }

        if (type) {
          if (vexp) type = DQ + pcex._bp[0] + SQ + type.slice(1, -1) + SQ + pcex._bp[1] + DQ;
          list.push('type=' + type);
        }
        return list.join(' ');
      }

      function splitHtml(html, opts, pcex) {
        var _bp = pcex._bp;

        if (html && _bp[4].test(html)) {
          var jsfn = opts.expr && (opts.parser || opts.type) ? _compileJS : 0,
              list = brackets.split(html, 0, _bp),
              expr;

          for (var i = 1; i < list.length; i += 2) {
            expr = list[i];
            if (expr[0] === '^') {
              expr = expr.slice(1);
            } else if (jsfn) {
              expr = jsfn(expr, opts).trim();
              if (expr.slice(-1) === ';') expr = expr.slice(0, -1);
            }
            list[i] = CH_IDEXPR + (pcex.push(expr) - 1) + _bp[1];
          }
          html = list.join('');
        }
        return html;
      }

      function restoreExpr(html, pcex) {
        if (pcex.length) {
          html = html.replace(RE_REPEXPR, function (_, d) {

            return pcex._bp[0] + pcex[d].trim().replace(/[\r\n]+/g, ' ').replace(/"/g, CH_DQCODE);
          });
        }
        return html;
      }

      function compileImports(js) {
        var imp = [];
        var imports = '';
        while (imp = IMPORT_STATEMENT.exec(js)) {
          imports += imp[0].trim() + '\n';
        }
        return imports;
      }

      function rmImports(js) {
        var jsCode = js.replace(IMPORT_STATEMENT, '');
        return jsCode;
      }

      function _compileHTML(html, opts, pcex) {

        html = splitHtml(html, opts, pcex).replace(HTML_TAGS, function (_, name, attr, ends) {

          name = name.toLowerCase();

          ends = ends && !VOID_TAGS.test(name) ? '></' + name : '';

          if (attr) name += ' ' + parseAttribs(attr, pcex);

          return '<' + name + ends + '>';
        });

        if (!opts.whitespace) {
          var p = [];

          if (/<pre[\s>]/.test(html)) {
            html = html.replace(PRE_TAGS, function (q) {
              p.push(q);
              return '\u0002';
            });
          }

          html = html.trim().replace(/\s+/g, ' ');

          if (p.length) html = html.replace(/\u0002/g, function () {
            return p.shift();
          });
        }

        if (opts.compact) html = html.replace(HTML_PACK, '><$1');

        return restoreExpr(html, pcex).replace(TRIM_TRAIL, '');
      }

      function compileHTML(html, opts, pcex) {

        if (Array.isArray(opts)) {
          pcex = opts;
          opts = {};
        } else {
          if (!pcex) pcex = [];
          if (!opts) opts = {};
        }

        pcex._bp = brackets.array(opts.brackets);

        return _compileHTML(cleanSource(html), opts, pcex);
      }

      var JS_ES6SIGN = /^[ \t]*([$_A-Za-z][$\w]*)\s*\([^()]*\)\s*{/m;

      var JS_ES6END = RegExp('[{}]|' + brackets.S_QBLOCKS, 'g');

      var JS_COMMS = RegExp(brackets.R_MLCOMMS.source + '|//[^\r\n]*|' + brackets.S_QBLOCKS, 'g');

      function riotjs(js) {
        var parts = [],
            match,
            toes5,
            pos,
            name,
            RE = RegExp;

        if (~js.indexOf('/')) js = rmComms(js, JS_COMMS);

        while (match = js.match(JS_ES6SIGN)) {

          parts.push(RE.leftContext);
          js = RE.rightContext;
          pos = skipBody(js, JS_ES6END);

          name = match[1];
          toes5 = !/^(?:if|while|for|switch|catch|function)$/.test(name);
          name = toes5 ? match[0].replace(name, 'this.' + name + ' = function') : match[0];
          parts.push(name, js.slice(0, pos));
          js = js.slice(pos);

          if (toes5 && !/^\s*.\s*bind\b/.test(js)) parts.push('.bind(this)');
        }

        return parts.length ? parts.join('') + js : js;

        function rmComms(s, r, m) {
          r.lastIndex = 0;
          while (m = r.exec(s)) {
            if (m[0][0] === '/' && !m[1] && !m[2]) {
              s = RE.leftContext + ' ' + RE.rightContext;
              r.lastIndex = m[3] + 1;
            }
          }
          return s;
        }

        function skipBody(s, r) {
          var m,
              i = 1;

          r.lastIndex = 0;
          while (i && (m = r.exec(s))) {
            if (m[0] === '{') ++i;else if (m[0] === '}') --i;
          }
          return i ? s.length : r.lastIndex;
        }
      }

      function _compileJS(js, opts, type, parserOpts, url) {
        if (!/\S/.test(js)) return '';
        if (!type) type = opts.type;

        var parser = opts.parser || type && parsers._req('js.' + type, true) || riotjs;

        return parser(js, parserOpts, url).replace(/\r\n?/g, '\n').replace(TRIM_TRAIL, '');
      }

      function compileJS(js, opts, type, userOpts) {
        if (typeof opts === 'string') {
          userOpts = type;
          type = opts;
          opts = {};
        }
        if (type && typeof type === 'object') {
          userOpts = type;
          type = '';
        }
        if (!userOpts) userOpts = {};

        return _compileJS(js, opts || {}, type, userOpts.parserOptions, userOpts.url);
      }

      var CSS_SELECTOR = RegExp('([{}]|^)[ ;]*([^@ ;{}][^{}]*)(?={)|' + S_LINESTR, 'g');

      function scopedCSS(tag, css) {
        var scope = ':scope';

        return css.replace(CSS_SELECTOR, function (m, p1, p2) {

          if (!p2) return m;

          p2 = p2.replace(/[^,]+/g, function (sel) {
            var s = sel.trim();

            if (!s || s === 'from' || s === 'to' || s.slice(-1) === '%') {
              return sel;
            }

            if (s.indexOf(scope) < 0) {
              s = tag + ' ' + s + ',[riot-tag="' + tag + '"] ' + s + ',[data-is="' + tag + '"] ' + s;
            } else {
              s = s.replace(scope, tag) + ',' + s.replace(scope, '[riot-tag="' + tag + '"]') + ',' + s.replace(scope, '[data-is="' + tag + '"]');
            }
            return s;
          });

          return p1 ? p1 + ' ' + p2 : p2;
        });
      }

      function _compileCSS(css, tag, type, opts) {
        var scoped = (opts || (opts = {})).scoped;

        if (type) {
          if (type === 'scoped-css') {
            scoped = true;
          } else if (type !== 'css') {

            var parser = parsers._req('css.' + type, true);
            css = parser(tag, css, opts.parserOpts || {}, opts.url);
          }
        }

        css = css.replace(brackets.R_MLCOMMS, '').replace(/\s+/g, ' ').trim();

        if (scoped) {
          if (!tag) {
            throw new Error('Can not parse scoped CSS without a tagName');
          }
          css = scopedCSS(tag, css);
        }
        return css;
      }

      function compileCSS(css, type, opts) {
        if (type && typeof type === 'object') {
          opts = type;
          type = '';
        } else if (!opts) opts = {};

        return _compileCSS(css, opts.tagName, type, opts);
      }

      var TYPE_ATTR = /\stype\s*=\s*(?:(['"])(.+?)\1|(\S+))/i;

      var MISC_ATTR = '\\s*=\\s*(' + S_STRINGS + '|{[^}]+}|\\S+)';

      var END_TAGS = /\/>\n|^<(?:\/?-?[A-Za-z][-\w\xA0-\xFF]*\s*|-?[A-Za-z][-\w\xA0-\xFF]*\s+[-\w:\xA0-\xFF][\S\s]*?)>\n/;

      function _q(s, r) {
        if (!s) return "''";
        s = SQ + s.replace(/\\/g, '\\\\').replace(/'/g, "\\'") + SQ;
        return r && ~s.indexOf('\n') ? s.replace(/\n/g, '\\n') : s;
      }

      function mktag(name, html, css, attr, js, imports, opts) {
        var c = opts.debug ? ',\n  ' : ', ',
            s = '});';

        if (js && js.slice(-1) !== '\n') s = '\n' + s;

        return imports + 'riot.tag2(\'' + name + SQ + c + _q(html, 1) + c + _q(css) + c + _q(attr) + ', function(opts) {\n' + js + s;
      }

      function splitBlocks(str) {
        if (/<[-\w]/.test(str)) {
          var m,
              k = str.lastIndexOf('<'),
              n = str.length;

          while (~k) {
            m = str.slice(k, n).match(END_TAGS);
            if (m) {
              k += m.index + m[0].length;
              return [str.slice(0, k), str.slice(k)];
            }
            n = k;
            k = str.lastIndexOf('<', k - 1);
          }
        }
        return ['', str];
      }

      function getType(attribs) {
        if (attribs) {
          var match = attribs.match(TYPE_ATTR);

          match = match && (match[2] || match[3]);
          if (match) {
            return match.replace('text/', '');
          }
        }
        return '';
      }

      function getAttrib(attribs, name) {
        if (attribs) {
          var match = attribs.match(RegExp('\\s' + name + MISC_ATTR, 'i'));

          match = match && match[1];
          if (match) {
            return (/^['"]/.test(match) ? match.slice(1, -1) : match
            );
          }
        }
        return '';
      }

      function unescapeHTML(str) {
        return str.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&#039;/g, '\'');
      }

      function getParserOptions(attribs) {
        var opts = unescapeHTML(getAttrib(attribs, 'options'));

        return opts ? JSON.parse(opts) : null;
      }

      function getCode(code, opts, attribs, base) {
        var type = getType(attribs),
            src = getAttrib(attribs, 'src'),
            jsParserOptions = extend({}, opts.parserOptions.js);

        if (src) return false;

        return _compileJS(code, opts, type, extend(jsParserOptions, getParserOptions(attribs)), base);
      }

      function cssCode(code, opts, attribs, url, tag) {
        var parserStyleOptions = extend({}, opts.parserOptions.style),
            extraOpts = {
          parserOpts: extend(parserStyleOptions, getParserOptions(attribs)),
          scoped: attribs && /\sscoped(\s|=|$)/i.test(attribs),
          url: url
        };

        return _compileCSS(code, tag, getType(attribs) || opts.style, extraOpts);
      }

      function compileTemplate(html, url, lang, opts) {

        var parser = parsers._req('html.' + lang, true);
        return parser(html, opts, url);
      }

      var CUST_TAG = RegExp(/^([ \t]*)<(-?[A-Za-z][-\w\xA0-\xFF]*)(?:\s+([^'"\/>]+(?:(?:@|\/[^>])[^'"\/>]*)*)|\s*)?(?:\/>|>[ \t]*\n?([\S\s]*)^\1<\/\2\s*>|>(.*)<\/\2\s*>)/.source.replace('@', S_STRINGS), 'gim'),
          SCRIPTS = /<script(\s+[^>]*)?>\n?([\S\s]*?)<\/script\s*>/gi,
          STYLES = /<style(\s+[^>]*)?>\n?([\S\s]*?)<\/style\s*>/gi;

      function compile(src, opts, url) {
        var parts = [],
            included,
            defaultParserptions = {

          template: {},
          js: {},
          style: {}
        };

        if (!opts) opts = {};

        opts.parserOptions = extend(defaultParserptions, opts.parserOptions || {});

        included = opts.exclude ? function (s) {
          return opts.exclude.indexOf(s) < 0;
        } : function () {
          return 1;
        };

        if (!url) url = '';

        var _bp = brackets.array(opts.brackets);

        if (opts.template) {
          src = compileTemplate(src, url, opts.template, opts.parserOptions.template);
        }

        src = cleanSource(src).replace(CUST_TAG, function (_, indent, tagName, attribs, body, body2) {
          var jscode = '',
              styles = '',
              html = '',
              imports = '',
              pcex = [];

          pcex._bp = _bp;

          tagName = tagName.toLowerCase();

          attribs = attribs && included('attribs') ? restoreExpr(parseAttribs(splitHtml(attribs, opts, pcex), pcex), pcex) : '';

          if ((body || (body = body2)) && /\S/.test(body)) {

            if (body2) {

              if (included('html')) html = _compileHTML(body2, opts, pcex);
            } else {

              body = body.replace(RegExp('^' + indent, 'gm'), '');

              body = body.replace(STYLES, function (_m, _attrs, _style) {
                if (included('css')) {
                  styles += (styles ? ' ' : '') + cssCode(_style, opts, _attrs, url, tagName);
                }
                return '';
              });

              body = body.replace(SCRIPTS, function (_m, _attrs, _script) {
                if (included('js')) {
                  var code = getCode(_script, opts, _attrs, url);

                  if (code) jscode += (jscode ? '\n' : '') + code;
                }
                return '';
              });

              var blocks = splitBlocks(body.replace(TRIM_TRAIL, ''));

              if (included('html')) {
                html = _compileHTML(blocks[0], opts, pcex);
              }

              if (included('js')) {
                body = _compileJS(blocks[1], opts, null, null, url);
                imports = compileImports(jscode);
                jscode = rmImports(jscode);
                if (body) jscode += (jscode ? '\n' : '') + body;
              }
            }
          }

          jscode = /\S/.test(jscode) ? jscode.replace(/\n{3,}/g, '\n\n') : '';

          if (opts.entities) {
            parts.push({
              tagName: tagName,
              html: html,
              css: styles,
              attribs: attribs,
              js: jscode
            });
            return '';
          }

          return mktag(tagName, html, styles, attribs, jscode, imports, opts);
        });

        if (opts.entities) return parts;

        return src;
      }

      riot.util.compiler = {
        compile: compile,
        html: compileHTML,
        css: compileCSS,
        js: compileJS,
        version: 'v2.5.2'
      };
      return compile;
    }();

    /*
      Compilation for the browser
    */
    riot.compile = function () {

      var promise, // emits the 'ready' event and runs the first callback
      ready; // all the scripts were compiled?

      // gets the source of an external tag with an async call
      function GET(url, fn, opts) {
        var req = new XMLHttpRequest();

        req.onreadystatechange = function () {
          if (req.readyState === 4 && (req.status === 200 || !req.status && req.responseText.length)) {
            fn(req.responseText, opts, url);
          }
        };
        req.open('GET', url, true);
        req.send('');
      }

      // evaluates a compiled tag within the global context
      function globalEval(js, url) {
        if (typeof js === T_STRING) {
          var node = mkEl('script'),
              root = document.documentElement;

          // make the source available in the "(no domain)" tab
          // of Chrome DevTools, with a .js extension
          if (url) js += '\n//# sourceURL=' + url + '.js';

          node.text = js;
          root.appendChild(node);
          root.removeChild(node);
        }
      }

      // compiles all the internal and external tags on the page
      function compileScripts(fn, xopt) {
        var scripts = $$('script[type="riot/tag"]'),
            scriptsAmount = scripts.length;

        function done() {
          promise.trigger('ready');
          ready = true;
          if (fn) fn();
        }

        function compileTag(src, opts, url) {
          var code = compile(src, opts, url);

          globalEval(code, url);
          if (! --scriptsAmount) done();
        }

        if (!scriptsAmount) done();else {
          for (var i = 0; i < scripts.length; ++i) {
            var script = scripts[i],
                opts = extend({ template: getAttr(script, 'template') }, xopt),
                url = getAttr(script, 'src');

            url ? GET(url, compileTag, opts) : compileTag(script.innerHTML, opts);
          }
        }
      }

      //// Entry point -----

      return function (arg, fn, opts) {

        if (typeof arg === T_STRING) {

          // 2nd parameter is optional, but can be null
          if (isObject(fn)) {
            opts = fn;
            fn = false;
          }

          // `riot.compile(tag [, callback | true][, options])`
          if (/^\s*</m.test(arg)) {
            var js = compile(arg, opts);
            if (fn !== true) globalEval(js);
            if (isFunction(fn)) fn(js, arg, opts);
            return js;
          }

          // `riot.compile(url [, callback][, options])`
          GET(arg, function (str, opts, url) {
            var js = compile(str, opts, url);
            globalEval(js, url);
            if (fn) fn(js, str, opts);
          });
        } else {

          // `riot.compile([callback][, options])`
          if (isFunction(arg)) {
            opts = fn;
            fn = arg;
          } else {
            opts = arg;
            fn = undefined;
          }

          if (ready) {
            return fn && fn();
          }

          if (promise) {
            if (fn) promise.on('ready', fn);
          } else {
            promise = riot.observable();
            compileScripts(fn, opts);
          }
        }
      };
    }();

    // reassign mount methods -----
    var mount = riot.mount;

    riot.mount = function (a, b, c) {
      var ret;
      riot.compile(function () {
        ret = mount(a, b, c);
      });
      return ret;
    };
    // support CommonJS, AMD & browser
    /* istanbul ignore next */
    if (typeof exports === T_OBJECT) module.exports = riot;else if (typeof define === T_FUNCTION && typeof define.amd !== T_UNDEF) define(function () {
      return riot;
    });else window.riot = riot;
  })(typeof window != 'undefined' ? window : void 0);
  return module.exports;
});
$__System.register("136", ["135"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var Riot;
    return {
        setters: [function (Riot_1) {
            Riot = Riot_1;
        }],
        execute: function () {
            exports_1("default", Riot);
        }
    };
});
$__System.register("12d", ["136"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var riot_service_1;
    var riot, Observable, Element, precompiledTags;
    function registerClass(element) {
        function registerTag(compiledTag) {
            var transformFunction = function (opts) {
                extend(this, element); // copies prototype into "this"                        
                element.apply(this, [opts]); // calls class constructor applying it on "this"
                if (element.prototype.mounted !== undefined) this.on("mount", this.mounted);
                if (element.prototype.unmounted !== undefined) this.on("unmount", this.unmounted);
                if (element.prototype.updating !== undefined) this.on("update", this.updating);
                if (element.prototype.updated !== undefined) this.on("updated", this.updated);
                // TODO support for init(opts) ?
            };
            riot.tag2(compiledTag.tagName, compiledTag.html, compiledTag.css, compiledTag.attribs, transformFunction, riot.settings.brackets);
            return compiledTag.tagName;
        }
        function loadTemplateFromHTTP(template) {
            var req = new XMLHttpRequest();
            req.open("GET", template, false);
            req.send();
            if (req.status == 200) return req.responseText;else throw req.responseText;
        }
        ;
        var compiled;
        // gets string template: inlined, via http request or via precompiled cache
        if (element.prototype.template !== undefined) {
            var tagTemplate = element.prototype.template;
            if (tagTemplate.indexOf("<") < 0) {
                // tag is a file
                if (precompiledTags[tagTemplate] !== undefined) {
                    // loads it from precompiled cache                
                    compiled = precompiledTags[tagTemplate];
                } else {
                    // loads from HTTP and compile on the fly
                    tagTemplate = loadTemplateFromHTTP(tagTemplate);
                    compiled = riot.compile(tagTemplate, true, { entities: true })[0];
                }
            } else {
                // tag is inlined, compile on the fly
                compiled = riot.compile(tagTemplate, true, { entities: true })[0];
            }
            element.prototype.tagName = registerTag(compiled);
        } else throw "template property not specified";
    }
    exports_1("registerClass", registerClass);
    // new extend, works with getters and setters
    function extend(d, element) {
        var map = Object.keys(element.prototype).reduce(function (descriptors, key) {
            descriptors[key] = Object.getOwnPropertyDescriptor(element.prototype, key);
            return descriptors;
        }, {});
        Object.defineProperties(d, map);
    }
    // @template decorator
    function template(template) {
        return function (target) {
            target.prototype["template"] = template;
            registerClass(target);
        };
    }
    exports_1("template", template);
    return {
        setters: [function (riot_service_1_1) {
            riot_service_1 = riot_service_1_1;
        }],
        execute: function () {
            riot = riot_service_1.default;
            Observable = function () {
                function Observable() {
                    riot.observable(this);
                }
                Observable.prototype.on = function (events, callback) {};
                Observable.prototype.one = function (events, callback) {};
                Observable.prototype.off = function (events) {};
                Observable.prototype.trigger = function (eventName) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                };
                return Observable;
            }();
            exports_1("Observable", Observable);
            Element = function () {
                function Element() {}
                Element.prototype.update = function (data) {};
                Element.prototype.unmount = function (keepTheParent) {};
                Element.prototype.on = function (eventName, fun) {};
                Element.prototype.one = function (eventName, fun) {};
                Element.prototype.off = function (events) {};
                Element.prototype.trigger = function (eventName) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                };
                Element.prototype.mixin = function (mixinObject, instance) {};
                Element.createElement = function (options) {
                    var tagName = this.prototype.tagName;
                    var el = document.createElement(tagName);
                    riot.mount(el, tagName, options);
                    return el;
                };
                return Element;
            }();
            exports_1("Element", Element);
            exports_1("precompiledTags", precompiledTags = {});
            exports_1("riot", riot);
        }
    };
});
$__System.register("137", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<loading-indicator>\n    <div class=\"outer-container\">\n        <img class=\"inner-item\" src=\"assets/img/loading.svg\">\n    </div>\n\n    <style scoped>\n        .outer-container {\n            position: absolute;\n            top: calc(50% - 40px);\n            left: calc(50% - 40px);;\n        }\n        \n        .inner-item {\n            width: 80px;\n            height: 80px;\n            display: inline-block;\n        }\n    </style>\n</loading-indicator>");
        }
    };
});
$__System.register("138", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<landing-page>\n    <div>\n        <landing-page--header/>\n        <landing-page--login-form/>\n        <landing-page--footer/>\n    </div>\n</landing-page>");
        }
    };
});
$__System.register("139", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<landing-page--header>\n    <header id=\"theme-header\" class=\"navbar navbar-default\" style=\"border-radius: 0px;\">\n        <div class=\"container\">\n            <div class=\"col-sm-3 col-lg-3\">\n                <div id=\"logo\">\n                    <a href=\"\" class=\"logo-img\">\n                        <img src=\"assets/img/logo.png\" title=\"Safe Cash\" alt=\"Safe Cash\" />\n                    </a>\n                </div>\n            </div>\n            <div class=\"col-sm-6 col-lg-6 navbar-right\"></div>\n        </div>\n    </header>\n</landing-page--header>");
        }
    };
});
$__System.register("13a", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<landing-page--login-form>\n    <div style=\"margin-top: 170px; margin-bottom: 220px; margin-left: auto; margin-right: auto;max-width: 400px; background: #7da4c2;\">\n        <div style=\"border-radius: 3px; box-shadow: 1px 1px 2px gray; padding: 15px 50px;\">\n            <form name=\"login-form\" id=\"login-form\">\n                <div style=\"font-size: 18px; font-weight: bold; color: #FFF; text-transform: uppercase;text-align: center;\">\n                    <p style=\"margin-bottom: 25px; margin-top: -5px;\">Safe Cash Dashboard</p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"identifer\" style=\"font-size: 14px;float: left; color: #FFF;\">Username / Email</label>\n                    <input type=\"text\" class=\"form-control login-form-email\" id=\"identifer\" placeholder=\"Enter Username or Email\"/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\" style=\"font-size: 14px;float: left; color: #FFF;\">Password</label>\n                    <input type=\"password\" class=\"form-control login-form-password\" id=\"password\" placeholder=\"Password\"/>\n                </div>\n                <p id=\"forgot-pass\" style=\"display: none;\">\n                    <a>Forgot password?</a>\n                </p>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-warning\" style=\"float: right; margin-bottom: 5px;\" onClick=\"{onLoginButtonClick}\">LOGIN</button>\n                    <div class=\"clearfix\"></div>\n                </div>\n            </form>\n        </div>\n    </div>\n</landing-page--login-form>");
        }
    };
});
$__System.register("13b", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<landing-page--footer>\n    <footer id=\"theme-footer\">\n        <div class=\"row\">\n            <div class=\"footer-top\">\n                <div class=\"container\">\n                    <div class=\"col-sm-6 col-lg-6 \">\n                        <div>\n                            <span style=\"display:block; font-weight: 600;\">DASHBOARD</span>\n                            <nav id=\"footer-nav\" class=\"navbar\">\n                                <div class=\"footer-menu-wrap\">\n                                    <div class=\"collapse navbar-collapse\" id=\"footer-menu\">\n                                        <ul class=\"nav navbar-nav\">\n                                            <li data-tab=\"about\"><a href=\"about.html\" target=\"_blank\">About</a></li>\n                                            <li data-tab=\"term\"><a href=\"term.html\" target=\"_blank\">Terms of use</a></li>\n                                            <li data-tab=\"policy\"><a href=\"policy.html\" target=\"_blank\">Privacy Policy</a></li>\n                                            <li data-tab=\"legal\"><a href=\"legal.html\" target=\"_blank\">Legal</a></li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </nav>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-3 col-lg-3\"></div>\n                    <div class=\"col-sm-3 col-lg-3\">\n                        <div class=\"footer-logo\">\n                            <a href=\"#\" class=\"footer-logo-img\">\n                                <img src=\"assets/img/logo.png\" title=\"Safe Cash\" alt=\"Safe Cash\" />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"footer-copy-right\">\n                <div class=\"container\">\n                    <div id=\"copy-right\">\n                        <span style=\"display:block; color: #a0b4c3;margin-left: 15px;\">Copyright 2015 Safe Cash Payment Technologies, Inc. All Rights Reserved.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </footer>\n</landing-page--footer>");
        }
    };
});
$__System.register("13c", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<home-page>\n    <div>\n        <home-page--header/>\n        <home-page--body/>\n        <home-page--footer/>\n    </div>\n</home-page>");
        }
    };
});
$__System.register("13d", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<home-page--header>\n    <header id=\"theme-header\" class=\"navbar navbar-default\" style=\"border-radius: 0px;\">\n        <div class=\"container\">\n            <div class=\"col-sm-3 col-lg-3\">\n                <div id=\"logo\">\n                    <a href=\"\" class=\"logo-img\">\n                        <img src=\"assets/img/logo.png\" title=\"Safe Cash\" alt=\"Safe Cash\">\n                    </a>\n                </div>\n            </div>\n\n            <div class=\"col-sm-6 col-lg-6 navbar-right\">\n                <table style=\"float: right; color: white; font-size: 12px; margin-top: 10px; margin-bottom: 10px; font-weight: bold;\">\n                    <tr>\n                        <td>\n                            <img src=\"assets/img/iconuser.png\" title=\"Safe Cash\" alt=\"Safe Cash\" style=\"margin-top: -2px;\">\n                        </td>\n                        <td>\n                            <div class=\"collapse navbar-collapse\" id=\"footer-menu\" style=\"margin-left: -20px;\">\n                                <ul class=\"nav navbar-nav\">\n                                    <li><a style=\"font-weight: 700; color:#fff\">Hello</a></li>\n                                    <li style=\"margin-top: 5px;\">|</li>\n                                    <li><a style=\"font-weight: 700;\">Settings</a></li>\n                                    <li style=\"margin-top: 5px;\">|</li>\n                                    <li><a on-click=\"logout\" style=\"font-weight: 700;\" onclick=\"{onLogoutButtonClick}\">Logout</a></li>\n                                </ul>\n                            </div>\n                        </td>\n                    </tr>\n\n                    <tr class=\"child\">\n                        <td></td>\n                        <td colspan=\"7\">\n                            <table style=\"font-weight: normal; display: none;\">\n                                <tr>\n                                    <td colspan=\"7\">Last login: dd-mm-yyyy hh:mm</td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n\n            </div>\n        </div>\n    </header>\n</home-page--header>");
        }
    };
});
$__System.register("13e", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<home-page--footer>\n    <footer id=\"theme-footer\">\n        <div class=\"row\">\n            <div class=\"footer-top\">\n                <div class=\"container\">\n                    <div class=\"col-sm-6 col-lg-6 \">\n                        <div>\n                            <span style=\"display:block; font-weight: 600;\">DASHBOARD</span>\n                            <nav id=\"footer-nav\" class=\"navbar\">\n                                <div class=\"footer-menu-wrap\">\n                                    <div class=\"collapse navbar-collapse\" id=\"footer-menu\">\n                                        <ul class=\"nav navbar-nav\">\n                                            <li data-tab=\"about\"><a href=\"about.html\" target=\"_blank\">About</a></li>\n                                            <li data-tab=\"term\"><a href=\"term.html\" target=\"_blank\">Terms of use</a></li>\n                                            <li data-tab=\"policy\"><a href=\"policy.html\" target=\"_blank\">Privacy Policy</a></li>\n                                            <li data-tab=\"legal\"><a href=\"legal.html\" target=\"_blank\">Legal</a></li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </nav>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-3 col-lg-3\"></div>\n                    <div class=\"col-sm-3 col-lg-3\">\n                        <div class=\"footer-logo\">\n                            <a href=\"#\" class=\"footer-logo-img\">\n                                <img src=\"assets/img/logo.png\" title=\"Safe Cash\" alt=\"Safe Cash\">\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"footer-copy-right\">\n                <div class=\"container\">\n                    <div id=\"copy-right\">\n                        <span style=\"display:block; color: #a0b4c3;margin-left: 15px;\">Copyright 2015 Safe Cash Payment Technologies, Inc. All Rights Reserved.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </footer>\n</home-page--footer>");
        }
    };
});
$__System.register("13f", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<home-page--body>\n    <div class=\"tm-middle\">\n        <div class=\"uk-container uk-container-center\">\n            <div class=\"uk-grid\" data-uk-grid-margin=\"\">\n                <div class=\"uk-width-1-4\">\n                    <main-sidebar/>\n                </div>\n                <div class=\"tm-main uk-width-3-4\">\n                    <main-view/>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <style>\n        .tm-middle {\n            background: #fff;\n        }\n        \n        @media (min-width: 1220px) .tm-middle,\n        .tm-section,\n        .tm-footer {\n            padding: 120px 0;\n        }\n        \n        @media (min-width: 768px) .tm-middle,\n        .tm-section,\n        .tm-footer {\n            padding: 90px 0;\n        }\n        \n        .tm-middle,\n        .tm-section,\n        .tm-footer {\n            padding: 50px 0;\n        }\n    </style>\n</home-page--body>");
        }
    };
});
$__System.register("140", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<home-page--sidebar>\n    <div class=\"uk-panel uk-panel-box\">\n        <h3 class=\"uk-panel-title\">Dashboard</h3>\n        <ul class=\"uk-nav uk-nav-side\">\n            <li><a>KPI's</a></li>\n            <li><a>Wallet Configuration</a></li>\n            <li><a>Find Accounts</a></li>\n            <li><a>Lock & Unlock Wallets</a></li>\n            <li><a>Reset Password</a></li>\n            <li class=\"uk-nav-divider\"></li>\n            <li><a>Token Issuers</a></li>\n            <li class=\"uk-nav-header\">Reports</li>\n            <li><a>Token Reconciliation</a></li>\n            <li><a>Daily Report</a></li>\n            <li><a>Onboarding Report</a></li>\n            <li class=\"uk-nav-header\">Users</li>\n            <li><a>Logout</a></li>\n        </ul>\n    </div>\n\n    <style>\n        \n    </style>\n</home-page--sidebar>");
        }
    };
});
$__System.register("141", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<dashboard-view>\n    <div id=\"page-wrap\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"col-sm-5\" style=\"width: 50%; padding-left: 0px;\">\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\"><span class=\"badge\">58</span>\n                        <p>Number of Wallets:</p>\n                    </li>\n                    <li class=\"list-group-item\"><span class=\"badge\">0</span>\n                        <p>New Wallets Today:</p>\n                    </li>\n                    <li class=\"list-group-item\"><span class=\"badge\">6</span>\n                        <p>Wallets with Balance &gt; 0:</p>\n                    </li>\n                    <li class=\"list-group-item\"><span class=\"badge\">0</span>\n                        <p>Wallets with Balance &gt; €100:</p>\n                    </li>\n                    <li class=\"list-group-item\"><span class=\"badge\">52</span>\n                        <p>Wallets with Zero Balance:</p>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-sm-5 pull-right\" style=\"width: 50%; padding-right: 0px;\">\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\"><span class=\"badge\">0</span>\n                        <p>Locked Wallets:</p>\n                    </li>\n                    <div class=\"list-group-item\">\n                        <p>Wallets Added Past 7 Days</p>\n                        <table class=\"table\">\n                            <col width=\"200\"> </table>\n                    </div>\n                </ul>\n            </div>\n        </div>\n        <div class=\"form-group col-sm-12 col-lg-12\">\n            <div class=\"panel panel-primary\">\n                <div class=\"panel-heading\">TRANSACTIONS</div>\n                <div class=\"panel-body list-group panel-kpi transactions\">\n                    <table class=\"table\">\n                        <col width=\"200\">\n                        <tr class=\"trans-head-default\">\n                            <td>&nbsp;</td>\n                            <td>Number</td>\n                            <td>Total Value</td>\n                            <td>Average Value</td>\n                            <td>&nbsp;</td>\n                        </tr>\n                        <tr class=\"trans-item \">\n                            <td style=\"font-weight: 700; color: #004a84; text-align: left;\">Last Hour</td>\n                            <td>0</td>\n                            <td>€0.00</td>\n                            <td>€0.00</td>\n                            <td></td>\n                        </tr>\n                        <tr class=\"trans-item\">\n                            <td style=\"font-weight: 700; color: #004a84; text-align: left;\">As of Today <span class=\"glyphicon glyphicon-triangle-right\" aria-hidden=\"true\"></span></td>\n                            <td>0</td>\n                            <td>€0.00</td>\n                            <td>€0.00</td>\n                            <td></td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            <div class=\"panel panel-primary transaction-past\">\n                <div class=\"panel-heading\">TRANSACTIONS PAST 7 DAYS</div>\n                <div class=\"panel-body list-group panel-kpi table-responsive\">\n                    <table class=\"table table-bordered\">\n                        <col style=\"width:25%;\">\n                        <tr class=\"trans-head-default\">\n                            <td>&nbsp;</td>\n                            <td>Number</td>\n                            <td>Total Value</td>\n                            <td>Average Value</td>\n                            <td>&nbsp;</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</dashboard-view>");
        }
    };
});
$__System.register("142", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            exports_1("default", "<app>\n    <div id=\"main\"></div>\n    <loading-indicator show={this.state.commonData.isLoading}></loading-indicator>\n\n    <style>\n        .uk-panel-box {\n            padding: 15px;\n            background: #fafafa;\n            color: #666;\n            border: 1px solid #E5E5E5;\n            border-radius: 4px;\n            margin-bottom: 10px;\n        }\n        \n        .uk-panel-box .uk-panel-title {\n            color: #666;\n        }\n        \n        .uk-panel-title {\n            margin-top: 0;\n            margin-bottom: 15px;\n            font-size: 18px;\n            line-height: 24px;\n            font-weight: 400;\n            text-transform: none;\n            color: #666;\n        }\n        \n        .uk-nav-side>li.uk-active>a {\n            background: #009dd8;\n            color: #fff;\n            box-shadow: inset 0 2px 4px rgba(0, 0, 0, .2);\n            text-shadow: 0 -1px 0 rgba(0, 0, 0, .2);\n        }\n        \n        .uk-nav-side>li>a {\n            color: #666;\n        }\n        \n        .uk-nav>li>a {\n            padding: 3px 15px;\n        }\n        \n        .uk-nav li>a {\n            display: block;\n            text-decoration: none;\n        }\n    </style>\n</app>");
        }
    };
});
$__System.register('131', ['137', '138', '139', '13a', '13b', '13c', '13d', '13e', '13f', '140', '141', '142'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var loading_indicator_html_text_1, index_html_text_1, header_html_text_1, login_form_html_text_1, footer_html_text_1, index_html_text_2, header_html_text_2, footer_html_text_2, body_html_text_1, sidebar_html_text_1, dashboard_html_text_1, app_html_text_1;
    var landingPage, views, homePage;
    return {
        setters: [function (loading_indicator_html_text_1_1) {
            loading_indicator_html_text_1 = loading_indicator_html_text_1_1;
        }, function (index_html_text_1_1) {
            index_html_text_1 = index_html_text_1_1;
        }, function (header_html_text_1_1) {
            header_html_text_1 = header_html_text_1_1;
        }, function (login_form_html_text_1_1) {
            login_form_html_text_1 = login_form_html_text_1_1;
        }, function (footer_html_text_1_1) {
            footer_html_text_1 = footer_html_text_1_1;
        }, function (index_html_text_2_1) {
            index_html_text_2 = index_html_text_2_1;
        }, function (header_html_text_2_1) {
            header_html_text_2 = header_html_text_2_1;
        }, function (footer_html_text_2_1) {
            footer_html_text_2 = footer_html_text_2_1;
        }, function (body_html_text_1_1) {
            body_html_text_1 = body_html_text_1_1;
        }, function (sidebar_html_text_1_1) {
            sidebar_html_text_1 = sidebar_html_text_1_1;
        }, function (dashboard_html_text_1_1) {
            dashboard_html_text_1 = dashboard_html_text_1_1;
        }, function (app_html_text_1_1) {
            app_html_text_1 = app_html_text_1_1;
        }],
        execute: function () {
            landingPage = {
                LandingPageTemplate: index_html_text_1.default,
                LaningPageHeaderTemplate: header_html_text_1.default,
                LaningPageLoginFormTemplate: login_form_html_text_1.default,
                LaningPageFooterTemplate: footer_html_text_1.default
            };
            views = {
                DashboardViewTemplate: dashboard_html_text_1.default
            };
            homePage = {
                HomePageTemplate: index_html_text_2.default,
                HomePageHeaderTemplate: header_html_text_2.default,
                HomePageBodyTemplate: body_html_text_1.default,
                HomePageFooterTemplate: footer_html_text_2.default,
                HomePageSideBarTemplate: sidebar_html_text_1.default,
                views: views
            };
            exports_1("AppTemplate", app_html_text_1.default);
            exports_1("LoadingIndicatorTemplate", loading_indicator_html_text_1.default);
            exports_1("landingPage", landingPage);
            exports_1("homePage", homePage);
        }
    };
});
$__System.register('143', ['12d', '12e', '131'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var riot_ts_1, store_1, templates;
    var App;
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (store_1_1) {
            store_1 = store_1_1;
        }, function (templates_1) {
            templates = templates_1;
        }],
        execute: function () {
            App = function (_super) {
                __extends(App, _super);
                function App() {
                    _super.call(this);
                    this.state = { commonData: { isLoading: false } };
                    store_1.default.subscribe(this.onApplicationStateChanged.bind(this));
                }
                App.prototype.onApplicationStateChanged = function () {
                    this.state = store_1.default.getState();
                    this.update();
                };
                App = __decorate([riot_ts_1.template(templates.AppTemplate), __metadata('design:paramtypes', [])], App);
                return App;
            }(riot_ts_1.Element);
            exports_1("default", App);
        }
    };
});
$__System.register('144', ['12d', '12c', '132', '133', '134', '143'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var riot_ts_1, index_1, index_2, views, loading_indicator_1, app_1;
    function initialize() {
        riot_ts_1.riot.mount('*');
    }
    exports_1("initialize", initialize);
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (index_1_1) {
            index_1 = index_1_1;
        }, function (index_2_1) {
            index_2 = index_2_1;
        }, function (views_1) {
            views = views_1;
        }, function (loading_indicator_1_1) {
            loading_indicator_1 = loading_indicator_1_1;
        }, function (app_1_1) {
            app_1 = app_1_1;
        }],
        execute: function () {
            exports_1("LoadingIndicator", loading_indicator_1.default);
            exports_1("LandingPage", index_1.default);
            exports_1("HomePage", index_2.default);
            exports_1("views", views);
            exports_1("App", app_1.default);
        }
    };
});
$__System.registerDynamic('145', [], true, function ($__require, exports, module) {
  'use strict';

  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  function createThunkMiddleware(extraArgument) {
    return function (_ref) {
      var dispatch = _ref.dispatch;
      var getState = _ref.getState;
      return function (next) {
        return function (action) {
          if (typeof action === 'function') {
            return action(dispatch, getState, extraArgument);
          }

          return next(action);
        };
      };
    };
  }

  var thunk = createThunkMiddleware();
  thunk.withExtraArgument = createThunkMiddleware;

  exports['default'] = thunk;
  return module.exports;
});
$__System.registerDynamic('146', [], true, function ($__require, exports, module) {
	'use strict';

	var define,
	    global = this || self,
	    GLOBAL = global;
	module.exports = function symbolObservablePonyfill(root) {
		var result;
		var Symbol = root.Symbol;

		if (typeof Symbol === 'function') {
			if (Symbol.observable) {
				result = Symbol.observable;
			} else {
				result = Symbol('observable');
				Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}

		return result;
	};
	return module.exports;
});
$__System.registerDynamic('147', ['146'], true, function ($__require, exports, module) {
  /* global window */
  'use strict';

  var define,
      global = this || self,
      GLOBAL = global;
  module.exports = $__require('146')(global || window || this);
  return module.exports;
});
$__System.registerDynamic('148', ['149', '147', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.ActionTypes = undefined;
  exports["default"] = createStore;

  var _isPlainObject = $__require('149');

  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

  var _symbolObservable = $__require('147');

  var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }

  /**
   * These are private action types reserved by Redux.
   * For any unknown actions, you must return the current state.
   * If the current state is undefined, you must return the initial state.
   * Do not reference these action types directly in your code.
   */
  var ActionTypes = exports.ActionTypes = {
    INIT: '@@redux/INIT'
  };

  /**
   * Creates a Redux store that holds the state tree.
   * The only way to change the data in the store is to call `dispatch()` on it.
   *
   * There should only be a single store in your app. To specify how different
   * parts of the state tree respond to actions, you may combine several reducers
   * into a single reducer function by using `combineReducers`.
   *
   * @param {Function} reducer A function that returns the next state tree, given
   * the current state tree and the action to handle.
   *
   * @param {any} [initialState] The initial state. You may optionally specify it
   * to hydrate the state from the server in universal apps, or to restore a
   * previously serialized user session.
   * If you use `combineReducers` to produce the root reducer function, this must be
   * an object with the same shape as `combineReducers` keys.
   *
   * @param {Function} enhancer The store enhancer. You may optionally specify it
   * to enhance the store with third-party capabilities such as middleware,
   * time travel, persistence, etc. The only store enhancer that ships with Redux
   * is `applyMiddleware()`.
   *
   * @returns {Store} A Redux store that lets you read the state, dispatch actions
   * and subscribe to changes.
   */
  function createStore(reducer, initialState, enhancer) {
    var _ref2;

    if (typeof initialState === 'function' && typeof enhancer === 'undefined') {
      enhancer = initialState;
      initialState = undefined;
    }

    if (typeof enhancer !== 'undefined') {
      if (typeof enhancer !== 'function') {
        throw new Error('Expected the enhancer to be a function.');
      }

      return enhancer(createStore)(reducer, initialState);
    }

    if (typeof reducer !== 'function') {
      throw new Error('Expected the reducer to be a function.');
    }

    var currentReducer = reducer;
    var currentState = initialState;
    var currentListeners = [];
    var nextListeners = currentListeners;
    var isDispatching = false;

    function ensureCanMutateNextListeners() {
      if (nextListeners === currentListeners) {
        nextListeners = currentListeners.slice();
      }
    }

    /**
     * Reads the state tree managed by the store.
     *
     * @returns {any} The current state tree of your application.
     */
    function getState() {
      return currentState;
    }

    /**
     * Adds a change listener. It will be called any time an action is dispatched,
     * and some part of the state tree may potentially have changed. You may then
     * call `getState()` to read the current state tree inside the callback.
     *
     * You may call `dispatch()` from a change listener, with the following
     * caveats:
     *
     * 1. The subscriptions are snapshotted just before every `dispatch()` call.
     * If you subscribe or unsubscribe while the listeners are being invoked, this
     * will not have any effect on the `dispatch()` that is currently in progress.
     * However, the next `dispatch()` call, whether nested or not, will use a more
     * recent snapshot of the subscription list.
     *
     * 2. The listener should not expect to see all state changes, as the state
     * might have been updated multiple times during a nested `dispatch()` before
     * the listener is called. It is, however, guaranteed that all subscribers
     * registered before the `dispatch()` started will be called with the latest
     * state by the time it exits.
     *
     * @param {Function} listener A callback to be invoked on every dispatch.
     * @returns {Function} A function to remove this change listener.
     */
    function subscribe(listener) {
      if (typeof listener !== 'function') {
        throw new Error('Expected listener to be a function.');
      }

      var isSubscribed = true;

      ensureCanMutateNextListeners();
      nextListeners.push(listener);

      return function unsubscribe() {
        if (!isSubscribed) {
          return;
        }

        isSubscribed = false;

        ensureCanMutateNextListeners();
        var index = nextListeners.indexOf(listener);
        nextListeners.splice(index, 1);
      };
    }

    /**
     * Dispatches an action. It is the only way to trigger a state change.
     *
     * The `reducer` function, used to create the store, will be called with the
     * current state tree and the given `action`. Its return value will
     * be considered the **next** state of the tree, and the change listeners
     * will be notified.
     *
     * The base implementation only supports plain object actions. If you want to
     * dispatch a Promise, an Observable, a thunk, or something else, you need to
     * wrap your store creating function into the corresponding middleware. For
     * example, see the documentation for the `redux-thunk` package. Even the
     * middleware will eventually dispatch plain object actions using this method.
     *
     * @param {Object} action A plain object representing “what changed”. It is
     * a good idea to keep actions serializable so you can record and replay user
     * sessions, or use the time travelling `redux-devtools`. An action must have
     * a `type` property which may not be `undefined`. It is a good idea to use
     * string constants for action types.
     *
     * @returns {Object} For convenience, the same action object you dispatched.
     *
     * Note that, if you use a custom middleware, it may wrap `dispatch()` to
     * return something else (for example, a Promise you can await).
     */
    function dispatch(action) {
      if (!(0, _isPlainObject2["default"])(action)) {
        throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
      }

      if (typeof action.type === 'undefined') {
        throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
      }

      if (isDispatching) {
        throw new Error('Reducers may not dispatch actions.');
      }

      try {
        isDispatching = true;
        currentState = currentReducer(currentState, action);
      } finally {
        isDispatching = false;
      }

      var listeners = currentListeners = nextListeners;
      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }

      return action;
    }

    /**
     * Replaces the reducer currently used by the store to calculate the state.
     *
     * You might need this if your app implements code splitting and you want to
     * load some of the reducers dynamically. You might also need this if you
     * implement a hot reloading mechanism for Redux.
     *
     * @param {Function} nextReducer The reducer for the store to use instead.
     * @returns {void}
     */
    function replaceReducer(nextReducer) {
      if (typeof nextReducer !== 'function') {
        throw new Error('Expected the nextReducer to be a function.');
      }

      currentReducer = nextReducer;
      dispatch({ type: ActionTypes.INIT });
    }

    /**
     * Interoperability point for observable/reactive libraries.
     * @returns {observable} A minimal observable of state changes.
     * For more information, see the observable proposal:
     * https://github.com/zenparsing/es-observable
     */
    function observable() {
      var _ref;

      var outerSubscribe = subscribe;
      return _ref = {
        /**
         * The minimal observable subscription method.
         * @param {Object} observer Any object that can be used as an observer.
         * The observer object should have a `next` method.
         * @returns {subscription} An object with an `unsubscribe` method that can
         * be used to unsubscribe the observable from the store, and prevent further
         * emission of values from the observable.
         */

        subscribe: function subscribe(observer) {
          if (typeof observer !== 'object') {
            throw new TypeError('Expected the observer to be an object.');
          }

          function observeState() {
            if (observer.next) {
              observer.next(getState());
            }
          }

          observeState();
          var unsubscribe = outerSubscribe(observeState);
          return { unsubscribe: unsubscribe };
        }
      }, _ref[_symbolObservable2["default"]] = function () {
        return this;
      }, _ref;
    }

    // When a store is created, an "INIT" action is dispatched so that every
    // reducer returns their initial state. This effectively populates
    // the initial state tree.
    dispatch({ type: ActionTypes.INIT });

    return _ref2 = {
      dispatch: dispatch,
      subscribe: subscribe,
      getState: getState,
      replaceReducer: replaceReducer
    }, _ref2[_symbolObservable2["default"]] = observable, _ref2;
  }
  return module.exports;
});
$__System.registerDynamic("14a", [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetPrototype = Object.getPrototypeOf;

  /**
   * Gets the `[[Prototype]]` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {null|Object} Returns the `[[Prototype]]`.
   */
  function getPrototype(value) {
    return nativeGetPrototype(Object(value));
  }

  module.exports = getPrototype;
  return module.exports;
});
$__System.registerDynamic('14b', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is a host object in IE < 9.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
   */
  function isHostObject(value) {
    // Many host objects are `Object` objects that can coerce to strings
    // despite having improperly defined `toString` methods.
    var result = false;
    if (value != null && typeof value.toString != 'function') {
      try {
        result = !!(value + '');
      } catch (e) {}
    }
    return result;
  }

  module.exports = isHostObject;
  return module.exports;
});
$__System.registerDynamic('14c', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }

  module.exports = isObjectLike;
  return module.exports;
});
$__System.registerDynamic('149', ['14a', '14b', '14c'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  var getPrototype = $__require('14a'),
      isHostObject = $__require('14b'),
      isObjectLike = $__require('14c');

  /** `Object#toString` result references. */
  var objectTag = '[object Object]';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = Function.prototype.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to infer the `Object` constructor. */
  var objectCtorString = funcToString.call(Object);

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString = objectProto.toString;

  /**
   * Checks if `value` is a plain object, that is, an object created by the
   * `Object` constructor or one with a `[[Prototype]]` of `null`.
   *
   * @static
   * @memberOf _
   * @since 0.8.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a plain object,
   *  else `false`.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * _.isPlainObject(new Foo);
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'x': 0, 'y': 0 });
   * // => true
   *
   * _.isPlainObject(Object.create(null));
   * // => true
   */
  function isPlainObject(value) {
    if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }

  module.exports = isPlainObject;
  return module.exports;
});
$__System.registerDynamic('14d', ['148', '149', '14e', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports["default"] = combineReducers;

  var _createStore = $__require('148');

  var _isPlainObject = $__require('149');

  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

  var _warning = $__require('14e');

  var _warning2 = _interopRequireDefault(_warning);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }

  function getUndefinedStateErrorMessage(key, action) {
    var actionType = action && action.type;
    var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

    return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
  }

  function getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {
    var reducerKeys = Object.keys(reducers);
    var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';

    if (reducerKeys.length === 0) {
      return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
    }

    if (!(0, _isPlainObject2["default"])(inputState)) {
      return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
    }

    var unexpectedKeys = Object.keys(inputState).filter(function (key) {
      return !reducers.hasOwnProperty(key);
    });

    if (unexpectedKeys.length > 0) {
      return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
    }
  }

  function assertReducerSanity(reducers) {
    Object.keys(reducers).forEach(function (key) {
      var reducer = reducers[key];
      var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

      if (typeof initialState === 'undefined') {
        throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
      }

      var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
      if (typeof reducer(undefined, { type: type }) === 'undefined') {
        throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
      }
    });
  }

  /**
   * Turns an object whose values are different reducer functions, into a single
   * reducer function. It will call every child reducer, and gather their results
   * into a single state object, whose keys correspond to the keys of the passed
   * reducer functions.
   *
   * @param {Object} reducers An object whose values correspond to different
   * reducer functions that need to be combined into one. One handy way to obtain
   * it is to use ES6 `import * as reducers` syntax. The reducers may never return
   * undefined for any action. Instead, they should return their initial state
   * if the state passed to them was undefined, and the current state for any
   * unrecognized action.
   *
   * @returns {Function} A reducer function that invokes every reducer inside the
   * passed object, and builds a state object with the same shape.
   */
  function combineReducers(reducers) {
    var reducerKeys = Object.keys(reducers);
    var finalReducers = {};
    for (var i = 0; i < reducerKeys.length; i++) {
      var key = reducerKeys[i];
      if (typeof reducers[key] === 'function') {
        finalReducers[key] = reducers[key];
      }
    }
    var finalReducerKeys = Object.keys(finalReducers);

    var sanityError;
    try {
      assertReducerSanity(finalReducers);
    } catch (e) {
      sanityError = e;
    }

    return function combination() {
      var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      var action = arguments[1];

      if (sanityError) {
        throw sanityError;
      }

      if ('production' !== 'production') {
        var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);
        if (warningMessage) {
          (0, _warning2["default"])(warningMessage);
        }
      }

      var hasChanged = false;
      var nextState = {};
      for (var i = 0; i < finalReducerKeys.length; i++) {
        var key = finalReducerKeys[i];
        var reducer = finalReducers[key];
        var previousStateForKey = state[key];
        var nextStateForKey = reducer(previousStateForKey, action);
        if (typeof nextStateForKey === 'undefined') {
          var errorMessage = getUndefinedStateErrorMessage(key, action);
          throw new Error(errorMessage);
        }
        nextState[key] = nextStateForKey;
        hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
      }
      return hasChanged ? nextState : state;
    };
  }
  return module.exports;
});
$__System.registerDynamic('14f', ['7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports["default"] = bindActionCreators;
  function bindActionCreator(actionCreator, dispatch) {
    return function () {
      return dispatch(actionCreator.apply(undefined, arguments));
    };
  }

  /**
   * Turns an object whose values are action creators, into an object with the
   * same keys, but with every function wrapped into a `dispatch` call so they
   * may be invoked directly. This is just a convenience method, as you can call
   * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
   *
   * For convenience, you can also pass a single function as the first argument,
   * and get a function in return.
   *
   * @param {Function|Object} actionCreators An object whose values are action
   * creator functions. One handy way to obtain it is to use ES6 `import * as`
   * syntax. You may also pass a single function.
   *
   * @param {Function} dispatch The `dispatch` function available on your Redux
   * store.
   *
   * @returns {Function|Object} The object mimicking the original object, but with
   * every action creator wrapped into the `dispatch` call. If you passed a
   * function as `actionCreators`, the return value will also be a single
   * function.
   */
  function bindActionCreators(actionCreators, dispatch) {
    if (typeof actionCreators === 'function') {
      return bindActionCreator(actionCreators, dispatch);
    }

    if (typeof actionCreators !== 'object' || actionCreators === null) {
      throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
    }

    var keys = Object.keys(actionCreators);
    var boundActionCreators = {};
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var actionCreator = actionCreators[key];
      if (typeof actionCreator === 'function') {
        boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
      }
    }
    return boundActionCreators;
  }
  return module.exports;
});
$__System.registerDynamic('150', ['151', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  exports["default"] = applyMiddleware;

  var _compose = $__require('151');

  var _compose2 = _interopRequireDefault(_compose);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }

  /**
   * Creates a store enhancer that applies middleware to the dispatch method
   * of the Redux store. This is handy for a variety of tasks, such as expressing
   * asynchronous actions in a concise manner, or logging every action payload.
   *
   * See `redux-thunk` package as an example of the Redux middleware.
   *
   * Because middleware is potentially asynchronous, this should be the first
   * store enhancer in the composition chain.
   *
   * Note that each middleware will be given the `dispatch` and `getState` functions
   * as named arguments.
   *
   * @param {...Function} middlewares The middleware chain to be applied.
   * @returns {Function} A store enhancer applying the middleware.
   */
  function applyMiddleware() {
    for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
      middlewares[_key] = arguments[_key];
    }

    return function (createStore) {
      return function (reducer, initialState, enhancer) {
        var store = createStore(reducer, initialState, enhancer);
        var _dispatch = store.dispatch;
        var chain = [];

        var middlewareAPI = {
          getState: store.getState,
          dispatch: function dispatch(action) {
            return _dispatch(action);
          }
        };
        chain = middlewares.map(function (middleware) {
          return middleware(middlewareAPI);
        });
        _dispatch = _compose2["default"].apply(undefined, chain)(store.dispatch);

        return _extends({}, store, {
          dispatch: _dispatch
        });
      };
    };
  }
  return module.exports;
});
$__System.registerDynamic("151", ["7"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("7");
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports["default"] = compose;
  /**
   * Composes single-argument functions from right to left. The rightmost
   * function can take multiple arguments as it provides the signature for
   * the resulting composite function.
   *
   * @param {...Function} funcs The functions to compose.
   * @returns {Function} A function obtained by composing the argument functions
   * from right to left. For example, compose(f, g, h) is identical to doing
   * (...args) => f(g(h(...args))).
   */

  function compose() {
    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }

    if (funcs.length === 0) {
      return function (arg) {
        return arg;
      };
    } else {
      var _ret = function () {
        var last = funcs[funcs.length - 1];
        var rest = funcs.slice(0, -1);
        return {
          v: function v() {
            return rest.reduceRight(function (composed, f) {
              return f(composed);
            }, last.apply(undefined, arguments));
          }
        };
      }();

      if (typeof _ret === "object") return _ret.v;
    }
  }
  return module.exports;
});
$__System.registerDynamic('14e', ['7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports["default"] = warning;
  /**
   * Prints a warning in the console if it exists.
   *
   * @param {String} message The warning message.
   * @returns {void}
   */
  function warning(message) {
    /* eslint-disable no-console */
    if (typeof console !== 'undefined' && typeof console.error === 'function') {
      console.error(message);
    }
    /* eslint-enable no-console */
    try {
      // This error was thrown as a convenience so that if you enable
      // "break on all exceptions" in your console,
      // it would pause the execution at this line.
      throw new Error(message);
      /* eslint-disable no-empty */
    } catch (e) {}
    /* eslint-enable no-empty */
  }
  return module.exports;
});
$__System.registerDynamic("@system-env", [], false, function() {
  return {
    "production": true,
    "browser": true,
    "node": false,
    "dev": false,
    "default": true
  };
});

$__System.registerDynamic('7', ['@system-env'], true, function ($__require, exports, module) {
    var define,
        global = this || self,
        GLOBAL = global;
    // From https://github.com/defunctzombie/node-process/blob/master/browser.js
    // shim for using process in browser

    var productionEnv = $__require('@system-env').production;

    var process = module.exports = {};
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = setTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        clearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            setTimeout(drainQueue, 0);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {
        NODE_ENV: productionEnv ? 'production' : 'development'
    };
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
    return module.exports;
});
$__System.registerDynamic('152', ['148', '14d', '14f', '150', '151', '14e', '7'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('7');
  var define,
      global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

  var _createStore = $__require('148');

  var _createStore2 = _interopRequireDefault(_createStore);

  var _combineReducers = $__require('14d');

  var _combineReducers2 = _interopRequireDefault(_combineReducers);

  var _bindActionCreators = $__require('14f');

  var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

  var _applyMiddleware = $__require('150');

  var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

  var _compose = $__require('151');

  var _compose2 = _interopRequireDefault(_compose);

  var _warning = $__require('14e');

  var _warning2 = _interopRequireDefault(_warning);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }

  /*
  * This is a dummy function to check if the function name has been altered by minification.
  * If the function has been minified and NODE_ENV !== 'production', warn the user.
  */
  function isCrushed() {}

  if ('production' !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
    (0, _warning2["default"])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
  }

  exports.createStore = _createStore2["default"];
  exports.combineReducers = _combineReducers2["default"];
  exports.bindActionCreators = _bindActionCreators2["default"];
  exports.applyMiddleware = _applyMiddleware2["default"];
  exports.compose = _compose2["default"];
  return module.exports;
});
$__System.register("153", ["12f"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var types_1;
    function userReducer(state, action) {
        if (state === void 0) {
            state = { user: null };
        }
        switch (action.type) {
            case types_1.USERS.LOGIN_SUCCESS:
            case types_1.USERS.SSO_LOGIN_SUCCESS:
                return Object.assign({}, state, { user: action.data });
            case types_1.USERS.LOGOUT:
                return Object.assign({}, state, { user: null });
            case types_1.USERS.GET_PROFILE_SUCCESS:
                var oldProfile = state.user;
                var newProfile = Object.assign({}, oldProfile, action.data);
                return Object.assign({}, state, { user: newProfile });
            case types_1.USERS.REMEMBER_ME:
                return Object.assign({}, state, { rememberMe: action.data });
            default:
                return state;
        }
    }
    exports_1("default", userReducer);
    return {
        setters: [function (types_1_1) {
            types_1 = types_1_1;
        }],
        execute: function () {}
    };
});
$__System.register("154", ["12f"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var types_1;
    function commonReducer(state, action) {
        if (state === void 0) {
            state = { isLoading: false };
        }
        switch (action.type) {
            case types_1.COMMONS.TOGGLE_LOADING:
                return Object.assign({}, state, { isLoading: action.data });
            default:
                return state;
        }
    }
    exports_1("default", commonReducer);
    return {
        setters: [function (types_1_1) {
            types_1 = types_1_1;
        }],
        execute: function () {}
    };
});
$__System.register('155', ['152', '153', '154'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var redux, reducer_1, reducer_2;
    var reducers;
    function lastAction(state, action) {
        if (state === void 0) {
            state = null;
        }
        console.log(action);
        return action;
    }
    return {
        setters: [function (redux_1) {
            redux = redux_1;
        }, function (reducer_1_1) {
            reducer_1 = reducer_1_1;
        }, function (reducer_2_1) {
            reducer_2 = reducer_2_1;
        }],
        execute: function () {
            reducers = redux.combineReducers({
                lastAction: lastAction,
                userData: reducer_1.default,
                commonData: reducer_2.default
            });
            exports_1("default", reducers);
        }
    };
});
$__System.register('12e', ['152', '145', '155'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var redux, redux_thunk_1, reducers_1;
    var createStoreWithMiddleware, store;
    return {
        setters: [function (redux_1) {
            redux = redux_1;
        }, function (redux_thunk_1_1) {
            redux_thunk_1 = redux_thunk_1_1;
        }, function (reducers_1_1) {
            reducers_1 = reducers_1_1;
        }],
        execute: function () {
            createStoreWithMiddleware = redux.compose(redux.applyMiddleware(redux_thunk_1.default))(redux.createStore);
            store = createStoreWithMiddleware(reducers_1.default);
            exports_1("default", store);
        }
    };
});
$__System.register("156", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var AndamanService;
    return {
        setters: [],
        execute: function () {
            AndamanService = function () {
                function AndamanService() {}
                AndamanService.ready = function () {
                    return AndamanService.service.ready();
                };
                AndamanService.service = window.AndamanService;
                return AndamanService;
            }();
            exports_1("default", AndamanService);
        }
    };
});
$__System.register('157', ['156'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var andaman_service_1;
    var UserService;
    return {
        setters: [function (andaman_service_1_1) {
            andaman_service_1 = andaman_service_1_1;
        }],
        execute: function () {
            UserService = function () {
                function UserService() {}
                UserService.prototype.ssoLogin = function () {
                    return new Promise(function (resolve, reject) {
                        var accessToken = localStorage.getItem('access_token');
                        if (accessToken) {
                            andaman_service_1.default.ready().then(function (opts) {
                                var andaman = opts.andaman;
                                var pipe = opts.pipe;
                                var params = {
                                    idToken: accessToken,
                                    res: 'web'
                                };
                                andaman.get_session_token(pipe, params, function (resp) {
                                    if (resp.rc == 1) {
                                        pipe.setTokens(resp.profile.sessionToken, resp.profile.idToken);
                                    }
                                    resolve(resp);
                                });
                            });
                        } else {
                            resolve();
                        }
                    });
                };
                UserService.prototype.login = function (email, password) {
                    return new Promise(function (resolve) {
                        andaman_service_1.default.ready().then(function (opts) {
                            var andaman = opts.andaman;
                            var pipe = opts.pipe;
                            var credentials = {
                                email: email,
                                password: password,
                                res: 'web'
                            };
                            andaman.sso_login(pipe, credentials, function (resp) {
                                if (resp.rc == 1) {
                                    pipe.setTokens(resp.profile.sessionToken, resp.profile.idToken);
                                }
                                resolve(resp);
                            });
                        });
                    });
                };
                UserService.prototype.getProfile = function () {
                    return new Promise(function (resolve) {
                        andaman_service_1.default.ready().then(function (opts) {
                            var andaman = opts.andaman;
                            var pipe = opts.pipe;
                            andaman.get_profile(pipe, {}, function (resp) {
                                resolve(resp);
                            });
                        });
                    });
                };
                UserService.singleton = function () {
                    if (!UserService._instance) {
                        UserService._instance = new UserService();
                    }
                    return UserService._instance;
                };
                return UserService;
            }();
            exports_1("default", UserService);
        }
    };
});
$__System.register("12f", [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var USERS, COMMONS;
    return {
        setters: [],
        execute: function () {
            exports_1("USERS", USERS = {
                LOGIN: 'USERS.LOGIN',
                LOGIN_SUCCESS: 'USERS.LOGIN_SUCCESS',
                LOGIN_FAILED: 'USERS.LOGIN_FAILED',
                LOGOUT: 'USERS.LOGOUT',
                SSO_LOGIN_SUCCESS: 'USERS.SSO_LOGIN_SUCCESS',
                SSO_LOGIN_FAILED: 'USERS.SSO_LOGIN_FAILED',
                GET_PROFILE_SUCCESS: 'USERS.GET_PROFILE_SUCCESS',
                GET_PROFILE_FAILED: 'USERS.GET_PROFILE_FAILED',
                REMEMBER_ME: 'USERS.REMEMBER_ME',
                SAVE_ACCESS_TOKEN: 'USERS.SAVE_ACCESS_TOKEN',
                REMOVE_ACCESS_TOKEN: 'USERS.REMOVE_ACCESS_TOKEN'
            });
            exports_1("COMMONS", COMMONS = {
                TOGGLE_LOADING: 'COMMONS.TOGGLE_LOADING'
            });
        }
    };
});
$__System.register("158", ["12f"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var types_1;
    var commonActions;
    return {
        setters: [function (types_1_1) {
            types_1 = types_1_1;
        }],
        execute: function () {
            commonActions = {
                toggleLoading: function (isLoading) {
                    return { type: types_1.COMMONS.TOGGLE_LOADING, data: isLoading };
                }
            };
            exports_1("default", commonActions);
        }
    };
});
$__System.register('130', ['12f', '12e', '157', '158'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var types_1, store_1, user_service_1, actions_1;
    var userActions;
    return {
        setters: [function (types_1_1) {
            types_1 = types_1_1;
        }, function (store_1_1) {
            store_1 = store_1_1;
        }, function (user_service_1_1) {
            user_service_1 = user_service_1_1;
        }, function (actions_1_1) {
            actions_1 = actions_1_1;
        }],
        execute: function () {
            userActions = {
                login: function (email, password) {
                    return function (dispatch) {
                        dispatch(actions_1.default.toggleLoading(true));
                        user_service_1.default.singleton().login(email, password).then(function (resp) {
                            dispatch(actions_1.default.toggleLoading(false));
                            if (resp.rc === 1) {
                                dispatch(userActions.loginSuccess(resp.profile));
                                dispatch(userActions.saveAccessToken());
                                dispatch(userActions.getProfile());
                            } else {
                                dispatch(userActions.loginFailed(resp));
                            }
                        });
                    };
                },
                loginFailed: function (error) {
                    return { type: types_1.USERS.LOGIN_FAILED, data: { error: error } };
                },
                loginSuccess: function (user) {
                    return { type: types_1.USERS.LOGIN_SUCCESS, data: user };
                },
                logout: function () {
                    return function (dispatch) {
                        dispatch(userActions.removeAccessToken());
                        dispatch(userActions._logout());
                    };
                },
                _logout: function () {
                    return { type: types_1.USERS.LOGOUT };
                },
                getProfile: function () {
                    return function (dispatch) {
                        user_service_1.default.singleton().getProfile().then(function (resp) {
                            console.log('+++++ get_profile resp = ' + JSON.stringify(resp));
                            if (resp.rc === 1) {
                                dispatch(userActions.getProfileSuccess(resp.profile));
                            } else {
                                dispatch(userActions.getProfileFailed(resp));
                            }
                        });
                    };
                },
                getProfileSuccess: function (profile) {
                    return { type: types_1.USERS.GET_PROFILE_SUCCESS, data: profile };
                },
                getProfileFailed: function (resp) {
                    return { type: types_1.USERS.GET_PROFILE_FAILED, data: resp };
                },
                rememberMe: function (remember) {
                    return { type: types_1.USERS.REMEMBER_ME, data: remember };
                },
                ssoLogin: function () {
                    return function (dispatch) {
                        dispatch(actions_1.default.toggleLoading(true));
                        user_service_1.default.singleton().ssoLogin().then(function (resp) {
                            dispatch(actions_1.default.toggleLoading(false));
                            if (resp) {
                                if (resp.rc == 1) {
                                    dispatch(userActions.ssoLoginSuccess(resp.profile));
                                    dispatch(userActions.getProfile());
                                } else {
                                    dispatch(userActions.ssoLoginFailed(resp));
                                }
                            }
                        });
                    };
                },
                ssoLoginSuccess: function (profile) {
                    return { type: types_1.USERS.SSO_LOGIN_SUCCESS, data: profile };
                },
                ssoLoginFailed: function (resp) {
                    return { type: types_1.USERS.SSO_LOGIN_FAILED, data: resp };
                },
                saveAccessToken: function () {
                    var state = store_1.default.getState();
                    var user = state.userData.user;
                    if (user) localStorage.setItem('access_token', user.idToken);
                    return { type: types_1.USERS.SAVE_ACCESS_TOKEN };
                },
                removeAccessToken: function () {
                    localStorage.removeItem('access_token');
                    return { type: types_1.USERS.REMOVE_ACCESS_TOKEN };
                }
            };
            exports_1("default", userActions);
        }
    };
});
$__System.register('159', ['12d', '12f', '12e', '144', '130'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var riot_ts_1, types_1, store_1, components, actions_1;
    return {
        setters: [function (riot_ts_1_1) {
            riot_ts_1 = riot_ts_1_1;
        }, function (types_1_1) {
            types_1 = types_1_1;
        }, function (store_1_1) {
            store_1 = store_1_1;
        }, function (components_1) {
            components = components_1;
        }, function (actions_1_1) {
            actions_1 = actions_1_1;
        }],
        execute: function () {
            components.initialize();
            riot_ts_1.riot.route(function (action) {
                if (action == 'login') {
                    return riot_ts_1.riot.mount('#main', 'landing-page');
                }
                var state = store_1.default.getState();
                if (!state.userData.user) {
                    return riot_ts_1.riot.route('login');
                }
                switch (action) {
                    case '':
                    case 'home':
                        return riot_ts_1.riot.mount('#main', 'home-page');
                }
            });
            store_1.default.subscribe(function () {
                var state = store_1.default.getState();
                if (state.lastAction.type == types_1.USERS.GET_PROFILE_SUCCESS) {
                    riot_ts_1.riot.route('');
                } else if (!state.userData.user) {
                    riot_ts_1.riot.route('login');
                }
            });
            riot_ts_1.riot.route.start(true);
            store_1.default.dispatch(actions_1.default.ssoLogin());
        }
    };
});
$__System.register("15a", ["15b"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var refs_1;
    var SideBarItemType, SideBar;
    return {
        setters: [function (refs_1_1) {
            refs_1 = refs_1_1;
        }],
        execute: function () {
            (function (SideBarItemType) {
                SideBarItemType[SideBarItemType["Command"] = 0] = "Command";
                SideBarItemType[SideBarItemType["Header"] = 1] = "Header";
                SideBarItemType[SideBarItemType["Divider"] = 2] = "Divider";
            })(SideBarItemType || (SideBarItemType = {}));
            SideBar = function (_super) {
                __extends(SideBar, _super);
                function SideBar() {
                    _super.apply(this, arguments);
                    this.items = [{ title: "KPI's", view: 'kpi' }, { title: 'Wallet Configuration', view: 'wallet-config' }, { title: 'Find Accounts', view: 'find-accounts' }, { title: 'Lock & Unlock Wallets', view: 'lock-unlock-wallet' }, { title: 'Reset Password', view: 'reset-password' }, { title: 'divider', divider: true }, { title: 'Token Issuers', view: 'token-issuers' }, { title: 'Reports', header: true }, { title: 'Token Reconciliation', view: 'token-reconciliation' }, { title: 'Daily Report', view: 'daily-report' }, { title: 'Onboarding Report', view: 'onboarding-report' }, { title: 'Users', header: true }, { title: 'Logout', view: 'logout' }];
                }
                SideBar.prototype.render = function () {
                    return refs_1.tsx.createElement("div", { class: "uk-panel uk-panel-box" }, refs_1.tsx.createElement("h3", { class: "uk-panel-title" }, "Dashboard"), refs_1.tsx.createElement("hr", null), refs_1.tsx.createElement("ul", { class: "uk-nav uk-nav-side" }, this.items.map(function (item) {
                        var li = null;
                        if (item.header) {
                            li = refs_1.tsx.createElement("li", null, refs_1.tsx.createElement("a", { class: "uk-nav-header" }, item.title));
                        } else if (item.divider) {
                            li = refs_1.tsx.createElement("li", null, refs_1.tsx.createElement("a", { class: "uk-nav-divider" }));
                        } else {
                            li = refs_1.tsx.createElement("li", null, refs_1.tsx.createElement(refs_1.ViewLink, { to: item.view }, item.title));
                        }
                        return li;
                    })));
                };
                return SideBar;
            }(refs_1.ComponentBase);
            refs_1.registerElement(SideBar, 'main-sidebar');
        }
    };
});
$__System.register('15c', [], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var EMPTY, HOP, fns, memoize, debounce, bind;
    /** Creates a function that supports the following calling styles:
     *	d() - returns an unconfigured decorator
     *	d(opts) - returns a configured decorator
     *	d(fn, opts) - returns a decorated proxy to `fn`
     *	d(target, key, desc) - the decorator itself
     *
     *	@Example:
     *		// simple identity deco:
     *		let d = multiMethod( fn => fn );
     *
     *		class Foo {
     *			@d
     *			bar() { }
     *
     *			@d()
     *			baz() { }
     *
     *			@d({ opts })
     *			bat() { }
     *
     *			bap = d(() => {})
     *		}
     */
    function multiMethod(inner, deco) {
        deco = deco || inner.decorate || decorator(inner);
        var d = deco();
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var l = args.length;
            return (l < 2 ? deco : l > 2 ? d : inner).apply(void 0, args);
        };
    }
    /** Returns function supports the forms:
     *	deco(target, key, desc) -> decorate a method
     *	deco(Fn) -> call the decorator proxy on a function
     */
    function decorator(fn) {
        return function (opt) {
            return typeof opt === 'function' ? fn(opt) : function (target, key, desc) {
                desc.value = fn(desc.value, opt, target, key, desc);
            };
        };
    }
    return {
        setters: [],
        execute: function () {
            EMPTY = {};
            HOP = Object.prototype.hasOwnProperty;
            fns = {
                /**  let cachedFn = memoize(originalFn); */
                memoize: function (fn, opt) {
                    if (opt === void 0) {
                        opt = EMPTY;
                    }
                    var cache = opt.cache || {};
                    return function () {
                        var a = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            a[_i - 0] = arguments[_i];
                        }
                        var k = String(a[0]);
                        if (opt.caseSensitive === false) k = k.toLowerCase();
                        return HOP.call(cache, k) ? cache[k] : cache[k] = fn.apply(this, a);
                    };
                },
                /** let throttled = debounce(10, console.log); */
                debounce: function (fn, opts) {
                    if (typeof opts === 'function') {
                        var p = fn;
                        fn = opts;
                        opts = p;
                    }
                    var delay = opts && opts.delay || opts || 0,
                        args,
                        context,
                        timer;
                    return function () {
                        var a = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            a[_i - 0] = arguments[_i];
                        }
                        args = a;
                        context = this;
                        if (!timer) timer = setTimeout(function () {
                            fn.apply(context, args);
                            args = context = timer = null;
                        }, delay);
                    };
                },
                bind: function (target, key, _a) {
                    var fn = _a.value;
                    return {
                        configurable: true,
                        get: function () {
                            var value = fn.bind(this);
                            Object.defineProperty(this, key, {
                                value: value,
                                configurable: true,
                                writable: true
                            });
                            return value;
                        }
                    };
                }
            };
            memoize = multiMethod(fns.memoize), debounce = multiMethod(fns.debounce), bind = multiMethod(function (f, c) {
                return f.bind(c);
            }, function () {
                return fns.bind;
            });
            exports_1("memoize", memoize);
            exports_1("debounce", debounce);
            exports_1("bind", bind);
            exports_1("default", { memoize: memoize, debounce: debounce, bind: bind });
        }
    };
});
$__System.register('15d', ['15f', '15c', '15e'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __assign = this && this.__assign || Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var preact_1, decko_1, tsx_1;
    var ComponentBase, Views, ViewLink;
    function registerElement(ComponentClass, tagName) {
        var Nothing = function () {
            return null;
        };
        var elementPrototype = Object.create(HTMLElement.prototype);
        var root;
        function renderElement() {
            if (!root) {
                var props = [].slice.call(this.attributes).reduce(function (attrs, attr) {
                    attrs[attr.nodeName] = attr.nodeValue;
                    return attrs;
                }, {});
                root = preact_1.render(tsx_1.tsx.createElement(ComponentClass, __assign({}, props)), this);
            }
        }
        var members = {
            attachedCallback: renderElement,
            attributeChangedCallback: renderElement,
            detachedCallback: function () {
                preact_1.render('', this, root);
                root = null;
            }
        };
        Object.assign(elementPrototype, members);
        return document.registerElement(tagName || ComponentClass.displayName, {
            prototype: elementPrototype
        });
    }
    return {
        setters: [function (preact_1_1) {
            preact_1 = preact_1_1;
        }, function (decko_1_1) {
            decko_1 = decko_1_1;
        }, function (tsx_1_1) {
            tsx_1 = tsx_1_1;
        }],
        execute: function () {
            ComponentBase = function (_super) {
                __extends(ComponentBase, _super);
                function ComponentBase() {
                    _super.apply(this, arguments);
                }
                ComponentBase.prototype.ignores = function () {
                    var keys = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        keys[_i - 0] = arguments[_i];
                    }
                    return ComponentBase.ignores.apply(ComponentBase, [this.props || {}].concat(keys));
                };
                ComponentBase.ignores = function (props) {
                    var keys = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        keys[_i - 1] = arguments[_i];
                    }
                    var res = {};
                    for (var i in props) {
                        if (props.hasOwnProperty(i) && keys.indexOf(i) == -1) {
                            res[i] = props[i];
                        }
                    }
                    return res;
                };
                return ComponentBase;
            }(preact_1.Component);
            /** Conditionally renders children based on their `name` matching a `view` prop */
            Views = function (_super) {
                __extends(Views, _super);
                function Views() {
                    var _this = this;
                    _super.apply(this, arguments);
                    this.state = {
                        view: this.props.view // can pass default view in as a prop
                    };
                    // route to a given view
                    this.route = function (view) {
                        _this.setState({ view: view });
                    };
                }
                // child components can call:  this.context.route('some-view');
                Views.prototype.getChildContext = function () {
                    return { route: this.route };
                };
                Views.prototype.render = function (_a, _b) {
                    var children = _a.children;
                    var view = _b.view;
                    // just render the child whose `name` prop matches the current view:
                    return children.filter(function (child) {
                        return child.attributes.name === view;
                    })[0] || null;
                };
                return Views;
            }(ComponentBase);
            exports_1("Views", Views);
            ViewLink = function (_super) {
                __extends(ViewLink, _super);
                function ViewLink() {
                    _super.apply(this, arguments);
                }
                ViewLink.prototype.onClick = function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    var context = this.context;
                    if (context && context.route) {
                        context.route(this.props.to);
                    }
                };
                ViewLink.prototype.render = function (_a) {
                    var to = _a.to;
                    var props = this.ignores('to');
                    return tsx_1.tsx.createElement("a", __assign({ onClick: this.onClick }, props));
                };
                __decorate([decko_1.bind, __metadata('design:type', Function), __metadata('design:paramtypes', [Object]), __metadata('design:returntype', void 0)], ViewLink.prototype, "onClick", null);
                return ViewLink;
            }(ComponentBase);
            exports_1("ViewLink", ViewLink);
            exports_1("registerElement", registerElement);
            exports_1("ComponentBase", ComponentBase);
            exports_1("bind", decko_1.bind);
            exports_1("render", preact_1.render);
        }
    };
});
$__System.registerDynamic('15f', [], true, function ($__require, exports, module) {
    var define,
        global = this || self,
        GLOBAL = global;
    !function (global, factory) {
        'object' == typeof exports && 'undefined' != typeof module ? factory(exports) : 'function' == typeof define && define.amd ? define(['exports'], factory) : factory(global.preact = global.preact || {});
    }(this, function (exports) {
        function VNode(nodeName, attributes, children) {
            this.nodeName = nodeName;
            this.attributes = attributes;
            this.children = children;
            this.key = attributes && attributes.key;
        }
        function extend(obj, props) {
            if (props) for (var i in props) if (void 0 !== props[i]) obj[i] = props[i];
            return obj;
        }
        function clone(obj) {
            return extend({}, obj);
        }
        function delve(obj, key) {
            for (var p = key.split('.'), i = 0; i < p.length && obj; i++) obj = obj[p[i]];
            return obj;
        }
        function toArray(obj, offset) {
            return [].slice.call(obj, offset);
        }
        function isFunction(obj) {
            return 'function' == typeof obj;
        }
        function isString(obj) {
            return 'string' == typeof obj;
        }
        function empty(x) {
            return void 0 === x || null === x;
        }
        function falsey(value) {
            return value === !1 || empty(value);
        }
        function hashToClassName(c) {
            var str = '';
            for (var prop in c) if (c[prop]) {
                if (str) str += ' ';
                str += prop;
            }
            return str;
        }
        function h(nodeName, attributes, firstChild) {
            var children,
                arr,
                lastSimple,
                len = arguments.length;
            if (len > 2) {
                var type = typeof firstChild;
                if (3 === len && 'object' !== type && 'function' !== type) {
                    if (!falsey(firstChild)) children = [String(firstChild)];
                } else {
                    children = [];
                    for (var i = 2; i < len; i++) {
                        var _p = arguments[i];
                        if (!falsey(_p)) {
                            if (_p.join) arr = _p;else (arr = SHARED_TEMP_ARRAY)[0] = _p;
                            for (var j = 0; j < arr.length; j++) {
                                var child = arr[j],
                                    simple = !(falsey(child) || isFunction(child) || child instanceof VNode);
                                if (simple && !isString(child)) child = String(child);
                                if (simple && lastSimple) children[children.length - 1] += child;else if (!falsey(child)) {
                                    children.push(child);
                                    lastSimple = simple;
                                }
                            }
                        } else ;
                    }
                }
            } else if (attributes && attributes.children) return h(nodeName, attributes, attributes.children);
            if (attributes) {
                if (attributes.children) delete attributes.children;
                if (!isFunction(nodeName)) {
                    if ('className' in attributes) {
                        attributes.class = attributes.className;
                        delete attributes.className;
                    }
                    lastSimple = attributes.class;
                    if (lastSimple && !isString(lastSimple)) attributes.class = hashToClassName(lastSimple);
                }
            }
            var p = new VNode(nodeName, attributes || void 0, children);
            if (options.vnode) options.vnode(p);
            return p;
        }
        function cloneElement(vnode, props) {
            return h(vnode.nodeName, extend(clone(vnode.attributes), props), arguments.length > 2 ? toArray(arguments, 2) : vnode.children);
        }
        function createLinkedState(component, key, eventPath) {
            var path = key.split('.'),
                p0 = path[0];
            return function (e) {
                var _component$setState;
                var v,
                    i,
                    t = e && e.currentTarget || this,
                    s = component.state,
                    obj = s;
                if (isString(eventPath)) v = delve(e, eventPath);else v = t.nodeName ? (t.nodeName + t.type).match(/^input(check|rad)/i) ? t.checked : t.value : e;
                if (path.length > 1) {
                    for (i = 0; i < path.length - 1; i++) obj = obj[path[i]] || (obj[path[i]] = {});
                    obj[path[i]] = v;
                    v = s[p0];
                }
                component.setState((_component$setState = {}, _component$setState[p0] = v, _component$setState));
            };
        }
        function enqueueRender(component) {
            if (1 === items.push(component)) (options.debounceRendering || defer)(rerender);
        }
        function rerender() {
            if (items.length) {
                var p,
                    currentItems = items;
                items = itemsOffline;
                itemsOffline = currentItems;
                while (p = currentItems.pop()) if (p._dirty) renderComponent(p);
            }
        }
        function isFunctionalComponent(vnode) {
            var nodeName = vnode && vnode.nodeName;
            return nodeName && isFunction(nodeName) && !(nodeName.prototype && nodeName.prototype.render);
        }
        function buildFunctionalComponent(vnode, context) {
            return vnode.nodeName(getNodeProps(vnode), context || EMPTY);
        }
        function ensureNodeData(node, data) {
            return node[ATTR_KEY] || (node[ATTR_KEY] = data || {});
        }
        function getNodeType(node) {
            if (node instanceof Text) return 3;
            if (node instanceof Element) return 1;else return 0;
        }
        function removeNode(node) {
            var p = node.parentNode;
            if (p) p.removeChild(node);
        }
        function setAccessor(node, name, value, old, isSvg) {
            ensureNodeData(node)[name] = value;
            if ('key' !== name && 'children' !== name && 'innerHTML' !== name) if ('class' === name && !isSvg) node.className = value || '';else if ('style' === name) {
                if (!value || isString(value) || isString(old)) node.style.cssText = value || '';
                if (value && 'object' == typeof value) {
                    if (!isString(old)) for (var i in old) if (!(i in value)) node.style[i] = '';
                    for (var i in value) node.style[i] = 'number' == typeof value[i] && !NON_DIMENSION_PROPS[i] ? value[i] + 'px' : value[i];
                }
            } else if ('dangerouslySetInnerHTML' === name) {
                if (value) node.innerHTML = value.__html;
            } else if ('o' == name[0] && 'n' == name[1]) {
                var l = node._listeners || (node._listeners = {});
                name = toLowerCase(name.substring(2));
                if (value) {
                    if (!l[name]) node.addEventListener(name, eventProxy, !!NON_BUBBLING_EVENTS[name]);
                } else if (l[name]) node.removeEventListener(name, eventProxy, !!NON_BUBBLING_EVENTS[name]);
                l[name] = value;
            } else if ('list' !== name && 'type' !== name && !isSvg && name in node) {
                setProperty(node, name, empty(value) ? '' : value);
                if (falsey(value)) node.removeAttribute(name);
            } else {
                var ns = isSvg && name.match(/^xlink\:?(.+)/);
                if (falsey(value)) {
                    if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', toLowerCase(ns[1]));else node.removeAttribute(name);
                } else if ('object' != typeof value && !isFunction(value)) if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', toLowerCase(ns[1]), value);else node.setAttribute(name, value);
            }
        }
        function setProperty(node, name, value) {
            try {
                node[name] = value;
            } catch (e) {}
        }
        function eventProxy(e) {
            return this._listeners[e.type](options.event && options.event(e) || e);
        }
        function getRawNodeAttributes(node) {
            var attrs = {};
            for (var i = node.attributes.length; i--;) attrs[node.attributes[i].name] = node.attributes[i].value;
            return attrs;
        }
        function isSameNodeType(node, vnode) {
            if (isString(vnode)) return 3 === getNodeType(node);
            if (isString(vnode.nodeName)) return isNamedNode(node, vnode.nodeName);
            if (isFunction(vnode.nodeName)) return node._componentConstructor === vnode.nodeName || isFunctionalComponent(vnode);else ;
        }
        function isNamedNode(node, nodeName) {
            return node.normalizedNodeName === nodeName || toLowerCase(node.nodeName) === toLowerCase(nodeName);
        }
        function getNodeProps(vnode) {
            var defaultProps = vnode.nodeName.defaultProps,
                props = clone(defaultProps || vnode.attributes);
            if (defaultProps) extend(props, vnode.attributes);
            if (vnode.children) props.children = vnode.children;
            return props;
        }
        function collectNode(node) {
            removeNode(node);
            if (1 === getNodeType(node)) {
                cleanNode(node);
                var name = toLowerCase(node.nodeName),
                    list = nodes[name];
                if (list) list.push(node);else nodes[name] = [node];
            }
        }
        function createNode(nodeName, isSvg) {
            var name = toLowerCase(nodeName),
                node = nodes[name] && nodes[name].pop() || (isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName));
            ensureNodeData(node);
            node.normalizedNodeName = name;
            return node;
        }
        function cleanNode(node) {
            ensureNodeData(node, getRawNodeAttributes(node));
            node._component = node._componentConstructor = null;
        }
        function flushMounts() {
            var c;
            while (c = mounts.pop()) if (c.componentDidMount) c.componentDidMount();
        }
        function diff(dom, vnode, context, mountAll, parent, rootComponent) {
            diffLevel++;
            var ret = idiff(dom, vnode, context, mountAll, rootComponent);
            if (parent && ret.parentNode !== parent) parent.appendChild(ret);
            if (! --diffLevel) flushMounts();
            return ret;
        }
        function idiff(dom, vnode, context, mountAll, rootComponent) {
            var originalAttributes = vnode && vnode.attributes;
            while (isFunctionalComponent(vnode)) vnode = buildFunctionalComponent(vnode, context);
            if (empty(vnode)) {
                vnode = '';
                if (rootComponent) {
                    if (dom) {
                        if (8 === dom.nodeType) return dom;
                        recollectNodeTree(dom);
                    }
                    return document.createComment(vnode);
                }
            }
            if (isString(vnode)) {
                if (dom) {
                    if (3 === getNodeType(dom) && dom.parentNode) {
                        dom.nodeValue = vnode;
                        return dom;
                    }
                    recollectNodeTree(dom);
                }
                return document.createTextNode(vnode);
            }
            var out = dom,
                nodeName = vnode.nodeName,
                prevSvgMode = isSvgMode;
            if (isFunction(nodeName)) return buildComponentFromVNode(dom, vnode, context, mountAll);
            if (!isString(nodeName)) nodeName = String(nodeName);
            isSvgMode = 'svg' === nodeName ? !0 : 'foreignObject' === nodeName ? !1 : isSvgMode;
            if (!dom) out = createNode(nodeName, isSvgMode);else if (!isNamedNode(dom, nodeName)) {
                out = createNode(nodeName, isSvgMode);
                while (dom.firstChild) out.appendChild(dom.firstChild);
                recollectNodeTree(dom);
            }
            if (vnode.children && 1 === vnode.children.length && 'string' == typeof vnode.children[0] && 1 === out.childNodes.length && out.firstChild instanceof Text) out.firstChild.nodeValue = vnode.children[0];else if (vnode.children || out.firstChild) innerDiffNode(out, vnode.children, context, mountAll);
            diffAttributes(out, vnode.attributes);
            if (originalAttributes && originalAttributes.ref) (out[ATTR_KEY].ref = originalAttributes.ref)(out);
            isSvgMode = prevSvgMode;
            return out;
        }
        function innerDiffNode(dom, vchildren, context, mountAll) {
            var j,
                c,
                vchild,
                child,
                originalChildren = dom.childNodes,
                children = [],
                keyed = {},
                keyedLen = 0,
                min = 0,
                len = originalChildren.length,
                childrenLen = 0,
                vlen = vchildren && vchildren.length;
            if (len) for (var i = 0; i < len; i++) {
                var _child = originalChildren[i],
                    key = vlen ? (c = _child._component) ? c.__key : (c = _child[ATTR_KEY]) ? c.key : null : null;
                if (key || 0 === key) {
                    keyedLen++;
                    keyed[key] = _child;
                } else children[childrenLen++] = _child;
            }
            if (vlen) for (var i = 0; i < vlen; i++) {
                vchild = vchildren[i];
                child = null;
                var key = vchild.key;
                if (!empty(key)) {
                    if (keyedLen && key in keyed) {
                        child = keyed[key];
                        keyed[key] = void 0;
                        keyedLen--;
                    }
                } else if (!child && min < childrenLen) {
                    for (j = min; j < childrenLen; j++) {
                        c = children[j];
                        if (c && isSameNodeType(c, vchild)) {
                            child = c;
                            children[j] = void 0;
                            if (j === childrenLen - 1) childrenLen--;
                            if (j === min) min++;
                            break;
                        }
                    }
                    if (!child && min < childrenLen && isFunction(vchild.nodeName) && mountAll) {
                        child = children[min];
                        children[min++] = void 0;
                    }
                }
                child = idiff(child, vchild, context, mountAll);
                if (child !== originalChildren[i]) dom.insertBefore(child, originalChildren[i] || null);
            }
            if (keyedLen) for (var i in keyed) if (keyed[i]) children[min = childrenLen++] = keyed[i];
            if (min < childrenLen) removeOrphanedChildren(children);
        }
        function removeOrphanedChildren(children, unmountOnly) {
            for (var i = children.length; i--;) {
                var child = children[i];
                if (child) recollectNodeTree(child, unmountOnly);
            }
        }
        function recollectNodeTree(node, unmountOnly) {
            var component = node._component;
            if (component) unmountComponent(component, !unmountOnly);else {
                if (node[ATTR_KEY] && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);
                if (!unmountOnly) collectNode(node);
                if (node.childNodes && node.childNodes.length) removeOrphanedChildren(node.childNodes, unmountOnly);
            }
        }
        function diffAttributes(dom, attrs) {
            var old = dom[ATTR_KEY] || getRawNodeAttributes(dom);
            for (var _name in old) if (!(attrs && _name in attrs)) setAccessor(dom, _name, null, old[_name], isSvgMode);
            if (attrs) for (var _name2 in attrs) if (!(_name2 in old) || attrs[_name2] != old[_name2] || ('value' === _name2 || 'checked' === _name2) && attrs[_name2] != dom[_name2]) setAccessor(dom, _name2, attrs[_name2], old[_name2], isSvgMode);
        }
        function collectComponent(component) {
            var name = component.constructor.name,
                list = components[name];
            if (list) list.push(component);else components[name] = [component];
        }
        function createComponent(Ctor, props, context) {
            var inst = new Ctor(props, context),
                list = components[Ctor.name];
            inst.props = props;
            inst.context = context;
            if (list) for (var i = list.length; i--;) if (list[i].constructor === Ctor) {
                inst.nextBase = list[i].nextBase;
                list.splice(i, 1);
                break;
            }
            return inst;
        }
        function triggerComponentRender(component) {
            if (!component._dirty) {
                component._dirty = !0;
                enqueueRender(component);
            }
        }
        function setComponentProps(component, props, opts, context, mountAll) {
            var b = component.base;
            if (!component._disableRendering) {
                component._disableRendering = !0;
                if (component.__ref = props.ref) delete props.ref;
                if (component.__key = props.key) delete props.key;
                if (empty(b) || mountAll) {
                    if (component.componentWillMount) component.componentWillMount();
                } else if (component.componentWillReceiveProps) component.componentWillReceiveProps(props, context);
                if (context && context !== component.context) {
                    if (!component.prevContext) component.prevContext = component.context;
                    component.context = context;
                }
                if (!component.prevProps) component.prevProps = component.props;
                component.props = props;
                component._disableRendering = !1;
                if (0 !== opts) if (1 === opts || options.syncComponentUpdates !== !1 || !b) renderComponent(component, 1, mountAll);else triggerComponentRender(component);
                if (component.__ref) component.__ref(component);
            }
        }
        function renderComponent(component, opts, mountAll) {
            if (!component._disableRendering) {
                var skip,
                    rendered,
                    props = component.props,
                    state = component.state,
                    context = component.context,
                    previousProps = component.prevProps || props,
                    previousState = component.prevState || state,
                    previousContext = component.prevContext || context,
                    isUpdate = component.base,
                    initialBase = isUpdate || component.nextBase,
                    initialChildComponent = component._component;
                if (isUpdate) {
                    component.props = previousProps;
                    component.state = previousState;
                    component.context = previousContext;
                    if (2 !== opts && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === !1) skip = !0;else if (component.componentWillUpdate) component.componentWillUpdate(props, state, context);
                    component.props = props;
                    component.state = state;
                    component.context = context;
                }
                component.prevProps = component.prevState = component.prevContext = component.nextBase = null;
                component._dirty = !1;
                if (!skip) {
                    if (component.render) rendered = component.render(props, state, context);
                    if (component.getChildContext) context = extend(clone(context), component.getChildContext());
                    while (isFunctionalComponent(rendered)) rendered = buildFunctionalComponent(rendered, context);
                    var toUnmount,
                        base,
                        childComponent = rendered && rendered.nodeName;
                    if (isFunction(childComponent) && childComponent.prototype.render) {
                        var inst = initialChildComponent,
                            childProps = getNodeProps(rendered);
                        if (inst && inst.constructor === childComponent) setComponentProps(inst, childProps, 1, context);else {
                            toUnmount = inst;
                            inst = createComponent(childComponent, childProps, context);
                            inst.nextBase = inst.nextBase || mountAll && initialBase;
                            inst._parentComponent = component;
                            component._component = inst;
                            setComponentProps(inst, childProps, 0, context);
                            renderComponent(inst, 1);
                        }
                        base = inst.base;
                    } else {
                        var cbase = initialBase;
                        toUnmount = initialChildComponent;
                        if (toUnmount) cbase = component._component = null;
                        if (initialBase || 1 === opts) {
                            if (cbase) cbase._component = null;
                            base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, !0);
                        }
                    }
                    if (initialBase && base !== initialBase) {
                        var baseParent = initialBase.parentNode;
                        if (baseParent && base !== baseParent) baseParent.replaceChild(base, initialBase);
                        if (!toUnmount && component._parentComponent) {
                            initialBase._component = null;
                            recollectNodeTree(initialBase);
                        }
                    }
                    if (toUnmount) unmountComponent(toUnmount, base !== initialBase);
                    component.base = base;
                    if (base) {
                        var componentRef = component,
                            t = component;
                        while (t = t._parentComponent) componentRef = t;
                        base._component = componentRef;
                        base._componentConstructor = componentRef.constructor;
                    }
                }
                if (!isUpdate || mountAll) {
                    mounts.unshift(component);
                    if (!diffLevel) flushMounts();
                } else if (!skip && component.componentDidUpdate) component.componentDidUpdate(previousProps, previousState, previousContext);
                var fn,
                    cb = component._renderCallbacks;
                if (cb) while (fn = cb.pop()) fn.call(component);
                return rendered;
            }
        }
        function buildComponentFromVNode(dom, vnode, context, mountAll) {
            var c = dom && dom._component,
                oldDom = dom,
                isDirectOwner = c && dom._componentConstructor === vnode.nodeName,
                isOwner = isDirectOwner,
                props = getNodeProps(vnode);
            while (c && !isOwner && (c = c._parentComponent)) isOwner = c.constructor === vnode.nodeName;
            if (isOwner && (!mountAll || c._component)) {
                setComponentProps(c, props, 3, context, mountAll);
                dom = c.base;
            } else {
                if (c && !isDirectOwner) {
                    unmountComponent(c, !0);
                    dom = oldDom = null;
                }
                c = createComponent(vnode.nodeName, props, context);
                if (dom && !c.nextBase) c.nextBase = dom;
                setComponentProps(c, props, 1, context, mountAll);
                dom = c.base;
                if (oldDom && dom !== oldDom) {
                    oldDom._component = null;
                    recollectNodeTree(oldDom);
                }
            }
            return dom;
        }
        function unmountComponent(component, remove) {
            var base = component.base;
            component._disableRendering = !0;
            if (component.componentWillUnmount) component.componentWillUnmount();
            component.base = null;
            var inner = component._component;
            if (inner) unmountComponent(inner, remove);else if (base) {
                if (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);
                component.nextBase = base;
                if (remove) {
                    removeNode(base);
                    collectComponent(component);
                }
                removeOrphanedChildren(base.childNodes, !remove);
            }
            if (component.__ref) component.__ref(null);
            if (component.componentDidUnmount) component.componentDidUnmount();
        }
        function Component(props, context) {
            this._dirty = !0;
            this._disableRendering = !1;
            this.prevState = this.prevProps = this.prevContext = this.base = this.nextBase = this._parentComponent = this._component = this.__ref = this.__key = this._linkedStates = this._renderCallbacks = null;
            this.context = context;
            this.props = props;
            this.state = this.getInitialState && this.getInitialState() || {};
        }
        function render(vnode, parent, merge) {
            return diff(merge, vnode, {}, !1, parent);
        }
        var options = {};
        var lcCache = {};
        var toLowerCase = function (s) {
            return lcCache[s] || (lcCache[s] = s.toLowerCase());
        };
        var resolved = 'undefined' != typeof Promise && Promise.resolve();
        var defer = resolved ? function (f) {
            resolved.then(f);
        } : setTimeout;
        var SHARED_TEMP_ARRAY = [];
        var EMPTY = {};
        var ATTR_KEY = 'undefined' != typeof Symbol ? Symbol.for('preactattr') : '__preactattr_';
        var NON_DIMENSION_PROPS = {
            boxFlex: 1,
            boxFlexGroup: 1,
            columnCount: 1,
            fillOpacity: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            fontWeight: 1,
            lineClamp: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            strokeOpacity: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1
        };
        var NON_BUBBLING_EVENTS = {
            blur: 1,
            error: 1,
            focus: 1,
            load: 1,
            resize: 1,
            scroll: 1
        };
        var items = [];
        var itemsOffline = [];
        var nodes = {};
        var mounts = [];
        var diffLevel = 0;
        var isSvgMode = !1;
        var components = {};
        extend(Component.prototype, {
            linkState: function (key, eventPath) {
                var c = this._linkedStates || (this._linkedStates = {}),
                    cacheKey = key + '|' + eventPath;
                return c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));
            },
            setState: function (state, callback) {
                var s = this.state;
                if (!this.prevState) this.prevState = clone(s);
                extend(s, isFunction(state) ? state(s, this.props) : state);
                if (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);
                triggerComponentRender(this);
            },
            forceUpdate: function () {
                renderComponent(this, 2);
            },
            render: function () {
                return null;
            }
        });
        exports.h = h;
        exports.cloneElement = cloneElement;
        exports.Component = Component;
        exports.render = render;
        exports.rerender = rerender;
        exports.options = options;
    });
    

    return module.exports;
});
$__System.register("15e", ["15f"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var preact_1;
    var tsx;
    return {
        setters: [function (preact_1_1) {
            preact_1 = preact_1_1;
        }],
        execute: function () {
            tsx = {
                createElement: preact_1.h
            };
            exports_1("tsx", tsx);
        }
    };
});
$__System.register('15b', ['15d', '15e'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var base_1, tsx_1;
    return {
        setters: [function (base_1_1) {
            base_1 = base_1_1;
        }, function (tsx_1_1) {
            tsx_1 = tsx_1_1;
        }],
        execute: function () {
            exports_1("ViewLink", base_1.ViewLink);
            exports_1("Views", base_1.Views);
            exports_1("ComponentBase", base_1.ComponentBase);
            exports_1("registerElement", base_1.registerElement);
            exports_1("render", base_1.render);
            exports_1("tsx", tsx_1.tsx);
        }
    };
});
$__System.register("160", ["15b"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var refs_1;
    var WalletSnapshot, WalletInfo, TransactionList, Dashboard;
    return {
        setters: [function (refs_1_1) {
            refs_1 = refs_1_1;
        }],
        execute: function () {
            WalletSnapshot = function (_a) {
                var items = _a.items;
                return refs_1.tsx.createElement("table", { class: "uk-table" }, refs_1.tsx.createElement("tbody", null, items.map(function (item) {
                    return refs_1.tsx.createElement("tr", null, refs_1.tsx.createElement("td", null, item.name), refs_1.tsx.createElement("td", null, item.value));
                })));
            };
            WalletInfo = function (_a) {
                var items = _a.items;
                return refs_1.tsx.createElement("table", { class: "uk-table" }, refs_1.tsx.createElement("tbody", null, items.map(function (item) {
                    return refs_1.tsx.createElement("tr", null, refs_1.tsx.createElement("td", null, item.name), refs_1.tsx.createElement("td", null, item.value));
                })));
            };
            TransactionList = function (_a) {
                var items = _a.items,
                    title = _a.title;
                return refs_1.tsx.createElement("div", { class: "uk-panel uk-panel-box" }, refs_1.tsx.createElement("h3", { class: "uk-panel-title" }, title), refs_1.tsx.createElement("table", { class: "uk-table" }, refs_1.tsx.createElement("thead", null, refs_1.tsx.createElement("tr", null, refs_1.tsx.createElement("td", null, "Sender"), refs_1.tsx.createElement("td", null, "Recipient"), refs_1.tsx.createElement("td", null, "Amount"), refs_1.tsx.createElement("td", null, "Date/Time"))), refs_1.tsx.createElement("tbody", null, items.map(function (item) {
                    return refs_1.tsx.createElement("tr", null, refs_1.tsx.createElement("td", null, item.sender), refs_1.tsx.createElement("td", null, item.recipient), refs_1.tsx.createElement("td", null, item.amount), refs_1.tsx.createElement("td", null, item.time));
                }))));
            };
            Dashboard = function (_super) {
                __extends(Dashboard, _super);
                function Dashboard() {
                    _super.apply(this, arguments);
                    this.walletSnapshotData = [{ name: 'Number of Wallets', value: 58 }, { name: 'New Wallets Today', value: 6 }, { name: 'Wallets with Balance &gt; 0', value: 6 }, { name: 'Wallets with Balance &gt; €100', value: 0 }, { name: 'Wallets with Zero Balance', value: 52 }];
                    this.walletInfoData = [{ name: 'Locked Wallets', value: 58 }, { name: 'Wallets Added Past 7 Days', value: '' }];
                    this.currentTransactionData = [{ sender: 'sender 1', recipient: 'recipient 1', amount: 1, time: '2016-09-21' }, { sender: 'sender 2', recipient: 'recipient 2', amount: 2, time: '2016-09-21' }, { sender: 'sender 3', recipient: 'recipient 3', amount: 3, time: '2016-09-21' }];
                }
                Dashboard.prototype.render = function () {
                    return refs_1.tsx.createElement("div", { id: "page-wrap" }, refs_1.tsx.createElement("div", { class: "col-sm-12 col-lg-12" }, refs_1.tsx.createElement("div", { class: "col-sm-5", style: "width: 50%; padding-left: 0px;" }, refs_1.tsx.createElement(WalletSnapshot, { items: this.walletSnapshotData })), refs_1.tsx.createElement("div", { class: "col-sm-5 pull-right", style: "width: 50%; padding-right: 0px;" }, refs_1.tsx.createElement(WalletInfo, { items: this.walletInfoData }))), refs_1.tsx.createElement("div", { class: "form-group col-sm-12 col-lg-12" }, refs_1.tsx.createElement(TransactionList, { items: this.currentTransactionData, title: 'Current Transaction' }), refs_1.tsx.createElement(TransactionList, { items: this.currentTransactionData, title: 'TRANSACTIONS PAST 7 DAYS' })));
                };
                return Dashboard;
            }(refs_1.ComponentBase);
            exports_1("default", Dashboard);
        }
    };
});
$__System.register('161', ['15b', '160'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var refs_1, dashboard_1;
    var MainView;
    return {
        setters: [function (refs_1_1) {
            refs_1 = refs_1_1;
        }, function (dashboard_1_1) {
            dashboard_1 = dashboard_1_1;
        }],
        execute: function () {
            MainView = function (_super) {
                __extends(MainView, _super);
                function MainView() {
                    _super.apply(this, arguments);
                }
                MainView.prototype.render = function () {
                    return refs_1.tsx.createElement(refs_1.Views, { view: "dashboard" }, refs_1.tsx.createElement(dashboard_1.default, { name: "dashboard" }));
                };
                return MainView;
            }(refs_1.ComponentBase);
            refs_1.registerElement(MainView, 'main-view');
        }
    };
});
$__System.register('162', ['15a', '161'], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [function (_1) {}, function (_2) {}],
        execute: function () {}
    };
});
$__System.register("1", ["12a", "159", "162"], function (exports_1, context_1) {
    "use strict";

    var __moduleName = context_1 && context_1.id;
    return {
        setters: [function (_1) {}, function (_2) {}, function (_3) {}],
        execute: function () {}
    };
});
// import store from './model/store';
// import * as actions from './model/actions';
$__System.register('assets/lib/uikit/css/uikit.min.css!github:systemjs/plugin-css@0.1.23/css.js', [], false, function() {});
(function(c){if (typeof document == 'undefined') return; var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})
("/*! UIkit 2.26.3 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */html{font:400 14px/20px \"Helvetica Neue\",Helvetica,Arial,sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;background:#fff;color:#444}body{margin:0}a{background:0 0}a:active,a:hover{outline:0}.uk-link,a{color:#07d;text-decoration:none;cursor:pointer}.uk-link:hover,a:hover{color:#059;text-decoration:underline}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}:not(pre)>code,:not(pre)>kbd,:not(pre)>samp{font-size:12px;font-family:Consolas,monospace,serif;color:#d05;white-space:nowrap}em{color:#d05}ins{background:#ffa;color:#444;text-decoration:none}mark{background:#ffa;color:#444}q{font-style:italic}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}audio,canvas,iframe,img,svg,video{vertical-align:middle}audio,canvas,img,svg,video{max-width:100%;height:auto;box-sizing:border-box}.uk-img-preserve,.uk-img-preserve audio,.uk-img-preserve canvas,.uk-img-preserve img,.uk-img-preserve svg,.uk-img-preserve video{max-width:none}img{border:0}svg:not(:root){overflow:hidden}blockquote,figure{margin:0}address,blockquote,dl,fieldset,figure,ol,p,pre,ul{margin:0 0 15px 0}*+address,*+blockquote,*+dl,*+fieldset,*+figure,*+ol,*+p,*+pre,*+ul{margin-top:15px}h1,h2,h3,h4,h5,h6{margin:0 0 15px 0;font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-weight:400;color:#444;text-transform:none}*+h1,*+h2,*+h3,*+h4,*+h5,*+h6{margin-top:25px}.uk-h1,h1{font-size:36px;line-height:42px}.uk-h2,h2{font-size:24px;line-height:30px}.uk-h3,h3{font-size:18px;line-height:24px}.uk-h4,h4{font-size:16px;line-height:22px}.uk-h5,h5{font-size:14px;line-height:20px}.uk-h6,h6{font-size:12px;line-height:18px}ol,ul{padding-left:30px}ol>li>ol,ol>li>ul,ul>li>ol,ul>li>ul{margin:0}dt{font-weight:700}dd{margin-left:0}hr{box-sizing:content-box;height:0;margin:15px 0;border:0;border-top:1px solid #ddd}address{font-style:normal}blockquote{padding-left:15px;border-left:5px solid #ddd;font-size:16px;line-height:22px;font-style:italic}pre{padding:10px;background:#f5f5f5;font:12px/18px Consolas,monospace,serif;color:#444;-moz-tab-size:4;tab-size:4;overflow:auto}::-moz-selection{background:#39f;color:#fff;text-shadow:none}::selection{background:#39f;color:#fff;text-shadow:none}article,aside,details,figcaption,figure,footer,header,main,nav,section,summary{display:block}progress{vertical-align:baseline}audio:not([controls]){display:none}[hidden],template{display:none}iframe{border:0}@media screen and (max-width:400px){@-ms-viewport{width:device-width}}.uk-grid{display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin:0;padding:0;list-style:none}.uk-grid:after,.uk-grid:before{content:\"\";display:block;overflow:hidden}.uk-grid:after{clear:both}.uk-grid>*{-ms-flex:none;-webkit-flex:none;flex:none;margin:0;float:left}.uk-grid>*>:last-child{margin-bottom:0}.uk-grid{margin-left:-25px}.uk-grid>*{padding-left:25px}.uk-grid+.uk-grid,.uk-grid-margin,.uk-grid>*>.uk-panel+.uk-panel{margin-top:25px}@media (min-width:1220px){.uk-grid{margin-left:-35px}.uk-grid>*{padding-left:35px}.uk-grid+.uk-grid,.uk-grid-margin,.uk-grid>*>.uk-panel+.uk-panel{margin-top:35px}}.uk-grid-collapse{margin-left:0}.uk-grid-collapse>*{padding-left:0}.uk-grid-collapse+.uk-grid-collapse,.uk-grid-collapse>*>.uk-panel+.uk-panel,.uk-grid-collapse>.uk-grid-margin{margin-top:0}.uk-grid-small{margin-left:-10px}.uk-grid-small>*{padding-left:10px}.uk-grid-small+.uk-grid-small,.uk-grid-small>*>.uk-panel+.uk-panel,.uk-grid-small>.uk-grid-margin{margin-top:10px}.uk-grid-medium{margin-left:-25px}.uk-grid-medium>*{padding-left:25px}.uk-grid-medium+.uk-grid-medium,.uk-grid-medium>*>.uk-panel+.uk-panel,.uk-grid-medium>.uk-grid-margin{margin-top:25px}@media (min-width:960px){.uk-grid-large{margin-left:-35px}.uk-grid-large>*{padding-left:35px}.uk-grid-large+.uk-grid-large,.uk-grid-large-margin,.uk-grid-large>*>.uk-panel+.uk-panel{margin-top:35px}}@media (min-width:1220px){.uk-grid-large{margin-left:-50px}.uk-grid-large>*{padding-left:50px}.uk-grid-large+.uk-grid-large,.uk-grid-large-margin,.uk-grid-large>*>.uk-panel+.uk-panel{margin-top:50px}}.uk-grid-divider:not(:empty){margin-left:-25px;margin-right:-25px}.uk-grid-divider>*{padding-left:25px;padding-right:25px}.uk-grid-divider>[class*=uk-width-1-]:not(.uk-width-1-1):nth-child(n+2),.uk-grid-divider>[class*=uk-width-2-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-3-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-4-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-5-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-6-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-7-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-8-]:nth-child(n+2),.uk-grid-divider>[class*=uk-width-9-]:nth-child(n+2){border-left:1px solid #ddd}@media (min-width:768px){.uk-grid-divider>[class*=uk-width-medium-]:not(.uk-width-medium-1-1):nth-child(n+2){border-left:1px solid #ddd}}@media (min-width:960px){.uk-grid-divider>[class*=uk-width-large-]:not(.uk-width-large-1-1):nth-child(n+2){border-left:1px solid #ddd}}@media (min-width:1220px){.uk-grid-divider:not(:empty){margin-left:-35px;margin-right:-35px}.uk-grid-divider>*{padding-left:35px;padding-right:35px}.uk-grid-divider:empty{margin-top:35px;margin-bottom:35px}}.uk-grid-divider:empty{margin-top:25px;margin-bottom:25px;border-top:1px solid #ddd}.uk-grid-match>*{display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap}.uk-grid-match>*>*{-ms-flex:none;-webkit-flex:none;flex:none;box-sizing:border-box;width:100%}[class*=uk-grid-width]>*{box-sizing:border-box;width:100%}.uk-grid-width-1-2>*{width:50%}.uk-grid-width-1-3>*{width:33.333%}.uk-grid-width-1-4>*{width:25%}.uk-grid-width-1-5>*{width:20%}.uk-grid-width-1-6>*{width:16.666%}.uk-grid-width-1-10>*{width:10%}.uk-grid-width-auto>*{width:auto}@media (min-width:480px){.uk-grid-width-small-1-1>*{width:100%}.uk-grid-width-small-1-2>*{width:50%}.uk-grid-width-small-1-3>*{width:33.333%}.uk-grid-width-small-1-4>*{width:25%}.uk-grid-width-small-1-5>*{width:20%}.uk-grid-width-small-1-6>*{width:16.666%}.uk-grid-width-small-1-10>*{width:10%}}@media (min-width:768px){.uk-grid-width-medium-1-1>*{width:100%}.uk-grid-width-medium-1-2>*{width:50%}.uk-grid-width-medium-1-3>*{width:33.333%}.uk-grid-width-medium-1-4>*{width:25%}.uk-grid-width-medium-1-5>*{width:20%}.uk-grid-width-medium-1-6>*{width:16.666%}.uk-grid-width-medium-1-10>*{width:10%}}@media (min-width:960px){.uk-grid-width-large-1-1>*{width:100%}.uk-grid-width-large-1-2>*{width:50%}.uk-grid-width-large-1-3>*{width:33.333%}.uk-grid-width-large-1-4>*{width:25%}.uk-grid-width-large-1-5>*{width:20%}.uk-grid-width-large-1-6>*{width:16.666%}.uk-grid-width-large-1-10>*{width:10%}}@media (min-width:1220px){.uk-grid-width-xlarge-1-1>*{width:100%}.uk-grid-width-xlarge-1-2>*{width:50%}.uk-grid-width-xlarge-1-3>*{width:33.333%}.uk-grid-width-xlarge-1-4>*{width:25%}.uk-grid-width-xlarge-1-5>*{width:20%}.uk-grid-width-xlarge-1-6>*{width:16.666%}.uk-grid-width-xlarge-1-10>*{width:10%}}[class*=uk-width]{box-sizing:border-box;width:100%}.uk-width-1-1{width:100%}.uk-width-1-2,.uk-width-2-4,.uk-width-3-6,.uk-width-5-10{width:50%}.uk-width-1-3,.uk-width-2-6{width:33.333%}.uk-width-2-3,.uk-width-4-6{width:66.666%}.uk-width-1-4{width:25%}.uk-width-3-4{width:75%}.uk-width-1-5,.uk-width-2-10{width:20%}.uk-width-2-5,.uk-width-4-10{width:40%}.uk-width-3-5,.uk-width-6-10{width:60%}.uk-width-4-5,.uk-width-8-10{width:80%}.uk-width-1-6{width:16.666%}.uk-width-5-6{width:83.333%}.uk-width-1-10{width:10%}.uk-width-3-10{width:30%}.uk-width-7-10{width:70%}.uk-width-9-10{width:90%}@media (min-width:480px){.uk-width-small-1-1{width:100%}.uk-width-small-1-2,.uk-width-small-2-4,.uk-width-small-3-6,.uk-width-small-5-10{width:50%}.uk-width-small-1-3,.uk-width-small-2-6{width:33.333%}.uk-width-small-2-3,.uk-width-small-4-6{width:66.666%}.uk-width-small-1-4{width:25%}.uk-width-small-3-4{width:75%}.uk-width-small-1-5,.uk-width-small-2-10{width:20%}.uk-width-small-2-5,.uk-width-small-4-10{width:40%}.uk-width-small-3-5,.uk-width-small-6-10{width:60%}.uk-width-small-4-5,.uk-width-small-8-10{width:80%}.uk-width-small-1-6{width:16.666%}.uk-width-small-5-6{width:83.333%}.uk-width-small-1-10{width:10%}.uk-width-small-3-10{width:30%}.uk-width-small-7-10{width:70%}.uk-width-small-9-10{width:90%}}@media (min-width:768px){.uk-width-medium-1-1{width:100%}.uk-width-medium-1-2,.uk-width-medium-2-4,.uk-width-medium-3-6,.uk-width-medium-5-10{width:50%}.uk-width-medium-1-3,.uk-width-medium-2-6{width:33.333%}.uk-width-medium-2-3,.uk-width-medium-4-6{width:66.666%}.uk-width-medium-1-4{width:25%}.uk-width-medium-3-4{width:75%}.uk-width-medium-1-5,.uk-width-medium-2-10{width:20%}.uk-width-medium-2-5,.uk-width-medium-4-10{width:40%}.uk-width-medium-3-5,.uk-width-medium-6-10{width:60%}.uk-width-medium-4-5,.uk-width-medium-8-10{width:80%}.uk-width-medium-1-6{width:16.666%}.uk-width-medium-5-6{width:83.333%}.uk-width-medium-1-10{width:10%}.uk-width-medium-3-10{width:30%}.uk-width-medium-7-10{width:70%}.uk-width-medium-9-10{width:90%}}@media (min-width:960px){.uk-width-large-1-1{width:100%}.uk-width-large-1-2,.uk-width-large-2-4,.uk-width-large-3-6,.uk-width-large-5-10{width:50%}.uk-width-large-1-3,.uk-width-large-2-6{width:33.333%}.uk-width-large-2-3,.uk-width-large-4-6{width:66.666%}.uk-width-large-1-4{width:25%}.uk-width-large-3-4{width:75%}.uk-width-large-1-5,.uk-width-large-2-10{width:20%}.uk-width-large-2-5,.uk-width-large-4-10{width:40%}.uk-width-large-3-5,.uk-width-large-6-10{width:60%}.uk-width-large-4-5,.uk-width-large-8-10{width:80%}.uk-width-large-1-6{width:16.666%}.uk-width-large-5-6{width:83.333%}.uk-width-large-1-10{width:10%}.uk-width-large-3-10{width:30%}.uk-width-large-7-10{width:70%}.uk-width-large-9-10{width:90%}}@media (min-width:1220px){.uk-width-xlarge-1-1{width:100%}.uk-width-xlarge-1-2,.uk-width-xlarge-2-4,.uk-width-xlarge-3-6,.uk-width-xlarge-5-10{width:50%}.uk-width-xlarge-1-3,.uk-width-xlarge-2-6{width:33.333%}.uk-width-xlarge-2-3,.uk-width-xlarge-4-6{width:66.666%}.uk-width-xlarge-1-4{width:25%}.uk-width-xlarge-3-4{width:75%}.uk-width-xlarge-1-5,.uk-width-xlarge-2-10{width:20%}.uk-width-xlarge-2-5,.uk-width-xlarge-4-10{width:40%}.uk-width-xlarge-3-5,.uk-width-xlarge-6-10{width:60%}.uk-width-xlarge-4-5,.uk-width-xlarge-8-10{width:80%}.uk-width-xlarge-1-6{width:16.666%}.uk-width-xlarge-5-6{width:83.333%}.uk-width-xlarge-1-10{width:10%}.uk-width-xlarge-3-10{width:30%}.uk-width-xlarge-7-10{width:70%}.uk-width-xlarge-9-10{width:90%}}@media (min-width:768px){[class*=uk-pull-],[class*=uk-push-]{position:relative}.uk-push-1-2,.uk-push-2-4,.uk-push-3-6,.uk-push-5-10{left:50%}.uk-push-1-3,.uk-push-2-6{left:33.333%}.uk-push-2-3,.uk-push-4-6{left:66.666%}.uk-push-1-4{left:25%}.uk-push-3-4{left:75%}.uk-push-1-5,.uk-push-2-10{left:20%}.uk-push-2-5,.uk-push-4-10{left:40%}.uk-push-3-5,.uk-push-6-10{left:60%}.uk-push-4-5,.uk-push-8-10{left:80%}.uk-push-1-6{left:16.666%}.uk-push-5-6{left:83.333%}.uk-push-1-10{left:10%}.uk-push-3-10{left:30%}.uk-push-7-10{left:70%}.uk-push-9-10{left:90%}.uk-pull-1-2,.uk-pull-2-4,.uk-pull-3-6,.uk-pull-5-10{left:-50%}.uk-pull-1-3,.uk-pull-2-6{left:-33.333%}.uk-pull-2-3,.uk-pull-4-6{left:-66.666%}.uk-pull-1-4{left:-25%}.uk-pull-3-4{left:-75%}.uk-pull-1-5,.uk-pull-2-10{left:-20%}.uk-pull-2-5,.uk-pull-4-10{left:-40%}.uk-pull-3-5,.uk-pull-6-10{left:-60%}.uk-pull-4-5,.uk-pull-8-10{left:-80%}.uk-pull-1-6{left:-16.666%}.uk-pull-5-6{left:-83.333%}.uk-pull-1-10{left:-10%}.uk-pull-3-10{left:-30%}.uk-pull-7-10{left:-70%}.uk-pull-9-10{left:-90%}}.uk-panel{display:block;position:relative}.uk-panel,.uk-panel:hover{text-decoration:none}.uk-panel:after,.uk-panel:before{content:\"\";display:table}.uk-panel:after{clear:both}.uk-panel>:not(.uk-panel-title):last-child{margin-bottom:0}.uk-panel-title{margin-top:0;margin-bottom:15px;font-size:18px;line-height:24px;font-weight:400;text-transform:none;color:#444}.uk-panel-badge{position:absolute;top:0;right:0;z-index:1}.uk-panel-teaser{margin-bottom:15px}.uk-panel-body{padding:15px}.uk-panel-box{padding:15px;background:#f5f5f5;color:#444}.uk-panel-box-hover:hover{color:#444}.uk-panel-box .uk-panel-title{color:#444}.uk-panel-box .uk-panel-badge{top:10px;right:10px}.uk-panel-box>.uk-panel-teaser{margin-top:-15px;margin-left:-15px;margin-right:-15px}.uk-panel-box>.uk-nav-side{margin:0 -15px}.uk-panel-box-primary{background-color:#ebf7fd;color:#2d7091}.uk-panel-box-primary-hover:hover{color:#2d7091}.uk-panel-box-primary .uk-panel-title{color:#2d7091}.uk-panel-box-secondary{background-color:#eee;color:#444}.uk-panel-box-secondary-hover:hover{color:#444}.uk-panel-box-secondary .uk-panel-title{color:#444}.uk-panel-hover{padding:15px;color:#444}.uk-panel-hover:hover{background:#f5f5f5;color:#444}.uk-panel-hover .uk-panel-badge{top:10px;right:10px}.uk-panel-hover>.uk-panel-teaser{margin-top:-15px;margin-left:-15px;margin-right:-15px}.uk-panel-header .uk-panel-title{padding-bottom:10px;border-bottom:1px solid #ddd;color:#444}.uk-panel-space{padding:30px}.uk-panel-space .uk-panel-badge{top:30px;right:30px}.uk-panel+.uk-panel-divider{margin-top:50px!important}.uk-panel+.uk-panel-divider:before{content:\"\";display:block;position:absolute;top:-25px;left:0;right:0;border-top:1px solid #ddd}@media (min-width:1220px){.uk-panel+.uk-panel-divider{margin-top:70px!important}.uk-panel+.uk-panel-divider:before{top:-35px}}.uk-block{position:relative;box-sizing:border-box;padding-top:20px;padding-bottom:20px}@media (min-width:768px){.uk-block{padding-top:50px;padding-bottom:50px}}.uk-block:after,.uk-block:before{content:\"\";display:table}.uk-block:after{clear:both}.uk-block>:last-child{margin-bottom:0}.uk-block-large{padding-top:20px;padding-bottom:20px}@media (min-width:768px){.uk-block-large{padding-top:50px;padding-bottom:50px}}@media (min-width:960px){.uk-block-large{padding-top:100px;padding-bottom:100px}}.uk-block-default{background:#fff}.uk-block-muted{background:#f9f9f9}.uk-block-primary{background:#00a8e6}.uk-block-secondary{background:#222}.uk-block-default+.uk-block-default,.uk-block-muted+.uk-block-muted,.uk-block-primary+.uk-block-primary,.uk-block-secondary+.uk-block-secondary{padding-top:0}.uk-article:after,.uk-article:before{content:\"\";display:table}.uk-article:after{clear:both}.uk-article>:last-child{margin-bottom:0}.uk-article+.uk-article{margin-top:25px}.uk-article-title{font-size:36px;line-height:42px;font-weight:400;text-transform:none}.uk-article-title a{color:inherit;text-decoration:none}.uk-article-meta{font-size:12px;line-height:18px;color:#999}.uk-article-lead{color:#444;font-size:18px;line-height:24px;font-weight:400}.uk-article-divider{margin-bottom:25px;border-color:#ddd}*+.uk-article-divider{margin-top:25px}.uk-comment-header{margin-bottom:15px}.uk-comment-header:after,.uk-comment-header:before{content:\"\";display:table}.uk-comment-header:after{clear:both}.uk-comment-avatar{margin-right:15px;float:left}.uk-comment-title{margin:5px 0 0 0;font-size:16px;line-height:22px}.uk-comment-meta{margin:2px 0 0 0;font-size:11px;line-height:16px;color:#999}.uk-comment-body>:last-child{margin-bottom:0}.uk-comment-list{padding:0;list-style:none}.uk-comment-list .uk-comment+ul{margin:15px 0 0 0;list-style:none}.uk-comment-list .uk-comment+ul>li:nth-child(n+2),.uk-comment-list>li:nth-child(n+2){margin-top:15px}@media (min-width:768px){.uk-comment-list .uk-comment+ul{padding-left:100px}}.uk-cover-background{background-position:50% 50%;background-size:cover;background-repeat:no-repeat}.uk-cover{overflow:hidden}.uk-cover-object{width:auto;height:auto;min-width:100%;min-height:100%;max-width:none;position:relative;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}[data-uk-cover]{position:relative;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.uk-nav,.uk-nav ul{margin:0;padding:0;list-style:none}.uk-nav li>a{display:block;text-decoration:none}.uk-nav>li>a{padding:5px 15px}.uk-nav ul{padding-left:15px}.uk-nav ul a{padding:2px 0}.uk-nav li>a>div{font-size:12px;line-height:18px}.uk-nav-header{padding:5px 15px;text-transform:uppercase;font-weight:700;font-size:12px}.uk-nav-header:not(:first-child){margin-top:15px}.uk-nav-divider{margin:9px 15px}ul.uk-nav-sub{padding:5px 0 5px 15px}.uk-nav-parent-icon>.uk-parent>a:after{content:\"\\f104\";width:20px;margin-right:-10px;float:right;font-family:FontAwesome;text-align:center}.uk-nav-parent-icon>.uk-parent.uk-open>a:after{content:\"\\f107\"}.uk-nav-side>li>a{color:#444}.uk-nav-side>li>a:focus,.uk-nav-side>li>a:hover{background:rgba(0,0,0,.05);color:#444;outline:0}.uk-nav-side>li.uk-active>a{background:#00a8e6;color:#fff}.uk-nav-side .uk-nav-header{color:#444}.uk-nav-side .uk-nav-divider{border-top:1px solid #ddd}.uk-nav-side ul a{color:#07d}.uk-nav-side ul a:hover{color:#059}.uk-nav-dropdown>li>a{color:#444}.uk-nav-dropdown>li>a:focus,.uk-nav-dropdown>li>a:hover{background:#00a8e6;color:#fff;outline:0}.uk-nav-dropdown .uk-nav-header{color:#999}.uk-nav-dropdown .uk-nav-divider{border-top:1px solid #ddd}.uk-nav-dropdown ul a{color:#07d}.uk-nav-dropdown ul a:hover{color:#059}.uk-nav-navbar>li>a{color:#444}.uk-nav-navbar>li>a:focus,.uk-nav-navbar>li>a:hover{background:#00a8e6;color:#fff;outline:0}.uk-nav-navbar .uk-nav-header{color:#999}.uk-nav-navbar .uk-nav-divider{border-top:1px solid #ddd}.uk-nav-navbar ul a{color:#07d}.uk-nav-navbar ul a:hover{color:#059}.uk-nav-offcanvas>li>a{color:#ccc;padding:10px 15px}.uk-nav-offcanvas>.uk-open>a,html:not(.uk-touch) .uk-nav-offcanvas>li>a:focus,html:not(.uk-touch) .uk-nav-offcanvas>li>a:hover{background:#404040;color:#fff;outline:0}html .uk-nav.uk-nav-offcanvas>li.uk-active>a{background:#1a1a1a;color:#fff}.uk-nav-offcanvas .uk-nav-header{color:#777}.uk-nav-offcanvas .uk-nav-divider{border-top:1px solid #1a1a1a}.uk-nav-offcanvas ul a{color:#ccc}html:not(.uk-touch) .uk-nav-offcanvas ul a:hover{color:#fff}.uk-navbar{background:#eee;color:#444}.uk-navbar:after,.uk-navbar:before{content:\"\";display:table}.uk-navbar:after{clear:both}.uk-navbar-nav{margin:0;padding:0;list-style:none;float:left}.uk-navbar-nav>li{float:left;position:relative}.uk-navbar-nav>li>a{display:block;box-sizing:border-box;text-decoration:none;height:40px;padding:0 15px;line-height:40px;color:#444;font-size:14px;font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-weight:400}.uk-navbar-nav>li>a[href='#']{cursor:text}.uk-navbar-nav>li.uk-open>a,.uk-navbar-nav>li:hover>a,.uk-navbar-nav>li>a:focus{background-color:#f5f5f5;color:#444;outline:0}.uk-navbar-nav>li>a:active{background-color:#ddd;color:#444}.uk-navbar-nav>li.uk-active>a{background-color:#f5f5f5;color:#444}.uk-navbar-nav .uk-navbar-nav-subtitle{line-height:28px}.uk-navbar-nav-subtitle>div{margin-top:-6px;font-size:10px;line-height:12px}.uk-navbar-brand,.uk-navbar-content,.uk-navbar-toggle{box-sizing:border-box;display:block;height:40px;padding:0 15px;float:left}.uk-navbar-brand:before,.uk-navbar-content:before,.uk-navbar-toggle:before{content:'';display:inline-block;height:100%;vertical-align:middle}.uk-navbar-content+.uk-navbar-content:not(.uk-navbar-center){padding-left:0}.uk-navbar-content>a:not([class]){color:#07d}.uk-navbar-content>a:not([class]):hover{color:#059}.uk-navbar-brand{font-size:18px;color:#444;text-decoration:none}.uk-navbar-brand:focus,.uk-navbar-brand:hover{color:#444;text-decoration:none;outline:0}.uk-navbar-toggle{font-size:18px;color:#444;text-decoration:none}.uk-navbar-toggle:focus,.uk-navbar-toggle:hover{color:#444;text-decoration:none;outline:0}.uk-navbar-toggle:after{content:\"\\f0c9\";font-family:FontAwesome;vertical-align:middle}.uk-navbar-toggle-alt:after{content:\"\\f002\"}.uk-navbar-center{float:none;text-align:center;max-width:50%;margin-left:auto;margin-right:auto}.uk-navbar-flip{float:right}.uk-subnav{display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-top:-10px;padding:0;list-style:none}.uk-subnav>*{-ms-flex:none;-webkit-flex:none;flex:none;padding-left:10px;margin-top:10px;position:relative}.uk-subnav:after,.uk-subnav:before{content:\"\";display:block;overflow:hidden}.uk-subnav:after{clear:both}.uk-subnav>*{float:left}.uk-subnav>*>*{display:inline-block;color:#444}.uk-subnav>*>:focus,.uk-subnav>*>:hover{color:#07d;text-decoration:none}.uk-subnav>.uk-active>*{color:#07d}.uk-subnav-line>:before{content:\"\";display:inline-block;height:10px;vertical-align:middle}.uk-subnav-line>:nth-child(n+2):before{margin-right:10px;border-left:1px solid #ddd}.uk-subnav-pill>*>*{padding:3px 9px}.uk-subnav-pill>*>:focus,.uk-subnav-pill>*>:hover{background:#eee;color:#444;text-decoration:none;outline:0}.uk-subnav-pill>.uk-active>*{background:#00a8e6;color:#fff}.uk-subnav>.uk-disabled>*{background:0 0;color:#999;text-decoration:none;cursor:text}.uk-breadcrumb{padding:0;list-style:none;font-size:0}.uk-breadcrumb>li{font-size:1rem;vertical-align:top}.uk-breadcrumb>li,.uk-breadcrumb>li>a,.uk-breadcrumb>li>span{display:inline-block}.uk-breadcrumb>li:nth-child(n+2):before{content:\"/\";display:inline-block;margin:0 8px}.uk-breadcrumb>li:not(.uk-active)>span{color:#999}.uk-pagination{padding:0;list-style:none;text-align:center;font-size:0}.uk-pagination:after,.uk-pagination:before{content:\"\";display:table}.uk-pagination:after{clear:both}.uk-pagination>li{display:inline-block;font-size:1rem;vertical-align:top}.uk-pagination>li:nth-child(n+2){margin-left:5px}.uk-pagination>li>a,.uk-pagination>li>span{display:inline-block;min-width:16px;padding:3px 5px;line-height:20px;text-decoration:none;box-sizing:content-box;text-align:center}.uk-pagination>li>a{background:#eee;color:#444}.uk-pagination>li>a:focus,.uk-pagination>li>a:hover{background-color:#f5f5f5;color:#444;outline:0}.uk-pagination>li>a:active{background-color:#ddd;color:#444}.uk-pagination>.uk-active>span{background:#00a8e6;color:#fff}.uk-pagination>.uk-disabled>span{background-color:#f5f5f5;color:#999}.uk-pagination-previous{float:left}.uk-pagination-next{float:right}.uk-pagination-left{text-align:left}.uk-pagination-right{text-align:right}.uk-tab{margin:0;padding:0;list-style:none;border-bottom:1px solid #ddd}.uk-tab:after,.uk-tab:before{content:\"\";display:table}.uk-tab:after{clear:both}.uk-tab>li{margin-bottom:-1px;float:left;position:relative}.uk-tab>li>a{display:block;padding:8px 12px 8px 12px;border:1px solid transparent;border-bottom-width:0;color:#07d;text-decoration:none}.uk-tab>li:nth-child(n+2)>a{margin-left:5px}.uk-tab>li.uk-open>a,.uk-tab>li>a:focus,.uk-tab>li>a:hover{border-color:#f5f5f5;background:#f5f5f5;color:#059;outline:0}.uk-tab>li.uk-open:not(.uk-active)>a,.uk-tab>li:not(.uk-active)>a:focus,.uk-tab>li:not(.uk-active)>a:hover{margin-bottom:1px;padding-bottom:7px}.uk-tab>li.uk-active>a{border-color:#ddd;border-bottom-color:transparent;background:#fff;color:#444}.uk-tab>li.uk-disabled>a{color:#999;cursor:text}.uk-tab>li.uk-disabled.uk-active>a,.uk-tab>li.uk-disabled>a:focus,.uk-tab>li.uk-disabled>a:hover{background:0 0;border-color:transparent}.uk-tab-flip>li{float:right}.uk-tab-flip>li:nth-child(n+2)>a{margin-left:0;margin-right:5px}.uk-tab>li.uk-tab-responsive>a{margin-left:0;margin-right:0}.uk-tab-responsive>a:before{content:\"\\f0c9\\00a0\";font-family:FontAwesome}.uk-tab-center{border-bottom:1px solid #ddd}.uk-tab-center-bottom{border-bottom:none;border-top:1px solid #ddd}.uk-tab-center:after,.uk-tab-center:before{content:\"\";display:table}.uk-tab-center:after{clear:both}.uk-tab-center .uk-tab{position:relative;right:50%;border:none;float:right}.uk-tab-center .uk-tab>li{position:relative;right:-50%}.uk-tab-center .uk-tab>li>a{text-align:center}.uk-tab-bottom{border-top:1px solid #ddd;border-bottom:none}.uk-tab-bottom>li{margin-top:-1px;margin-bottom:0}.uk-tab-bottom>li>a{padding-top:8px;padding-bottom:8px;border-bottom-width:1px;border-top-width:0}.uk-tab-bottom>li.uk-open:not(.uk-active)>a,.uk-tab-bottom>li:not(.uk-active)>a:focus,.uk-tab-bottom>li:not(.uk-active)>a:hover{margin-bottom:0;margin-top:1px;padding-bottom:8px;padding-top:7px}.uk-tab-bottom>li.uk-active>a{border-top-color:transparent;border-bottom-color:#ddd}.uk-tab-grid{margin-left:-5px;border-bottom:none;position:relative;z-index:0}.uk-tab-grid:before{display:block;position:absolute;left:5px;right:0;bottom:-1px;border-top:1px solid #ddd;z-index:-1}.uk-tab-grid>li:first-child>a{margin-left:5px}.uk-tab-grid>li>a{text-align:center}.uk-tab-grid.uk-tab-bottom{border-top:none}.uk-tab-grid.uk-tab-bottom:before{top:-1px;bottom:auto}@media (min-width:768px){.uk-tab-left,.uk-tab-right{border-bottom:none}.uk-tab-left>li,.uk-tab-right>li{margin-bottom:0;float:none}.uk-tab-left>li>a,.uk-tab-right>li>a{padding-top:8px;padding-bottom:8px}.uk-tab-left>li:nth-child(n+2)>a,.uk-tab-right>li:nth-child(n+2)>a{margin-left:0;margin-top:5px}.uk-tab-left>li.uk-active>a,.uk-tab-right>li.uk-active>a{border-color:#ddd}.uk-tab-left{border-right:1px solid #ddd}.uk-tab-left>li{margin-right:-1px}.uk-tab-left>li>a{border-bottom-width:1px;border-right-width:0}.uk-tab-left>li:not(.uk-active)>a:focus,.uk-tab-left>li:not(.uk-active)>a:hover{margin-bottom:0;margin-right:1px;padding-bottom:8px;padding-right:11px}.uk-tab-left>li.uk-active>a{border-right-color:transparent}.uk-tab-right{border-left:1px solid #ddd}.uk-tab-right>li{margin-left:-1px}.uk-tab-right>li>a{border-bottom-width:1px;border-left-width:0}.uk-tab-right>li:not(.uk-active)>a:focus,.uk-tab-right>li:not(.uk-active)>a:hover{margin-bottom:0;margin-left:1px;padding-bottom:8px;padding-left:11px}.uk-tab-right>li.uk-active>a{border-left-color:transparent}}.uk-thumbnav{display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-top:-10px;padding:0;list-style:none}.uk-thumbnav>*{-ms-flex:none;-webkit-flex:none;flex:none;padding-left:10px;margin-top:10px}.uk-thumbnav:after,.uk-thumbnav:before{content:\"\";display:block;overflow:hidden}.uk-thumbnav:after{clear:both}.uk-thumbnav>*{float:left}.uk-thumbnav>*>*{display:block;background:#fff}.uk-thumbnav>*>*>img{opacity:.7;-webkit-transition:opacity .15s linear;transition:opacity .15s linear}.uk-thumbnav>*>:focus>img,.uk-thumbnav>*>:hover>img{opacity:1}.uk-thumbnav>.uk-active>*>img{opacity:1}.uk-list{padding:0;list-style:none}.uk-list>li:after,.uk-list>li:before{content:\"\";display:table}.uk-list>li:after{clear:both}.uk-list>li>:last-child{margin-bottom:0}.uk-list ul{margin:0;padding-left:20px;list-style:none}.uk-list-line>li:nth-child(n+2){margin-top:5px;padding-top:5px;border-top:1px solid #ddd}.uk-list-striped>li{padding:5px 5px}.uk-list-striped>li:nth-of-type(odd){background:#f5f5f5}.uk-list-space>li:nth-child(n+2){margin-top:10px}@media (min-width:768px){.uk-description-list-horizontal{overflow:hidden}.uk-description-list-horizontal>dt{width:160px;float:left;clear:both;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.uk-description-list-horizontal>dd{margin-left:180px}}.uk-description-list-line>dt{font-weight:400}.uk-description-list-line>dt:nth-child(n+2){margin-top:5px;padding-top:5px;border-top:1px solid #ddd}.uk-description-list-line>dd{color:#999}.uk-table{border-collapse:collapse;border-spacing:0;width:100%;margin-bottom:15px}*+.uk-table{margin-top:15px}.uk-table td,.uk-table th{padding:8px 8px}.uk-table th{text-align:left}.uk-table td{vertical-align:top}.uk-table thead th{vertical-align:bottom}.uk-table caption,.uk-table tfoot{font-size:12px;font-style:italic}.uk-table caption{text-align:left;color:#999}.uk-table tbody tr.uk-active{background:#eee}.uk-table-middle,.uk-table-middle td{vertical-align:middle!important}.uk-table-striped tbody tr:nth-of-type(odd){background:#f5f5f5}.uk-table-condensed td{padding:4px 8px}.uk-table-hover tbody tr:hover{background:#eee}.uk-form input,.uk-form select,.uk-form textarea{box-sizing:border-box;margin:0;border-radius:0;font:inherit;color:inherit}.uk-form select{text-transform:none}.uk-form optgroup{font:inherit;font-weight:700}.uk-form input::-moz-focus-inner{border:0;padding:0}.uk-form input[type=checkbox],.uk-form input[type=radio]{padding:0}.uk-form input[type=checkbox]:not(:disabled),.uk-form input[type=radio]:not(:disabled){cursor:pointer}.uk-form input:not([type]),.uk-form input[type=datetime],.uk-form input[type=email],.uk-form input[type=number],.uk-form input[type=password],.uk-form input[type=search],.uk-form input[type=tel],.uk-form input[type=text],.uk-form input[type=url],.uk-form textarea{-webkit-appearance:none}.uk-form input[type=search]::-webkit-search-cancel-button,.uk-form input[type=search]::-webkit-search-decoration{-webkit-appearance:none}.uk-form input[type=number]::-webkit-inner-spin-button,.uk-form input[type=number]::-webkit-outer-spin-button{height:auto}.uk-form fieldset{border:none;margin:0;padding:0}.uk-form textarea{overflow:auto;vertical-align:top}.uk-form ::-moz-placeholder{opacity:1}.uk-form :invalid{box-shadow:none}.uk-form input:not([type=radio]):not([type=checkbox]),.uk-form select{vertical-align:middle}.uk-form>:last-child{margin-bottom:0}.uk-form input:not([type]),.uk-form input[type=color],.uk-form input[type=date],.uk-form input[type=datetime-local],.uk-form input[type=datetime],.uk-form input[type=email],.uk-form input[type=month],.uk-form input[type=number],.uk-form input[type=password],.uk-form input[type=search],.uk-form input[type=tel],.uk-form input[type=text],.uk-form input[type=time],.uk-form input[type=url],.uk-form input[type=week],.uk-form select,.uk-form textarea{height:30px;max-width:100%;padding:4px 6px;border:1px solid #ddd;background:#fff;color:#444;-webkit-transition:all .2s linear;-webkit-transition-property:border,background,color,box-shadow,padding;transition:all .2s linear;transition-property:border,background,color,box-shadow,padding}.uk-form input:not([type]):focus,.uk-form input[type=color]:focus,.uk-form input[type=date]:focus,.uk-form input[type=datetime-local]:focus,.uk-form input[type=datetime]:focus,.uk-form input[type=email]:focus,.uk-form input[type=month]:focus,.uk-form input[type=number]:focus,.uk-form input[type=password]:focus,.uk-form input[type=search]:focus,.uk-form input[type=tel]:focus,.uk-form input[type=text]:focus,.uk-form input[type=time]:focus,.uk-form input[type=url]:focus,.uk-form input[type=week]:focus,.uk-form select:focus,.uk-form textarea:focus{border-color:#99baca;outline:0;background:#f5fbfe;color:#444}.uk-form input:not([type]):disabled,.uk-form input[type=color]:disabled,.uk-form input[type=date]:disabled,.uk-form input[type=datetime-local]:disabled,.uk-form input[type=datetime]:disabled,.uk-form input[type=email]:disabled,.uk-form input[type=month]:disabled,.uk-form input[type=number]:disabled,.uk-form input[type=password]:disabled,.uk-form input[type=search]:disabled,.uk-form input[type=tel]:disabled,.uk-form input[type=text]:disabled,.uk-form input[type=time]:disabled,.uk-form input[type=url]:disabled,.uk-form input[type=week]:disabled,.uk-form select:disabled,.uk-form textarea:disabled{border-color:#ddd;background-color:#f5f5f5;color:#999}.uk-form :-ms-input-placeholder{color:#999!important}.uk-form ::-moz-placeholder{color:#999}.uk-form ::-webkit-input-placeholder{color:#999}.uk-form :disabled:-ms-input-placeholder{color:#999!important}.uk-form :disabled::-moz-placeholder{color:#999}.uk-form :disabled::-webkit-input-placeholder{color:#999}.uk-form legend{width:100%;border:0;padding:0;padding-bottom:15px;font-size:18px;line-height:30px}.uk-form legend:after{content:\"\";display:block;border-bottom:1px solid #ddd;width:100%}input:not([type]).uk-form-small,input[type].uk-form-small,select.uk-form-small,textarea.uk-form-small{height:25px;padding:3px 3px;font-size:12px}input:not([type]).uk-form-large,input[type].uk-form-large,select.uk-form-large,textarea.uk-form-large{height:40px;padding:8px 6px;font-size:16px}.uk-form select[multiple],.uk-form select[size],.uk-form textarea{height:auto}.uk-form-danger{border-color:#dc8d99!important;background:#fff7f8!important;color:#d85030!important}.uk-form-success{border-color:#8ec73b!important;background:#fafff2!important;color:#659f13!important}.uk-form-blank{border-color:transparent!important;border-style:dashed!important;background:0 0!important}.uk-form-blank:focus{border-color:#ddd!important}input.uk-form-width-mini{width:40px}select.uk-form-width-mini{width:65px}.uk-form-width-small{width:130px}.uk-form-width-medium{width:200px}.uk-form-width-large{width:500px}.uk-form-row:after,.uk-form-row:before{content:\"\";display:table}.uk-form-row:after{clear:both}.uk-form-row+.uk-form-row{margin-top:15px}.uk-form-help-inline{display:inline-block;margin:0 0 0 10px}.uk-form-help-block{margin:5px 0 0 0}.uk-form-controls>:first-child{margin-top:0}.uk-form-controls>:last-child{margin-bottom:0}.uk-form-controls-condensed{margin:5px 0}.uk-form-stacked .uk-form-label{display:block;margin-bottom:5px;font-weight:700}@media (max-width:959px){.uk-form-horizontal .uk-form-label{display:block;margin-bottom:5px;font-weight:700}}@media (min-width:960px){.uk-form-horizontal .uk-form-label{width:200px;margin-top:5px;float:left}.uk-form-horizontal .uk-form-controls{margin-left:215px}.uk-form-horizontal .uk-form-controls-text{padding-top:5px}}.uk-form-icon{display:inline-block;position:relative;max-width:100%}.uk-form-icon>[class*=uk-icon-]{position:absolute;top:50%;width:30px;margin-top:-7px;font-size:14px;color:#999;text-align:center;pointer-events:none}.uk-form-icon:not(.uk-form-icon-flip)>input{padding-left:30px!important}.uk-form-icon-flip>[class*=uk-icon-]{right:0}.uk-form-icon-flip>input{padding-right:30px!important}.uk-button::-moz-focus-inner{border:0;padding:0}.uk-button{-webkit-appearance:none;margin:0;border:none;overflow:visible;font:inherit;color:#444;text-transform:none;display:inline-block;box-sizing:border-box;padding:0 12px;background:#eee;vertical-align:middle;line-height:30px;min-height:30px;font-size:1rem;text-decoration:none;text-align:center}.uk-button:not(:disabled){cursor:pointer}.uk-button:focus,.uk-button:hover{background-color:#f5f5f5;color:#444;outline:0;text-decoration:none}.uk-button.uk-active,.uk-button:active{background-color:#ddd;color:#444}.uk-button-primary{background-color:#00a8e6;color:#fff}.uk-button-primary:focus,.uk-button-primary:hover{background-color:#35b3ee;color:#fff}.uk-button-primary.uk-active,.uk-button-primary:active{background-color:#0091ca;color:#fff}.uk-button-success{background-color:#8cc14c;color:#fff}.uk-button-success:focus,.uk-button-success:hover{background-color:#8ec73b;color:#fff}.uk-button-success.uk-active,.uk-button-success:active{background-color:#72ae41;color:#fff}.uk-button-danger{background-color:#da314b;color:#fff}.uk-button-danger:focus,.uk-button-danger:hover{background-color:#e4354f;color:#fff}.uk-button-danger.uk-active,.uk-button-danger:active{background-color:#c91032;color:#fff}.uk-button:disabled{background-color:#f5f5f5;color:#999}.uk-button-link,.uk-button-link.uk-active,.uk-button-link:active,.uk-button-link:disabled,.uk-button-link:focus,.uk-button-link:hover{border-color:transparent;background:0 0}.uk-button-link{color:#07d}.uk-button-link.uk-active,.uk-button-link:active,.uk-button-link:focus,.uk-button-link:hover{color:#059;text-decoration:underline}.uk-button-link:disabled{color:#999}.uk-button-link:focus{outline:1px dotted}.uk-button-mini{min-height:20px;padding:0 6px;line-height:20px;font-size:11px}.uk-button-small{min-height:25px;padding:0 10px;line-height:25px;font-size:12px}.uk-button-large{min-height:40px;padding:0 15px;line-height:40px;font-size:16px}.uk-button-group{display:inline-block;vertical-align:middle;position:relative;font-size:0;white-space:nowrap}.uk-button-group>*{display:inline-block}.uk-button-group .uk-button{vertical-align:top}.uk-button-dropdown{display:inline-block;vertical-align:middle;position:relative}@font-face{font-family:FontAwesome;src:url(assets/lib/uikit/fonts/fontawesome-webfont.woff2) format('woff2'),url(assets/lib/uikit/fonts/fontawesome-webfont.woff) format(\"woff\"),url(assets/lib/uikit/fonts/fontawesome-webfont.ttf) format(\"truetype\");font-weight:400;font-style:normal}[class*=uk-icon-]{font-family:FontAwesome;display:inline-block;font-weight:400;font-style:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}[class*=uk-icon-],[class*=uk-icon-]:focus,[class*=uk-icon-]:hover{text-decoration:none}.uk-icon-small{font-size:150%;vertical-align:-10%}.uk-icon-medium{font-size:200%;vertical-align:-16%}.uk-icon-large{font-size:250%;vertical-align:-22%}.uk-icon-justify{width:1em;text-align:center}.uk-icon-spin{display:inline-block;-webkit-animation:uk-rotate 2s infinite linear;animation:uk-rotate 2s infinite linear}.uk-icon-hover{color:#999}.uk-icon-hover:hover{color:#444}.uk-icon-button{box-sizing:border-box;display:inline-block;width:35px;height:35px;border-radius:100%;background:#eee;line-height:35px;color:#444;font-size:18px;text-align:center}.uk-icon-button:focus,.uk-icon-button:hover{background-color:#f5f5f5;color:#444;outline:0}.uk-icon-button:active{background-color:#ddd;color:#444}.uk-icon-glass:before{content:\"\\f000\"}.uk-icon-music:before{content:\"\\f001\"}.uk-icon-search:before{content:\"\\f002\"}.uk-icon-envelope-o:before{content:\"\\f003\"}.uk-icon-heart:before{content:\"\\f004\"}.uk-icon-star:before{content:\"\\f005\"}.uk-icon-star-o:before{content:\"\\f006\"}.uk-icon-user:before{content:\"\\f007\"}.uk-icon-film:before{content:\"\\f008\"}.uk-icon-th-large:before{content:\"\\f009\"}.uk-icon-th:before{content:\"\\f00a\"}.uk-icon-th-list:before{content:\"\\f00b\"}.uk-icon-check:before{content:\"\\f00c\"}.uk-icon-close:before,.uk-icon-remove:before,.uk-icon-times:before{content:\"\\f00d\"}.uk-icon-search-plus:before{content:\"\\f00e\"}.uk-icon-search-minus:before{content:\"\\f010\"}.uk-icon-power-off:before{content:\"\\f011\"}.uk-icon-signal:before{content:\"\\f012\"}.uk-icon-cog:before,.uk-icon-gear:before{content:\"\\f013\"}.uk-icon-trash-o:before{content:\"\\f014\"}.uk-icon-home:before{content:\"\\f015\"}.uk-icon-file-o:before{content:\"\\f016\"}.uk-icon-clock-o:before{content:\"\\f017\"}.uk-icon-road:before{content:\"\\f018\"}.uk-icon-download:before{content:\"\\f019\"}.uk-icon-arrow-circle-o-down:before{content:\"\\f01a\"}.uk-icon-arrow-circle-o-up:before{content:\"\\f01b\"}.uk-icon-inbox:before{content:\"\\f01c\"}.uk-icon-play-circle-o:before{content:\"\\f01d\"}.uk-icon-repeat:before,.uk-icon-rotate-right:before{content:\"\\f01e\"}.uk-icon-refresh:before{content:\"\\f021\"}.uk-icon-list-alt:before{content:\"\\f022\"}.uk-icon-lock:before{content:\"\\f023\"}.uk-icon-flag:before{content:\"\\f024\"}.uk-icon-headphones:before{content:\"\\f025\"}.uk-icon-volume-off:before{content:\"\\f026\"}.uk-icon-volume-down:before{content:\"\\f027\"}.uk-icon-volume-up:before{content:\"\\f028\"}.uk-icon-qrcode:before{content:\"\\f029\"}.uk-icon-barcode:before{content:\"\\f02a\"}.uk-icon-tag:before{content:\"\\f02b\"}.uk-icon-tags:before{content:\"\\f02c\"}.uk-icon-book:before{content:\"\\f02d\"}.uk-icon-bookmark:before{content:\"\\f02e\"}.uk-icon-print:before{content:\"\\f02f\"}.uk-icon-camera:before{content:\"\\f030\"}.uk-icon-font:before{content:\"\\f031\"}.uk-icon-bold:before{content:\"\\f032\"}.uk-icon-italic:before{content:\"\\f033\"}.uk-icon-text-height:before{content:\"\\f034\"}.uk-icon-text-width:before{content:\"\\f035\"}.uk-icon-align-left:before{content:\"\\f036\"}.uk-icon-align-center:before{content:\"\\f037\"}.uk-icon-align-right:before{content:\"\\f038\"}.uk-icon-align-justify:before{content:\"\\f039\"}.uk-icon-list:before{content:\"\\f03a\"}.uk-icon-dedent:before,.uk-icon-outdent:before{content:\"\\f03b\"}.uk-icon-indent:before{content:\"\\f03c\"}.uk-icon-video-camera:before{content:\"\\f03d\"}.uk-icon-image:before,.uk-icon-photo:before,.uk-icon-picture-o:before{content:\"\\f03e\"}.uk-icon-pencil:before{content:\"\\f040\"}.uk-icon-map-marker:before{content:\"\\f041\"}.uk-icon-adjust:before{content:\"\\f042\"}.uk-icon-tint:before{content:\"\\f043\"}.uk-icon-edit:before,.uk-icon-pencil-square-o:before{content:\"\\f044\"}.uk-icon-share-square-o:before{content:\"\\f045\"}.uk-icon-check-square-o:before{content:\"\\f046\"}.uk-icon-arrows:before{content:\"\\f047\"}.uk-icon-step-backward:before{content:\"\\f048\"}.uk-icon-fast-backward:before{content:\"\\f049\"}.uk-icon-backward:before{content:\"\\f04a\"}.uk-icon-play:before{content:\"\\f04b\"}.uk-icon-pause:before{content:\"\\f04c\"}.uk-icon-stop:before{content:\"\\f04d\"}.uk-icon-forward:before{content:\"\\f04e\"}.uk-icon-fast-forward:before{content:\"\\f050\"}.uk-icon-step-forward:before{content:\"\\f051\"}.uk-icon-eject:before{content:\"\\f052\"}.uk-icon-chevron-left:before{content:\"\\f053\"}.uk-icon-chevron-right:before{content:\"\\f054\"}.uk-icon-plus-circle:before{content:\"\\f055\"}.uk-icon-minus-circle:before{content:\"\\f056\"}.uk-icon-times-circle:before{content:\"\\f057\"}.uk-icon-check-circle:before{content:\"\\f058\"}.uk-icon-question-circle:before{content:\"\\f059\"}.uk-icon-info-circle:before{content:\"\\f05a\"}.uk-icon-crosshairs:before{content:\"\\f05b\"}.uk-icon-times-circle-o:before{content:\"\\f05c\"}.uk-icon-check-circle-o:before{content:\"\\f05d\"}.uk-icon-ban:before{content:\"\\f05e\"}.uk-icon-arrow-left:before{content:\"\\f060\"}.uk-icon-arrow-right:before{content:\"\\f061\"}.uk-icon-arrow-up:before{content:\"\\f062\"}.uk-icon-arrow-down:before{content:\"\\f063\"}.uk-icon-mail-forward:before,.uk-icon-share:before{content:\"\\f064\"}.uk-icon-expand:before{content:\"\\f065\"}.uk-icon-compress:before{content:\"\\f066\"}.uk-icon-plus:before{content:\"\\f067\"}.uk-icon-minus:before{content:\"\\f068\"}.uk-icon-asterisk:before{content:\"\\f069\"}.uk-icon-exclamation-circle:before{content:\"\\f06a\"}.uk-icon-gift:before{content:\"\\f06b\"}.uk-icon-leaf:before{content:\"\\f06c\"}.uk-icon-fire:before{content:\"\\f06d\"}.uk-icon-eye:before{content:\"\\f06e\"}.uk-icon-eye-slash:before{content:\"\\f070\"}.uk-icon-exclamation-triangle:before,.uk-icon-warning:before{content:\"\\f071\"}.uk-icon-plane:before{content:\"\\f072\"}.uk-icon-calendar:before{content:\"\\f073\"}.uk-icon-random:before{content:\"\\f074\"}.uk-icon-comment:before{content:\"\\f075\"}.uk-icon-magnet:before{content:\"\\f076\"}.uk-icon-chevron-up:before{content:\"\\f077\"}.uk-icon-chevron-down:before{content:\"\\f078\"}.uk-icon-retweet:before{content:\"\\f079\"}.uk-icon-shopping-cart:before{content:\"\\f07a\"}.uk-icon-folder:before{content:\"\\f07b\"}.uk-icon-folder-open:before{content:\"\\f07c\"}.uk-icon-arrows-v:before{content:\"\\f07d\"}.uk-icon-arrows-h:before{content:\"\\f07e\"}.uk-icon-bar-chart-o:before,.uk-icon-bar-chart:before{content:\"\\f080\"}.uk-icon-twitter-square:before{content:\"\\f081\"}.uk-icon-facebook-square:before{content:\"\\f082\"}.uk-icon-camera-retro:before{content:\"\\f083\"}.uk-icon-key:before{content:\"\\f084\"}.uk-icon-cogs:before,.uk-icon-gears:before{content:\"\\f085\"}.uk-icon-comments:before{content:\"\\f086\"}.uk-icon-thumbs-o-up:before{content:\"\\f087\"}.uk-icon-thumbs-o-down:before{content:\"\\f088\"}.uk-icon-star-half:before{content:\"\\f089\"}.uk-icon-heart-o:before{content:\"\\f08a\"}.uk-icon-sign-out:before{content:\"\\f08b\"}.uk-icon-linkedin-square:before{content:\"\\f08c\"}.uk-icon-thumb-tack:before{content:\"\\f08d\"}.uk-icon-external-link:before{content:\"\\f08e\"}.uk-icon-sign-in:before{content:\"\\f090\"}.uk-icon-trophy:before{content:\"\\f091\"}.uk-icon-github-square:before{content:\"\\f092\"}.uk-icon-upload:before{content:\"\\f093\"}.uk-icon-lemon-o:before{content:\"\\f094\"}.uk-icon-phone:before{content:\"\\f095\"}.uk-icon-square-o:before{content:\"\\f096\"}.uk-icon-bookmark-o:before{content:\"\\f097\"}.uk-icon-phone-square:before{content:\"\\f098\"}.uk-icon-twitter:before{content:\"\\f099\"}.uk-icon-facebook-f:before,.uk-icon-facebook:before{content:\"\\f09a\"}.uk-icon-github:before{content:\"\\f09b\"}.uk-icon-unlock:before{content:\"\\f09c\"}.uk-icon-credit-card:before{content:\"\\f09d\"}.uk-icon-rss:before{content:\"\\f09e\"}.uk-icon-hdd-o:before{content:\"\\f0a0\"}.uk-icon-bullhorn:before{content:\"\\f0a1\"}.uk-icon-bell:before{content:\"\\f0f3\"}.uk-icon-certificate:before{content:\"\\f0a3\"}.uk-icon-hand-o-right:before{content:\"\\f0a4\"}.uk-icon-hand-o-left:before{content:\"\\f0a5\"}.uk-icon-hand-o-up:before{content:\"\\f0a6\"}.uk-icon-hand-o-down:before{content:\"\\f0a7\"}.uk-icon-arrow-circle-left:before{content:\"\\f0a8\"}.uk-icon-arrow-circle-right:before{content:\"\\f0a9\"}.uk-icon-arrow-circle-up:before{content:\"\\f0aa\"}.uk-icon-arrow-circle-down:before{content:\"\\f0ab\"}.uk-icon-globe:before{content:\"\\f0ac\"}.uk-icon-wrench:before{content:\"\\f0ad\"}.uk-icon-tasks:before{content:\"\\f0ae\"}.uk-icon-filter:before{content:\"\\f0b0\"}.uk-icon-briefcase:before{content:\"\\f0b1\"}.uk-icon-arrows-alt:before{content:\"\\f0b2\"}.uk-icon-group:before,.uk-icon-users:before{content:\"\\f0c0\"}.uk-icon-chain:before,.uk-icon-link:before{content:\"\\f0c1\"}.uk-icon-cloud:before{content:\"\\f0c2\"}.uk-icon-flask:before{content:\"\\f0c3\"}.uk-icon-cut:before,.uk-icon-scissors:before{content:\"\\f0c4\"}.uk-icon-copy:before,.uk-icon-files-o:before{content:\"\\f0c5\"}.uk-icon-paperclip:before{content:\"\\f0c6\"}.uk-icon-floppy-o:before,.uk-icon-save:before{content:\"\\f0c7\"}.uk-icon-square:before{content:\"\\f0c8\"}.uk-icon-bars:before,.uk-icon-navicon:before,.uk-icon-reorder:before{content:\"\\f0c9\"}.uk-icon-list-ul:before{content:\"\\f0ca\"}.uk-icon-list-ol:before{content:\"\\f0cb\"}.uk-icon-strikethrough:before{content:\"\\f0cc\"}.uk-icon-underline:before{content:\"\\f0cd\"}.uk-icon-table:before{content:\"\\f0ce\"}.uk-icon-magic:before{content:\"\\f0d0\"}.uk-icon-truck:before{content:\"\\f0d1\"}.uk-icon-pinterest:before{content:\"\\f0d2\"}.uk-icon-pinterest-square:before{content:\"\\f0d3\"}.uk-icon-google-plus-square:before{content:\"\\f0d4\"}.uk-icon-google-plus:before{content:\"\\f0d5\"}.uk-icon-money:before{content:\"\\f0d6\"}.uk-icon-caret-down:before{content:\"\\f0d7\"}.uk-icon-caret-up:before{content:\"\\f0d8\"}.uk-icon-caret-left:before{content:\"\\f0d9\"}.uk-icon-caret-right:before{content:\"\\f0da\"}.uk-icon-columns:before{content:\"\\f0db\"}.uk-icon-sort:before,.uk-icon-unsorted:before{content:\"\\f0dc\"}.uk-icon-sort-desc:before,.uk-icon-sort-down:before{content:\"\\f0dd\"}.uk-icon-sort-asc:before,.uk-icon-sort-up:before{content:\"\\f0de\"}.uk-icon-envelope:before{content:\"\\f0e0\"}.uk-icon-linkedin:before{content:\"\\f0e1\"}.uk-icon-rotate-left:before,.uk-icon-undo:before{content:\"\\f0e2\"}.uk-icon-gavel:before,.uk-icon-legal:before{content:\"\\f0e3\"}.uk-icon-dashboard:before,.uk-icon-tachometer:before{content:\"\\f0e4\"}.uk-icon-comment-o:before{content:\"\\f0e5\"}.uk-icon-comments-o:before{content:\"\\f0e6\"}.uk-icon-bolt:before,.uk-icon-flash:before{content:\"\\f0e7\"}.uk-icon-sitemap:before{content:\"\\f0e8\"}.uk-icon-umbrella:before{content:\"\\f0e9\"}.uk-icon-clipboard:before,.uk-icon-paste:before{content:\"\\f0ea\"}.uk-icon-lightbulb-o:before{content:\"\\f0eb\"}.uk-icon-exchange:before{content:\"\\f0ec\"}.uk-icon-cloud-download:before{content:\"\\f0ed\"}.uk-icon-cloud-upload:before{content:\"\\f0ee\"}.uk-icon-user-md:before{content:\"\\f0f0\"}.uk-icon-stethoscope:before{content:\"\\f0f1\"}.uk-icon-suitcase:before{content:\"\\f0f2\"}.uk-icon-bell-o:before{content:\"\\f0a2\"}.uk-icon-coffee:before{content:\"\\f0f4\"}.uk-icon-cutlery:before{content:\"\\f0f5\"}.uk-icon-file-text-o:before{content:\"\\f0f6\"}.uk-icon-building-o:before{content:\"\\f0f7\"}.uk-icon-hospital-o:before{content:\"\\f0f8\"}.uk-icon-ambulance:before{content:\"\\f0f9\"}.uk-icon-medkit:before{content:\"\\f0fa\"}.uk-icon-fighter-jet:before{content:\"\\f0fb\"}.uk-icon-beer:before{content:\"\\f0fc\"}.uk-icon-h-square:before{content:\"\\f0fd\"}.uk-icon-plus-square:before{content:\"\\f0fe\"}.uk-icon-angle-double-left:before{content:\"\\f100\"}.uk-icon-angle-double-right:before{content:\"\\f101\"}.uk-icon-angle-double-up:before{content:\"\\f102\"}.uk-icon-angle-double-down:before{content:\"\\f103\"}.uk-icon-angle-left:before{content:\"\\f104\"}.uk-icon-angle-right:before{content:\"\\f105\"}.uk-icon-angle-up:before{content:\"\\f106\"}.uk-icon-angle-down:before{content:\"\\f107\"}.uk-icon-desktop:before{content:\"\\f108\"}.uk-icon-laptop:before{content:\"\\f109\"}.uk-icon-tablet:before{content:\"\\f10a\"}.uk-icon-mobile-phone:before,.uk-icon-mobile:before{content:\"\\f10b\"}.uk-icon-circle-o:before{content:\"\\f10c\"}.uk-icon-quote-left:before{content:\"\\f10d\"}.uk-icon-quote-right:before{content:\"\\f10e\"}.uk-icon-spinner:before{content:\"\\f110\"}.uk-icon-circle:before{content:\"\\f111\"}.uk-icon-mail-reply:before,.uk-icon-reply:before{content:\"\\f112\"}.uk-icon-github-alt:before{content:\"\\f113\"}.uk-icon-folder-o:before{content:\"\\f114\"}.uk-icon-folder-open-o:before{content:\"\\f115\"}.uk-icon-smile-o:before{content:\"\\f118\"}.uk-icon-frown-o:before{content:\"\\f119\"}.uk-icon-meh-o:before{content:\"\\f11a\"}.uk-icon-gamepad:before{content:\"\\f11b\"}.uk-icon-keyboard-o:before{content:\"\\f11c\"}.uk-icon-flag-o:before{content:\"\\f11d\"}.uk-icon-flag-checkered:before{content:\"\\f11e\"}.uk-icon-terminal:before{content:\"\\f120\"}.uk-icon-code:before{content:\"\\f121\"}.uk-icon-mail-reply-all:before,.uk-icon-reply-all:before{content:\"\\f122\"}.uk-icon-star-half-empty:before,.uk-icon-star-half-full:before,.uk-icon-star-half-o:before{content:\"\\f123\"}.uk-icon-location-arrow:before{content:\"\\f124\"}.uk-icon-crop:before{content:\"\\f125\"}.uk-icon-code-fork:before{content:\"\\f126\"}.uk-icon-chain-broken:before,.uk-icon-unlink:before{content:\"\\f127\"}.uk-icon-question:before{content:\"\\f128\"}.uk-icon-info:before{content:\"\\f129\"}.uk-icon-exclamation:before{content:\"\\f12a\"}.uk-icon-superscript:before{content:\"\\f12b\"}.uk-icon-subscript:before{content:\"\\f12c\"}.uk-icon-eraser:before{content:\"\\f12d\"}.uk-icon-puzzle-piece:before{content:\"\\f12e\"}.uk-icon-microphone:before{content:\"\\f130\"}.uk-icon-microphone-slash:before{content:\"\\f131\"}.uk-icon-shield:before{content:\"\\f132\"}.uk-icon-calendar-o:before{content:\"\\f133\"}.uk-icon-fire-extinguisher:before{content:\"\\f134\"}.uk-icon-rocket:before{content:\"\\f135\"}.uk-icon-maxcdn:before{content:\"\\f136\"}.uk-icon-chevron-circle-left:before{content:\"\\f137\"}.uk-icon-chevron-circle-right:before{content:\"\\f138\"}.uk-icon-chevron-circle-up:before{content:\"\\f139\"}.uk-icon-chevron-circle-down:before{content:\"\\f13a\"}.uk-icon-html5:before{content:\"\\f13b\"}.uk-icon-css3:before{content:\"\\f13c\"}.uk-icon-anchor:before{content:\"\\f13d\"}.uk-icon-unlock-alt:before{content:\"\\f13e\"}.uk-icon-bullseye:before{content:\"\\f140\"}.uk-icon-ellipsis-h:before{content:\"\\f141\"}.uk-icon-ellipsis-v:before{content:\"\\f142\"}.uk-icon-rss-square:before{content:\"\\f143\"}.uk-icon-play-circle:before{content:\"\\f144\"}.uk-icon-ticket:before{content:\"\\f145\"}.uk-icon-minus-square:before{content:\"\\f146\"}.uk-icon-minus-square-o:before{content:\"\\f147\"}.uk-icon-level-up:before{content:\"\\f148\"}.uk-icon-level-down:before{content:\"\\f149\"}.uk-icon-check-square:before{content:\"\\f14a\"}.uk-icon-pencil-square:before{content:\"\\f14b\"}.uk-icon-external-link-square:before{content:\"\\f14c\"}.uk-icon-share-square:before{content:\"\\f14d\"}.uk-icon-compass:before{content:\"\\f14e\"}.uk-icon-caret-square-o-down:before,.uk-icon-toggle-down:before{content:\"\\f150\"}.uk-icon-caret-square-o-up:before,.uk-icon-toggle-up:before{content:\"\\f151\"}.uk-icon-caret-square-o-right:before,.uk-icon-toggle-right:before{content:\"\\f152\"}.uk-icon-eur:before,.uk-icon-euro:before{content:\"\\f153\"}.uk-icon-gbp:before{content:\"\\f154\"}.uk-icon-dollar:before,.uk-icon-usd:before{content:\"\\f155\"}.uk-icon-inr:before,.uk-icon-rupee:before{content:\"\\f156\"}.uk-icon-cny:before,.uk-icon-jpy:before,.uk-icon-rmb:before,.uk-icon-yen:before{content:\"\\f157\"}.uk-icon-rouble:before,.uk-icon-rub:before,.uk-icon-ruble:before{content:\"\\f158\"}.uk-icon-krw:before,.uk-icon-won:before{content:\"\\f159\"}.uk-icon-bitcoin:before,.uk-icon-btc:before{content:\"\\f15a\"}.uk-icon-file:before{content:\"\\f15b\"}.uk-icon-file-text:before{content:\"\\f15c\"}.uk-icon-sort-alpha-asc:before{content:\"\\f15d\"}.uk-icon-sort-alpha-desc:before{content:\"\\f15e\"}.uk-icon-sort-amount-asc:before{content:\"\\f160\"}.uk-icon-sort-amount-desc:before{content:\"\\f161\"}.uk-icon-sort-numeric-asc:before{content:\"\\f162\"}.uk-icon-sort-numeric-desc:before{content:\"\\f163\"}.uk-icon-thumbs-up:before{content:\"\\f164\"}.uk-icon-thumbs-down:before{content:\"\\f165\"}.uk-icon-youtube-square:before{content:\"\\f166\"}.uk-icon-youtube:before{content:\"\\f167\"}.uk-icon-xing:before{content:\"\\f168\"}.uk-icon-xing-square:before{content:\"\\f169\"}.uk-icon-youtube-play:before{content:\"\\f16a\"}.uk-icon-dropbox:before{content:\"\\f16b\"}.uk-icon-stack-overflow:before{content:\"\\f16c\"}.uk-icon-instagram:before{content:\"\\f16d\"}.uk-icon-flickr:before{content:\"\\f16e\"}.uk-icon-adn:before{content:\"\\f170\"}.uk-icon-bitbucket:before{content:\"\\f171\"}.uk-icon-bitbucket-square:before{content:\"\\f172\"}.uk-icon-tumblr:before{content:\"\\f173\"}.uk-icon-tumblr-square:before{content:\"\\f174\"}.uk-icon-long-arrow-down:before{content:\"\\f175\"}.uk-icon-long-arrow-up:before{content:\"\\f176\"}.uk-icon-long-arrow-left:before{content:\"\\f177\"}.uk-icon-long-arrow-right:before{content:\"\\f178\"}.uk-icon-apple:before{content:\"\\f179\"}.uk-icon-windows:before{content:\"\\f17a\"}.uk-icon-android:before{content:\"\\f17b\"}.uk-icon-linux:before{content:\"\\f17c\"}.uk-icon-dribbble:before{content:\"\\f17d\"}.uk-icon-skype:before{content:\"\\f17e\"}.uk-icon-foursquare:before{content:\"\\f180\"}.uk-icon-trello:before{content:\"\\f181\"}.uk-icon-female:before{content:\"\\f182\"}.uk-icon-male:before{content:\"\\f183\"}.uk-icon-gittip:before,.uk-icon-gratipay:before{content:\"\\f184\"}.uk-icon-sun-o:before{content:\"\\f185\"}.uk-icon-moon-o:before{content:\"\\f186\"}.uk-icon-archive:before{content:\"\\f187\"}.uk-icon-bug:before{content:\"\\f188\"}.uk-icon-vk:before{content:\"\\f189\"}.uk-icon-weibo:before{content:\"\\f18a\"}.uk-icon-renren:before{content:\"\\f18b\"}.uk-icon-pagelines:before{content:\"\\f18c\"}.uk-icon-stack-exchange:before{content:\"\\f18d\"}.uk-icon-arrow-circle-o-right:before{content:\"\\f18e\"}.uk-icon-arrow-circle-o-left:before{content:\"\\f190\"}.uk-icon-caret-square-o-left:before,.uk-icon-toggle-left:before{content:\"\\f191\"}.uk-icon-dot-circle-o:before{content:\"\\f192\"}.uk-icon-wheelchair:before{content:\"\\f193\"}.uk-icon-vimeo-square:before{content:\"\\f194\"}.uk-icon-try:before,.uk-icon-turkish-lira:before{content:\"\\f195\"}.uk-icon-plus-square-o:before{content:\"\\f196\"}.uk-icon-space-shuttle:before{content:\"\\f197\"}.uk-icon-slack:before{content:\"\\f198\"}.uk-icon-envelope-square:before{content:\"\\f199\"}.uk-icon-wordpress:before{content:\"\\f19a\"}.uk-icon-openid:before{content:\"\\f19b\"}.uk-icon-bank:before,.uk-icon-institution:before,.uk-icon-university:before{content:\"\\f19c\"}.uk-icon-graduation-cap:before,.uk-icon-mortar-board:before{content:\"\\f19d\"}.uk-icon-yahoo:before{content:\"\\f19e\"}.uk-icon-google:before{content:\"\\f1a0\"}.uk-icon-reddit:before{content:\"\\f1a1\"}.uk-icon-reddit-square:before{content:\"\\f1a2\"}.uk-icon-stumbleupon-circle:before{content:\"\\f1a3\"}.uk-icon-stumbleupon:before{content:\"\\f1a4\"}.uk-icon-delicious:before{content:\"\\f1a5\"}.uk-icon-digg:before{content:\"\\f1a6\"}.uk-icon-pied-piper:before{content:\"\\f1a7\"}.uk-icon-pied-piper-alt:before{content:\"\\f1a8\"}.uk-icon-drupal:before{content:\"\\f1a9\"}.uk-icon-joomla:before{content:\"\\f1aa\"}.uk-icon-language:before{content:\"\\f1ab\"}.uk-icon-fax:before{content:\"\\f1ac\"}.uk-icon-building:before{content:\"\\f1ad\"}.uk-icon-child:before{content:\"\\f1ae\"}.uk-icon-paw:before{content:\"\\f1b0\"}.uk-icon-spoon:before{content:\"\\f1b1\"}.uk-icon-cube:before{content:\"\\f1b2\"}.uk-icon-cubes:before{content:\"\\f1b3\"}.uk-icon-behance:before{content:\"\\f1b4\"}.uk-icon-behance-square:before{content:\"\\f1b5\"}.uk-icon-steam:before{content:\"\\f1b6\"}.uk-icon-steam-square:before{content:\"\\f1b7\"}.uk-icon-recycle:before{content:\"\\f1b8\"}.uk-icon-automobile:before,.uk-icon-car:before{content:\"\\f1b9\"}.uk-icon-cab:before,.uk-icon-taxi:before{content:\"\\f1ba\"}.uk-icon-tree:before{content:\"\\f1bb\"}.uk-icon-spotify:before{content:\"\\f1bc\"}.uk-icon-deviantart:before{content:\"\\f1bd\"}.uk-icon-soundcloud:before{content:\"\\f1be\"}.uk-icon-database:before{content:\"\\f1c0\"}.uk-icon-file-pdf-o:before{content:\"\\f1c1\"}.uk-icon-file-word-o:before{content:\"\\f1c2\"}.uk-icon-file-excel-o:before{content:\"\\f1c3\"}.uk-icon-file-powerpoint-o:before{content:\"\\f1c4\"}.uk-icon-file-image-o:before,.uk-icon-file-photo-o:before,.uk-icon-file-picture-o:before{content:\"\\f1c5\"}.uk-icon-file-archive-o:before,.uk-icon-file-zip-o:before{content:\"\\f1c6\"}.uk-icon-file-audio-o:before,.uk-icon-file-sound-o:before{content:\"\\f1c7\"}.uk-icon-file-movie-o:before,.uk-icon-file-video-o:before{content:\"\\f1c8\"}.uk-icon-file-code-o:before{content:\"\\f1c9\"}.uk-icon-vine:before{content:\"\\f1ca\"}.uk-icon-codepen:before{content:\"\\f1cb\"}.uk-icon-jsfiddle:before{content:\"\\f1cc\"}.uk-icon-life-bouy:before,.uk-icon-life-buoy:before,.uk-icon-life-ring:before,.uk-icon-life-saver:before,.uk-icon-support:before{content:\"\\f1cd\"}.uk-icon-circle-o-notch:before{content:\"\\f1ce\"}.uk-icon-ra:before,.uk-icon-rebel:before{content:\"\\f1d0\"}.uk-icon-empire:before,.uk-icon-ge:before{content:\"\\f1d1\"}.uk-icon-git-square:before{content:\"\\f1d2\"}.uk-icon-git:before{content:\"\\f1d3\"}.uk-icon-hacker-news:before{content:\"\\f1d4\"}.uk-icon-tencent-weibo:before{content:\"\\f1d5\"}.uk-icon-qq:before{content:\"\\f1d6\"}.uk-icon-wechat:before,.uk-icon-weixin:before{content:\"\\f1d7\"}.uk-icon-paper-plane:before,.uk-icon-send:before{content:\"\\f1d8\"}.uk-icon-paper-plane-o:before,.uk-icon-send-o:before{content:\"\\f1d9\"}.uk-icon-history:before{content:\"\\f1da\"}.uk-icon-circle-thin:before,.uk-icon-genderless:before{content:\"\\f1db\"}.uk-icon-header:before{content:\"\\f1dc\"}.uk-icon-paragraph:before{content:\"\\f1dd\"}.uk-icon-sliders:before{content:\"\\f1de\"}.uk-icon-share-alt:before{content:\"\\f1e0\"}.uk-icon-share-alt-square:before{content:\"\\f1e1\"}.uk-icon-bomb:before{content:\"\\f1e2\"}.uk-icon-futbol-o:before,.uk-icon-soccer-ball-o:before{content:\"\\f1e3\"}.uk-icon-tty:before{content:\"\\f1e4\"}.uk-icon-binoculars:before{content:\"\\f1e5\"}.uk-icon-plug:before{content:\"\\f1e6\"}.uk-icon-slideshare:before{content:\"\\f1e7\"}.uk-icon-twitch:before{content:\"\\f1e8\"}.uk-icon-yelp:before{content:\"\\f1e9\"}.uk-icon-newspaper-o:before{content:\"\\f1ea\"}.uk-icon-wifi:before{content:\"\\f1eb\"}.uk-icon-calculator:before{content:\"\\f1ec\"}.uk-icon-paypal:before{content:\"\\f1ed\"}.uk-icon-google-wallet:before{content:\"\\f1ee\"}.uk-icon-cc-visa:before{content:\"\\f1f0\"}.uk-icon-cc-mastercard:before{content:\"\\f1f1\"}.uk-icon-cc-discover:before{content:\"\\f1f2\"}.uk-icon-cc-amex:before{content:\"\\f1f3\"}.uk-icon-cc-paypal:before{content:\"\\f1f4\"}.uk-icon-cc-stripe:before{content:\"\\f1f5\"}.uk-icon-bell-slash:before{content:\"\\f1f6\"}.uk-icon-bell-slash-o:before{content:\"\\f1f7\"}.uk-icon-trash:before{content:\"\\f1f8\"}.uk-icon-copyright:before{content:\"\\f1f9\"}.uk-icon-at:before{content:\"\\f1fa\"}.uk-icon-eyedropper:before{content:\"\\f1fb\"}.uk-icon-paint-brush:before{content:\"\\f1fc\"}.uk-icon-birthday-cake:before{content:\"\\f1fd\"}.uk-icon-area-chart:before{content:\"\\f1fe\"}.uk-icon-pie-chart:before{content:\"\\f200\"}.uk-icon-line-chart:before{content:\"\\f201\"}.uk-icon-lastfm:before{content:\"\\f202\"}.uk-icon-lastfm-square:before{content:\"\\f203\"}.uk-icon-toggle-off:before{content:\"\\f204\"}.uk-icon-toggle-on:before{content:\"\\f205\"}.uk-icon-bicycle:before{content:\"\\f206\"}.uk-icon-bus:before{content:\"\\f207\"}.uk-icon-ioxhost:before{content:\"\\f208\"}.uk-icon-angellist:before{content:\"\\f209\"}.uk-icon-cc:before{content:\"\\f20a\"}.uk-icon-ils:before,.uk-icon-shekel:before,.uk-icon-sheqel:before{content:\"\\f20b\"}.uk-icon-meanpath:before{content:\"\\f20c\"}.uk-icon-buysellads:before{content:\"\\f20d\"}.uk-icon-connectdevelop:before{content:\"\\f20e\"}.uk-icon-dashcube:before{content:\"\\f210\"}.uk-icon-forumbee:before{content:\"\\f211\"}.uk-icon-leanpub:before{content:\"\\f212\"}.uk-icon-sellsy:before{content:\"\\f213\"}.uk-icon-shirtsinbulk:before{content:\"\\f214\"}.uk-icon-simplybuilt:before{content:\"\\f215\"}.uk-icon-skyatlas:before{content:\"\\f216\"}.uk-icon-cart-plus:before{content:\"\\f217\"}.uk-icon-cart-arrow-down:before{content:\"\\f218\"}.uk-icon-diamond:before{content:\"\\f219\"}.uk-icon-ship:before{content:\"\\f21a\"}.uk-icon-user-secret:before{content:\"\\f21b\"}.uk-icon-motorcycle:before{content:\"\\f21c\"}.uk-icon-street-view:before{content:\"\\f21d\"}.uk-icon-heartbeat:before{content:\"\\f21e\"}.uk-icon-venus:before{content:\"\\f221\"}.uk-icon-mars:before{content:\"\\f222\"}.uk-icon-mercury:before{content:\"\\f223\"}.uk-icon-transgender:before{content:\"\\f224\"}.uk-icon-transgender-alt:before{content:\"\\f225\"}.uk-icon-venus-double:before{content:\"\\f226\"}.uk-icon-mars-double:before{content:\"\\f227\"}.uk-icon-venus-mars:before{content:\"\\f228\"}.uk-icon-mars-stroke:before{content:\"\\f229\"}.uk-icon-mars-stroke-v:before{content:\"\\f22a\"}.uk-icon-mars-stroke-h:before{content:\"\\f22b\"}.uk-icon-neuter:before{content:\"\\f22c\"}.uk-icon-facebook-official:before{content:\"\\f230\"}.uk-icon-pinterest-p:before{content:\"\\f231\"}.uk-icon-whatsapp:before{content:\"\\f232\"}.uk-icon-server:before{content:\"\\f233\"}.uk-icon-user-plus:before{content:\"\\f234\"}.uk-icon-user-times:before{content:\"\\f235\"}.uk-icon-bed:before,.uk-icon-hotel:before{content:\"\\f236\"}.uk-icon-viacoin:before{content:\"\\f237\"}.uk-icon-train:before{content:\"\\f238\"}.uk-icon-subway:before{content:\"\\f239\"}.uk-icon-medium-logo:before{content:\"\\f23a\"}.uk-icon-500px:before{content:\"\\f26e\"}.uk-icon-amazon:before{content:\"\\f270\"}.uk-icon-balance-scale:before{content:\"\\f24e\"}.uk-icon-battery-0:before,.uk-icon-battery-empty:before{content:\"\\f244\"}.uk-icon-battery-1:before,.uk-icon-battery-quarter:before{content:\"\\f243\"}.uk-icon-battery-2:before,.uk-icon-battery-half:before{content:\"\\f242\"}.uk-icon-battery-3:before,.uk-icon-battery-three-quarters:before{content:\"\\f241\"}.uk-icon-battery-4:before,.uk-icon-battery-full:before{content:\"\\f240\"}.uk-icon-black-tie:before{content:\"\\f27e\"}.uk-icon-calendar-check-o:before{content:\"\\f274\"}.uk-icon-calendar-minus-o:before{content:\"\\f272\"}.uk-icon-calendar-plus-o:before{content:\"\\f271\"}.uk-icon-calendar-times-o:before{content:\"\\f273\"}.uk-icon-cc-diners-club:before{content:\"\\f24c\"}.uk-icon-cc-jcb:before{content:\"\\f24b\"}.uk-icon-chrome:before{content:\"\\f268\"}.uk-icon-clone:before{content:\"\\f24d\"}.uk-icon-commenting:before{content:\"\\f27a\"}.uk-icon-commenting-o:before{content:\"\\f27b\"}.uk-icon-contao:before{content:\"\\f26d\"}.uk-icon-creative-commons:before{content:\"\\f25e\"}.uk-icon-expeditedssl:before{content:\"\\f23e\"}.uk-icon-firefox:before{content:\"\\f269\"}.uk-icon-fonticons:before{content:\"\\f280\"}.uk-icon-get-pocket:before{content:\"\\f265\"}.uk-icon-gg:before{content:\"\\f260\"}.uk-icon-gg-circle:before{content:\"\\f261\"}.uk-icon-hand-lizard-o:before{content:\"\\f258\"}.uk-icon-hand-paper-o:before,.uk-icon-hand-stop-o:before{content:\"\\f256\"}.uk-icon-hand-peace-o:before{content:\"\\f25b\"}.uk-icon-hand-pointer-o:before{content:\"\\f25a\"}.uk-icon-hand-grab-o:before,.uk-icon-hand-rock-o:before{content:\"\\f255\"}.uk-icon-hand-scissors-o:before{content:\"\\f257\"}.uk-icon-hand-spock-o:before{content:\"\\f259\"}.uk-icon-hourglass:before{content:\"\\f254\"}.uk-icon-hourglass-o:before{content:\"\\f250\"}.uk-icon-hourglass-1:before,.uk-icon-hourglass-start:before{content:\"\\f251\"}.uk-icon-hourglass-2:before,.uk-icon-hourglass-half:before{content:\"\\f252\"}.uk-icon-hourglass-3:before,.uk-icon-hourglass-end:before{content:\"\\f253\"}.uk-icon-houzz:before{content:\"\\f27c\"}.uk-icon-i-cursor:before{content:\"\\f246\"}.uk-icon-industry:before{content:\"\\f275\"}.uk-icon-internet-explorer:before{content:\"\\f26b\"}.uk-icon-map:before{content:\"\\f279\"}.uk-icon-map-o:before{content:\"\\f278\"}.uk-icon-map-pin:before{content:\"\\f276\"}.uk-icon-map-signs:before{content:\"\\f277\"}.uk-icon-mouse-pointer:before{content:\"\\f245\"}.uk-icon-object-group:before{content:\"\\f247\"}.uk-icon-object-ungroup:before{content:\"\\f248\"}.uk-icon-odnoklassniki:before{content:\"\\f263\"}.uk-icon-odnoklassniki-square:before{content:\"\\f264\"}.uk-icon-opencart:before{content:\"\\f23d\"}.uk-icon-opera:before{content:\"\\f26a\"}.uk-icon-optin-monster:before{content:\"\\f23c\"}.uk-icon-registered:before{content:\"\\f25d\"}.uk-icon-safari:before{content:\"\\f267\"}.uk-icon-sticky-note:before{content:\"\\f249\"}.uk-icon-sticky-note-o:before{content:\"\\f24a\"}.uk-icon-television:before,.uk-icon-tv:before{content:\"\\f26c\"}.uk-icon-trademark:before{content:\"\\f25c\"}.uk-icon-tripadvisor:before{content:\"\\f262\"}.uk-icon-vimeo:before{content:\"\\f27d\"}.uk-icon-wikipedia-w:before{content:\"\\f266\"}.uk-icon-y-combinator:before,.uk-icon-yc:before{content:\"\\f23b\"}.uk-icon-y-combinator-square:before,.uk-icon-yc-square:before{content:\"\\f1d4\"}.uk-icon-bluetooth:before{content:\"\\f293\"}.uk-icon-bluetooth-b:before{content:\"\\f294\"}.uk-icon-codiepie:before{content:\"\\f284\"}.uk-icon-credit-card-alt:before{content:\"\\f283\"}.uk-icon-edge:before{content:\"\\f282\"}.uk-icon-fort-awesome:before{content:\"\\f286\"}.uk-icon-hashtag:before{content:\"\\f292\"}.uk-icon-mixcloud:before{content:\"\\f289\"}.uk-icon-modx:before{content:\"\\f285\"}.uk-icon-pause-circle:before{content:\"\\f28b\"}.uk-icon-pause-circle-o:before{content:\"\\f28c\"}.uk-icon-percent:before{content:\"\\f295\"}.uk-icon-product-hunt:before{content:\"\\f288\"}.uk-icon-reddit-alien:before{content:\"\\f281\"}.uk-icon-scribd:before{content:\"\\f28a\"}.uk-icon-shopping-bag:before{content:\"\\f290\"}.uk-icon-shopping-basket:before{content:\"\\f291\"}.uk-icon-stop-circle:before{content:\"\\f28d\"}.uk-icon-stop-circle-o:before{content:\"\\f28e\"}.uk-icon-usb:before{content:\"\\f287\"}.uk-icon-american-sign-language-interpreting:before,.uk-icon-asl-interpreting:before{content:\"\\f2a3\"}.uk-icon-assistive-listening-systems:before{content:\"\\f2a2\"}.uk-icon-audio-description:before{content:\"\\f29e\"}.uk-icon-blind:before{content:\"\\f29d\"}.uk-icon-braille:before{content:\"\\f2a1\"}.uk-icon-deaf:before{content:\"\\f2a4\"}.uk-icon-deafness:before{content:\"\\f2a4\"}.uk-icon-envira:before{content:\"\\f299\"}.uk-icon-gitlab:before{content:\"\\f296\"}.uk-icon-glide:before{content:\"\\f2a5\"}.uk-icon-glide-g:before{content:\"\\f2a6\"}.uk-icon-hard-of-hearing:before{content:\"\\f2a4\"}.uk-icon-low-vision:before{content:\"\\f2a8\"}.uk-icon-question-circle-o:before{content:\"\\f29c\"}.uk-icon-sign-language:before,.uk-icon-signing:before{content:\"\\f2a7\"}.uk-icon-snapchat:before{content:\"\\f2ab\"}.uk-icon-snapchat-ghost:before{content:\"\\f2ac\"}.uk-icon-snapchat-square:before{content:\"\\f2ad\"}.uk-icon-universal-access:before{content:\"\\f29a\"}.uk-icon-viadeo:before{content:\"\\f2a9\"}.uk-icon-viadeo-square:before{content:\"\\f2aa\"}.uk-icon-volume-control-phone:before{content:\"\\f2a0\"}.uk-icon-wheelchair-alt:before{content:\"\\f29b\"}.uk-icon-wpbeginner:before{content:\"\\f297\"}.uk-icon-wpforms:before{content:\"\\f298\"}.uk-close::-moz-focus-inner{border:0;padding:0}.uk-close{-webkit-appearance:none;margin:0;border:none;overflow:visible;font:inherit;color:inherit;text-transform:none;padding:0;background:0 0;display:inline-block;box-sizing:content-box;width:20px;line-height:20px;text-align:center;vertical-align:middle;opacity:.3}.uk-close:after{display:block;content:\"\\f00d\";font-family:FontAwesome}.uk-close:focus,.uk-close:hover{opacity:.5;outline:0;color:inherit;text-decoration:none;cursor:pointer}.uk-close-alt{padding:2px;border-radius:50%;background:#eee;opacity:1}.uk-close-alt:focus,.uk-close-alt:hover{opacity:1}.uk-close-alt:after{opacity:.5}.uk-close-alt:focus:after,.uk-close-alt:hover:after{opacity:.8}.uk-badge{display:inline-block;padding:0 5px;background:#00a8e6;font-size:10px;font-weight:700;line-height:14px;color:#fff;text-align:center;vertical-align:middle;text-transform:none}a.uk-badge:hover{color:#fff}.uk-badge-notification{box-sizing:border-box;min-width:18px;border-radius:500px;font-size:12px;line-height:18px}.uk-badge-success{background-color:#8cc14c}.uk-badge-warning{background-color:#faa732}.uk-badge-danger{background-color:#da314b}.uk-alert{margin-bottom:15px;padding:10px;background:#ebf7fd;color:#2d7091}*+.uk-alert{margin-top:15px}.uk-alert>:last-child{margin-bottom:0}.uk-alert h1,.uk-alert h2,.uk-alert h3,.uk-alert h4,.uk-alert h5,.uk-alert h6{color:inherit}.uk-alert>.uk-close:first-child{float:right}.uk-alert>.uk-close:first-child+*{margin-top:0}.uk-alert-success{background:#f2fae3;color:#659f13}.uk-alert-warning{background:#fffceb;color:#e28327}.uk-alert-danger{background:#fff1f0;color:#d85030}.uk-alert-large{padding:20px}.uk-alert-large>.uk-close:first-child{margin:-10px -10px 0 0}.uk-thumbnail{display:inline-block;max-width:100%;box-sizing:border-box;margin:0;padding:4px;border:1px solid #ddd;background:#fff}a.uk-thumbnail:focus,a.uk-thumbnail:hover{border-color:#aaa;background-color:#fff;text-decoration:none;outline:0}.uk-thumbnail-caption{padding-top:4px;text-align:center;color:#444}.uk-thumbnail-mini{width:150px}.uk-thumbnail-small{width:200px}.uk-thumbnail-medium{width:300px}.uk-thumbnail-large{width:400px}.uk-thumbnail-expand,.uk-thumbnail-expand>img{width:100%}.uk-overlay{display:inline-block;position:relative;max-width:100%;vertical-align:middle;overflow:hidden;-webkit-transform:translateZ(0);margin:0}.uk-overlay.uk-border-circle{-webkit-mask-image:-webkit-radial-gradient(circle,#fff 100%,#000 100%)}.uk-overlay>:first-child{margin-bottom:0}.uk-overlay-panel{position:absolute;top:0;bottom:0;left:0;right:0;padding:20px;color:#fff}.uk-overlay-panel.uk-flex>*>:last-child,.uk-overlay-panel>:last-child{margin-bottom:0}.uk-overlay-panel h1,.uk-overlay-panel h2,.uk-overlay-panel h3,.uk-overlay-panel h4,.uk-overlay-panel h5,.uk-overlay-panel h6{color:inherit}.uk-overlay-panel a:not([class]){color:inherit;text-decoration:underline}.uk-overlay-panel a[class*=uk-icon-]:not(.uk-icon-button){color:inherit}.uk-overlay-hover:not(:hover):not(.uk-hover) .uk-overlay-panel:not(.uk-ignore){opacity:0}.uk-overlay-active :not(.uk-active)>.uk-overlay-panel:not(.uk-ignore){opacity:0}.uk-overlay-background{background:rgba(0,0,0,.5)}.uk-overlay-image{padding:0}.uk-overlay-top{bottom:auto}.uk-overlay-bottom{top:auto}.uk-overlay-left{right:auto}.uk-overlay-right{left:auto}.uk-overlay-icon:before{content:\"\\f002\";position:absolute;top:50%;left:50%;width:50px;height:50px;margin-top:-25px;margin-left:-25px;font-size:50px;line-height:1;font-family:FontAwesome;text-align:center;color:#fff}.uk-overlay-blur,.uk-overlay-fade,.uk-overlay-grayscale,.uk-overlay-scale,.uk-overlay-spin,[class*=uk-overlay-slide]{transition-duration:.3s;transition-timing-function:ease-out;transition-property:opacity,transform,filter}.uk-overlay-active .uk-overlay-fade,.uk-overlay-active .uk-overlay-scale,.uk-overlay-active .uk-overlay-spin,.uk-overlay-active [class*=uk-overlay-slide]{transition-duration:.8s}.uk-overlay-fade{opacity:.7}.uk-overlay-active .uk-active>.uk-overlay-fade,.uk-overlay-hover.uk-hover .uk-overlay-fade,.uk-overlay-hover:hover .uk-overlay-fade{opacity:1}.uk-overlay-scale{-webkit-transform:scale(1);transform:scale(1)}.uk-overlay-active .uk-active>.uk-overlay-scale,.uk-overlay-hover.uk-hover .uk-overlay-scale,.uk-overlay-hover:hover .uk-overlay-scale{-webkit-transform:scale(1.1);transform:scale(1.1)}.uk-overlay-spin{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0)}.uk-overlay-active .uk-active>.uk-overlay-spin,.uk-overlay-hover.uk-hover .uk-overlay-spin,.uk-overlay-hover:hover .uk-overlay-spin{-webkit-transform:scale(1.1) rotate(3deg);transform:scale(1.1) rotate(3deg)}.uk-overlay-grayscale{-webkit-filter:grayscale(100%);filter:grayscale(100%)}.uk-overlay-active .uk-active>.uk-overlay-grayscale,.uk-overlay-hover.uk-hover .uk-overlay-grayscale,.uk-overlay-hover:hover .uk-overlay-grayscale{-webkit-filter:grayscale(0);filter:grayscale(0)}[class*=uk-overlay-slide]{opacity:0}.uk-overlay-slide-top{-webkit-transform:translateY(-100%);transform:translateY(-100%)}.uk-overlay-slide-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.uk-overlay-slide-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.uk-overlay-slide-right{-webkit-transform:translateX(100%);transform:translateX(100%)}.uk-overlay-active .uk-active>[class*=uk-overlay-slide],.uk-overlay-hover.uk-hover [class*=uk-overlay-slide],.uk-overlay-hover:hover [class*=uk-overlay-slide]{opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}.uk-overlay-area{position:absolute;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.3);opacity:0;-webkit-transition:opacity .15s linear;transition:opacity .15s linear;-webkit-transform:translate3d(0,0,0)}.uk-overlay-toggle.uk-hover .uk-overlay-area,.uk-overlay-toggle:hover .uk-overlay-area,.uk-overlay.uk-hover .uk-overlay-area,.uk-overlay:hover .uk-overlay-area{opacity:1}.uk-overlay-area:empty:before{content:\"\\f002\";position:absolute;top:50%;left:50%;width:50px;height:50px;margin-top:-25px;margin-left:-25px;font-size:50px;line-height:1;font-family:FontAwesome;text-align:center;color:#fff}.uk-overlay-area:not(:empty){font-size:0}.uk-overlay-area:not(:empty):before{content:'';display:inline-block;height:100%;vertical-align:middle}.uk-overlay-area-content{display:inline-block;box-sizing:border-box;width:100%;vertical-align:middle;font-size:1rem;text-align:center;padding:0 15px;color:#fff}.uk-overlay-area-content>:last-child{margin-bottom:0}.uk-overlay-area-content a:not([class]),.uk-overlay-area-content a:not([class]):hover{color:inherit}.uk-overlay-caption{position:absolute;bottom:0;left:0;right:0;padding:15px;background:rgba(0,0,0,.5);color:#fff;opacity:0;-webkit-transition:opacity .15s linear;transition:opacity .15s linear;-webkit-transform:translate3d(0,0,0)}.uk-overlay-toggle.uk-hover .uk-overlay-caption,.uk-overlay-toggle:hover .uk-overlay-caption,.uk-overlay.uk-hover .uk-overlay-caption,.uk-overlay:hover .uk-overlay-caption{opacity:1}[class*=uk-column-]{-webkit-column-gap:25px;-moz-column-gap:25px;column-gap:25px}.uk-column-1-2{-webkit-column-count:2;-moz-column-count:2;column-count:2}.uk-column-1-3{-webkit-column-count:3;-moz-column-count:3;column-count:3}.uk-column-1-4{-webkit-column-count:4;-moz-column-count:4;column-count:4}.uk-column-1-5{-webkit-column-count:5;-moz-column-count:5;column-count:5}.uk-column-1-6{-webkit-column-count:6;-moz-column-count:6;column-count:6}@media (min-width:480px){.uk-column-small-1-2{-webkit-column-count:2;-moz-column-count:2;column-count:2}.uk-column-small-1-3{-webkit-column-count:3;-moz-column-count:3;column-count:3}.uk-column-small-1-4{-webkit-column-count:4;-moz-column-count:4;column-count:4}.uk-column-small-1-5{-webkit-column-count:5;-moz-column-count:5;column-count:5}.uk-column-small-1-6{-webkit-column-count:6;-moz-column-count:6;column-count:6}}@media (min-width:768px){.uk-column-medium-1-2{-webkit-column-count:2;-moz-column-count:2;column-count:2}.uk-column-medium-1-3{-webkit-column-count:3;-moz-column-count:3;column-count:3}.uk-column-medium-1-4{-webkit-column-count:4;-moz-column-count:4;column-count:4}.uk-column-medium-1-5{-webkit-column-count:5;-moz-column-count:5;column-count:5}.uk-column-medium-1-6{-webkit-column-count:6;-moz-column-count:6;column-count:6}}@media (min-width:960px){.uk-column-large-1-2{-webkit-column-count:2;-moz-column-count:2;column-count:2}.uk-column-large-1-3{-webkit-column-count:3;-moz-column-count:3;column-count:3}.uk-column-large-1-4{-webkit-column-count:4;-moz-column-count:4;column-count:4}.uk-column-large-1-5{-webkit-column-count:5;-moz-column-count:5;column-count:5}.uk-column-large-1-6{-webkit-column-count:6;-moz-column-count:6;column-count:6}}@media (min-width:1220px){.uk-column-xlarge-1-2{-webkit-column-count:2;-moz-column-count:2;column-count:2}.uk-column-xlarge-1-3{-webkit-column-count:3;-moz-column-count:3;column-count:3}.uk-column-xlarge-1-4{-webkit-column-count:4;-moz-column-count:4;column-count:4}.uk-column-xlarge-1-5{-webkit-column-count:5;-moz-column-count:5;column-count:5}.uk-column-xlarge-1-6{-webkit-column-count:6;-moz-column-count:6;column-count:6}}[class*=uk-animation-]{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}@media screen{[data-uk-scrollspy*=uk-animation-]:not([data-uk-scrollspy*=target]){opacity:0}}.uk-animation-fade{-webkit-animation-name:uk-fade;animation-name:uk-fade;-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-timing-function:linear!important;animation-timing-function:linear!important}.uk-animation-scale-up{-webkit-animation-name:uk-fade-scale-02;animation-name:uk-fade-scale-02}.uk-animation-scale-down{-webkit-animation-name:uk-fade-scale-18;animation-name:uk-fade-scale-18}.uk-animation-slide-top{-webkit-animation-name:uk-fade-top;animation-name:uk-fade-top}.uk-animation-slide-bottom{-webkit-animation-name:uk-fade-bottom;animation-name:uk-fade-bottom}.uk-animation-slide-left{-webkit-animation-name:uk-fade-left;animation-name:uk-fade-left}.uk-animation-slide-right{-webkit-animation-name:uk-fade-right;animation-name:uk-fade-right}.uk-animation-scale{-webkit-animation-name:uk-scale-12;animation-name:uk-scale-12}.uk-animation-shake{-webkit-animation-name:uk-shake;animation-name:uk-shake}.uk-animation-reverse{-webkit-animation-direction:reverse;animation-direction:reverse;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}.uk-animation-15{-webkit-animation-duration:15s;animation-duration:15s}.uk-animation-top-left{-webkit-transform-origin:0 0;transform-origin:0 0}.uk-animation-top-center{-webkit-transform-origin:50% 0;transform-origin:50% 0}.uk-animation-top-right{-webkit-transform-origin:100% 0;transform-origin:100% 0}.uk-animation-middle-left{-webkit-transform-origin:0 50%;transform-origin:0 50%}.uk-animation-middle-right{-webkit-transform-origin:100% 50%;transform-origin:100% 50%}.uk-animation-bottom-left{-webkit-transform-origin:0 100%;transform-origin:0 100%}.uk-animation-bottom-center{-webkit-transform-origin:50% 100%;transform-origin:50% 100%}.uk-animation-bottom-right{-webkit-transform-origin:100% 100%;transform-origin:100% 100%}.uk-animation-hover:not(:hover),.uk-animation-hover:not(:hover) [class*=uk-animation-],.uk-touch .uk-animation-hover:not(.uk-hover),.uk-touch .uk-animation-hover:not(.uk-hover) [class*=uk-animation-]{-webkit-animation-name:none;animation-name:none}@-webkit-keyframes uk-fade{0%{opacity:0}100%{opacity:1}}@keyframes uk-fade{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes uk-fade-top{0%{opacity:0;-webkit-transform:translateY(-100%)}100%{opacity:1;-webkit-transform:translateY(0)}}@keyframes uk-fade-top{0%{opacity:0;transform:translateY(-100%)}100%{opacity:1;transform:translateY(0)}}@-webkit-keyframes uk-fade-bottom{0%{opacity:0;-webkit-transform:translateY(100%)}100%{opacity:1;-webkit-transform:translateY(0)}}@keyframes uk-fade-bottom{0%{opacity:0;transform:translateY(100%)}100%{opacity:1;transform:translateY(0)}}@-webkit-keyframes uk-fade-left{0%{opacity:0;-webkit-transform:translateX(-100%)}100%{opacity:1;-webkit-transform:translateX(0)}}@keyframes uk-fade-left{0%{opacity:0;transform:translateX(-100%)}100%{opacity:1;transform:translateX(0)}}@-webkit-keyframes uk-fade-right{0%{opacity:0;-webkit-transform:translateX(100%)}100%{opacity:1;-webkit-transform:translateX(0)}}@keyframes uk-fade-right{0%{opacity:0;transform:translateX(100%)}100%{opacity:1;transform:translateX(0)}}@-webkit-keyframes uk-fade-scale-02{0%{opacity:0;-webkit-transform:scale(.2)}100%{opacity:1;-webkit-transform:scale(1)}}@keyframes uk-fade-scale-02{0%{opacity:0;transform:scale(.2)}100%{opacity:1;transform:scale(1)}}@-webkit-keyframes uk-fade-scale-15{0%{opacity:0;-webkit-transform:scale(1.5)}100%{opacity:1;-webkit-transform:scale(1)}}@keyframes uk-fade-scale-15{0%{opacity:0;transform:scale(1.5)}100%{opacity:1;transform:scale(1)}}@-webkit-keyframes uk-fade-scale-18{0%{opacity:0;-webkit-transform:scale(1.8)}100%{opacity:1;-webkit-transform:scale(1)}}@keyframes uk-fade-scale-18{0%{opacity:0;transform:scale(1.8)}100%{opacity:1;transform:scale(1)}}@-webkit-keyframes uk-slide-left{0%{-webkit-transform:translateX(-100%)}100%{-webkit-transform:translateX(0)}}@keyframes uk-slide-left{0%{transform:translateX(-100%)}100%{transform:translateX(0)}}@-webkit-keyframes uk-slide-right{0%{-webkit-transform:translateX(100%)}100%{-webkit-transform:translateX(0)}}@keyframes uk-slide-right{0%{transform:translateX(100%)}100%{transform:translateX(0)}}@-webkit-keyframes uk-slide-left-33{0%{-webkit-transform:translateX(33%)}100%{-webkit-transform:translateX(0)}}@keyframes uk-slide-left-33{0%{transform:translateX(33%)}100%{transform:translateX(0)}}@-webkit-keyframes uk-slide-right-33{0%{-webkit-transform:translateX(-33%)}100%{-webkit-transform:translateX(0)}}@keyframes uk-slide-right-33{0%{transform:translateX(-33%)}100%{transform:translateX(0)}}@-webkit-keyframes uk-scale-12{0%{-webkit-transform:scale(1.2)}100%{-webkit-transform:scale(1)}}@keyframes uk-scale-12{0%{transform:scale(1.2)}100%{transform:scale(1)}}@-webkit-keyframes uk-rotate{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(359deg)}}@keyframes uk-rotate{0%{transform:rotate(0)}100%{transform:rotate(359deg)}}@-webkit-keyframes uk-shake{0%,100%{-webkit-transform:translateX(0)}10%{-webkit-transform:translateX(-9px)}20%{-webkit-transform:translateX(8px)}30%{-webkit-transform:translateX(-7px)}40%{-webkit-transform:translateX(6px)}50%{-webkit-transform:translateX(-5px)}60%{-webkit-transform:translateX(4px)}70%{-webkit-transform:translateX(-3px)}80%{-webkit-transform:translateX(2px)}90%{-webkit-transform:translateX(-1px)}}@keyframes uk-shake{0%,100%{transform:translateX(0)}10%{transform:translateX(-9px)}20%{transform:translateX(8px)}30%{transform:translateX(-7px)}40%{transform:translateX(6px)}50%{transform:translateX(-5px)}60%{transform:translateX(4px)}70%{transform:translateX(-3px)}80%{transform:translateX(2px)}90%{transform:translateX(-1px)}}@-webkit-keyframes uk-slide-top-fixed{0%{opacity:0;-webkit-transform:translateY(-10px)}100%{opacity:1;-webkit-transform:translateY(0)}}@keyframes uk-slide-top-fixed{0%{opacity:0;transform:translateY(-10px)}100%{opacity:1;transform:translateY(0)}}@-webkit-keyframes uk-slide-bottom-fixed{0%{opacity:0;-webkit-transform:translateY(10px)}100%{opacity:1;-webkit-transform:translateY(0)}}@keyframes uk-slide-bottom-fixed{0%{opacity:0;transform:translateY(10px)}100%{opacity:1;transform:translateY(0)}}.uk-dropdown,.uk-dropdown-blank{display:none;position:absolute;z-index:1020;box-sizing:border-box;width:200px}.uk-dropdown{padding:15px;background:#f5f5f5;color:#444;font-size:1rem;vertical-align:top}.uk-open>.uk-dropdown,.uk-open>.uk-dropdown-blank{display:block;-webkit-animation:uk-fade .2s ease-in-out;animation:uk-fade .2s ease-in-out;-webkit-transform-origin:0 0;transform-origin:0 0}.uk-dropdown-top{margin-top:-5px}.uk-dropdown-bottom{margin-top:5px}.uk-dropdown-left{margin-left:-5px}.uk-dropdown-right{margin-left:5px}.uk-dropdown .uk-nav{margin:0 -15px}.uk-grid .uk-dropdown-grid+.uk-dropdown-grid{margin-top:15px}.uk-dropdown-grid>[class*=uk-width-]>.uk-panel+.uk-panel{margin-top:15px}@media (min-width:768px){.uk-dropdown:not(.uk-dropdown-stack)>.uk-dropdown-grid{margin-left:-15px;margin-right:-15px}.uk-dropdown:not(.uk-dropdown-stack)>.uk-dropdown-grid>[class*=uk-width-]{padding-left:15px;padding-right:15px}.uk-dropdown:not(.uk-dropdown-stack)>.uk-dropdown-grid>[class*=uk-width-]:nth-child(n+2){border-left:1px solid #ddd}.uk-dropdown-width-2:not(.uk-dropdown-stack){width:400px}.uk-dropdown-width-3:not(.uk-dropdown-stack){width:600px}.uk-dropdown-width-4:not(.uk-dropdown-stack){width:800px}.uk-dropdown-width-5:not(.uk-dropdown-stack){width:1000px}}@media (max-width:767px){.uk-dropdown-grid>[class*=uk-width-]{width:100%}.uk-dropdown-grid>[class*=uk-width-]:nth-child(n+2){margin-top:15px}}.uk-dropdown-stack>.uk-dropdown-grid>[class*=uk-width-]{width:100%}.uk-dropdown-stack>.uk-dropdown-grid>[class*=uk-width-]:nth-child(n+2){margin-top:15px}.uk-dropdown-small{min-width:150px;width:auto;padding:5px;white-space:nowrap}.uk-dropdown-small .uk-nav{margin:0 -5px}.uk-dropdown-navbar{margin-top:0;background:#f5f5f5;color:#444}.uk-open>.uk-dropdown-navbar{-webkit-animation:uk-slide-top-fixed .2s ease-in-out;animation:uk-slide-top-fixed .2s ease-in-out}.uk-dropdown-scrollable{overflow-y:auto;max-height:200px}.uk-modal{display:none;position:fixed;top:0;right:0;bottom:0;left:0;z-index:1010;overflow-y:auto;-webkit-overflow-scrolling:touch;background:rgba(0,0,0,.6);opacity:0;-webkit-transition:opacity .15s linear;transition:opacity .15s linear;touch-action:cross-slide-y pinch-zoom double-tap-zoom;-webkit-transform:translateZ(0);transform:translateZ(0)}.uk-modal.uk-open{opacity:1}.uk-modal-page,.uk-modal-page body{overflow:hidden}.uk-modal-dialog{position:relative;box-sizing:border-box;margin:50px auto;padding:20px;width:600px;max-width:100%;max-width:calc(100% - 20px);background:#fff;opacity:0;-webkit-transform:translateY(-100px);transform:translateY(-100px);-webkit-transition:opacity .3s linear,-webkit-transform .3s ease-out;transition:opacity .3s linear,transform .3s ease-out}@media (max-width:767px){.uk-modal-dialog{width:auto;margin:10px auto}}.uk-open .uk-modal-dialog{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}.uk-modal-dialog>:not([class*=uk-modal-]):last-child{margin-bottom:0}.uk-modal-dialog>.uk-close:first-child{margin:-10px -10px 0 0;float:right}.uk-modal-dialog>.uk-close:first-child+:not([class*=uk-modal-]){margin-top:0}.uk-modal-dialog-lightbox{margin:15px auto;padding:0;max-width:95%;max-width:calc(100% - 30px);min-height:50px}.uk-modal-dialog-lightbox>.uk-close:first-child{position:absolute;top:-12px;right:-12px;margin:0;float:none}@media (max-width:767px){.uk-modal-dialog-lightbox>.uk-close:first-child{top:-7px;right:-7px}}.uk-modal-dialog-blank{margin:0;padding:0;width:100%;max-width:100%;-webkit-transition:opacity .3s linear;transition:opacity .3s linear}.uk-modal-dialog-blank>.uk-close:first-child{position:absolute;top:20px;right:20px;z-index:1;margin:0;float:none}@media (min-width:768px){.uk-modal-dialog-large{width:930px}}@media (min-width:1220px){.uk-modal-dialog-large{width:1130px}}.uk-modal-header{margin-bottom:15px}.uk-modal-footer{margin-top:15px}.uk-modal-footer>:last-child,.uk-modal-header>:last-child{margin-bottom:0}.uk-modal-caption{position:absolute;left:0;right:0;bottom:-20px;margin-bottom:-10px;color:#fff;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.uk-modal-spinner{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:25px;color:#ddd}.uk-modal-spinner:after{content:\"\\f110\";display:block;font-family:FontAwesome;-webkit-animation:uk-rotate 2s infinite linear;animation:uk-rotate 2s infinite linear}.uk-offcanvas{display:none;position:fixed;top:0;right:0;bottom:0;left:0;z-index:1000;touch-action:none;background:rgba(0,0,0,.1)}.uk-offcanvas.uk-active{display:block}.uk-offcanvas-page{position:fixed;-webkit-transition:margin-left .3s ease-in-out;transition:margin-left .3s ease-in-out}.uk-offcanvas-bar{position:fixed;top:0;bottom:0;left:0;-webkit-transform:translateX(-100%);transform:translateX(-100%);z-index:1001;width:270px;max-width:100%;background:#333;overflow-y:auto;-webkit-overflow-scrolling:touch;-webkit-transition:-webkit-transform .3s ease-in-out;transition:transform .3s ease-in-out;-ms-scroll-chaining:none}.uk-offcanvas.uk-active .uk-offcanvas-bar.uk-offcanvas-bar-show{-webkit-transform:translateX(0);transform:translateX(0)}.uk-offcanvas-bar-flip{left:auto;right:0;-webkit-transform:translateX(100%);transform:translateX(100%)}.uk-offcanvas .uk-panel{margin:20px 15px;color:#777}.uk-offcanvas .uk-panel-title{color:#ccc}.uk-offcanvas .uk-panel a:not([class]){color:#ccc}.uk-offcanvas .uk-panel a:not([class]):hover{color:#fff}.uk-switcher{margin:0;padding:0;list-style:none;touch-action:cross-slide-y pinch-zoom double-tap-zoom}.uk-switcher>:not(.uk-active){display:none}.uk-text-small{font-size:11px;line-height:16px}.uk-text-large{font-size:18px;line-height:24px;font-weight:400}.uk-text-bold{font-weight:700}.uk-text-muted{color:#999!important}.uk-text-primary{color:#2d7091!important}.uk-text-success{color:#659f13!important}.uk-text-warning{color:#e28327!important}.uk-text-danger{color:#d85030!important}.uk-text-contrast{color:#fff!important}.uk-text-left{text-align:left!important}.uk-text-right{text-align:right!important}.uk-text-center{text-align:center!important}.uk-text-justify{text-align:justify!important}.uk-text-top{vertical-align:top!important}.uk-text-middle{vertical-align:middle!important}.uk-text-bottom{vertical-align:bottom!important}@media (max-width:959px){.uk-text-center-medium{text-align:center!important}.uk-text-left-medium{text-align:left!important}}@media (max-width:767px){.uk-text-center-small{text-align:center!important}.uk-text-left-small{text-align:left!important}}.uk-text-nowrap{white-space:nowrap}.uk-text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.uk-text-break{word-wrap:break-word;-webkit-hyphens:auto;-ms-hyphens:auto;-moz-hyphens:auto;hyphens:auto}.uk-container{box-sizing:border-box;max-width:980px;padding:0 25px}@media (min-width:1220px){.uk-container{max-width:1200px;padding:0 35px}}.uk-container:after,.uk-container:before{content:\"\";display:table}.uk-container:after{clear:both}.uk-container-center{margin-left:auto;margin-right:auto}.uk-clearfix:before{content:\"\";display:table-cell}.uk-clearfix:after{content:\"\";display:table;clear:both}.uk-nbfc{overflow:hidden}.uk-nbfc-alt{display:table-cell;width:10000px}.uk-float-left{float:left}.uk-float-right{float:right}[class*=uk-float-]{max-width:100%}[class*=uk-align-]{display:block;margin-bottom:15px}.uk-align-left{margin-right:15px;float:left}.uk-align-right{margin-left:15px;float:right}@media (min-width:768px){.uk-align-medium-left{margin-right:15px;float:left}.uk-align-medium-right{margin-left:15px;float:right}}.uk-align-center{margin-left:auto;margin-right:auto}.uk-vertical-align{font-size:0}.uk-vertical-align:before{content:'';display:inline-block;height:100%;vertical-align:middle}.uk-vertical-align-bottom,.uk-vertical-align-middle{display:inline-block;max-width:100%;font-size:1rem}.uk-vertical-align-middle{vertical-align:middle}.uk-vertical-align-bottom{vertical-align:bottom}[class*=uk-height]{box-sizing:border-box}.uk-height-1-1{height:100%}.uk-height-viewport{height:100vh;min-height:600px}.uk-responsive-height,.uk-responsive-width{box-sizing:border-box}.uk-responsive-width{max-width:100%!important;height:auto}.uk-responsive-height{max-height:100%;width:auto}.uk-margin{margin-bottom:15px}*+.uk-margin{margin-top:15px}.uk-margin-top{margin-top:15px!important}.uk-margin-bottom{margin-bottom:15px!important}.uk-margin-left{margin-left:15px!important}.uk-margin-right{margin-right:15px!important}.uk-margin-large{margin-bottom:50px}*+.uk-margin-large{margin-top:50px}.uk-margin-large-top{margin-top:50px!important}.uk-margin-large-bottom{margin-bottom:50px!important}.uk-margin-large-left{margin-left:50px!important}.uk-margin-large-right{margin-right:50px!important}.uk-margin-small{margin-bottom:5px}*+.uk-margin-small{margin-top:5px}.uk-margin-small-top{margin-top:5px!important}.uk-margin-small-bottom{margin-bottom:5px!important}.uk-margin-small-left{margin-left:5px!important}.uk-margin-small-right{margin-right:5px!important}.uk-margin-remove{margin:0!important}.uk-margin-top-remove{margin-top:0!important}.uk-margin-bottom-remove{margin-bottom:0!important}.uk-padding-remove{padding:0!important}.uk-padding-top-remove{padding-top:0!important}.uk-padding-bottom-remove{padding-bottom:0!important}.uk-padding-vertical-remove{padding-top:0!important;padding-bottom:0!important}.uk-border-circle{border-radius:50%}.uk-border-rounded{border-radius:5px}.uk-heading-large{font-size:36px;line-height:42px}@media (min-width:768px){.uk-heading-large{font-size:52px;line-height:64px}}.uk-link-muted,.uk-link-muted a{color:#444}.uk-link-muted a:hover,.uk-link-muted:hover{color:#444}.uk-link-reset,.uk-link-reset a,.uk-link-reset a:focus,.uk-link-reset a:hover,.uk-link-reset:focus,.uk-link-reset:hover{color:inherit;text-decoration:none}.uk-scrollable-text{height:300px;overflow-y:scroll;-webkit-overflow-scrolling:touch;resize:both}.uk-scrollable-box{box-sizing:border-box;height:170px;padding:10px;border:1px solid #ddd;overflow:auto;-webkit-overflow-scrolling:touch;resize:both}.uk-scrollable-box>:last-child{margin-bottom:0}.uk-overflow-hidden{overflow:hidden}.uk-overflow-container{overflow:auto;-webkit-overflow-scrolling:touch}.uk-overflow-container>:last-child{margin-bottom:0}.uk-position-absolute,[class*=uk-position-bottom],[class*=uk-position-top]{position:absolute!important}.uk-position-top{top:0;left:0;right:0}.uk-position-bottom{bottom:0;left:0;right:0}.uk-position-top-left{top:0;left:0}.uk-position-top-right{top:0;right:0}.uk-position-bottom-left{bottom:0;left:0}.uk-position-bottom-right{bottom:0;right:0}.uk-position-cover{position:absolute;top:0;bottom:0;left:0;right:0}.uk-position-relative{position:relative!important}.uk-position-z-index{z-index:1}.uk-display-block{display:block!important}.uk-display-inline{display:inline!important}.uk-display-inline-block{display:inline-block!important;max-width:100%}@media (min-width:960px){.uk-visible-small{display:none!important}.uk-visible-medium{display:none!important}.uk-hidden-large{display:none!important}}@media (min-width:768px) and (max-width:959px){.uk-visible-small{display:none!important}.uk-visible-large{display:none!important}.uk-hidden-medium{display:none!important}}@media (max-width:767px){.uk-visible-medium{display:none!important}.uk-visible-large{display:none!important}.uk-hidden-small{display:none!important}}.uk-hidden{display:none!important;visibility:hidden!important}.uk-invisible{visibility:hidden!important}.uk-visible-hover:hover .uk-hidden,.uk-visible-hover:hover .uk-invisible{display:block!important;visibility:visible!important}.uk-visible-hover-inline:hover .uk-hidden,.uk-visible-hover-inline:hover .uk-invisible{display:inline-block!important;visibility:visible!important}.uk-notouch .uk-hidden-notouch,.uk-touch .uk-hidden-touch{display:none!important}.uk-flex{display:-ms-flexbox;display:-webkit-flex;display:flex}.uk-flex-inline{display:-ms-inline-flexbox;display:-webkit-inline-flex;display:inline-flex}.uk-flex-inline>*,.uk-flex>*{-ms-flex-negative:1}.uk-flex-top{-ms-flex-align:start;-webkit-align-items:flex-start;align-items:flex-start}.uk-flex-middle{-ms-flex-align:center;-webkit-align-items:center;align-items:center}.uk-flex-bottom{-ms-flex-align:end;-webkit-align-items:flex-end;align-items:flex-end}.uk-flex-center{-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center}.uk-flex-right{-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end}.uk-flex-space-between{-ms-flex-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.uk-flex-space-around{-ms-flex-pack:distribute;-webkit-justify-content:space-around;justify-content:space-around}.uk-flex-row-reverse{-ms-flex-direction:row-reverse;-webkit-flex-direction:row-reverse;flex-direction:row-reverse}.uk-flex-column{-ms-flex-direction:column;-webkit-flex-direction:column;flex-direction:column}.uk-flex-column-reverse{-ms-flex-direction:column-reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse}.uk-flex-nowrap{-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap}.uk-flex-wrap{-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap}.uk-flex-wrap-reverse{-ms-flex-wrap:wrap-reverse;-webkit-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse}.uk-flex-wrap-top{-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start}.uk-flex-wrap-middle{-ms-flex-line-pack:center;-webkit-align-content:center;align-content:center}.uk-flex-wrap-bottom{-ms-flex-line-pack:end;-webkit-align-content:flex-end;align-content:flex-end}.uk-flex-wrap-space-between{-ms-flex-line-pack:justify;-webkit-align-content:space-between;align-content:space-between}.uk-flex-wrap-space-around{-ms-flex-line-pack:distribute;-webkit-align-content:space-around;align-content:space-around}.uk-flex-order-first{-ms-flex-order:-1;-webkit-order:-1;order:-1}.uk-flex-order-last{-ms-flex-order:99;-webkit-order:99;order:99}@media (min-width:480px){.uk-flex-order-first-small{-ms-flex-order:-1;-webkit-order:-1;order:-1}.uk-flex-order-last-small{-ms-flex-order:99;-webkit-order:99;order:99}}@media (min-width:768px){.uk-flex-order-first-medium{-ms-flex-order:-1;-webkit-order:-1;order:-1}.uk-flex-order-last-medium{-ms-flex-order:99;-webkit-order:99;order:99}}@media (min-width:960px){.uk-flex-order-first-large{-ms-flex-order:-1;-webkit-order:-1;order:-1}.uk-flex-order-last-large{-ms-flex-order:99;-webkit-order:99;order:99}}@media (min-width:1220px){.uk-flex-order-first-xlarge{-ms-flex-order:-1;-webkit-order:-1;order:-1}.uk-flex-order-last-xlarge{-ms-flex-order:99;-webkit-order:99;order:99}}.uk-flex-item-none{-ms-flex:none;-webkit-flex:none;flex:none}.uk-flex-item-auto{-ms-flex:auto;-webkit-flex:auto;flex:auto;-ms-flex-negative:1}.uk-flex-item-1{-ms-flex:1;-webkit-flex:1;flex:1}.uk-contrast{color:#fff}.uk-contrast .uk-link,.uk-contrast a:not([class]){color:rgba(255,255,255,.7);text-decoration:none}.uk-contrast .uk-link:hover,.uk-contrast a:not([class]):hover{color:#fff;text-decoration:underline}.uk-contrast :not(pre)>code,.uk-contrast :not(pre)>kbd,.uk-contrast :not(pre)>samp{color:#fff}.uk-contrast em{color:#fff}.uk-contrast h1,.uk-contrast h2,.uk-contrast h3,.uk-contrast h4,.uk-contrast h5,.uk-contrast h6{color:#fff}.uk-contrast hr{border-top-color:rgba(255,255,255,.2)}.uk-contrast .uk-nav li>a,.uk-contrast .uk-nav li>a:hover{text-decoration:none}.uk-contrast .uk-nav-side>li>a{color:#fff}.uk-contrast .uk-nav-side>li>a:focus,.uk-contrast .uk-nav-side>li>a:hover{background:rgba(255,255,255,.1);color:#fff}.uk-contrast .uk-nav-side>li.uk-active>a{background:#fff;color:#444}.uk-contrast .uk-nav-side .uk-nav-header{color:#fff}.uk-contrast .uk-nav-side .uk-nav-divider{border-top-color:rgba(255,255,255,.2)}.uk-contrast .uk-nav-side ul a{color:rgba(255,255,255,.7)}.uk-contrast .uk-nav-side ul a:hover{color:#fff}.uk-contrast .uk-subnav>*>a{color:rgba(255,255,255,.7);text-decoration:none}.uk-contrast .uk-subnav>*>a:focus,.uk-contrast .uk-subnav>*>a:hover{color:#fff;text-decoration:none}.uk-contrast .uk-subnav>.uk-active>a{color:#fff}.uk-contrast .uk-subnav-line>:nth-child(n+2):before{border-left-color:rgba(255,255,255,.2)}.uk-contrast .uk-subnav-pill>*>a:focus,.uk-contrast .uk-subnav-pill>*>a:hover{background:rgba(255,255,255,.7);color:#444;text-decoration:none}.uk-contrast .uk-subnav-pill>.uk-active>a{background:#fff;color:#444}.uk-contrast .uk-tab{border-bottom-color:rgba(255,255,255,.2)}.uk-contrast .uk-tab>li>a{border-color:transparent;color:rgba(255,255,255,.7)}.uk-contrast .uk-tab>li.uk-open>a,.uk-contrast .uk-tab>li>a:focus,.uk-contrast .uk-tab>li>a:hover{border-color:rgba(255,255,255,.7);background:rgba(255,255,255,.7);color:#444;text-decoration:none}.uk-contrast .uk-tab>li.uk-active>a{border-color:rgba(255,255,255,.2);border-bottom-color:transparent;background:#fff;color:#444}.uk-contrast .uk-tab-center{border-bottom-color:rgba(255,255,255,.2)}.uk-contrast .uk-tab-grid:before{border-top-color:rgba(255,255,255,.2)}.uk-contrast .uk-list-line>li:nth-child(n+2){border-top-color:rgba(255,255,255,.2)}.uk-contrast .uk-form input:not([type]),.uk-contrast .uk-form input[type=color],.uk-contrast .uk-form input[type=date],.uk-contrast .uk-form input[type=datetime-local],.uk-contrast .uk-form input[type=datetime],.uk-contrast .uk-form input[type=email],.uk-contrast .uk-form input[type=month],.uk-contrast .uk-form input[type=number],.uk-contrast .uk-form input[type=password],.uk-contrast .uk-form input[type=search],.uk-contrast .uk-form input[type=tel],.uk-contrast .uk-form input[type=text],.uk-contrast .uk-form input[type=time],.uk-contrast .uk-form input[type=url],.uk-contrast .uk-form input[type=week],.uk-contrast .uk-form select,.uk-contrast .uk-form textarea{border-color:rgba(255,255,255,.8);background:rgba(255,255,255,.8);color:#444;background-clip:padding-box}.uk-contrast .uk-form input:not([type]):focus,.uk-contrast .uk-form input[type=color]:focus,.uk-contrast .uk-form input[type=date]:focus,.uk-contrast .uk-form input[type=datetime-local]:focus,.uk-contrast .uk-form input[type=datetime]:focus,.uk-contrast .uk-form input[type=email]:focus,.uk-contrast .uk-form input[type=month]:focus,.uk-contrast .uk-form input[type=number]:focus,.uk-contrast .uk-form input[type=password]:focus,.uk-contrast .uk-form input[type=search]:focus,.uk-contrast .uk-form input[type=tel]:focus,.uk-contrast .uk-form input[type=text]:focus,.uk-contrast .uk-form input[type=time]:focus,.uk-contrast .uk-form input[type=url]:focus,.uk-contrast .uk-form input[type=week]:focus,.uk-contrast .uk-form select:focus,.uk-contrast .uk-form textarea:focus{border-color:#fff;background:#fff;color:#444}.uk-contrast .uk-form :-ms-input-placeholder{color:rgba(68,68,68,.7)!important}.uk-contrast .uk-form ::-moz-placeholder{color:rgba(68,68,68,.7)}.uk-contrast .uk-form ::-webkit-input-placeholder{color:rgba(68,68,68,.7)}.uk-contrast .uk-button{color:#444;background:#fff}.uk-contrast .uk-button:focus,.uk-contrast .uk-button:hover{background-color:rgba(255,255,255,.8);color:#444}.uk-contrast .uk-button.uk-active,.uk-contrast .uk-button:active{background-color:rgba(255,255,255,.7);color:#444}.uk-contrast .uk-button-primary{background-color:#00a8e6;color:#fff}.uk-contrast .uk-button-primary:focus,.uk-contrast .uk-button-primary:hover{background-color:#35b3ee;color:#fff}.uk-contrast .uk-button-primary.uk-active,.uk-contrast .uk-button-primary:active{background-color:#0091ca;color:#fff}.uk-contrast .uk-icon-hover{color:rgba(255,255,255,.7)}.uk-contrast .uk-icon-hover:hover{color:#fff}.uk-contrast .uk-icon-button{background:#fff;color:#444}.uk-contrast .uk-icon-button:focus,.uk-contrast .uk-icon-button:hover{background-color:rgba(255,255,255,.8);color:#444}.uk-contrast .uk-icon-button:active{background-color:rgba(255,255,255,.7);color:#444}.uk-contrast .uk-text-muted{color:rgba(255,255,255,.6)!important}.uk-contrast .uk-text-primary{color:#2d7091!important}@media print{*,:after,:before{background:0 0!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}");
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define([], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory();
  else
    factory();
});